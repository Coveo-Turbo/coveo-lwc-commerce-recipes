{
  "version": 3,
  "sources": ["../../../../../node_modules/navigator.sendbeacon/dist/navigator.sendbeacon.cjs.js", "../../../../../node_modules/abortcontroller-polyfill/dist/cjs-ponyfill.js", "../../../ponyfills/abortable-fetch-shim.js", "../../../node_modules/exponential-backoff/src/options.ts", "../../../node_modules/exponential-backoff/src/jitter/full/full.jitter.ts", "../../../node_modules/exponential-backoff/src/jitter/no/no.jitter.ts", "../../../node_modules/exponential-backoff/src/jitter/jitter.factory.ts", "../../../node_modules/exponential-backoff/src/delay/delay.base.ts", "../../../node_modules/exponential-backoff/src/delay/skip-first/skip-first.delay.ts", "../../../node_modules/exponential-backoff/src/delay/always/always.delay.ts", "../../../node_modules/exponential-backoff/src/delay/delay.factory.ts", "../../../node_modules/exponential-backoff/src/backoff.ts", "../../../node_modules/dayjs/dayjs.min.js", "../../../node_modules/dayjs/plugin/quarterOfYear.js", "../../../node_modules/dayjs/plugin/customParseFormat.js", "../../../ponyfills/magic-cookie-browser.js", "../../../node_modules/dayjs/plugin/timezone.js", "../../../node_modules/dayjs/plugin/utc.js", "../../../../../node_modules/quick-format-unescaped/index.js", "../../../../../node_modules/pino/browser.js", "../../../src/commerce.index.ts", "../../../src/selectors/commerce-selectors.index.ts", "../../../src/app/state-key.ts", "../../../src/features/commerce/product-listing/product-listing-selectors.ts", "../../../../bueno/dist/browser/bueno.esm.js", "../../../../../node_modules/redux/src/utils/formatProdErrorMessage.ts", "../../../../../node_modules/redux/src/utils/symbol-observable.ts", "../../../../../node_modules/redux/src/utils/actionTypes.ts", "../../../../../node_modules/redux/src/utils/isPlainObject.ts", "../../../../../node_modules/redux/src/utils/kindOf.ts", "../../../../../node_modules/redux/src/createStore.ts", "../../../../../node_modules/redux/src/utils/warning.ts", "../../../../../node_modules/redux/src/combineReducers.ts", "../../../../../node_modules/redux/src/bindActionCreators.ts", "../../../../../node_modules/redux/src/compose.ts", "../../../../../node_modules/redux/src/applyMiddleware.ts", "../../../../../node_modules/redux/src/utils/isAction.ts", "../../../../../node_modules/immer/src/utils/env.ts", "../../../../../node_modules/immer/src/utils/errors.ts", "../../../../../node_modules/immer/src/utils/common.ts", "../../../../../node_modules/immer/src/utils/plugins.ts", "../../../../../node_modules/immer/src/core/scope.ts", "../../../../../node_modules/immer/src/core/finalize.ts", "../../../../../node_modules/immer/src/core/proxy.ts", "../../../../../node_modules/immer/src/core/immerClass.ts", "../../../../../node_modules/immer/src/core/current.ts", "../../../../../node_modules/immer/src/plugins/patches.ts", "../../../../../node_modules/immer/src/plugins/mapset.ts", "../../../../../node_modules/immer/src/immer.ts", "../../../../../node_modules/reselect/src/devModeChecks/identityFunctionCheck.ts", "../../../../../node_modules/reselect/src/devModeChecks/inputStabilityCheck.ts", "../../../../../node_modules/reselect/src/devModeChecks/setGlobalDevModeChecks.ts", "../../../../../node_modules/reselect/src/utils.ts", "../../../../../node_modules/reselect/src/autotrackMemoize/autotracking.ts", "../../../../../node_modules/reselect/src/autotrackMemoize/tracking.ts", "../../../../../node_modules/reselect/src/autotrackMemoize/proxy.ts", "../../../../../node_modules/reselect/src/lruMemoize.ts", "../../../../../node_modules/reselect/src/autotrackMemoize/autotrackMemoize.ts", "../../../../../node_modules/reselect/src/weakMapMemoize.ts", "../../../../../node_modules/reselect/src/createSelectorCreator.ts", "../../../../../node_modules/reselect/src/createStructuredSelector.ts", "../../../../../node_modules/redux-thunk/dist/redux-thunk.mjs", "../../../../../node_modules/@reduxjs/toolkit/src/index.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createDraftSafeSelector.ts", "../../../../../node_modules/@reduxjs/toolkit/src/configureStore.ts", "../../../../../node_modules/@reduxjs/toolkit/src/devtoolsExtension.ts", "../../../../../node_modules/@reduxjs/toolkit/src/getDefaultMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createAction.ts", "../../../../../node_modules/@reduxjs/toolkit/src/tsHelpers.ts", "../../../../../node_modules/@reduxjs/toolkit/src/actionCreatorInvariantMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/utils.ts", "../../../../../node_modules/@reduxjs/toolkit/src/immutableStateInvariantMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/serializableStateInvariantMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/autoBatchEnhancer.ts", "../../../../../node_modules/@reduxjs/toolkit/src/getDefaultEnhancers.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createReducer.ts", "../../../../../node_modules/@reduxjs/toolkit/src/mapBuilders.ts", "../../../../../node_modules/@reduxjs/toolkit/src/matchers.ts", "../../../../../node_modules/@reduxjs/toolkit/src/nanoid.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createAsyncThunk.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createSlice.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/entity_state.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/state_selectors.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/state_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/utils.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/unsorted_state_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/sorted_state_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/create_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/index.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/exceptions.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/utils.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/task.ts", "../../../../../node_modules/@reduxjs/toolkit/src/dynamicMiddleware/index.ts", "../../../../../node_modules/@reduxjs/toolkit/src/combineSlices.ts", "../../../../../node_modules/@reduxjs/toolkit/src/formatProdErrorMessage.ts", "../../../src/features/commerce/pagination/pagination-selectors.ts", "../../../src/features/commerce/search/search-selectors.ts", "../../../src/features/parameter-manager/parameter-manager-selectors.ts", "../../../src/features/commerce/parameters/parameters-selectors.ts", "../../../src/features/facets/category-facet-set/category-facet-utils.ts", "../../../src/features/commerce/pagination/pagination-state.ts", "../../../src/features/commerce/sort/sort-state.ts", "../../../src/features/commerce/sort/sort.ts", "../../../src/features/sort/sort.ts", "../../../src/features/commerce/query/query-state.ts", "../../../src/utils/highlight.ts", "../../../src/utils/utils.ts", "../../../src/api/platform-client.ts", "../../../src/utils/errors.ts", "../../../src/app/commerce-ssr-engine/types/common.ts", "../../../src/api/form-url-encoder.ts", "../../../src/api/commerce/commerce-api-client.ts", "../../../src/api/search/search-api-error-response.ts", "../../../src/api/commerce/common/request.ts", "../../../src/api/commerce/recommendations/recommendations-request.ts", "../../../src/api/commerce/search/query-suggest/query-suggest-request.ts", "../../../src/app/commerce-engine/commerce-engine.ts", "../../../src/api/preprocess-request.ts", "../../../src/features/commerce/configuration/configuration-actions.ts", "../../../src/utils/validate-payload.ts", "../../../src/features/configuration/configuration-actions.ts", "../../../src/utils/version.ts", "../../../src/features/commerce/configuration/configuration-slice.ts", "../../../src/features/commerce/configuration/configuration-state.ts", "../../../src/features/commerce/context/cart/cart-actions.ts", "../../../src/features/commerce/context/cart/cart-selector.ts", "../../../src/features/commerce/context/context-selector.ts", "../../../src/features/commerce/context/cart/cart-validation.ts", "../../../src/features/commerce/context/cart/cart-slice.ts", "../../../src/controllers/commerce/context/cart/headless-cart.ts", "../../../src/controllers/controller/headless-controller.ts", "../../../src/controllers/commerce/context/cart/headless-cart-selectors.ts", "../../../src/features/commerce/context/cart/cart-state.ts", "../../../src/features/commerce/context/context-actions.ts", "../../../src/features/commerce/context/context-validation.ts", "../../../src/features/commerce/context/context-slice.ts", "../../../src/features/commerce/context/context-state.ts", "../../../src/features/commerce/did-you-mean/did-you-mean-slice.ts", "../../../src/features/did-you-mean/did-you-mean-state.ts", "../../../src/features/commerce/search/search-actions.ts", "../../../src/features/breadcrumb/breadcrumb-actions.ts", "../../../src/features/commerce/common/actions.ts", "../../../src/api/analytics/analytics-selectors.ts", "../../../src/features/commerce/facets/core-facet/core-facet-actions.ts", "../../../src/features/commerce/pagination/pagination-actions.ts", "../../../src/features/commerce/query/query-actions.ts", "../../../src/features/commerce/search/search-actions-thunk-processor.ts", "../../../src/features/commerce/triggers/triggers-actions.ts", "../../../src/features/commerce/did-you-mean/did-you-mean-state.ts", "../../../src/features/commerce/facets/facet-set/facet-set-slice.ts", "../../../src/features/facets/category-facet-set/category-facet-set-actions.ts", "../../../src/features/facets/generic/facet-actions-validation.ts", "../../../src/features/facets/category-facet-set/category-facet-validate-payload.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-actions.ts", "../../../src/features/facets/facet-search-set/generic/generic-facet-search-validate-payload.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-actions.ts", "../../../src/features/facets/facet-set/facet-set-slice.ts", "../../../src/features/facet-options/facet-options-actions.ts", "../../../src/features/history/history-actions.ts", "../../../src/features/search-parameters/search-parameter-actions.ts", "../../../src/features/search-parameters/search-parameter-schema.ts", "../../../src/features/search/search-actions.ts", "../../../src/api/analytics/coveo-analytics-utils.ts", "../../../../../node_modules/coveo.analytics/dist/browser.mjs", "../../../src/features/analytics/analytics-utils.ts", "../../../src/api/analytics/analytics-relay-client.ts", "../../../../../node_modules/@coveo/relay/lib/relay.js", "../../../src/api/analytics/case-assist-analytics.ts", "../../../src/features/search-hub/search-hub-state.ts", "../../../src/api/analytics/insight-analytics.ts", "../../../src/features/facets/facet-set/facet-set-analytics-actions-utils.ts", "../../../src/features/facets/automatic-facet-set/automatic-facet-set-state.ts", "../../../src/features/facets/automatic-facet-set/automatic-facet-set-constants.ts", "../../../src/features/facets/category-facet-set/category-facet-set-selectors.ts", "../../../src/features/facets/facet-set/facet-set-selectors.ts", "../../../src/features/facets/category-facet-set/category-facet-set-state.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-set-state.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-set-state.ts", "../../../src/features/facets/facet-set/facet-set-state.ts", "../../../src/features/query/query-state.ts", "../../../src/features/search/search-state.ts", "../../../src/api/analytics/base-analytics.ts", "../../../src/api/analytics/search-analytics.ts", "../../../src/features/sort-criteria/sort-criteria-state.ts", "../../../src/features/sort-criteria/criteria.ts", "../../../src/features/folding/folding-utils.ts", "../../../src/features/pipeline/pipeline-state.ts", "../../../src/features/analytics/search-action-cause.ts", "../../../src/features/facets/generic/facet-actions.ts", "../../../src/features/instant-results/instant-result-analytics-actions.ts", "../../../src/api/analytics/instant-result-analytics.ts", "../../../src/features/instant-results/instant-results-actions.ts", "../../../src/features/pagination/pagination-actions.ts", "../../../src/features/query/query-actions.ts", "../../../src/features/search-and-folding/search-and-folding-request.ts", "../../../src/features/configuration/analytics-params.ts", "../../../src/features/search/legacy/search-actions.ts", "../../../src/features/search-and-folding/legacy/search-and-folding-request.ts", "../../../src/features/configuration/legacy-analytics-params.ts", "../../../src/features/search/search-analytics-actions.ts", "../../../src/features/advanced-search-queries/advanced-search-queries-state.ts", "../../../src/features/search/search-mappings.ts", "../../../src/api/search/date/relative-date.ts", "../../../src/api/search/date/date-format.ts", "../../../src/features/facets/range-facets/date-facet-set/interfaces/request.ts", "../../../src/features/search/legacy/search-actions-thunk-processor.ts", "../../../src/api/search/search-api-client.ts", "../../../src/api/api-client-utils.ts", "../../../src/api/search/api-calls-queue.ts", "../../../src/api/search/html/html-api-client.ts", "../../../src/utils/url-utils.ts", "../../../src/api/search/encoding-finder.ts", "../../../src/api/search/search-api-params.ts", "../../../src/features/did-you-mean/did-you-mean-actions.ts", "../../../src/features/did-you-mean/did-you-mean-analytics-actions.ts", "../../../src/features/history/history-state.ts", "../../../src/features/context/context-state.ts", "../../../src/features/debug/debug-state.ts", "../../../src/features/dictionary-field-context/dictionary-field-context-state.ts", "../../../src/features/facet-options/facet-options-state.ts", "../../../src/features/facets/facet-order/facet-order-state.ts", "../../../src/features/pagination/pagination-state.ts", "../../../src/features/query-set/query-set-state.ts", "../../../src/features/static-filter-set/static-filter-set-state.ts", "../../../src/features/tab-set/tab-set-state.ts", "../../../src/features/triggers/trigger-analytics-actions.ts", "../../../src/features/triggers/triggers-actions.ts", "../../../src/features/search/legacy/search-request.ts", "../../../src/utils/facet-utils.ts", "../../../src/features/facets/generic/interfaces/generic-facet-request.ts", "../../../src/features/pagination/pagination-constants.ts", "../../../src/features/search/search-actions-thunk-processor.ts", "../../../src/features/search/search-request.ts", "../../../src/features/facets/generic/facet-reducer-helpers.ts", "../../../src/features/facets/facet-set/facet-set-actions.ts", "../../../src/controllers/core/facets/_common/facet-option-definitions.ts", "../../../src/features/facets/facet-set/facet-set-validate-payload.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-set-slice.ts", "../../../src/features/facets/range-facets/generic/range-facet-reducers.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-actions.ts", "../../../src/controllers/core/facets/range-facet/date-facet/date-range.ts", "../../../src/features/facets/range-facets/generic/range-facet-actions.ts", "../../../src/features/facets/range-facets/generic/range-facet-validate-payload.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-actions.ts", "../../../src/features/commerce/product-listing-parameters/product-listing-parameters-actions.ts", "../../../src/features/commerce/parameters/parameters-schema.ts", "../../../src/features/commerce/product-listing/product-listing-actions.ts", "../../../src/features/commerce/query-suggest/query-suggest-actions.ts", "../../../src/features/commerce/search-parameters/search-parameters-actions.ts", "../../../src/features/commerce/search-parameters/search-parameters-schema.ts", "../../../src/features/commerce/facets/category-facet/category-facet-actions.ts", "../../../src/features/commerce/facets/date-facet/date-facet-actions.ts", "../../../src/features/commerce/facets/facet-search-set/commerce-facet-search-actions.ts", "../../../src/features/commerce/facets/facet-search-set/category/commerce-category-facet-search-request-builder.ts", "../../../src/features/commerce/facets/facet-search-set/regular/commerce-regular-facet-search-request-builder.ts", "../../../src/features/commerce/facets/location-facet/location-facet-actions.ts", "../../../src/features/commerce/facets/numeric-facet/numeric-facet-actions.ts", "../../../src/features/commerce/facets/regular-facet/regular-facet-actions.ts", "../../../src/features/commerce/facets/facet-set/facet-set-reducer-helpers.ts", "../../../src/features/commerce/facets/facet-set/facet-set-reducers.ts", "../../../src/features/commerce/facets/facet-set/facet-set-state.ts", "../../../src/features/commerce/facets/field-suggestions-order/field-suggestions-order-slice.ts", "../../../src/features/commerce/facets/field-suggestions-order/field-suggestions-order-state.ts", "../../../src/features/commerce/facets/numeric-facet/manual-numeric-facet-slice.ts", "../../../src/features/commerce/facets/numeric-facet/manual-numeric-facet-state.ts", "../../../src/features/commerce/pagination/pagination-slice.ts", "../../../src/features/commerce/recommendations/recommendations-actions.ts", "../../../src/features/commerce/recommendations/recommendations-selectors.ts", "../../../src/features/commerce/recommendations/recommendations.ts", "../../../src/features/commerce/sort/sort-actions.ts", "../../../src/features/commerce/product-listing/product-listing-slice.ts", "../../../src/features/commerce/product-listing/product-listing-state.ts", "../../../src/features/commerce/query/query-slice.ts", "../../../src/features/commerce/recommendations/recommendations-slice.ts", "../../../src/features/commerce/recommendations/recommendations-state.ts", "../../../src/features/commerce/search/search-slice.ts", "../../../src/features/commerce/search/search-state.ts", "../../../src/features/commerce/sort/sort-slice.ts", "../../../src/features/commerce/triggers/triggers-slice.ts", "../../../src/features/triggers/triggers-slice-functions.ts", "../../../src/features/triggers/triggers-state.ts", "../../../src/features/debug/version-slice.ts", "../../../src/features/facets/facet-order/facet-order-slice.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-set-slice.ts", "../../../src/features/facets/facet-search-set/facet-search-reducer-helpers.ts", "../../../src/features/facets/facet-search-set/generic/generic-facet-search-actions.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-request-builder.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-request-builder.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-set-state.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-set-slice.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-set-state.ts", "../../../src/app/engine.ts", "../../../src/api/knowledge/stream-answer-api.ts", "../../../../../node_modules/@microsoft/fetch-event-source/src/index.ts", "../../../../../node_modules/@microsoft/fetch-event-source/src/parse.ts", "../../../../../node_modules/@microsoft/fetch-event-source/src/fetch.ts", "../../../src/features/generated-answer/generated-answer-selectors.ts", "../../../src/features/query/query-selectors.ts", "../../../src/features/pipeline/select-pipeline.ts", "../../../src/features/search-hub/search-hub-selectors.ts", "../../../src/api/knowledge/answer-slice.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/apiState.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/rtkImports.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/copyWithStructuralSharing.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/countObjectKeys.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/flatten.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/isAbsoluteUrl.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/isDocumentVisible.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/isNotNullish.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/isOnline.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/utils/joinUrls.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/fetchBaseQuery.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/HandledError.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/retry.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/setupListeners.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/endpointDefinitions.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildThunks.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildInitiate.ts", "../../../../../node_modules/@reduxjs/toolkit/src/tsHelpers.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildSlice.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildSelectors.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/createApi.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/defaultSerializeQueryArgs.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/fakeBaseQuery.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/module.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/tsHelpers.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/batchActions.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/cacheCollection.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/cacheLifecycle.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/devMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/invalidationByTags.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/polling.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/queryLifecycle.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/windowEventHandling.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/buildMiddleware/index.ts", "../../../../../node_modules/@reduxjs/toolkit/src/query/core/index.ts", "../../../src/utils/runtime.ts", "../../../src/app/analytics-middleware.ts", "../../../src/app/common-reducers.ts", "../../../src/features/configuration/configuration-slice.ts", "../../../src/features/tab-set/tab-set-actions.ts", "../../../src/features/configuration/configuration-state.ts", "../../../src/app/instantly-callable-middleware.ts", "../../../src/app/logger-middlewares.ts", "../../../src/app/navigatorContextProvider.ts", "../../../src/app/reducer-manager.ts", "../../../src/app/renew-access-token-middleware.ts", "../../../../../node_modules/ts-debounce/src/index.ts", "../../../src/app/store.ts", "../../../src/app/logger.ts", "../../../src/app/thunk-extra-arguments.ts", "../../../src/app/commerce-engine/commerce-engine-configuration.ts", "../../../src/app/engine-configuration.ts", "../../../src/features/commerce/context/context-actions-loader.ts", "../../../src/features/commerce/search/search-actions-loader.ts", "../../../src/features/commerce/product-listing/product-listing-actions-loader.ts", "../../../src/features/commerce/recommendations/recommendations-actions-loader.ts", "../../../src/features/commerce/pagination/pagination-actions-loader.ts", "../../../src/features/commerce/product/product-actions-loaders.ts", "../../../src/features/commerce/product/product-actions.ts", "../../../src/features/commerce/context/cart/cart-actions-loader.ts", "../../../src/features/commerce/sort/sort-actions-loader.ts", "../../../src/features/commerce/facets/core-facet/core-facet-actions-loader.ts", "../../../src/features/commerce/facets/category-facet/category-facet-actions-loader.ts", "../../../src/features/commerce/facets/regular-facet/regular-facet-actions-loader.ts", "../../../src/features/commerce/facets/location-facet/location-facet-actions-loader.ts", "../../../src/features/commerce/facets/date-facet/date-facet-actions-loader.ts", "../../../src/features/commerce/facets/numeric-facet/numeric-facet-actions-loader.ts", "../../../src/features/commerce/query-set/query-set-actions-loader.ts", "../../../src/features/query-set/query-set-slice.ts", "../../../src/features/commerce/query-set/query-set-actions.ts", "../../../src/features/query-set/query-set-actions.ts", "../../../src/features/query-suggest/query-suggest-actions.ts", "../../../src/features/commerce/query-suggest/query-suggest-actions-loader.ts", "../../../src/features/query-suggest/query-suggest-slice.ts", "../../../src/features/query-suggest/query-suggest-state.ts", "../../../src/features/commerce/configuration/configuration-actions-loader.ts", "../../../src/features/commerce/query/query-actions-loader.ts", "../../../src/features/commerce/search-parameters/search-parameters-actions-loader.ts", "../../../src/features/commerce/product-listing-parameters/product-listing-parameters-actions-loader.ts", "../../../src/features/commerce/triggers/triggers-actions-loader.ts", "../../../src/features/commerce/instant-products/instant-products-actions-loader.ts", "../../../src/features/commerce/instant-products/instant-products-actions.ts", "../../../src/features/commerce/instant-products/instant-products-slice.ts", "../../../src/features/instant-items/instant-items-slice.ts", "../../../src/features/instant-items/instant-items-state.ts", "../../../src/features/commerce/instant-products/instant-products-state.ts", "../../../src/features/commerce/recent-queries/recent-queries-actions-loader.ts", "../../../src/features/recent-queries/recent-queries-actions.ts", "../../../src/features/commerce/recent-queries/recent-queries-slice.ts", "../../../src/features/recent-queries/recent-queries-slice.ts", "../../../src/features/recent-queries/recent-queries-state.ts", "../../../src/features/commerce/recent-queries/recent-queries-actions.ts", "../../../src/features/commerce/standalone-search-box-set/standalone-search-box-set-actions-loader.ts", "../../../src/features/standalone-search-box-set/standalone-search-box-set-slice.ts", "../../../src/features/standalone-search-box-set/standalone-search-box-set-actions.ts", "../../../src/api/search/plan/plan-endpoint.ts", "../../../src/api/common/trigger.ts", "../../../src/features/standalone-search-box-set/standalone-search-box-set-state.ts", "../../../src/features/commerce/standalone-search-box-set/standalone-search-box-set-actions.ts", "../../../src/controllers/commerce/context/headless-context.ts", "../../../src/controllers/commerce/search/headless-search.ts", "../../../src/features/commerce/parameters/parameters-serializer.ts", "../../../src/features/search-parameters/search-parameter-serializer.ts", "../../../src/controllers/facets/range-facet/date-facet/headless-date-facet.ts", "../../../src/features/facets/facet-set/facet-set-analytics-actions.ts", "../../../src/features/facets/range-facets/generic/range-facet-utils.ts", "../../../src/controllers/core/facets/range-facet/date-facet/headless-core-date-facet.ts", "../../../src/features/facet-options/facet-options-slice.ts", "../../../src/features/facet-options/facet-options-utils.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-controller-actions.ts", "../../../src/features/facets/range-facets/generic/range-facet-controller-actions.ts", "../../../src/features/search/search-slice.ts", "../../../src/features/tab-set/tab-set-selectors.ts", "../../../src/controllers/core/facets/_common/facet-id-determinor.ts", "../../../src/controllers/core/facets/_common/facet-id-generator.ts", "../../../src/controllers/core/facets/range-facet/headless-core-range-facet.ts", "../../../src/features/facet-options/facet-options-selectors.ts", "../../../src/controllers/core/facets/range-facet/date-facet/headless-date-facet-options.ts", "../../../src/features/facets/facet-api/value.ts", "../../../src/features/facets/range-facets/generic/interfaces/request.ts", "../../../src/controllers/facets/range-facet/numeric-facet/headless-numeric-facet.ts", "../../../src/controllers/core/facets/range-facet/numeric-facet/headless-core-numeric-facet.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-controller-actions.ts", "../../../src/controllers/core/facets/range-facet/numeric-facet/headless-numeric-facet-options.ts", "../../../src/features/facets/facet-api/request.ts", "../../../src/controllers/core/facets/range-facet/numeric-facet/numeric-range.ts", "../../../src/controllers/commerce/core/sub-controller/headless-sub-controller.ts", "../../../src/controllers/commerce/search/did-you-mean/headless-did-you-mean.ts", "../../../src/controllers/commerce/core/breadcrumb-manager/headless-core-breadcrumb-manager.ts", "../../../src/controllers/commerce/core/facets/category/headless-commerce-category-facet.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-state-selector.ts", "../../../src/controllers/commerce/core/facets/headless-core-commerce-facet.ts", "../../../src/features/commerce/facets/facet-set/facet-set-selector.ts", "../../../src/controllers/commerce/core/facets/category/headless-commerce-category-facet-search.ts", "../../../src/controllers/core/facets/facet-search/category/headless-category-facet-search.ts", "../../../src/controllers/core/facets/facet-search/facet-search.ts", "../../../src/controllers/commerce/core/facets/date/headless-commerce-date-facet.ts", "../../../src/controllers/commerce/core/facets/generator/headless-commerce-facet-generator.ts", "../../../src/controllers/commerce/core/facets/location/headless-commerce-location-facet.ts", "../../../src/controllers/commerce/core/facets/numeric/headless-commerce-numeric-facet.ts", "../../../src/features/commerce/facets/numeric-facet/manual-numeric-facet-selectors.ts", "../../../src/controllers/commerce/core/facets/regular/headless-commerce-regular-facet.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-state-selector.ts", "../../../src/controllers/commerce/core/facets/regular/headless-commerce-regular-facet-search.ts", "../../../src/controllers/core/facets/facet-search/specific/headless-facet-search.ts", "../../../src/controllers/commerce/core/interactive-product/headless-core-interactive-product.ts", "../../../src/controllers/core/interactive-result/headless-core-interactive-result.ts", "../../../src/controllers/commerce/core/pagination/headless-core-commerce-pagination.ts", "../../../src/controllers/commerce/core/parameter-manager/headless-core-parameter-manager.ts", "../../../src/utils/compare-utils.ts", "../../../../../node_modules/fast-equals/src/utils.ts", "../../../../../node_modules/fast-equals/src/equals.ts", "../../../../../node_modules/fast-equals/src/comparator.ts", "../../../../../node_modules/fast-equals/src/index.ts", "../../../src/controllers/commerce/core/sort/headless-core-commerce-sort.ts", "../../../src/controllers/commerce/core/summary/headless-core-summary.ts", "../../../src/controllers/commerce/core/url-manager/headless-core-url-manager.ts", "../../../src/controllers/url-manager/headless-url-manager.ts", "../../../src/controllers/search-parameter-manager/headless-search-parameter-manager.ts", "../../../src/features/search-parameters/search-parameter-analytics-actions.ts", "../../../src/features/query/query-analytics-actions.ts", "../../../src/features/sort-criteria/sort-criteria-analytics-actions.ts", "../../../src/features/analytics/analytics-actions.ts", "../../../src/features/pagination/pagination-analytics-actions.ts", "../../../src/features/pagination/pagination-selectors.ts", "../../../src/features/pagination/pagination-slice.ts", "../../../src/features/facets/automatic-facet-set/automatic-facet-set-actions.ts", "../../../src/controllers/core/search-parameter-manager/headless-core-search-parameter-manager.ts", "../../../src/features/search-parameters/search-parameter-selectors.ts", "../../../src/controllers/commerce/search/facets/headless-search-facet-options.ts", "../../../src/controllers/commerce/product-listing/headless-product-listing.ts", "../../../src/controllers/commerce/product-listing/facets/headless-product-listing-facet-options.ts", "../../../src/controllers/commerce/recommendations/headless-recommendations.ts", "../../../src/controllers/commerce/product-view/headless-product-view.ts", "../../../src/controllers/commerce/search-box/headless-search-box.ts", "../../../src/controllers/core/search-box/headless-core-search-box.ts", "../../../src/features/query-suggest/query-suggest-analytics-actions.ts", "../../../src/features/query/query-slice.ts", "../../../src/controllers/core/search-box/headless-core-search-box-options.ts", "../../../src/controllers/commerce/search-box/headless-search-box-options.ts", "../../../src/controllers/commerce/recent-queries-list/headless-recent-queries-list.ts", "../../../src/controllers/commerce/instant-products/headless-instant-products.ts", "../../../src/controllers/commerce/standalone-search-box/headless-standalone-search-box.ts", "../../../src/features/commerce/standalone-search-box-set/standalone-search-box-set-slice.ts", "../../../src/features/commerce/standalone-search-box-set/standalone-search-box-set-state.ts", "../../../src/controllers/commerce/standalone-search-box/headless-standalone-search-box-options.ts", "../../../src/features/commerce/product-templates/product-templates-manager.ts", "../../../src/features/templates/templates-manager.ts", "../../../src/features/commerce/product-templates/product-templates-helpers.ts", "../../../src/controllers/commerce/triggers/headless-notify-trigger.ts", "../../../src/controllers/commerce/triggers/headless-redirection-trigger.ts", "../../../src/controllers/commerce/triggers/headless-query-trigger.ts", "../../../src/controllers/commerce/field-suggestions/headless-field-suggestions-generator.ts", "../../../src/controllers/commerce/field-suggestions/headless-category-field-suggestions.ts", "../../../src/controllers/commerce/field-suggestions/headless-field-suggestions.ts"],
  "sourcesContent": ["'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar isString = function isString(val) {\n  return typeof val === 'string';\n};\n\nvar isBlob = function isBlob(val) {\n  return val instanceof Blob;\n};\n\npolyfill.call((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' ? window : undefined || {});\n\nfunction polyfill() {\n  if (!('navigator' in this)) {\n    this.navigator = {};\n  }\n\n  if (typeof this.navigator.sendBeacon !== 'function') {\n    this.navigator.sendBeacon = sendBeacon.bind(this);\n  }\n}\n\nfunction sendBeacon(url, data) {\n  var event = this.event && this.event.type;\n  var sync = event === 'unload' || event === 'beforeunload';\n  var xhr = 'XMLHttpRequest' in this ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');\n  xhr.open('POST', url, !sync);\n  xhr.withCredentials = true;\n  xhr.setRequestHeader('Accept', '*/*');\n\n  if (isString(data)) {\n    xhr.setRequestHeader('Content-Type', 'text/plain;charset=UTF-8');\n    xhr.responseType = 'text';\n  } else if (isBlob(data) && data.type) {\n    xhr.setRequestHeader('Content-Type', data.type);\n  }\n\n  try {\n    xhr.send(data);\n  } catch (error) {\n    return false;\n  }\n\n  return true;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar Emitter = /*#__PURE__*/function () {\n  function Emitter() {\n    _classCallCheck(this, Emitter);\n\n    Object.defineProperty(this, 'listeners', {\n      value: {},\n      writable: true,\n      configurable: true\n    });\n  }\n\n  _createClass(Emitter, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, callback, options) {\n      if (!(type in this.listeners)) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push({\n        callback: callback,\n        options: options\n      });\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, callback) {\n      if (!(type in this.listeners)) {\n        return;\n      }\n\n      var stack = this.listeners[type];\n\n      for (var i = 0, l = stack.length; i < l; i++) {\n        if (stack[i].callback === callback) {\n          stack.splice(i, 1);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      if (!(event.type in this.listeners)) {\n        return;\n      }\n\n      var stack = this.listeners[event.type];\n      var stackToCall = stack.slice();\n\n      for (var i = 0, l = stackToCall.length; i < l; i++) {\n        var listener = stackToCall[i];\n\n        try {\n          listener.callback.call(this, event);\n        } catch (e) {\n          Promise.resolve().then(function () {\n            throw e;\n          });\n        }\n\n        if (listener.options && listener.options.once) {\n          this.removeEventListener(event.type, listener.callback);\n        }\n      }\n\n      return !event.defaultPrevented;\n    }\n  }]);\n\n  return Emitter;\n}();\n\nvar AbortSignal = /*#__PURE__*/function (_Emitter) {\n  _inherits(AbortSignal, _Emitter);\n\n  var _super = _createSuper(AbortSignal);\n\n  function AbortSignal() {\n    var _this;\n\n    _classCallCheck(this, AbortSignal);\n\n    _this = _super.call(this); // Some versions of babel does not transpile super() correctly for IE <= 10, if the parent\n    // constructor has failed to run, then \"this.listeners\" will still be undefined and then we call\n    // the parent constructor directly instead as a workaround. For general details, see babel bug:\n    // https://github.com/babel/babel/issues/3041\n    // This hack was added as a fix for the issue described here:\n    // https://github.com/Financial-Times/polyfill-library/pull/59#issuecomment-477558042\n\n    if (!_this.listeners) {\n      Emitter.call(_assertThisInitialized(_this));\n    } // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n    // we want Object.keys(new AbortController().signal) to be [] for compat with the native impl\n\n\n    Object.defineProperty(_assertThisInitialized(_this), 'aborted', {\n      value: false,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(_assertThisInitialized(_this), 'onabort', {\n      value: null,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(_assertThisInitialized(_this), 'reason', {\n      value: undefined,\n      writable: true,\n      configurable: true\n    });\n    return _this;\n  }\n\n  _createClass(AbortSignal, [{\n    key: \"toString\",\n    value: function toString() {\n      return '[object AbortSignal]';\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      if (event.type === 'abort') {\n        this.aborted = true;\n\n        if (typeof this.onabort === 'function') {\n          this.onabort.call(this, event);\n        }\n      }\n\n      _get(_getPrototypeOf(AbortSignal.prototype), \"dispatchEvent\", this).call(this, event);\n    }\n  }]);\n\n  return AbortSignal;\n}(Emitter);\nvar AbortController = /*#__PURE__*/function () {\n  function AbortController() {\n    _classCallCheck(this, AbortController);\n\n    // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n    // we want Object.keys(new AbortController()) to be [] for compat with the native impl\n    Object.defineProperty(this, 'signal', {\n      value: new AbortSignal(),\n      writable: true,\n      configurable: true\n    });\n  }\n\n  _createClass(AbortController, [{\n    key: \"abort\",\n    value: function abort(reason) {\n      var event;\n\n      try {\n        event = new Event('abort');\n      } catch (e) {\n        if (typeof document !== 'undefined') {\n          if (!document.createEvent) {\n            // For Internet Explorer 8:\n            event = document.createEventObject();\n            event.type = 'abort';\n          } else {\n            // For Internet Explorer 11:\n            event = document.createEvent('Event');\n            event.initEvent('abort', false, false);\n          }\n        } else {\n          // Fallback where document isn't available:\n          event = {\n            type: 'abort',\n            bubbles: false,\n            cancelable: false\n          };\n        }\n      }\n\n      var signalReason = reason;\n\n      if (signalReason === undefined) {\n        if (typeof document === 'undefined') {\n          signalReason = new Error('This operation was aborted');\n          signalReason.name = 'AbortError';\n        } else {\n          try {\n            signalReason = new DOMException('signal is aborted without reason');\n          } catch (err) {\n            // IE 11 does not support calling the DOMException constructor, use a\n            // regular error object on it instead.\n            signalReason = new Error('This operation was aborted');\n            signalReason.name = 'AbortError';\n          }\n        }\n      }\n\n      this.signal.reason = signalReason;\n      this.signal.dispatchEvent(event);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return '[object AbortController]';\n    }\n  }]);\n\n  return AbortController;\n}();\n\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n  // These are necessary to make sure that we get correct output for:\n  // Object.prototype.toString.call(new AbortController())\n  AbortController.prototype[Symbol.toStringTag] = 'AbortController';\n  AbortSignal.prototype[Symbol.toStringTag] = 'AbortSignal';\n}\n\nfunction polyfillNeeded(self) {\n  if (self.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n    console.log('__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill');\n    return true;\n  } // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n  // defining window.Request, and this polyfill need to work on top of unfetch\n  // so the below feature detection needs the !self.AbortController part.\n  // The Request.prototype check is also needed because Safari versions 11.1.2\n  // up to and including 12.1.x has a window.AbortController present but still\n  // does NOT correctly implement abortable fetch:\n  // https://bugs.webkit.org/show_bug.cgi?id=174980#c2\n\n\n  return typeof self.Request === 'function' && !self.Request.prototype.hasOwnProperty('signal') || !self.AbortController;\n}\n\n/**\n * Note: the \"fetch.Request\" default value is available for fetch imported from\n * the \"node-fetch\" package and not in browsers. This is OK since browsers\n * will be importing umd-polyfill.js from that path \"self\" is passed the\n * decorator so the default value will not be used (because browsers that define\n * fetch also has Request). One quirky setup where self.fetch exists but\n * self.Request does not is when the \"unfetch\" minimal fetch polyfill is used\n * on top of IE11; for this case the browser will try to use the fetch.Request\n * default value which in turn will be undefined but then then \"if (Request)\"\n * will ensure that you get a patched fetch but still no Request (as expected).\n * @param {fetch, Request = fetch.Request}\n * @returns {fetch: abortableFetch, Request: AbortableRequest}\n */\n\nfunction abortableFetchDecorator(patchTargets) {\n  if ('function' === typeof patchTargets) {\n    patchTargets = {\n      fetch: patchTargets\n    };\n  }\n\n  var _patchTargets = patchTargets,\n      fetch = _patchTargets.fetch,\n      _patchTargets$Request = _patchTargets.Request,\n      NativeRequest = _patchTargets$Request === void 0 ? fetch.Request : _patchTargets$Request,\n      NativeAbortController = _patchTargets.AbortController,\n      _patchTargets$__FORCE = _patchTargets.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL,\n      __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL = _patchTargets$__FORCE === void 0 ? false : _patchTargets$__FORCE;\n\n  if (!polyfillNeeded({\n    fetch: fetch,\n    Request: NativeRequest,\n    AbortController: NativeAbortController,\n    __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL: __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL\n  })) {\n    return {\n      fetch: fetch,\n      Request: Request\n    };\n  }\n\n  var Request = NativeRequest; // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n  // defining window.Request, and this polyfill need to work on top of unfetch\n  // hence we only patch it if it's available. Also we don't patch it if signal\n  // is already available on the Request prototype because in this case support\n  // is present and the patching below can cause a crash since it assigns to\n  // request.signal which is technically a read-only property. This latter error\n  // happens when you run the main5.js node-fetch example in the repo\n  // \"abortcontroller-polyfill-examples\". The exact error is:\n  //   request.signal = init.signal;\n  //   ^\n  // TypeError: Cannot set property signal of #<Request> which has only a getter\n\n  if (Request && !Request.prototype.hasOwnProperty('signal') || __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n    Request = function Request(input, init) {\n      var signal;\n\n      if (init && init.signal) {\n        signal = init.signal; // Never pass init.signal to the native Request implementation when the polyfill has\n        // been installed because if we're running on top of a browser with a\n        // working native AbortController (i.e. the polyfill was installed due to\n        // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n        // fake AbortSignal to the native fetch will trigger:\n        // TypeError: Failed to construct 'Request': member signal is not of type AbortSignal.\n\n        delete init.signal;\n      }\n\n      var request = new NativeRequest(input, init);\n\n      if (signal) {\n        Object.defineProperty(request, 'signal', {\n          writable: false,\n          enumerable: false,\n          configurable: true,\n          value: signal\n        });\n      }\n\n      return request;\n    };\n\n    Request.prototype = NativeRequest.prototype;\n  }\n\n  var realFetch = fetch;\n\n  var abortableFetch = function abortableFetch(input, init) {\n    var signal = Request && Request.prototype.isPrototypeOf(input) ? input.signal : init ? init.signal : undefined;\n\n    if (signal) {\n      var abortError;\n\n      try {\n        abortError = new DOMException('Aborted', 'AbortError');\n      } catch (err) {\n        // IE 11 does not support calling the DOMException constructor, use a\n        // regular error object on it instead.\n        abortError = new Error('Aborted');\n        abortError.name = 'AbortError';\n      } // Return early if already aborted, thus avoiding making an HTTP request\n\n\n      if (signal.aborted) {\n        return Promise.reject(abortError);\n      } // Turn an event into a promise, reject it once `abort` is dispatched\n\n\n      var cancellation = new Promise(function (_, reject) {\n        signal.addEventListener('abort', function () {\n          return reject(abortError);\n        }, {\n          once: true\n        });\n      });\n\n      if (init && init.signal) {\n        // Never pass .signal to the native implementation when the polyfill has\n        // been installed because if we're running on top of a browser with a\n        // working native AbortController (i.e. the polyfill was installed due to\n        // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n        // fake AbortSignal to the native fetch will trigger:\n        // TypeError: Failed to execute 'fetch' on 'Window': member signal is not of type AbortSignal.\n        delete init.signal;\n      } // Return the fastest promise (don't need to wait for request to finish)\n\n\n      return Promise.race([cancellation, realFetch(input, init)]);\n    }\n\n    return realFetch(input, init);\n  };\n\n  return {\n    fetch: abortableFetch,\n    Request: Request\n  };\n}\n\nexports.AbortController = AbortController;\nexports.AbortSignal = AbortSignal;\nexports.abortableFetch = abortableFetchDecorator;\n", "import {abortableFetch as abortableFetchFactory} from 'abortcontroller-polyfill/dist/cjs-ponyfill';\n\nexport {\n  AbortController,\n  AbortSignal,\n} from 'abortcontroller-polyfill/dist/cjs-ponyfill';\n\nconst {fetch: abortableFetch} = abortableFetchFactory({\n  fetch,\n});\n\nexport {abortableFetch as fetch};\n", null, null, null, null, null, null, null, null, null, "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));", "!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_quarterOfYear=n()}(this,(function(){\"use strict\";var t=\"month\",n=\"quarter\";return function(e,i){var r=i.prototype;r.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var s=r.add;r.add=function(e,i){return e=Number(e),this.$utils().p(i)===n?this.add(3*e,t):s.bind(this)(e,i)};var u=r.startOf;r.startOf=function(e,i){var r=this.$utils(),s=!!r.u(i)||i;if(r.p(e)===n){var o=this.quarter()-1;return s?this.month(3*o).startOf(t).startOf(\"day\"):this.month(3*o+2).endOf(t).endOf(\"day\")}return u.bind(this)(e,i)}}}));", "!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d\\d/,r=/\\d\\d?/,i=/\\d*[^-_:/,()\\s\\d]+/,o={},s=function(e){return(e=+e)+(e>68?1900:2e3)};var a=function(e){return function(t){this[e]=+t}},f=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],h=function(e){var t=o[e];return t&&(t.indexOf?t:t.s.concat(t.f))},u=function(e,t){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},d={A:[i,function(e){this.afternoon=u(e,!1)}],a:[i,function(e){this.afternoon=u(e,!0)}],S:[/\\d/,function(e){this.milliseconds=100*+e}],SS:[n,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[r,a(\"seconds\")],ss:[r,a(\"seconds\")],m:[r,a(\"minutes\")],mm:[r,a(\"minutes\")],H:[r,a(\"hours\")],h:[r,a(\"hours\")],HH:[r,a(\"hours\")],hh:[r,a(\"hours\")],D:[r,a(\"day\")],DD:[n,a(\"day\")],Do:[i,function(e){var t=o.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],M:[r,a(\"month\")],MM:[n,a(\"month\")],MMM:[i,function(e){var t=h(\"months\"),n=(h(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(e){var t=h(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,a(\"year\")],YY:[n,function(e){this.year=s(e)}],YYYY:[/\\d{4}/,a(\"year\")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=s.length,f=0;f<a;f+=1){var h=s[f],u=d[h],c=u&&u[0],l=u&&u[1];s[f]=l?{regex:c,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=s[n];if(\"string\"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,h=e.slice(r),u=o.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(s=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,s=e.args;this.$u=r;var a=s[1];if(\"string\"==typeof a){var f=!0===s[2],h=!0===s[3],u=f||h,d=s[2];h&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(e,t,n){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var r=c(t)(e),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,h=r.seconds,u=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=h||0,g=u||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(e){return new Date(\"\")}}(t,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));", "const pendragonCookieValueMatcher = /(^|; )Coveo-Pendragon=([^;]*)/;\nmodule.exports = () =>\n  pendragonCookieValueMatcher.exec(document.cookie)?.pop() || null;\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n,i=this.utcOffset(),a=this.toDate(),u=a.toLocaleString(\"en-US\",{timeZone:t}),f=Math.round((a-new Date(u))/1e3/60),s=15*-Math.round(a.getTimezoneOffset()/15)-f;if(!Number(s))n=this.utcOffset(0,e);else if(n=o(u,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(s,!0),e){var m=n.utcOffset();n=n.add(i-m,\"minute\")}return n.$x.$timezone=t,n},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));", "!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));", "'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n", "'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue,\n  errWithCause: asErrValue\n}\nfunction levelToValue (level, logger) {\n  return level === 'silent'\n    ? Infinity\n    : logger.levels.values[level]\n}\nconst baseLogFunctionSymbol = Symbol('pino.logFuncs')\nconst hierarchySymbol = Symbol('pino.hierarchy')\n\nconst logFallbackMap = {\n  error: 'log',\n  fatal: 'error',\n  warn: 'error',\n  info: 'log',\n  debug: 'log',\n  trace: 'log'\n}\n\nfunction appendChildLogger (parentLogger, childLogger) {\n  const newEntry = {\n    logger: childLogger,\n    parent: parentLogger[hierarchySymbol]\n  }\n  childLogger[hierarchySymbol] = newEntry\n}\n\nfunction setupBaseLogFunctions (logger, levels, proto) {\n  const logFunctions = {}\n  levels.forEach(level => {\n    logFunctions[level] = proto[level] ? proto[level] : (_console[level] || _console[logFallbackMap[level] || 'log'] || noop)\n  })\n  logger[baseLogFunctionSymbol] = logFunctions\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const customLevels = Object.keys(opts.customLevels || {})\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace'].concat(customLevels)\n\n  if (typeof proto === 'function') {\n    levels.forEach(function (level) {\n      proto[level] = proto\n    })\n  }\n  if (opts.enabled === false || opts.browser.disabled) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  setupBaseLogFunctions(logger, levels, proto)\n  // setup root hierarchy entry\n  appendChildLogger({}, logger)\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    formatters: opts.browser.formatters,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = getLevels(opts)\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return levelToValue(this.level, this)\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(this, setOpts, logger, 'error') // <-- must stay first\n    set(this, setOpts, logger, 'fatal')\n    set(this, setOpts, logger, 'warn')\n    set(this, setOpts, logger, 'info')\n    set(this, setOpts, logger, 'debug')\n    set(this, setOpts, logger, 'trace')\n\n    customLevels.forEach((level) => {\n      set(this, setOpts, logger, level)\n    })\n  }\n\n  function child (bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    childOptions = childOptions || {}\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers\n    }\n    const childOptionsSerializers = childOptions.serializers\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n\n      // make sure bindings are available in the `set` function\n      this.bindings = bindings\n\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    const newLogger = new Child(this)\n\n    // must happen before the level is assigned\n    appendChildLogger(this, newLogger)\n    // required to actually initialize the logger functions for any given child\n    newLogger.level = this.level\n\n    return newLogger\n  }\n  return logger\n}\n\nfunction getLevels (opts) {\n  const customLevels = opts.customLevels || {}\n\n  const values = Object.assign({}, pino.levels.values, customLevels)\n  const labels = Object.assign({}, pino.levels.labels, invertObject(customLevels))\n\n  return {\n    values,\n    labels\n  }\n}\n\nfunction invertObject (obj) {\n  const inverted = {}\n  Object.keys(obj).forEach(function (key) {\n    inverted[obj[key]] = key\n  })\n  return inverted\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction getBindingChain (logger) {\n  const bindings = []\n  if (logger.bindings) {\n    bindings.push(logger.bindings)\n  }\n\n  // traverse up the tree to get all bindings\n  let hierarchy = logger[hierarchySymbol]\n  while (hierarchy.parent) {\n    hierarchy = hierarchy.parent\n    if (hierarchy.logger.bindings) {\n      bindings.push(hierarchy.logger.bindings)\n    }\n  }\n\n  return bindings.reverse()\n}\n\nfunction set (self, opts, rootLogger, level) {\n  // override the current log functions with either `noop` or the base log function\n  Object.defineProperty(self, level, {\n    value: (levelToValue(self.level, rootLogger) > levelToValue(level, rootLogger)\n      ? noop\n      : rootLogger[baseLogFunctionSymbol][level]),\n    writable: true,\n    enumerable: true,\n    configurable: true\n  })\n\n  if (!opts.transmit && self[level] === noop) {\n    return\n  }\n\n  // make sure the log format is correct\n  self[level] = createWrap(self, opts, rootLogger, level)\n\n  // prepend bindings if it is not the root logger\n  const bindings = getBindingChain(self)\n  if (bindings.length === 0) {\n    // early exit in case for rootLogger\n    return\n  }\n  self[level] = prependBindingsInArguments(bindings, self[level])\n}\n\nfunction prependBindingsInArguments (bindings, logFunc) {\n  return function () {\n    return logFunc.apply(this, [...bindings, ...arguments])\n  }\n}\n\nfunction createWrap (self, opts, rootLogger, level) {\n  return (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject || opts.formatters) {\n        write.call(proto, asObject(this, level, args, ts, opts.formatters))\n      } else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || self._level\n        const transmitValue = rootLogger.levels.values[transmitLevel]\n        const methodValue = rootLogger.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: rootLogger.levels.values[opts.transmit.level || self._level],\n          send: opts.transmit.send,\n          val: levelToValue(self._level, rootLogger)\n        }, args)\n      }\n    }\n  })(self[baseLogFunctionSymbol][level])\n}\n\nfunction asObject (logger, level, args, ts, formatters = {}) {\n  const {\n    level: levelFormatter = () => logger.levels.values[level],\n    log: logObjectFormatter = (obj) => obj\n  } = formatters\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const logObject = {}\n  if (ts) {\n    logObject.time = ts\n  }\n  logObject.level = levelFormatter(level, logger.levels.values[level])\n\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(logObject, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) logObject.msg = msg\n\n  const formattedLogObject = logObjectFormatter(logObject)\n  return formattedLogObject\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n\nmodule.exports.default = pino\nmodule.exports.pino = pino\n", "/**\n * The Coveo Headless Commerce sub-package exposes exposes the engine, controllers, actions, and utility functions to build a commerce search experience.\n *\n * @example\n * ```typescript\n * import { buildCommerceEngine, getSampleCommerceEngineConfiguration, buildSearch } from '@coveo/headless/commerce';\n *\n * const engine = buildCommerceEngine({\n *  configuration: getSampleCommerceEngineConfiguration(),\n * });\n *\n * const search = buildSearch(engine);\n * search.executeFirstSearch();\n * ```\n *\n * @module Commerce\n */\nimport * as Selectors from './selectors/commerce-selectors.index.js';\nimport * as HighlightUtils from './utils/highlight.js';\n\nexport {\n  getOrganizationEndpoint,\n  getAnalyticsNextApiBaseUrl,\n} from './api/platform-client.js';\nexport {getCommerceApiBaseUrl} from './api/commerce/commerce-api-client.js';\nexport type {HighlightKeyword} from './utils/highlight.js';\n\nexport type {Unsubscribe, Middleware} from '@reduxjs/toolkit';\nexport type {Relay} from '@coveo/relay';\n\nexport type {\n  CommerceEngine,\n  CommerceEngineConfiguration,\n  CommerceEngineOptions,\n} from './app/commerce-engine/commerce-engine.js';\nexport {buildCommerceEngine} from './app/commerce-engine/commerce-engine.js';\nexport {getSampleCommerceEngineConfiguration} from './app/commerce-engine/commerce-engine-configuration.js';\n\nexport type {\n  CoreEngine,\n  ExternalEngineOptions,\n  CoreEngineNext,\n} from './app/engine.js';\nexport type {\n  EngineConfiguration,\n  AnalyticsConfiguration,\n  AnalyticsRuntimeEnvironment,\n} from './app/engine-configuration.js';\nexport type {LogLevel, LoggerOptions} from './app/logger.js';\nexport type {NavigatorContext} from './app/navigatorContextProvider.js';\n\nexport type {\n  BaseProduct,\n  Product,\n  ChildProduct,\n} from './api/commerce/common/product.js';\nexport type {PlatformEnvironment} from './utils/url-utils.js';\n\n// Actions\nexport * from './features/commerce/context/context-actions-loader.js';\nexport * from './features/commerce/search/search-actions-loader.js';\nexport * from './features/commerce/product-listing/product-listing-actions-loader.js';\nexport * from './features/commerce/recommendations/recommendations-actions-loader.js';\nexport * from './features/commerce/pagination/pagination-actions-loader.js';\nexport * from './features/commerce/product/product-actions-loaders.js';\nexport * from './features/commerce/context/cart/cart-actions-loader.js';\nexport * from './features/commerce/sort/sort-actions-loader.js';\nexport * from './features/commerce/facets/core-facet/core-facet-actions-loader.js';\nexport * from './features/commerce/facets/category-facet/category-facet-actions-loader.js';\nexport * from './features/commerce/facets/regular-facet/regular-facet-actions-loader.js';\nexport * from './features/commerce/facets/location-facet/location-facet-actions-loader.js';\nexport * from './features/commerce/facets/date-facet/date-facet-actions-loader.js';\nexport * from './features/commerce/facets/numeric-facet/numeric-facet-actions-loader.js';\nexport * from './features/commerce/query-set/query-set-actions-loader.js';\nexport * from './features/commerce/query-suggest/query-suggest-actions-loader.js';\nexport * from './features/commerce/configuration/configuration-actions-loader.js';\nexport * from './features/commerce/query/query-actions-loader.js';\nexport * from './features/commerce/search-parameters/search-parameters-actions-loader.js';\nexport * from './features/commerce/product-listing-parameters/product-listing-parameters-actions-loader.js';\nexport * from './features/commerce/triggers/triggers-actions-loader.js';\nexport * from './features/commerce/instant-products/instant-products-actions-loader.js';\nexport * from './features/commerce/recent-queries/recent-queries-actions-loader.js';\nexport * from './features/commerce/standalone-search-box-set/standalone-search-box-set-actions-loader.js';\n\n// Selectors\nexport {Selectors};\n\n// Controllers\nexport type {\n  Controller,\n  Subscribable,\n} from './controllers/controller/headless-controller.js';\nexport {buildController} from './controllers/controller/headless-controller.js';\n\nexport type {\n  ContextOptions,\n  View,\n  UserLocation,\n  ContextProps,\n  Context,\n  ContextState,\n} from './controllers/commerce/context/headless-context.js';\nexport {buildContext} from './controllers/commerce/context/headless-context.js';\n\nexport type {\n  Search,\n  SearchState,\n} from './controllers/commerce/search/headless-search.js';\nexport {buildSearch} from './controllers/commerce/search/headless-search.js';\n\nexport type {\n  ProductListing,\n  ProductListingState,\n} from './controllers/commerce/product-listing/headless-product-listing.js';\nexport {buildProductListing} from './controllers/commerce/product-listing/headless-product-listing.js';\n\nexport type {\n  Recommendations,\n  RecommendationsState,\n  RecommendationsProps,\n  RecommendationsOptions,\n} from './controllers/commerce/recommendations/headless-recommendations.js';\nexport {buildRecommendations} from './controllers/commerce/recommendations/headless-recommendations.js';\n\nexport type {\n  Pagination,\n  PaginationState,\n  PaginationProps,\n  PaginationOptions,\n} from './controllers/commerce/core/pagination/headless-core-commerce-pagination.js';\n\nexport type {\n  InteractiveProduct,\n  InteractiveProductOptions,\n  InteractiveProductProps,\n} from './controllers/commerce/core/interactive-product/headless-core-interactive-product.js';\n\nexport type {InteractiveResultCore} from './controllers/core/interactive-result/headless-core-interactive-result.js';\n\nexport type {ProductView} from './controllers/commerce/product-view/headless-product-view.js';\nexport {buildProductView} from './controllers/commerce/product-view/headless-product-view.js';\n\nexport type {\n  CartInitialState,\n  CartItem,\n  CartProps,\n  Cart,\n  CartState,\n} from './controllers/commerce/context/cart/headless-cart.js';\nexport type {Transaction} from './features/commerce/context/cart/cart-selector.js';\nexport type {CartItemWithMetadata} from './features/commerce/context/cart/cart-state.js';\nexport type {CartItemParam} from './api/commerce/commerce-api-params.js';\nexport {buildCart} from './controllers/commerce/context/cart/headless-cart.js';\n\nexport type {\n  BaseSolutionTypeSubControllers,\n  SearchAndListingSubControllers,\n  SearchSubControllers,\n} from './controllers/commerce/core/sub-controller/headless-sub-controller.js';\n\nexport type {\n  SortByRelevance,\n  SortByFields,\n  SortByFieldsFields,\n  SortCriterion,\n  SortProps,\n  SortInitialState,\n  Sort,\n  SortState,\n} from './controllers/commerce/core/sort/headless-core-commerce-sort.js';\nexport {\n  buildRelevanceSortCriterion,\n  buildFieldsSortCriterion,\n  SortBy,\n  SortDirection,\n} from './controllers/commerce/core/sort/headless-core-commerce-sort.js';\n\nexport type {\n  CategoryFacet,\n  CategoryFacetState,\n} from './controllers/commerce/core/facets/category/headless-commerce-category-facet.js';\nexport type {\n  RegularFacet,\n  RegularFacetState,\n} from './controllers/commerce/core/facets/regular/headless-commerce-regular-facet.js';\nexport type {\n  LocationFacet,\n  LocationFacetState,\n} from './controllers/commerce/core/facets/location/headless-commerce-location-facet.js';\nexport type {\n  NumericFacet,\n  NumericFacetState,\n} from './controllers/commerce/core/facets/numeric/headless-commerce-numeric-facet.js';\nexport {buildDateRange} from './controllers/commerce/core/facets/date/headless-commerce-date-facet.js';\nexport type {\n  DateFacet,\n  DateFacetState,\n} from './controllers/commerce/core/facets/date/headless-commerce-date-facet.js';\nexport type {DateFilterRange} from './controllers/core/facets/range-facet/date-facet/headless-core-date-filter.js';\nexport type {\n  FacetType,\n  BaseFacetValue,\n  FacetValueRequest,\n  RegularFacetValue,\n  LocationFacetValueRequest,\n  LocationFacetValue,\n  NumericRangeRequest,\n  NumericFacetValue,\n  DateRangeRequest,\n  DateFacetValue,\n  CategoryFacetValueRequest,\n  CategoryFacetValue,\n} from './controllers/commerce/core/facets/headless-core-commerce-facet.js';\nexport type {FacetGenerator} from './controllers/commerce/core/facets/generator/headless-commerce-facet-generator.js';\n\nexport type {FacetGeneratorState} from './controllers/commerce/core/facets/generator/headless-commerce-facet-generator.js';\n\nexport type {\n  RegularFacetSearch,\n  RegularFacetSearchState,\n} from './controllers/commerce/core/facets/regular/headless-commerce-regular-facet-search.js';\nexport type {SpecificFacetSearchResult as RegularFacetSearchResult} from './api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nexport type {\n  CategoryFacetSearch,\n  CategoryFacetSearchState,\n} from './controllers/commerce/core/facets/category/headless-commerce-category-facet-search.js';\nexport type {CategoryFacetSearchResult} from './api/search/facet-search/category-facet-search/category-facet-search-response.js';\n\nexport {buildSearchBox} from './controllers/commerce/search-box/headless-search-box.js';\nexport type {\n  SearchBox,\n  SearchBoxState,\n  SearchBoxProps,\n  Suggestion,\n  SearchBoxOptions,\n} from './controllers/commerce/search-box/headless-search-box.js';\n\nexport {buildRecentQueriesList} from './controllers/commerce/recent-queries-list/headless-recent-queries-list.js';\nexport type {\n  RecentQueriesList,\n  RecentQueriesListOptions,\n  RecentQueriesListProps,\n  RecentQueriesListInitialState,\n  RecentQueriesState,\n} from './controllers/commerce/recent-queries-list/headless-recent-queries-list.js';\n\nexport {buildInstantProducts} from './controllers/commerce/instant-products/headless-instant-products.js';\nexport type {\n  InstantProducts,\n  InstantProductsState,\n  InstantProductsOptions,\n  InstantProductsProps,\n} from './controllers/commerce/instant-products/headless-instant-products.js';\nexport {buildStandaloneSearchBox} from './controllers/commerce/standalone-search-box/headless-standalone-search-box.js';\nexport type {\n  StandaloneSearchBox,\n  StandaloneSearchBoxState,\n} from './controllers/commerce/standalone-search-box/headless-standalone-search-box.js';\nexport type {\n  StandaloneSearchBoxProps,\n  StandaloneSearchBoxOptions,\n} from './controllers/standalone-search-box/headless-standalone-search-box.ts';\n\nexport type {\n  UrlManagerProps,\n  UrlManagerInitialState,\n  UrlManagerState,\n  UrlManager,\n} from './controllers/commerce/core/url-manager/headless-core-url-manager.js';\n\nexport type {Template} from './features/templates/templates-manager.ts';\nexport type {\n  ProductTemplate,\n  ProductTemplateCondition,\n  ProductTemplatesManager,\n} from './features/commerce/product-templates/product-templates-manager.js';\nexport {buildProductTemplatesManager} from './features/commerce/product-templates/product-templates-manager.js';\n\nexport type {\n  BreadcrumbManager,\n  Breadcrumb,\n  BreadcrumbValue,\n  DeselectableValue,\n  BreadcrumbManagerState,\n} from './controllers/commerce/core/breadcrumb-manager/headless-core-breadcrumb-manager.js';\n\nexport type {SearchSummaryState} from './controllers/commerce/search/summary/headless-search-summary.js';\nexport type {ProductListingSummaryState} from './controllers/commerce/product-listing/summary/headless-product-listing-summary.js';\nexport type {RecommendationsSummaryState} from './controllers/commerce/recommendations/summary/headless-recommendations-summary.js';\nexport type {Summary} from './controllers/commerce/core/summary/headless-core-summary.js';\n\nexport type {\n  DidYouMean,\n  DidYouMeanState,\n  QueryCorrection,\n  WordCorrection,\n} from './controllers/commerce/search/did-you-mean/headless-did-you-mean.js';\nexport {ProductTemplatesHelpers} from './features/commerce/product-templates/product-templates-helpers.js';\n\nexport type {\n  NotifyTrigger,\n  NotifyTriggerState,\n} from './controllers/core/triggers/headless-core-notify-trigger.js';\nexport {buildNotifyTrigger} from './controllers/commerce/triggers/headless-notify-trigger.js';\n\nexport type {\n  RedirectionTrigger,\n  RedirectionTriggerState,\n} from './controllers/core/triggers/headless-core-redirection-trigger.js';\n\nexport {buildRedirectionTrigger} from './controllers/commerce/triggers/headless-redirection-trigger.js';\n\nexport type {\n  QueryTrigger,\n  QueryTriggerState,\n} from './controllers/core/triggers/headless-core-query-trigger.js';\nexport {buildQueryTrigger} from './controllers/commerce/triggers/headless-query-trigger.js';\n\nexport type {\n  FieldSuggestions,\n  FieldSuggestionsState,\n} from './controllers/commerce/field-suggestions/headless-field-suggestions.js';\nexport type {\n  CategoryFieldSuggestions,\n  CategoryFieldSuggestionsState,\n} from './controllers/commerce/field-suggestions/headless-category-field-suggestions.js';\nexport type {\n  FieldSuggestionsGenerator,\n  GeneratedFieldSuggestionsControllers,\n} from './controllers/commerce/field-suggestions/headless-field-suggestions-generator.js';\nexport type {FieldSuggestionsFacet} from './features/commerce/facets/field-suggestions-order/field-suggestions-order-state.ts';\nexport {buildFieldSuggestionsGenerator} from './controllers/commerce/field-suggestions/headless-field-suggestions-generator.js';\n\nexport type {\n  ParameterManager,\n  ParameterManagerState,\n  ParameterManagerProps,\n  ParameterManagerInitialState,\n} from './controllers/commerce/core/parameter-manager/headless-core-parameter-manager.js';\nexport type {Parameters} from './features/commerce/parameters/parameters-actions.js';\nexport type {SearchParameters} from './features/search-parameters/search-parameter-actions.js';\n\n// Types & Helpers\nexport {HighlightUtils};\nexport {\n  deserializeRelativeDate,\n  validateRelativeDate,\n} from './api/search/date/relative-date.js';\n", "import {CommerceEngine} from '../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../app/state-key.js';\nimport * as PLSelectors from '../features/commerce/product-listing/product-listing-selectors.js';\nimport * as SearchSelectors from '../features/commerce/search/search-selectors.js';\n\nexport namespace Search {\n  export const responseIdSelector = wrapWithAccessFromEngine(\n    SearchSelectors.responseIdSelector\n  );\n}\n\nexport namespace ProductListing {\n  export const responseIdSelector = wrapWithAccessFromEngine(\n    PLSelectors.responseIdSelector\n  );\n}\n\nfunction wrapWithAccessFromEngine<\n  SelectorFunction extends (\n    state: CommerceEngine[typeof stateKey]\n  ) => ReturnType<SelectorFunction>,\n>(\n  selector: SelectorFunction\n): (engine: CommerceEngine) => ReturnType<SelectorFunction> {\n  return (engine: CommerceEngine) => selector(engine[stateKey]);\n}\n", "import type {CoreEngineNext} from './engine.js';\n\nconst stateKeyDescription = 'coveo-headless-internal-state';\nexport const stateKey = Symbol.for(stateKeyDescription);\n\nexport const redactEngine = <TEngine extends CoreEngineNext>(\n  engine: TEngine\n): TEngine =>\n  new Proxy(engine, {\n    ownKeys(target) {\n      return Reflect.ownKeys(target).filter((key) => key !== stateKey);\n    },\n    get(target, prop, receiver) {\n      if (\n        typeof prop === 'symbol' &&\n        prop.description === stateKeyDescription &&\n        prop !== stateKey\n      ) {\n        engine.logger.warn(\n          \"You might be loading Headless twice. Please check your setup.\\nIf you are trying to access the inner state... Don't\"\n        );\n      }\n      return Reflect.get(target, prop, receiver);\n    },\n  });\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommerceEngineState,\n  CommerceEngine,\n} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {\n  CommercePaginationSection,\n  ProductListingSection,\n} from '../../../state/state-sections.js';\nimport {totalEntriesPrincipalSelector} from '../pagination/pagination-selectors.js';\n\n/**\n * Duplicate selector since the state is no longer accessible externally\n * TODO: KIT-3199: Update all other selectors to use the engine as a parameter\n */\nexport const responseIdSelectorFromEngine = createSelector(\n  (engine: CommerceEngine) => engine[stateKey].productListing.responseId,\n  (responseId) => responseId\n);\n\nexport const responseIdSelector = createSelector(\n  (state: CommerceEngineState) => state.productListing.responseId,\n  (responseId) => responseId\n);\n\nexport const requestIdSelector = createSelector(\n  (state: CommerceEngineState) => state.productListing.requestId,\n  (requestId) => requestId\n);\n\nexport const numberOfProductsSelector = createSelector(\n  (state: Partial<ProductListingSection>) =>\n    state.productListing?.products.length || 0,\n  (len) => len\n);\n\nexport const moreProductsAvailableSelector = createSelector(\n  (state: Partial<CommercePaginationSection & ProductListingSection>) => ({\n    total: totalEntriesPrincipalSelector(state),\n    current: numberOfProductsSelector(state),\n  }),\n  ({current, total}) => current < total\n);\n\nexport const isLoadingSelector = createSelector(\n  (state: Partial<ProductListingSection>) => state.productListing?.isLoading,\n  (isLoading) => (isNullOrUndefined(isLoading) ? false : isLoading)\n);\n\nexport const errorSelector = createSelector(\n  (state: Partial<ProductListingSection>) => state.productListing?.error,\n  (error) => error ?? null\n);\n", "/**\n * @license\n *\n * Copyright 2024 Coveo Solutions Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *       http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// src/schema.ts\nfunction buildSchemaValidationError(errors, context) {\n  const message = `\n  The following properties are invalid:\n\n    ${errors.join(\"\\n\t\")}\n  \n  ${context}\n  `;\n  return new SchemaValidationError(message);\n}\nvar SchemaValidationError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"SchemaValidationError\";\n  }\n};\nvar Schema = class {\n  constructor(definition) {\n    this.definition = definition;\n  }\n  validate(values = {}, message = \"\") {\n    const mergedValues = {\n      ...this.default,\n      ...values\n    };\n    const errors = [];\n    for (const property in this.definition) {\n      const error = this.definition[property].validate(mergedValues[property]);\n      error && errors.push(`${property}: ${error}`);\n    }\n    if (errors.length) {\n      throw buildSchemaValidationError(errors, message);\n    }\n    return mergedValues;\n  }\n  get default() {\n    const defaultValues = {};\n    for (const property in this.definition) {\n      const defaultValue = this.definition[property].default;\n      if (defaultValue !== void 0) {\n        defaultValues[property] = defaultValue;\n      }\n    }\n    return defaultValues;\n  }\n};\n\n// src/values/value.ts\nvar Value = class {\n  constructor(baseConfig = {}) {\n    this.baseConfig = baseConfig;\n  }\n  validate(value) {\n    if (this.baseConfig.required && isNullOrUndefined(value)) {\n      return \"value is required.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.baseConfig.default instanceof Function ? this.baseConfig.default() : this.baseConfig.default;\n  }\n  get required() {\n    return this.baseConfig.required === true;\n  }\n};\nfunction isUndefined(value) {\n  return value === void 0;\n}\nfunction isNull(value) {\n  return value === null;\n}\nfunction isNullOrUndefined(value) {\n  return isUndefined(value) || isNull(value);\n}\n\n// src/values/number-value.ts\nvar NumberValue = class {\n  constructor(config = {}) {\n    this.config = config;\n    this.value = new Value(config);\n  }\n  value;\n  validate(value) {\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (!isNumberOrUndefined(value)) {\n      return \"value is not a number.\";\n    }\n    if (value < this.config.min) {\n      return `minimum value of ${this.config.min} not respected.`;\n    }\n    if (value > this.config.max) {\n      return `maximum value of ${this.config.max} not respected.`;\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isNumberOrUndefined(value) {\n  return isUndefined(value) || isNumber(value);\n}\nfunction isNumber(value) {\n  return typeof value === \"number\" && !isNaN(value);\n}\n\n// src/values/boolean-value.ts\nvar BooleanValue = class {\n  value;\n  constructor(config = {}) {\n    this.value = new Value(config);\n  }\n  validate(value) {\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (!isBooleanOrUndefined(value)) {\n      return \"value is not a boolean.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isBooleanOrUndefined(value) {\n  return isUndefined(value) || isBoolean(value);\n}\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n\n// src/values/string-value.ts\nvar ISODateStringRegex = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i;\nvar StringValue = class {\n  value;\n  config;\n  constructor(config = {}) {\n    this.config = {\n      emptyAllowed: true,\n      url: false,\n      ...config\n    };\n    this.value = new Value(this.config);\n  }\n  validate(value) {\n    const { emptyAllowed, url, regex, constrainTo, ISODate } = this.config;\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (isUndefined(value)) {\n      return null;\n    }\n    if (!isString(value)) {\n      return \"value is not a string.\";\n    }\n    if (!emptyAllowed && !value.length) {\n      return \"value is an empty string.\";\n    }\n    if (url) {\n      try {\n        new URL(value);\n      } catch (e) {\n        return \"value is not a valid URL.\";\n      }\n    }\n    if (regex && !regex.test(value)) {\n      return `value did not match provided regex ${regex}`;\n    }\n    if (constrainTo && !constrainTo.includes(value)) {\n      const values = constrainTo.join(\", \");\n      return `value should be one of: ${values}.`;\n    }\n    if (ISODate && !(ISODateStringRegex.test(value) && new Date(value).toString() !== \"Invalid Date\")) {\n      return \"value is not a valid ISO8601 date string\";\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\n\n// src/values/complex-value.ts\nvar RecordValue = class {\n  config;\n  constructor(config = {}) {\n    this.config = {\n      options: { required: false },\n      values: {},\n      ...config\n    };\n  }\n  validate(input) {\n    if (isUndefined(input)) {\n      return this.config.options.required ? \"value is required and is currently undefined\" : null;\n    }\n    if (!isRecord(input)) {\n      return \"value is not an object\";\n    }\n    for (const [k, v] of Object.entries(this.config.values)) {\n      if (v.required && isNullOrUndefined(input[k])) {\n        return `value does not contain ${k}`;\n      }\n    }\n    let out = \"\";\n    for (const [key, validator] of Object.entries(this.config.values)) {\n      const value = input[key];\n      const invalidValue = validator.validate(value);\n      if (invalidValue !== null) {\n        out += \" \" + invalidValue;\n      }\n    }\n    return out === \"\" ? null : out;\n  }\n  get default() {\n    return void 0;\n  }\n  get required() {\n    return !!this.config.options.required;\n  }\n};\nfunction isRecord(value) {\n  return value !== void 0 && typeof value === \"object\";\n}\nvar ArrayValue = class {\n  constructor(config = {}) {\n    this.config = config;\n    this.value = new Value(this.config);\n  }\n  value;\n  validate(input) {\n    if (!isNullOrUndefined(input) && !Array.isArray(input)) {\n      return \"value is not an array\";\n    }\n    const invalid = this.value.validate(input);\n    if (invalid !== null) {\n      return invalid;\n    }\n    if (isNullOrUndefined(input)) {\n      return null;\n    }\n    if (this.config.max !== void 0 && input.length > this.config.max) {\n      return `value contains more than ${this.config.max}`;\n    }\n    if (this.config.min !== void 0 && input.length < this.config.min) {\n      return `value contains less than ${this.config.min}`;\n    }\n    if (this.config.each !== void 0) {\n      let out = \"\";\n      input.forEach((el) => {\n        if (this.config.each.required && isNullOrUndefined(el)) {\n          out = `value is null or undefined: ${input.join(\",\")}`;\n        }\n        const isInvalid = this.validatePrimitiveValue(el, this.config.each);\n        if (isInvalid !== null) {\n          out += \" \" + isInvalid;\n        }\n      });\n      return out === \"\" ? null : out;\n    }\n    return null;\n  }\n  validatePrimitiveValue(v, validator) {\n    if (isBoolean(v)) {\n      return validator.validate(v);\n    } else if (isString(v)) {\n      return validator.validate(v);\n    } else if (isNumber(v)) {\n      return validator.validate(v);\n    } else if (isRecord(v)) {\n      return validator.validate(v);\n    }\n    return \"value is not a primitive value\";\n  }\n  get default() {\n    return void 0;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\n// src/values/enum-value.ts\nvar EnumValue = class {\n  constructor(config) {\n    this.config = config;\n    this.value = new Value(config);\n  }\n  value;\n  validate(value) {\n    const invalid = this.value.validate(value);\n    if (invalid !== null) {\n      return invalid;\n    }\n    if (isUndefined(value)) {\n      return null;\n    }\n    const valueInEnum = Object.values(this.config.enum).find(\n      (enumValue) => enumValue === value\n    );\n    if (!valueInEnum) {\n      return \"value is not in enum.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nexport {\n  ArrayValue,\n  BooleanValue,\n  EnumValue,\n  NumberValue,\n  RecordValue,\n  Schema,\n  SchemaValidationError,\n  StringValue,\n  Value,\n  isArray,\n  isBoolean,\n  isBooleanOrUndefined,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isNumberOrUndefined,\n  isRecord,\n  isString,\n  isUndefined\n};\n", "/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nexport function formatProdErrorMessage(code: number) {\n  return `Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or ` + 'use the non-minified dev environment for full errors. ';\n}", "declare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\nconst $$observable = /* #__PURE__ */(() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\nexport default $$observable;", "/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nconst randomString = () => Math.random().toString(36).substring(7).split('').join('.');\nconst ActionTypes = {\n  INIT: `@@redux/INIT${/* #__PURE__ */randomString()}`,\n  REPLACE: `@@redux/REPLACE${/* #__PURE__ */randomString()}`,\n  PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`\n};\nexport default ActionTypes;", "/**\n * @param obj The object to inspect.\n * @returns True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj: any): obj is object {\n  if (typeof obj !== 'object' || obj === null) return false;\n  let proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(obj) === proto || Object.getPrototypeOf(obj) === null;\n}", "// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nexport function miniKindOf(val: any): string {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  const type = typeof val;\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  const constructorName = ctorName(val);\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  }\n\n  // other\n  return Object.prototype.toString.call(val).slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\nfunction ctorName(val: any): string | null {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\nfunction isError(val: any) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\nfunction isDate(val: any) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\nexport function kindOf(val: any) {\n  let typeOfVal: string = typeof val;\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n  return typeOfVal;\n}", "import { formatProdErrorMessage as _formatProdErrorMessage13 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage12 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage11 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage10 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage9 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage8 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage7 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage6 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage5 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage4 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport $$observable from './utils/symbol-observable';\nimport { Store, StoreEnhancer, Dispatch, Observer, ListenerCallback, UnknownIfNonSpecific } from './types/store';\nimport { Action } from './types/actions';\nimport { Reducer } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport { kindOf } from './utils/kindOf';\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(2) : `Expected the root reducer to be a function. Instead, received: '${kindOf(reducer)}'`);\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = (preloadedState as StoreEnhancer<Ext, StateExt>);\n    preloadedState = undefined;\n  }\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(1) : `Expected the enhancer to be a function. Instead, received: '${kindOf(enhancer)}'`);\n    }\n    return enhancer(createStore)(reducer, (preloadedState as PreloadedState | undefined));\n  }\n  let currentReducer = reducer;\n  let currentState: S | PreloadedState | undefined = (preloadedState as PreloadedState | undefined);\n  let currentListeners: Map<number, ListenerCallback> | null = new Map();\n  let nextListeners = currentListeners;\n  let listenerIdCounter = 0;\n  let isDispatching = false;\n\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = new Map();\n      currentListeners.forEach((listener, key) => {\n        nextListeners.set(key, listener);\n      });\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns The current state tree of your application.\n   */\n  function getState(): S {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n    return (currentState as S);\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param listener A callback to be invoked on every dispatch.\n   * @returns A function to remove this change listener.\n   */\n  function subscribe(listener: () => void) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(4) : `Expected the listener to be a function. Instead, received: '${kindOf(listener)}'`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n    let isSubscribed = true;\n    ensureCanMutateNextListeners();\n    const listenerId = listenerIdCounter++;\n    nextListeners.set(listenerId, listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      nextListeners.delete(listenerId);\n      currentListeners = null;\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action: A) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage8(7) : `Actions must be plain objects. Instead, the actual type was: '${kindOf(action)}'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`);\n    }\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage9(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n    if (typeof action.type !== 'string') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage10(17) : `Action \"type\" property must be a string. Instead, the actual type was: '${kindOf(action.type)}'. Value was: '${action.type}' (stringified)`);\n    }\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage11(9) : 'Reducers may not dispatch actions.');\n    }\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n    const listeners = currentListeners = nextListeners;\n    listeners.forEach(listener => {\n      listener();\n    });\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param nextReducer The reducer for the store to use instead.\n   */\n  function replaceReducer(nextReducer: Reducer<S, A>): void {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage12(10) : `Expected the nextReducer to be a function. Instead, received: '${kindOf(nextReducer)}`);\n    }\n    currentReducer = ((nextReducer as unknown) as Reducer<S, A, PreloadedState>);\n\n    // This action has a similar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n    dispatch(({\n      type: ActionTypes.REPLACE\n    } as A));\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    const outerSubscribe = subscribe;\n    return {\n      /**\n       * The minimal observable subscription method.\n       * @param observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe(observer: unknown) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage13(11) : `Expected the observer to be an object. Instead, received: '${kindOf(observer)}'`);\n        }\n        function observeState() {\n          const observerAsObserver = (observer as Observer<S>);\n          if (observerAsObserver.next) {\n            observerAsObserver.next(getState());\n          }\n        }\n        observeState();\n        const unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe\n        };\n      },\n      [$$observable]() {\n        return this;\n      }\n    };\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch(({\n    type: ActionTypes.INIT\n  } as A));\n  const store = (({\n    dispatch: (dispatch as Dispatch<A>),\n    subscribe,\n    getState,\n    replaceReducer,\n    [$$observable]: observable\n  } as unknown) as Store<S, A, StateExt> & Ext);\n  return store;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}>(reducer: Reducer<S, A>, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A, PreloadedState>, preloadedState?: PreloadedState | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext;\nexport function legacy_createStore<S, A extends Action, Ext extends {} = {}, StateExt extends {} = {}, PreloadedState = S>(reducer: Reducer<S, A>, preloadedState?: PreloadedState | StoreEnhancer<Ext, StateExt> | undefined, enhancer?: StoreEnhancer<Ext, StateExt>): Store<S, A, UnknownIfNonSpecific<StateExt>> & Ext {\n  return createStore(reducer, (preloadedState as any), enhancer);\n}", "/**\n * Prints a warning in the console if it exists.\n *\n * @param message The warning message.\n */\nexport default function warning(message: string): void {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n}", "import { formatProdErrorMessage as _formatProdErrorMessage3 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage2 } from \"src/utils/formatProdErrorMessage\";\nimport { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport { Action } from './types/actions';\nimport { ActionFromReducersMapObject, PreloadedStateShapeFromReducersMapObject, Reducer, StateFromReducersMapObject } from './types/reducers';\nimport ActionTypes from './utils/actionTypes';\nimport isPlainObject from './utils/isPlainObject';\nimport warning from './utils/warning';\nimport { kindOf } from './utils/kindOf';\nfunction getUnexpectedStateShapeWarningMessage(inputState: object, reducers: {\n  [key: string]: Reducer<any, any, any>;\n}, action: Action, unexpectedKeyCache: {\n  [key: string]: true;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n  if (!isPlainObject(inputState)) {\n    return `The ${argumentName} has unexpected type of \"${kindOf(inputState)}\". Expected argument to be an object with the following ` + `keys: \"${reducerKeys.join('\", \"')}\"`;\n  }\n  const unexpectedKeys = Object.keys(inputState).filter(key => !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]);\n  unexpectedKeys.forEach(key => {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n  if (unexpectedKeys.length > 0) {\n    return `Unexpected ${unexpectedKeys.length > 1 ? 'keys' : 'key'} ` + `\"${unexpectedKeys.join('\", \"')}\" found in ${argumentName}. ` + `Expected to find one of the known reducer keys instead: ` + `\"${reducerKeys.join('\", \"')}\". Unexpected keys will be ignored.`;\n  }\n}\nfunction assertReducerShape(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  Object.keys(reducers).forEach(key => {\n    const reducer = reducers[key];\n    const initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(12) : `The slice reducer for key \"${key}\" returned undefined during initialization. ` + `If the state passed to the reducer is undefined, you must ` + `explicitly return the initial state. The initial state may ` + `not be undefined. If you don't want to set a value for this reducer, ` + `you can use null instead of undefined.`);\n    }\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(13) : `The slice reducer for key \"${key}\" returned undefined when probed with a random type. ` + `Don't try to handle '${ActionTypes.INIT}' or other actions in \"redux/*\" ` + `namespace. They are considered private. Instead, you must return the ` + `current state for any unknown actions, unless it is undefined, ` + `in which case you must return the initial state, regardless of the ` + `action type. The initial state may not be undefined, but can be null.`);\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @template S Combined state object type.\n *\n * @param reducers An object whose values correspond to different reducer\n *   functions that need to be combined into one. One handy way to obtain it\n *   is to use `import * as reducers` syntax. The reducers may never\n *   return undefined for any action. Instead, they should return their\n *   initial state if the state passed to them was undefined, and the current\n *   state for any unrecognized action.\n *\n * @returns A reducer function that invokes every reducer inside the passed\n *   object, and builds a state object with the same shape.\n */\nexport default function combineReducers<M>(reducers: M): M[keyof M] extends Reducer<any, any, any> | undefined ? Reducer<StateFromReducersMapObject<M>, ActionFromReducersMapObject<M>, Partial<PreloadedStateShapeFromReducersMapObject<M>>> : never;\nexport default function combineReducers(reducers: {\n  [key: string]: Reducer<any, any, any>;\n}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: {\n    [key: string]: Reducer<any, any, any>;\n  } = {};\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(`No reducer provided for key \"${key}\"`);\n      }\n    }\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  // This is used to make sure we don't warn about the same\n  // keys multiple times.\n  let unexpectedKeyCache: {\n    [key: string]: true;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n  let shapeAssertionError: unknown;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n  return function combination(state: StateFromReducersMapObject<typeof reducers> = {}, action: Action) {\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n    let hasChanged = false;\n    const nextState: StateFromReducersMapObject<typeof reducers> = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        const actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(14) : `When called with an action of type ${actionType ? `\"${String(actionType)}\"` : '(unknown type)'}, the slice reducer for key \"${key}\" returned undefined. ` + `To ignore an action, you must explicitly return the previous state. ` + `If you want this reducer to hold no value, you can return null instead of undefined.`);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport { Dispatch } from './types/store';\nimport { ActionCreator, ActionCreatorsMapObject, Action } from './types/actions';\nimport { kindOf } from './utils/kindOf';\nfunction bindActionCreator<A extends Action>(actionCreator: ActionCreator<A>, dispatch: Dispatch<A>) {\n  return function (this: any, ...args: any[]) {\n    return dispatch(actionCreator.apply(this, args));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use `import * as`\n * syntax. You may also pass a single function.\n *\n * @param dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators<A, C extends ActionCreator<A>>(actionCreator: C, dispatch: Dispatch): C;\nexport default function bindActionCreators<A extends ActionCreator<any>, B extends ActionCreator<any>>(actionCreator: A, dispatch: Dispatch): B;\nexport default function bindActionCreators<A, M extends ActionCreatorsMapObject<A>>(actionCreators: M, dispatch: Dispatch): M;\nexport default function bindActionCreators<M extends ActionCreatorsMapObject, N extends ActionCreatorsMapObject>(actionCreators: M, dispatch: Dispatch): N;\nexport default function bindActionCreators(actionCreators: ActionCreator<any> | ActionCreatorsMapObject, dispatch: Dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(16) : `bindActionCreators expected an object or a function, but instead received: '${kindOf(actionCreators)}'. ` + `Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?`);\n  }\n  const boundActionCreators: ActionCreatorsMapObject = {};\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}", "type Func<T extends any[], R> = (...a: T) => R;\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for the\n * resulting composite function.\n *\n * @param funcs The functions to compose.\n * @returns A function obtained by composing the argument functions from right\n *   to left. For example, `compose(f, g, h)` is identical to doing\n *   `(...args) => f(g(h(...args)))`.\n */\nexport default function compose(): <R>(a: R) => R;\nexport default function compose<F extends Function>(f: F): F;\n\n/* two functions */\nexport default function compose<A, T extends any[], R>(f1: (a: A) => R, f2: Func<T, A>): Func<T, R>;\n\n/* three functions */\nexport default function compose<A, B, T extends any[], R>(f1: (b: B) => R, f2: (a: A) => B, f3: Func<T, A>): Func<T, R>;\n\n/* four functions */\nexport default function compose<A, B, C, T extends any[], R>(f1: (c: C) => R, f2: (b: B) => C, f3: (a: A) => B, f4: Func<T, A>): Func<T, R>;\n\n/* rest */\nexport default function compose<R>(f1: (a: any) => R, ...funcs: Function[]): (...args: any[]) => R;\nexport default function compose<R>(...funcs: Function[]): (...args: any[]) => R;\nexport default function compose(...funcs: Function[]) {\n  if (funcs.length === 0) {\n    // infer the argument type so it is usable in inference down the line\n    return <T,>(arg: T) => arg;\n  }\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n  return funcs.reduce((a, b) => (...args: any) => a(b(...args)));\n}", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"src/utils/formatProdErrorMessage\";\nimport compose from './compose';\nimport { Middleware, MiddlewareAPI } from './types/middleware';\nimport { StoreEnhancer, Dispatch } from './types/store';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param middlewares The middleware chain to be applied.\n * @returns A store enhancer applying the middleware.\n *\n * @template Ext Dispatch signature added by a middleware.\n * @template S The type of the state supported by a middleware.\n */\nexport default function applyMiddleware(): StoreEnhancer;\nexport default function applyMiddleware<Ext1, S>(middleware1: Middleware<Ext1, S, any>): StoreEnhancer<{\n  dispatch: Ext1;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4;\n}>;\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, Ext5, S>(middleware1: Middleware<Ext1, S, any>, middleware2: Middleware<Ext2, S, any>, middleware3: Middleware<Ext3, S, any>, middleware4: Middleware<Ext4, S, any>, middleware5: Middleware<Ext5, S, any>): StoreEnhancer<{\n  dispatch: Ext1 & Ext2 & Ext3 & Ext4 & Ext5;\n}>;\nexport default function applyMiddleware<Ext, S = any>(...middlewares: Middleware<any, S, any>[]): StoreEnhancer<{\n  dispatch: Ext;\n}>;\nexport default function applyMiddleware(...middlewares: Middleware[]): StoreEnhancer<any> {\n  return createStore => (reducer, preloadedState) => {\n    const store = createStore(reducer, preloadedState);\n    let dispatch: Dispatch = () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n    };\n    const middlewareAPI: MiddlewareAPI = {\n      getState: store.getState,\n      dispatch: (action, ...args) => dispatch(action, ...args)\n    };\n    const chain = middlewares.map(middleware => middleware(middlewareAPI));\n    dispatch = compose<typeof dispatch>(...chain)(store.dispatch);\n    return {\n      ...store,\n      dispatch\n    };\n  };\n}", "import { Action } from '../types/actions';\nimport isPlainObject from './isPlainObject';\nexport default function isAction(action: unknown): action is Action<string> {\n  return isPlainObject(action) && 'type' in action && typeof (action as Record<'type', unknown>).type === 'string';\n}", "// Should be no imports here!\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: unique symbol = Symbol.for(\"immer-nothing\")\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = Symbol.for(\"immer-draftable\")\n\nexport const DRAFT_STATE: unique symbol = Symbol.for(\"immer-state\")\n", "export const errors =\n\tprocess.env.NODE_ENV !== \"production\"\n\t\t? [\n\t\t\t\t// All error codes, starting by 0:\n\t\t\t\tfunction(plugin: string) {\n\t\t\t\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t\t\t\t},\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t\t\t\t},\n\t\t\t\t\"This object has been frozen and should not be mutated\",\n\t\t\t\tfunction(data: any) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t\t\t\t\"Immer forbids circular references\",\n\t\t\t\t\"The first or second argument to `produce` must be a function\",\n\t\t\t\t\"The third argument to `produce` must be a function or undefined\",\n\t\t\t\t\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t\t\t\t\"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'current' expects a draft, got: ${thing}`\n\t\t\t\t},\n\t\t\t\t\"Object.defineProperty() cannot be used on an Immer draft\",\n\t\t\t\t\"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t\t\t\t\"Immer only supports deleting array indices\",\n\t\t\t\t\"Immer only supports setting array indices and the 'length' property\",\n\t\t\t\tfunction(thing: string) {\n\t\t\t\t\treturn `'original' expects a draft, got: ${thing}`\n\t\t\t\t}\n\t\t\t\t// Note: if more errors are added, the errorOffset in Patches.ts should be increased\n\t\t\t\t// See Patches.ts for additional errors\n\t\t  ]\n\t\t: []\n\nexport function die(error: number, ...args: any[]): never {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tconst e = errors[error]\n\t\tconst msg = typeof e === \"function\" ? e.apply(null, args as any) : e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\tArchType,\n\tdie,\n\tStrictMode\n} from \"../internal\"\n\nexport const getPrototypeOf = Object.getPrototypeOf\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(15, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/**\n * Each iterates a map, set or array.\n * Or, if any other kind of object, all of its own properties.\n * Regardless whether they are enumerable or symbols\n */\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchType.Object) {\n\t\tReflect.ownKeys(obj).forEach(key => {\n\t\t\titer(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): ArchType {\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_\n\t\t: Array.isArray(thing)\n\t\t? ArchType.Array\n\t\t: isMap(thing)\n\t\t? ArchType.Map\n\t\t: isSet(thing)\n\t\t? ArchType.Set\n\t\t: ArchType.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchType.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchType.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchType.Map) thing.set(propOrOldValue, value)\n\telse if (t === ArchType.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any, strict: StrictMode) {\n\tif (isMap(base)) {\n\t\treturn new Map(base)\n\t}\n\tif (isSet(base)) {\n\t\treturn new Set(base)\n\t}\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\n\tconst isPlain = isPlainObject(base)\n\n\tif (strict === true || (strict === \"class_only\" && !isPlain)) {\n\t\t// Perform a strict copy\n\t\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\t\tdelete descriptors[DRAFT_STATE as any]\n\t\tlet keys = Reflect.ownKeys(descriptors)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key: any = keys[i]\n\t\t\tconst desc = descriptors[key]\n\t\t\tif (desc.writable === false) {\n\t\t\t\tdesc.writable = true\n\t\t\t\tdesc.configurable = true\n\t\t\t}\n\t\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t\t// with libraries that trap values, like mobx or vue\n\t\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\t\tif (desc.get || desc.set)\n\t\t\t\tdescriptors[key] = {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\t\tvalue: base[key]\n\t\t\t\t}\n\t\t}\n\t\treturn Object.create(getPrototypeOf(base), descriptors)\n\t} else {\n\t\t// perform a sloppy copy\n\t\tconst proto = getPrototypeOf(base)\n\t\tif (proto !== null && isPlain) {\n\t\t\treturn {...base} // assumption: better inner class optimization than the assign below\n\t\t}\n\t\tconst obj = Object.create(proto)\n\t\treturn Object.assign(obj, base)\n\t}\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep)\n\t\t// See #590, don't recurse into non-enumerable / Symbol properties when freezing\n\t\t// So use Object.entries (only string-like, enumerables) instead of each()\n\t\tObject.entries(obj).forEach(([key, value]) => freeze(value, true))\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tDrafted,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tArchType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: readonly Patch[]): T\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(0, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ArchType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ArchType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tArchType,\n\tgetPlugin\n} from \"../internal\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (state.type_ === ArchType.Object || state.type_ === ArchType.Array)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tArchType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(value, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path)\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result = state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ArchType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n\t\tdie(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ArchType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// Immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\t// Per #590, we never freeze symbolic properties. Just to make sure don't accidentally interfere\n\t\t// with other frameworks.\n\t\tif (\n\t\t\t(!parentState || !parentState.scope_.parent_) &&\n\t\t\ttypeof prop !== \"symbol\" &&\n\t\t\tObject.prototype.propertyIsEnumerable.call(targetObject, prop)\n\t\t)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tgetPrototypeOf,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tArchType,\n\tImmerScope\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ArchType.Object\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ArchType.Array\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ArchType.Array : (ArchType.Object as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(value, state))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\tif (state.copy_) {\n\t\t\tdelete state.copy_[prop]\n\t\t}\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ArchType.Array || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop as any)))\n\t\tdie(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (\n\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\tprop !== \"length\" &&\n\t\tisNaN(parseInt(prop as any))\n\t)\n\t\tdie(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {\n\tbase_: any\n\tcopy_: any\n\tscope_: ImmerScope\n}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(\n\t\t\tstate.base_,\n\t\t\tstate.scope_.immer_.useStrictShallowCopy_\n\t\t)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport type StrictMode = boolean | \"class_only\";\n\nexport class Immer implements ProducersFns {\n\tautoFreeze_: boolean = true\n\tuseStrictShallowCopy_: StrictMode = false\n\n\tconstructor(config?: {\n\t\tautoFreeze?: boolean\n\t\tuseStrictShallowCopy?: StrictMode\n\t}) {\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tif (typeof config?.useStrictShallowCopy === \"boolean\")\n\t\t\tthis.setUseStrictShallowCopy(config!.useStrictShallowCopy)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(1, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (!state || !state.isManual_) die(9)\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to enable strict shallow copy.\n\t *\n\t * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n\t */\n\tsetUseStrictShallowCopy(value: StrictMode) {\n\t\tthis.useStrictShallowCopy_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: readonly Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: createProxyProxy(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tisFrozen\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(10, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value) || isFrozen(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tif (state) {\n\t\tif (!state.modified_) return state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_)\n\t} else {\n\t\tcopy = shallowCopy(value, true)\n\t}\n\t// recurse\n\teach(copy, (key, childValue) => {\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\tif (state) {\n\t\tstate.finalized_ = false\n\t}\n\treturn copy\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tProxyArrayState,\n\tMapState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tgetPrototypeOf,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tArchType,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING,\n\terrors\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst errorOffset = 16\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\terrors.push(\n\t\t\t'Sets cannot have \"replace\" patches.',\n\t\t\tfunction(op: string) {\n\t\t\t\treturn \"Unsupported patch operation: \" + op\n\t\t\t},\n\t\t\tfunction(path: string) {\n\t\t\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t\t\t},\n\t\t\t\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n\t\t)\n\t}\n\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ArchType.Object:\n\t\t\tcase ArchType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ArchType.Array:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ArchType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tfor (let i = copy_.length - 1; base_.length <= i; --i) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tinversePatches.push({\n\t\t\t\top: REMOVE,\n\t\t\t\tpath\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: readonly Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === ArchType.Object || parentType === ArchType.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\")\n\t\t\t\t\tdie(errorOffset + 3)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(errorOffset + 2, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\tdie(errorOffset)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchType.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchType.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchType.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(errorOffset + 1, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tdie,\n\tArchType,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\tclass DraftMap extends Map {\n\t\t[DRAFT_STATE]: MapState\n\n\t\tconstructor(target: AnyMap, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tset(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tforEach(cb: (value: any, key: any, self: any) => void, thisArg?: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tget(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.entries()\n\t\t}\n\t}\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tclass DraftSet extends Set {\n\t\t[DRAFT_STATE]: SetState\n\t\tconstructor(target: AnySet, parent?: ImmerState) {\n\t\t\tsuper()\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ArchType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t}\n\n\t\thas(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tadd(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tdelete(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tclear() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tvalues(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tentries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tkeys(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tforEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\t}\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tWritableDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\tProducer,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze,\n\tObjectish,\n\tStrictMode\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to enable strict shallow copy.\n *\n * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n */\nexport const setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\n", "import type { AnyFunction } from '../types'\r\n\r\n/**\r\n * Runs a check to determine if the given result function behaves as an\r\n * identity function. An identity function is one that returns its\r\n * input unchanged, for example, `x => x`. This check helps ensure\r\n * efficient memoization and prevent unnecessary re-renders by encouraging\r\n * proper use of transformation logic in result functions and\r\n * extraction logic in input selectors.\r\n *\r\n * @param resultFunc - The result function to be checked.\r\n * @param inputSelectorsResults - The results of the input selectors.\r\n * @param outputSelectorResult - The result of the output selector.\r\n *\r\n * @see {@link https://reselect.js.org/api/development-only-stability-checks#identityfunctioncheck `identityFunctionCheck`}\r\n *\r\n * @since 5.0.0\r\n * @internal\r\n */\r\nexport const runIdentityFunctionCheck = (\r\n  resultFunc: AnyFunction,\r\n  inputSelectorsResults: unknown[],\r\n  outputSelectorResult: unknown\r\n) => {\r\n  if (\r\n    inputSelectorsResults.length === 1 &&\r\n    inputSelectorsResults[0] === outputSelectorResult\r\n  ) {\r\n    let isInputSameAsOutput = false\r\n    try {\r\n      const emptyObject = {}\r\n      if (resultFunc(emptyObject) === emptyObject) isInputSameAsOutput = true\r\n    } catch {\r\n      // Do nothing\r\n    }\r\n    if (isInputSameAsOutput) {\r\n      let stack: string | undefined = undefined\r\n      try {\r\n        throw new Error()\r\n      } catch (e) {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi, no-extra-semi\r\n        ;({ stack } = e as Error)\r\n      }\r\n      console.warn(\r\n        'The result function returned its own inputs without modification. e.g' +\r\n          '\\n`createSelector([state => state.todos], todos => todos)`' +\r\n          '\\nThis could lead to inefficient memoization and unnecessary re-renders.' +\r\n          '\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.',\r\n        { stack }\r\n      )\r\n    }\r\n  }\r\n}\r\n", "import type { CreateSelectorOptions, UnknownMemoizer } from '../types'\r\n\r\n/**\r\n * Runs a stability check to ensure the input selector results remain stable\r\n * when provided with the same arguments. This function is designed to detect\r\n * changes in the output of input selectors, which can impact the performance of memoized selectors.\r\n *\r\n * @param inputSelectorResultsObject - An object containing two arrays: `inputSelectorResults` and `inputSelectorResultsCopy`, representing the results of input selectors.\r\n * @param options - Options object consisting of a `memoize` function and a `memoizeOptions` object.\r\n * @param inputSelectorArgs - List of arguments being passed to the input selectors.\r\n *\r\n * @see {@link https://reselect.js.org/api/development-only-stability-checks/#inputstabilitycheck `inputStabilityCheck`}\r\n *\r\n * @since 5.0.0\r\n * @internal\r\n */\r\nexport const runInputStabilityCheck = (\r\n  inputSelectorResultsObject: {\r\n    inputSelectorResults: unknown[]\r\n    inputSelectorResultsCopy: unknown[]\r\n  },\r\n  options: Required<\r\n    Pick<\r\n      CreateSelectorOptions<UnknownMemoizer, UnknownMemoizer>,\r\n      'memoize' | 'memoizeOptions'\r\n    >\r\n  >,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) => {\r\n  const { memoize, memoizeOptions } = options\r\n  const { inputSelectorResults, inputSelectorResultsCopy } =\r\n    inputSelectorResultsObject\r\n  const createAnEmptyObject = memoize(() => ({}), ...memoizeOptions)\r\n  // if the memoize method thinks the parameters are equal, these *should* be the same reference\r\n  const areInputSelectorResultsEqual =\r\n    createAnEmptyObject.apply(null, inputSelectorResults) ===\r\n    createAnEmptyObject.apply(null, inputSelectorResultsCopy)\r\n  if (!areInputSelectorResultsEqual) {\r\n    let stack: string | undefined = undefined\r\n    try {\r\n      throw new Error()\r\n    } catch (e) {\r\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi, no-extra-semi\r\n      ;({ stack } = e as Error)\r\n    }\r\n    console.warn(\r\n      'An input selector returned a different result when passed same arguments.' +\r\n        '\\nThis means your output selector will likely run more frequently than intended.' +\r\n        '\\nAvoid returning a new reference inside your input selector, e.g.' +\r\n        '\\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`',\r\n      {\r\n        arguments: inputSelectorArgs,\r\n        firstInputs: inputSelectorResults,\r\n        secondInputs: inputSelectorResultsCopy,\r\n        stack\r\n      }\r\n    )\r\n  }\r\n}\r\n", "import type { DevModeChecks } from '../types'\r\n\r\n/**\r\n * Global configuration for development mode checks. This specifies the default\r\n * frequency at which each development mode check should be performed.\r\n *\r\n * @since 5.0.0\r\n * @internal\r\n */\r\nexport const globalDevModeChecks: DevModeChecks = {\r\n  inputStabilityCheck: 'once',\r\n  identityFunctionCheck: 'once'\r\n}\r\n\r\n/**\r\n * Overrides the development mode checks settings for all selectors.\r\n *\r\n * Reselect performs additional checks in development mode to help identify and\r\n * warn about potential issues in selector behavior. This function allows you to\r\n * customize the behavior of these checks across all selectors in your application.\r\n *\r\n * **Note**: This setting can still be overridden per selector inside `createSelector`'s `options` object.\r\n * See {@link https://github.com/reduxjs/reselect#2-per-selector-by-passing-an-identityfunctioncheck-option-directly-to-createselector per-selector-configuration}\r\n * and {@linkcode CreateSelectorOptions.identityFunctionCheck identityFunctionCheck} for more details.\r\n *\r\n * _The development mode checks do not run in production builds._\r\n *\r\n * @param devModeChecks - An object specifying the desired settings for development mode checks. You can provide partial overrides. Unspecified settings will retain their current values.\r\n *\r\n * @example\r\n * ```ts\r\n * import { setGlobalDevModeChecks } from 'reselect'\r\n * import { DevModeChecks } from '../types'\r\n *\r\n * // Run only the first time the selector is called. (default)\r\n * setGlobalDevModeChecks({ inputStabilityCheck: 'once' })\r\n *\r\n * // Run every time the selector is called.\r\n * setGlobalDevModeChecks({ inputStabilityCheck: 'always' })\r\n *\r\n * // Never run the input stability check.\r\n * setGlobalDevModeChecks({ inputStabilityCheck: 'never' })\r\n *\r\n * // Run only the first time the selector is called. (default)\r\n * setGlobalDevModeChecks({ identityFunctionCheck: 'once' })\r\n *\r\n * // Run every time the selector is called.\r\n * setGlobalDevModeChecks({ identityFunctionCheck: 'always' })\r\n *\r\n * // Never run the identity function check.\r\n * setGlobalDevModeChecks({ identityFunctionCheck: 'never' })\r\n * ```\r\n * @see {@link https://reselect.js.org/api/development-only-stability-checks Development-Only Stability Checks}\r\n * @see {@link https://reselect.js.org/api/development-only-stability-checks#1-globally-through-setglobaldevmodechecks global-configuration}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport const setGlobalDevModeChecks = (\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  Object.assign(globalDevModeChecks, devModeChecks)\r\n}\r\n", "import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n", "// Original autotracking implementation source:\r\n// - https://gist.github.com/pzuraq/79bf862e0f8cd9521b79c4b6eccdc4f9\r\n// Additional references:\r\n// - https://www.pzuraq.com/blog/how-autotracking-works\r\n// - https://v5.chriskrycho.com/journal/autotracking-elegant-dx-via-cutting-edge-cs/\r\nimport type { EqualityFn } from '../types'\r\nimport { assertIsFunction } from '../utils'\r\n\r\n// The global revision clock. Every time state changes, the clock increments.\r\nexport let $REVISION = 0\r\n\r\n// The current dependency tracker. Whenever we compute a cache, we create a Set\r\n// to track any dependencies that are used while computing. If no cache is\r\n// computing, then the tracker is null.\r\nlet CURRENT_TRACKER: Set<Cell<any> | TrackingCache> | null = null\r\n\r\n// Storage represents a root value in the system - the actual state of our app.\r\nexport class Cell<T> {\r\n  revision = $REVISION\r\n\r\n  _value: T\r\n  _lastValue: T\r\n  _isEqual: EqualityFn = tripleEq\r\n\r\n  constructor(initialValue: T, isEqual: EqualityFn = tripleEq) {\r\n    this._value = this._lastValue = initialValue\r\n    this._isEqual = isEqual\r\n  }\r\n\r\n  // Whenever a storage value is read, it'll add itself to the current tracker if\r\n  // one exists, entangling its state with that cache.\r\n  get value() {\r\n    CURRENT_TRACKER?.add(this)\r\n\r\n    return this._value\r\n  }\r\n\r\n  // Whenever a storage value is updated, we bump the global revision clock,\r\n  // assign the revision for this storage to the new value, _and_ we schedule a\r\n  // rerender. This is important, and it's what makes autotracking  _pull_\r\n  // based. We don't actively tell the caches which depend on the storage that\r\n  // anything has happened. Instead, we recompute the caches when needed.\r\n  set value(newValue) {\r\n    if (this.value === newValue) return\r\n\r\n    this._value = newValue\r\n    this.revision = ++$REVISION\r\n  }\r\n}\r\n\r\nfunction tripleEq(a: unknown, b: unknown) {\r\n  return a === b\r\n}\r\n\r\n// Caches represent derived state in the system. They are ultimately functions\r\n// that are memoized based on what state they use to produce their output,\r\n// meaning they will only rerun IFF a storage value that could affect the output\r\n// has changed. Otherwise, they'll return the cached value.\r\nexport class TrackingCache {\r\n  _cachedValue: any\r\n  _cachedRevision = -1\r\n  _deps: any[] = []\r\n  hits = 0\r\n\r\n  fn: () => any\r\n\r\n  constructor(fn: () => any) {\r\n    this.fn = fn\r\n  }\r\n\r\n  clear() {\r\n    this._cachedValue = undefined\r\n    this._cachedRevision = -1\r\n    this._deps = []\r\n    this.hits = 0\r\n  }\r\n\r\n  get value() {\r\n    // When getting the value for a Cache, first we check all the dependencies of\r\n    // the cache to see what their current revision is. If the current revision is\r\n    // greater than the cached revision, then something has changed.\r\n    if (this.revision > this._cachedRevision) {\r\n      const { fn } = this\r\n\r\n      // We create a new dependency tracker for this cache. As the cache runs\r\n      // its function, any Storage or Cache instances which are used while\r\n      // computing will be added to this tracker. In the end, it will be the\r\n      // full list of dependencies that this Cache depends on.\r\n      const currentTracker = new Set<Cell<any>>()\r\n      const prevTracker = CURRENT_TRACKER\r\n\r\n      CURRENT_TRACKER = currentTracker\r\n\r\n      // try {\r\n      this._cachedValue = fn()\r\n      // } finally {\r\n      CURRENT_TRACKER = prevTracker\r\n      this.hits++\r\n      this._deps = Array.from(currentTracker)\r\n\r\n      // Set the cached revision. This is the current clock count of all the\r\n      // dependencies. If any dependency changes, this number will be less\r\n      // than the new revision.\r\n      this._cachedRevision = this.revision\r\n      // }\r\n    }\r\n\r\n    // If there is a current tracker, it means another Cache is computing and\r\n    // using this one, so we add this one to the tracker.\r\n    CURRENT_TRACKER?.add(this)\r\n\r\n    // Always return the cached value.\r\n    return this._cachedValue\r\n  }\r\n\r\n  get revision() {\r\n    // The current revision is the max of all the dependencies' revisions.\r\n    return Math.max(...this._deps.map(d => d.revision), 0)\r\n  }\r\n}\r\n\r\nexport function getValue<T>(cell: Cell<T>): T {\r\n  if (!(cell instanceof Cell)) {\r\n    console.warn('Not a valid cell! ', cell)\r\n  }\r\n\r\n  return cell.value\r\n}\r\n\r\ntype CellValue<T extends Cell<unknown>> = T extends Cell<infer U> ? U : never\r\n\r\nexport function setValue<T extends Cell<unknown>>(\r\n  storage: T,\r\n  value: CellValue<T>\r\n): void {\r\n  if (!(storage instanceof Cell)) {\r\n    throw new TypeError(\r\n      'setValue must be passed a tracked store created with `createStorage`.'\r\n    )\r\n  }\r\n\r\n  storage.value = storage._lastValue = value\r\n}\r\n\r\nexport function createCell<T = unknown>(\r\n  initialValue: T,\r\n  isEqual: EqualityFn = tripleEq\r\n): Cell<T> {\r\n  return new Cell(initialValue, isEqual)\r\n}\r\n\r\nexport function createCache<T = unknown>(fn: () => T): TrackingCache {\r\n  assertIsFunction(\r\n    fn,\r\n    'the first parameter to `createCache` must be a function'\r\n  )\r\n\r\n  return new TrackingCache(fn)\r\n}\r\n", "import type { Cell } from './autotracking'\r\nimport {\r\n  getValue as consumeTag,\r\n  createCell as createStorage,\r\n  setValue\r\n} from './autotracking'\r\n\r\nexport type Tag = Cell<unknown>\r\n\r\nconst neverEq = (a: any, b: any): boolean => false\r\n\r\nexport function createTag(): Tag {\r\n  return createStorage(null, neverEq)\r\n}\r\nexport { consumeTag }\r\nexport function dirtyTag(tag: Tag, value: any): void {\r\n  setValue(tag, value)\r\n}\r\n\r\nexport interface Node<\r\n  T extends Array<unknown> | Record<string, unknown> =\r\n    | Array<unknown>\r\n    | Record<string, unknown>\r\n> {\r\n  collectionTag: Tag | null\r\n  tag: Tag | null\r\n  tags: Record<string, Tag>\r\n  children: Record<string, Node>\r\n  proxy: T\r\n  value: T\r\n  id: number\r\n}\r\n\r\nexport const consumeCollection = (node: Node): void => {\r\n  let tag = node.collectionTag\r\n\r\n  if (tag === null) {\r\n    tag = node.collectionTag = createTag()\r\n  }\r\n\r\n  consumeTag(tag)\r\n}\r\n\r\nexport const dirtyCollection = (node: Node): void => {\r\n  const tag = node.collectionTag\r\n\r\n  if (tag !== null) {\r\n    dirtyTag(tag, null)\r\n  }\r\n}\r\n", "// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n", "import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n", "import { createNode, updateNode } from './proxy'\r\nimport type { Node } from './tracking'\r\n\r\nimport { createCacheKeyComparator, referenceEqualityCheck } from '../lruMemoize'\r\nimport type { AnyFunction, DefaultMemoizeFields, Simplify } from '../types'\r\nimport { createCache } from './autotracking'\r\n\r\n/**\r\n * Uses an \"auto-tracking\" approach inspired by the work of the Ember Glimmer team.\r\n * It uses a Proxy to wrap arguments and track accesses to nested fields\r\n * in your selector on first read. Later, when the selector is called with\r\n * new arguments, it identifies which accessed fields have changed and\r\n * only recalculates the result if one or more of those accessed fields have changed.\r\n * This allows it to be more precise than the shallow equality checks in `lruMemoize`.\r\n *\r\n * __Design Tradeoffs for `autotrackMemoize`:__\r\n * - Pros:\r\n *    - It is likely to avoid excess calculations and recalculate fewer times than `lruMemoize` will,\r\n *    which may also result in fewer component re-renders.\r\n * - Cons:\r\n *    - It only has a cache size of 1.\r\n *    - It is slower than `lruMemoize`, because it has to do more work. (How much slower is dependent on the number of accessed fields in a selector, number of calls, frequency of input changes, etc)\r\n *    - It can have some unexpected behavior. Because it tracks nested field accesses,\r\n *    cases where you don't access a field will not recalculate properly.\r\n *    For example, a badly-written selector like:\r\n *      ```ts\r\n *      createSelector([state => state.todos], todos => todos)\r\n *      ```\r\n *      that just immediately returns the extracted value will never update, because it doesn't see any field accesses to check.\r\n *\r\n * __Use Cases for `autotrackMemoize`:__\r\n * - It is likely best used for cases where you need to access specific nested fields\r\n * in data, and avoid recalculating if other fields in the same data objects are immutably updated.\r\n *\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { unstable_autotrackMemoize as autotrackMemoize, createSelector } from 'reselect'\r\n *\r\n * const selectTodoIds = createSelector(\r\n *   [(state: RootState) => state.todos],\r\n *   (todos) => todos.map(todo => todo.id),\r\n *   { memoize: autotrackMemoize }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { unstable_autotrackMemoize as autotrackMemoize, createSelectorCreator } from 'reselect'\r\n *\r\n * const createSelectorAutotrack = createSelectorCreator({ memoize: autotrackMemoize })\r\n *\r\n * const selectTodoIds = createSelectorAutotrack(\r\n *   [(state: RootState) => state.todos],\r\n *   (todos) => todos.map(todo => todo.id)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/unstable_autotrackMemoize autotrackMemoize}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function autotrackMemoize<Func extends AnyFunction>(func: Func) {\r\n  // we reference arguments instead of spreading them for performance reasons\r\n\r\n  const node: Node<Record<string, unknown>> = createNode(\r\n    [] as unknown as Record<string, unknown>\r\n  )\r\n\r\n  let lastArgs: IArguments | null = null\r\n\r\n  const shallowEqual = createCacheKeyComparator(referenceEqualityCheck)\r\n\r\n  const cache = createCache(() => {\r\n    const res = func.apply(null, node.proxy as unknown as any[])\r\n    return res\r\n  })\r\n\r\n  function memoized() {\r\n    if (!shallowEqual(lastArgs, arguments)) {\r\n      updateNode(node, arguments as unknown as Record<string, unknown>)\r\n      lastArgs = arguments\r\n    }\r\n    return cache.value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    return cache.clear()\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n", "// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n", "import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n", "import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n", "// src/index.ts\nfunction createThunkMiddleware(extraArgument) {\n  const middleware = ({ dispatch, getState }) => (next) => (action) => {\n    if (typeof action === \"function\") {\n      return action(dispatch, getState, extraArgument);\n    }\n    return next(action);\n  };\n  return middleware;\n}\nvar thunk = createThunkMiddleware();\nvar withExtraArgument = createThunkMiddleware;\nexport {\n  thunk,\n  withExtraArgument\n};\n", "// This must remain here so that the `mangleErrors.cjs` build script\n// does not have to import this into each source file it rewrites.\nimport { formatProdErrorMessage } from './formatProdErrorMessage';\nexport * from 'redux';\nexport { produce as createNextState, current, freeze, original, isDraft } from 'immer';\nexport type { Draft } from 'immer';\nexport { createSelector, createSelectorCreator, lruMemoize, weakMapMemoize } from 'reselect';\nexport type { Selector, OutputSelector } from 'reselect';\nexport { createDraftSafeSelector, createDraftSafeSelectorCreator } from './createDraftSafeSelector';\nexport type { ThunkAction, ThunkDispatch, ThunkMiddleware } from 'redux-thunk';\nexport {\n// js\nconfigureStore } from './configureStore';\nexport type {\n// types\nConfigureStoreOptions, EnhancedStore } from './configureStore';\nexport type { DevToolsEnhancerOptions } from './devtoolsExtension';\nexport {\n// js\ncreateAction, isActionCreator, isFSA as isFluxStandardAction } from './createAction';\nexport type {\n// types\nPayloadAction, PayloadActionCreator, ActionCreatorWithNonInferrablePayload, ActionCreatorWithOptionalPayload, ActionCreatorWithPayload, ActionCreatorWithoutPayload, ActionCreatorWithPreparedPayload, PrepareAction } from './createAction';\nexport {\n// js\ncreateReducer } from './createReducer';\nexport type {\n// types\nActions, CaseReducer, CaseReducers } from './createReducer';\nexport {\n// js\ncreateSlice, buildCreateSlice, asyncThunkCreator, ReducerType } from './createSlice';\nexport type {\n// types\nCreateSliceOptions, Slice, CaseReducerActions, SliceCaseReducers, ValidateSliceCaseReducers, CaseReducerWithPrepare, ReducerCreators, SliceSelectors } from './createSlice';\nexport type { ActionCreatorInvariantMiddlewareOptions } from './actionCreatorInvariantMiddleware';\nexport { createActionCreatorInvariantMiddleware } from './actionCreatorInvariantMiddleware';\nexport {\n// js\ncreateImmutableStateInvariantMiddleware, isImmutableDefault } from './immutableStateInvariantMiddleware';\nexport type {\n// types\nImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware';\nexport {\n// js\ncreateSerializableStateInvariantMiddleware, findNonSerializableValue, isPlain } from './serializableStateInvariantMiddleware';\nexport type {\n// types\nSerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware';\nexport type {\n// types\nActionReducerMapBuilder } from './mapBuilders';\nexport { Tuple } from './utils';\nexport { createEntityAdapter } from './entities/create_adapter';\nexport type { EntityState, EntityAdapter, EntitySelectors, EntityStateAdapter, EntityId, Update, IdSelector, Comparer } from './entities/models';\nexport { createAsyncThunk, unwrapResult, miniSerializeError } from './createAsyncThunk';\nexport type { AsyncThunk, AsyncThunkOptions, AsyncThunkAction, AsyncThunkPayloadCreatorReturnValue, AsyncThunkPayloadCreator, GetState, GetThunkAPI, SerializedError } from './createAsyncThunk';\nexport {\n// js\nisAllOf, isAnyOf, isPending, isRejected, isFulfilled, isAsyncThunkAction, isRejectedWithValue } from './matchers';\nexport type {\n// types\nActionMatchingAllOf, ActionMatchingAnyOf } from './matchers';\nexport { nanoid } from './nanoid';\nexport type { ListenerEffect, ListenerMiddleware, ListenerEffectAPI, ListenerMiddlewareInstance, CreateListenerMiddlewareOptions, ListenerErrorHandler, TypedStartListening, TypedAddListener, TypedStopListening, TypedRemoveListener, UnsubscribeListener, UnsubscribeListenerOptions, ForkedTaskExecutor, ForkedTask, ForkedTaskAPI, AsyncTaskExecutor, SyncTaskExecutor, TaskCancelled, TaskRejected, TaskResolved, TaskResult } from './listenerMiddleware/index';\nexport type { AnyListenerPredicate } from './listenerMiddleware/types';\nexport { createListenerMiddleware, addListener, removeListener, clearAllListeners, TaskAbortError } from './listenerMiddleware/index';\nexport type { AddMiddleware, DynamicDispatch, DynamicMiddlewareInstance, GetDispatchType as GetDispatch, MiddlewareApiConfig } from './dynamicMiddleware/types';\nexport { createDynamicMiddleware } from './dynamicMiddleware/index';\nexport { SHOULD_AUTOBATCH, prepareAutoBatched, autoBatchEnhancer } from './autoBatchEnhancer';\nexport type { AutoBatchOptions } from './autoBatchEnhancer';\nexport { combineSlices } from './combineSlices';\nexport type { CombinedSliceReducer, WithSlice } from './combineSlices';\nexport type { ExtractDispatchExtensions as TSHelpersExtractDispatchExtensions, SafePromise } from './tsHelpers';\nexport { formatProdErrorMessage } from './formatProdErrorMessage';", "import { current, isDraft } from 'immer';\nimport { createSelectorCreator, weakMapMemoize } from 'reselect';\nexport const createDraftSafeSelectorCreator: typeof createSelectorCreator = (...args: unknown[]) => {\n  const createSelector = (createSelectorCreator as any)(...args);\n  const createDraftSafeSelector = Object.assign((...args: unknown[]) => {\n    const selector = createSelector(...args);\n    const wrappedSelector = (value: unknown, ...rest: unknown[]) => selector(isDraft(value) ? current(value) : value, ...rest);\n    Object.assign(wrappedSelector, selector);\n    return (wrappedSelector as any);\n  }, {\n    withTypes: () => createDraftSafeSelector\n  });\n  return createDraftSafeSelector;\n};\n\n/**\n * \"Draft-Safe\" version of `reselect`'s `createSelector`:\n * If an `immer`-drafted object is passed into the resulting selector's first argument,\n * the selector will act on the current draft value, instead of returning a cached value\n * that might be possibly outdated if the draft has been modified since.\n * @public\n */\nexport const createDraftSafeSelector = /* @__PURE__ */\ncreateDraftSafeSelectorCreator(weakMapMemoize);", "import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3, formatProdErrorMessage as _formatProdErrorMessage4, formatProdErrorMessage as _formatProdErrorMessage5, formatProdErrorMessage as _formatProdErrorMessage6, formatProdErrorMessage as _formatProdErrorMessage7 } from \"@reduxjs/toolkit\";\nimport type { Reducer, ReducersMapObject, Middleware, Action, StoreEnhancer, Store, UnknownAction } from 'redux';\nimport { applyMiddleware, createStore, compose, combineReducers, isPlainObject } from 'redux';\nimport type { DevToolsEnhancerOptions as DevToolsOptions } from './devtoolsExtension';\nimport { composeWithDevTools } from './devtoolsExtension';\nimport type { ThunkMiddlewareFor, GetDefaultMiddleware } from './getDefaultMiddleware';\nimport { buildGetDefaultMiddleware } from './getDefaultMiddleware';\nimport type { ExtractDispatchExtensions, ExtractStoreExtensions, ExtractStateExtensions, UnknownIfNonSpecific } from './tsHelpers';\nimport type { Tuple } from './utils';\nimport type { GetDefaultEnhancers } from './getDefaultEnhancers';\nimport { buildGetDefaultEnhancers } from './getDefaultEnhancers';\n\n/**\n * Options for `configureStore()`.\n *\n * @public\n */\nexport interface ConfigureStoreOptions<S = any, A extends Action = UnknownAction, M extends Tuple<Middlewares<S>> = Tuple<Middlewares<S>>, E extends Tuple<Enhancers> = Tuple<Enhancers>, P = S> {\n  /**\n   * A single reducer function that will be used as the root reducer, or an\n   * object of slice reducers that will be passed to `combineReducers()`.\n   */\n  reducer: Reducer<S, A, P> | ReducersMapObject<S, A, P>;\n\n  /**\n   * An array of Redux middleware to install, or a callback receiving `getDefaultMiddleware` and returning a Tuple of middleware.\n   * If not supplied, defaults to the set of middleware returned by `getDefaultMiddleware()`.\n   *\n   * @example `middleware: (gDM) => gDM().concat(logger, apiMiddleware, yourCustomMiddleware)`\n   * @see https://redux-toolkit.js.org/api/getDefaultMiddleware#intended-usage\n   */\n  middleware?: (getDefaultMiddleware: GetDefaultMiddleware<S>) => M;\n\n  /**\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\n   *\n   * Additional configuration can be done by passing Redux DevTools options\n   */\n  devTools?: boolean | DevToolsOptions;\n\n  /**\n   * The initial state, same as Redux's createStore.\n   * You may optionally specify it to hydrate the state\n   * from the server in universal apps, or to restore a previously serialized\n   * user session. If you use `combineReducers()` to produce the root reducer\n   * function (either directly or indirectly by passing an object as `reducer`),\n   * this must be an object with the same shape as the reducer map keys.\n   */\n  // we infer here, and instead complain if the reducer doesn't match\n  preloadedState?: P;\n\n  /**\n   * The store enhancers to apply. See Redux's `createStore()`.\n   * All enhancers will be included before the DevTools Extension enhancer.\n   * If you need to customize the order of enhancers, supply a callback\n   * function that will receive a `getDefaultEnhancers` function that returns a Tuple,\n   * and should return a Tuple of enhancers (such as `getDefaultEnhancers().concat(offline)`).\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\n   */\n  enhancers?: (getDefaultEnhancers: GetDefaultEnhancers<M>) => E;\n}\nexport type Middlewares<S> = ReadonlyArray<Middleware<{}, S>>;\ntype Enhancers = ReadonlyArray<StoreEnhancer>;\n\n/**\n * A Redux store returned by `configureStore()`. Supports dispatching\n * side-effectful _thunks_ in addition to plain actions.\n *\n * @public\n */\nexport type EnhancedStore<S = any, A extends Action = UnknownAction, E extends Enhancers = Enhancers> = ExtractStoreExtensions<E> & Store<S, A, UnknownIfNonSpecific<ExtractStateExtensions<E>>>;\n\n/**\n * A friendly abstraction over the standard Redux `createStore()` function.\n *\n * @param options The store configuration.\n * @returns A configured Redux store.\n *\n * @public\n */\nexport function configureStore<S = any, A extends Action = UnknownAction, M extends Tuple<Middlewares<S>> = Tuple<[ThunkMiddlewareFor<S>]>, E extends Tuple<Enhancers> = Tuple<[StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>, StoreEnhancer]>, P = S>(options: ConfigureStoreOptions<S, A, M, E, P>): EnhancedStore<S, A, E> {\n  const getDefaultMiddleware = buildGetDefaultMiddleware<S>();\n  const {\n    reducer = undefined,\n    middleware,\n    devTools = true,\n    preloadedState = undefined,\n    enhancers = undefined\n  } = options || {};\n  let rootReducer: Reducer<S, A, P>;\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = ((combineReducers(reducer) as unknown) as Reducer<S, A, P>);\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(1) : '`reducer` is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\n  }\n  if (process.env.NODE_ENV !== 'production' && middleware && typeof middleware !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(2) : '`middleware` field must be a callback');\n  }\n  let finalMiddleware: Tuple<Middlewares<S>>;\n  if (typeof middleware === 'function') {\n    finalMiddleware = middleware(getDefaultMiddleware);\n    if (process.env.NODE_ENV !== 'production' && !Array.isArray(finalMiddleware)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(3) : 'when using a middleware builder function, an array of middleware must be returned');\n    }\n  } else {\n    finalMiddleware = getDefaultMiddleware();\n  }\n  if (process.env.NODE_ENV !== 'production' && finalMiddleware.some((item: any) => typeof item !== 'function')) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(4) : 'each middleware provided to configureStore must be a function');\n  }\n  let finalCompose = compose;\n  if (devTools) {\n    finalCompose = composeWithDevTools({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: process.env.NODE_ENV !== 'production',\n      ...(typeof devTools === 'object' && devTools)\n    });\n  }\n  const middlewareEnhancer = applyMiddleware(...finalMiddleware);\n  const getDefaultEnhancers = buildGetDefaultEnhancers<M>(middlewareEnhancer);\n  if (process.env.NODE_ENV !== 'production' && enhancers && typeof enhancers !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(5) : '`enhancers` field must be a callback');\n  }\n  let storeEnhancers = typeof enhancers === 'function' ? enhancers(getDefaultEnhancers) : getDefaultEnhancers();\n  if (process.env.NODE_ENV !== 'production' && !Array.isArray(storeEnhancers)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(6) : '`enhancers` callback must return an array');\n  }\n  if (process.env.NODE_ENV !== 'production' && storeEnhancers.some((item: any) => typeof item !== 'function')) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(7) : 'each enhancer provided to configureStore must be a function');\n  }\n  if (process.env.NODE_ENV !== 'production' && finalMiddleware.length && !storeEnhancers.includes(middlewareEnhancer)) {\n    console.error('middlewares were provided, but middleware enhancer was not included in final enhancers - make sure to call `getDefaultEnhancers`');\n  }\n  const composedEnhancer: StoreEnhancer<any> = finalCompose(...storeEnhancers);\n  return createStore(rootReducer, (preloadedState as P), composedEnhancer);\n}", "import type { Action, ActionCreator, StoreEnhancer } from 'redux';\nimport { compose } from 'redux';\n\n/**\r\n * @public\r\n */\nexport interface DevToolsEnhancerOptions {\n  /**\r\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\r\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\r\n   */\n  name?: string;\n  /**\r\n   * action creators functions to be available in the Dispatcher.\r\n   */\n  actionCreators?: ActionCreator<any>[] | {\n    [key: string]: ActionCreator<any>;\n  };\n  /**\r\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\r\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\r\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\r\n   *\r\n   * @default 500 ms.\r\n   */\n  latency?: number;\n  /**\r\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\r\n   *\r\n   * @default 50\r\n   */\n  maxAge?: number;\n  /**\r\n   * Customizes how actions and state are serialized and deserialized. Can be a boolean or object. If given a boolean, the behavior is the same as if you\r\n   * were to pass an object and specify `options` as a boolean. Giving an object allows fine-grained customization using the `replacer` and `reviver`\r\n   * functions.\r\n   */\n  serialize?: boolean | {\n    /**\r\n     * - `undefined` - will use regular `JSON.stringify` to send data (it's the fast mode).\r\n     * - `false` - will handle also circular references.\r\n     * - `true` - will handle also date, regex, undefined, error objects, symbols, maps, sets and functions.\r\n     * - object, which contains `date`, `regex`, `undefined`, `error`, `symbol`, `map`, `set` and `function` keys.\r\n     *   For each of them you can indicate if to include (by setting as `true`).\r\n     *   For `function` key you can also specify a custom function which handles serialization.\r\n     *   See [`jsan`](https://github.com/kolodny/jsan) for more details.\r\n     */\n    options?: undefined | boolean | {\n      date?: true;\n      regex?: true;\n      undefined?: true;\n      error?: true;\n      symbol?: true;\n      map?: true;\n      set?: true;\n      function?: true | ((fn: (...args: any[]) => any) => string);\n    };\n    /**\r\n     * [JSON replacer function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter) used for both actions and states stringify.\r\n     * In addition, you can specify a data type by adding a [`__serializedType__`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/helpers/index.js#L4)\r\n     * key. So you can deserialize it back while importing or persisting data.\r\n     * Moreover, it will also [show a nice preview showing the provided custom type](https://cloud.githubusercontent.com/assets/7957859/21814330/a17d556a-d761-11e6-85ef-159dd12f36c5.png):\r\n     */\n    replacer?: (key: string, value: unknown) => any;\n    /**\r\n     * [JSON `reviver` function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter)\r\n     * used for parsing the imported actions and states. See [`remotedev-serialize`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/immutable/serialize.js#L8-L41)\r\n     * as an example on how to serialize special data types and get them back.\r\n     */\n    reviver?: (key: string, value: unknown) => any;\n    /**\r\n     * Automatically serialize/deserialize immutablejs via [remotedev-serialize](https://github.com/zalmoxisus/remotedev-serialize).\r\n     * Just pass the Immutable library. It will support all ImmutableJS structures. You can even export them into a file and get them back.\r\n     * The only exception is `Record` class, for which you should pass this in addition the references to your classes in `refs`.\r\n     */\n    immutable?: any;\n    /**\r\n     * ImmutableJS `Record` classes used to make possible restore its instances back when importing, persisting...\r\n     */\n    refs?: any;\n  };\n  /**\r\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\r\n   */\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A;\n  /**\r\n   * function which takes `state` object and index as arguments, and should return `state` object back.\r\n   */\n  stateSanitizer?: <S>(state: S, index: number) => S;\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\n  actionsDenylist?: string | string[];\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\n  actionsAllowlist?: string | string[];\n  /**\r\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\r\n   * Use it as a more advanced version of `actionsDenylist`/`actionsAllowlist` parameters.\r\n   */\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean;\n  /**\r\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\r\n   * Available only for Redux enhancer, for others use `autoPause`.\r\n   *\r\n   * @default true\r\n   */\n  shouldRecordChanges?: boolean;\n  /**\r\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\r\n   * If not specified, will commit when paused. Available only for Redux enhancer.\r\n   *\r\n   * @default \"@@PAUSED\"\"\r\n   */\n  pauseActionType?: string;\n  /**\r\n   * auto pauses when the extension’s window is not opened, and so has zero impact on your app when not in use.\r\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\r\n   *\r\n   * @default false\r\n   */\n  autoPause?: boolean;\n  /**\r\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\r\n   * Available only for Redux enhancer.\r\n   *\r\n   * @default false\r\n   */\n  shouldStartLocked?: boolean;\n  /**\r\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\r\n   *\r\n   * @default true\r\n   */\n  shouldHotReload?: boolean;\n  /**\r\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\r\n   *\r\n   * @default false\r\n   */\n  shouldCatchErrors?: boolean;\n  /**\r\n   * If you want to restrict the extension, specify the features you allow.\r\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\r\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\r\n   * Otherwise, you'll get/set the data right from the monitor part.\r\n   */\n  features?: {\n    /**\r\n     * start/pause recording of dispatched actions\r\n     */\n    pause?: boolean;\n    /**\r\n     * lock/unlock dispatching actions and side effects\r\n     */\n    lock?: boolean;\n    /**\r\n     * persist states on page reloading\r\n     */\n    persist?: boolean;\n    /**\r\n     * export history of actions in a file\r\n     */\n    export?: boolean | 'custom';\n    /**\r\n     * import history of actions from a file\r\n     */\n    import?: boolean | 'custom';\n    /**\r\n     * jump back and forth (time travelling)\r\n     */\n    jump?: boolean;\n    /**\r\n     * skip (cancel) actions\r\n     */\n    skip?: boolean;\n    /**\r\n     * drag and drop actions in the history list\r\n     */\n    reorder?: boolean;\n    /**\r\n     * dispatch custom actions or action creators\r\n     */\n    dispatch?: boolean;\n    /**\r\n     * generate tests for the selected actions\r\n     */\n    test?: boolean;\n  };\n  /**\r\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\r\n   * Defaults to false.\r\n   */\n  trace?: boolean | (<A extends Action>(action: A) => string);\n  /**\r\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\r\n   */\n  traceLimit?: number;\n}\ntype Compose = typeof compose;\ninterface ComposeWithDevTools {\n  (options: DevToolsEnhancerOptions): Compose;\n  <StoreExt extends {}>(...funcs: StoreEnhancer<StoreExt>[]): StoreEnhancer<StoreExt>;\n}\n\n/**\r\n * @public\r\n */\nexport const composeWithDevTools: ComposeWithDevTools = typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {\n  if (arguments.length === 0) return undefined;\n  if (typeof arguments[0] === 'object') return compose;\n  return compose.apply(null, ((arguments as any) as Function[]));\n};\n\n/**\r\n * @public\r\n */\nexport const devToolsEnhancer: {\n  (options: DevToolsEnhancerOptions): StoreEnhancer<any>;\n} = typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__ ? (window as any).__REDUX_DEVTOOLS_EXTENSION__ : function () {\n  return function (noop) {\n    return noop;\n  };\n};", "import type { Middleware, UnknownAction } from 'redux';\nimport type { ThunkMiddleware } from 'redux-thunk';\nimport { thunk as thunkMiddleware, withExtraArgument } from 'redux-thunk';\nimport type { ActionCreatorInvariantMiddlewareOptions } from './actionCreatorInvariantMiddleware';\nimport { createActionCreatorInvariantMiddleware } from './actionCreatorInvariantMiddleware';\nimport type { ImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware';\n/* PROD_START_REMOVE_UMD */\nimport { createImmutableStateInvariantMiddleware } from './immutableStateInvariantMiddleware';\n/* PROD_STOP_REMOVE_UMD */\n\nimport type { SerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware';\nimport { createSerializableStateInvariantMiddleware } from './serializableStateInvariantMiddleware';\nimport type { ExcludeFromTuple } from './tsHelpers';\nimport { Tuple } from './utils';\nfunction isBoolean(x: any): x is boolean {\n  return typeof x === 'boolean';\n}\ninterface ThunkOptions<E = any> {\n  extraArgument: E;\n}\ninterface GetDefaultMiddlewareOptions {\n  thunk?: boolean | ThunkOptions;\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions;\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions;\n  actionCreatorCheck?: boolean | ActionCreatorInvariantMiddlewareOptions;\n}\nexport type ThunkMiddlewareFor<S, O extends GetDefaultMiddlewareOptions = {}> = O extends {\n  thunk: false;\n} ? never : O extends {\n  thunk: {\n    extraArgument: infer E;\n  };\n} ? ThunkMiddleware<S, UnknownAction, E> : ThunkMiddleware<S, UnknownAction>;\nexport type GetDefaultMiddleware<S = any> = <O extends GetDefaultMiddlewareOptions = {\n  thunk: true;\n  immutableCheck: true;\n  serializableCheck: true;\n  actionCreatorCheck: true;\n}>(options?: O) => Tuple<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>>;\nexport const buildGetDefaultMiddleware = <S = any,>(): GetDefaultMiddleware<S> => function getDefaultMiddleware(options) {\n  const {\n    thunk = true,\n    immutableCheck = true,\n    serializableCheck = true,\n    actionCreatorCheck = true\n  } = options ?? {};\n  let middlewareArray = new Tuple<Middleware[]>();\n  if (thunk) {\n    if (isBoolean(thunk)) {\n      middlewareArray.push(thunkMiddleware);\n    } else {\n      middlewareArray.push(withExtraArgument(thunk.extraArgument));\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (immutableCheck) {\n      /* PROD_START_REMOVE_UMD */\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {};\n      if (!isBoolean(immutableCheck)) {\n        immutableOptions = immutableCheck;\n      }\n      middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));\n      /* PROD_STOP_REMOVE_UMD */\n    }\n    if (serializableCheck) {\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {};\n      if (!isBoolean(serializableCheck)) {\n        serializableOptions = serializableCheck;\n      }\n      middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));\n    }\n    if (actionCreatorCheck) {\n      let actionCreatorOptions: ActionCreatorInvariantMiddlewareOptions = {};\n      if (!isBoolean(actionCreatorCheck)) {\n        actionCreatorOptions = actionCreatorCheck;\n      }\n      middlewareArray.unshift(createActionCreatorInvariantMiddleware(actionCreatorOptions));\n    }\n  }\n  return (middlewareArray as any);\n};", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport { isAction } from 'redux';\nimport type { IsUnknownOrNonInferrable, IfMaybeUndefined, IfVoid, IsAny } from './tsHelpers';\nimport { hasMatchFunction } from './tsHelpers';\n\n/**\n * An action with a string type and an associated payload. This is the\n * type of action returned by `createAction()` action creators.\n *\n * @template P The type of the action's payload.\n * @template T the type used for the action type.\n * @template M The type of the action's meta (optional)\n * @template E The type of the action's error (optional)\n *\n * @public\n */\nexport type PayloadAction<P = void, T extends string = string, M = never, E = never> = {\n  payload: P;\n  type: T;\n} & ([M] extends [never] ? {} : {\n  meta: M;\n}) & ([E] extends [never] ? {} : {\n  error: E;\n});\n\n/**\n * A \"prepare\" method to be used as the second parameter of `createAction`.\n * Takes any number of arguments and returns a Flux Standard Action without\n * type (will be added later) that *must* contain a payload (might be undefined).\n *\n * @public\n */\nexport type PrepareAction<P> = ((...args: any[]) => {\n  payload: P;\n}) | ((...args: any[]) => {\n  payload: P;\n  meta: any;\n}) | ((...args: any[]) => {\n  payload: P;\n  error: any;\n}) | ((...args: any[]) => {\n  payload: P;\n  meta: any;\n  error: any;\n});\n\n/**\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\n *\n * @internal\n */\nexport type _ActionCreatorWithPreparedPayload<PA extends PrepareAction<any> | void, T extends string = string> = PA extends PrepareAction<infer P> ? ActionCreatorWithPreparedPayload<Parameters<PA>, P, T, ReturnType<PA> extends {\n  error: infer E;\n} ? E : never, ReturnType<PA> extends {\n  meta: infer M;\n} ? M : never> : void;\n\n/**\n * Basic type for all action creators.\n *\n * @inheritdoc {redux#ActionCreator}\n */\nexport type BaseActionCreator<P, T extends string, M = never, E = never> = {\n  type: T;\n  match: (action: unknown) => action is PayloadAction<P, T, M, E>;\n};\n\n/**\n * An action creator that takes multiple arguments that are passed\n * to a `PrepareAction` method to create the final Action.\n * @typeParam Args arguments for the action creator function\n * @typeParam P `payload` type\n * @typeParam T `type` name\n * @typeParam E optional `error` type\n * @typeParam M optional `meta` type\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithPreparedPayload<Args extends unknown[], P, T extends string = string, E = never, M = never> extends BaseActionCreator<P, T, M, E> {\n  /**\n   * Calling this {@link redux#ActionCreator} with `Args` will return\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\n   */\n  (...args: Args): PayloadAction<P, T, M, E>;\n}\n\n/**\n * An action creator of type `T` that takes an optional payload of type `P`.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string> extends BaseActionCreator<P, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\n   */\n  (payload?: P): PayloadAction<P, T>;\n}\n\n/**\n * An action creator of type `T` that takes no payload.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithoutPayload<T extends string = string> extends BaseActionCreator<undefined, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} will\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\n   */\n  (noArgument: void): PayloadAction<undefined, T>;\n}\n\n/**\n * An action creator of type `T` that requires a payload of type P.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithPayload<P, T extends string = string> extends BaseActionCreator<P, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\n   */\n  (payload: P): PayloadAction<P, T>;\n}\n\n/**\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\n *\n * @inheritdoc {redux#ActionCreator}\n *\n * @public\n */\nexport interface ActionCreatorWithNonInferrablePayload<T extends string = string> extends BaseActionCreator<unknown, T> {\n  /**\n   * Calling this {@link redux#ActionCreator} with an argument will\n   * return a {@link PayloadAction} of type `T` with a payload\n   * of exactly the type of the argument.\n   */\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>;\n}\n\n/**\n * An action creator that produces actions with a `payload` attribute.\n *\n * @typeParam P the `payload` type\n * @typeParam T the `type` of the resulting action\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\n *\n * @public\n */\nexport type PayloadActionCreator<P = void, T extends string = string, PA extends PrepareAction<P> | void = void> = IfPrepareActionMethodProvided<PA, _ActionCreatorWithPreparedPayload<PA, T>,\n// else\nIsAny<P, ActionCreatorWithPayload<any, T>, IsUnknownOrNonInferrable<P, ActionCreatorWithNonInferrablePayload<T>,\n// else\nIfVoid<P, ActionCreatorWithoutPayload<T>,\n// else\nIfMaybeUndefined<P, ActionCreatorWithOptionalPayload<P, T>,\n// else\nActionCreatorWithPayload<P, T>>>>>>;\n\n/**\n * A utility function to create an action creator for the given action type\n * string. The action creator accepts a single argument, which will be included\n * in the action object as a field called payload. The action creator function\n * will also have its toString() overridden so that it returns the action type.\n *\n * @param type The action type to use for created actions.\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\n *\n * @public\n */\nexport function createAction<P = void, T extends string = string>(type: T): PayloadActionCreator<P, T>;\n\n/**\n * A utility function to create an action creator for the given action type\n * string. The action creator accepts a single argument, which will be included\n * in the action object as a field called payload. The action creator function\n * will also have its toString() overridden so that it returns the action type.\n *\n * @param type The action type to use for created actions.\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\n *\n * @public\n */\nexport function createAction<PA extends PrepareAction<any>, T extends string = string>(type: T, prepareAction: PA): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>;\nexport function createAction(type: string, prepareAction?: Function): any {\n  function actionCreator(...args: any[]) {\n    if (prepareAction) {\n      let prepared = prepareAction(...args);\n      if (!prepared) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(0) : 'prepareAction did not return an object');\n      }\n      return {\n        type,\n        payload: prepared.payload,\n        ...('meta' in prepared && {\n          meta: prepared.meta\n        }),\n        ...('error' in prepared && {\n          error: prepared.error\n        })\n      };\n    }\n    return {\n      type,\n      payload: args[0]\n    };\n  }\n  actionCreator.toString = () => `${type}`;\n  actionCreator.type = type;\n  actionCreator.match = (action: unknown): action is PayloadAction => isAction(action) && action.type === type;\n  return actionCreator;\n}\n\n/**\n * Returns true if value is an RTK-like action creator, with a static type property and match method.\n */\nexport function isActionCreator(action: unknown): action is BaseActionCreator<unknown, string> & Function {\n  return typeof action === 'function' && 'type' in action &&\n  // hasMatchFunction only wants Matchers but I don't see the point in rewriting it\n  hasMatchFunction((action as any));\n}\n\n/**\n * Returns true if value is an action with a string type and valid Flux Standard Action keys.\n */\nexport function isFSA(action: unknown): action is {\n  type: string;\n  payload?: unknown;\n  error?: unknown;\n  meta?: unknown;\n} {\n  return isAction(action) && Object.keys(action).every(isValidKey);\n}\nfunction isValidKey(key: string) {\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1;\n}\n\n// helper types for more readable typings\n\ntype IfPrepareActionMethodProvided<PA extends PrepareAction<any> | void, True, False> = PA extends (...args: any[]) => any ? True : False;", "import type { Middleware, StoreEnhancer } from 'redux';\nimport type { Tuple } from './utils';\nexport function safeAssign<T extends object>(target: T, ...args: Array<Partial<NoInfer<T>>>) {\n  Object.assign(target, ...args);\n}\n\n/**\n * return True if T is `any`, otherwise return False\n * taken from https://github.com/joonhocho/tsdef\n *\n * @internal\n */\nexport type IsAny<T, True, False = never> =\n// test if we are going the left AND right path in the condition\ntrue | false extends (T extends never ? true : false) ? True : False;\nexport type CastAny<T, CastTo> = IsAny<T, CastTo, T>;\n\n/**\n * return True if T is `unknown`, otherwise return False\n * taken from https://github.com/joonhocho/tsdef\n *\n * @internal\n */\nexport type IsUnknown<T, True, False = never> = unknown extends T ? IsAny<T, False, True> : False;\nexport type FallbackIfUnknown<T, Fallback> = IsUnknown<T, Fallback, T>;\n\n/**\n * @internal\n */\nexport type IfMaybeUndefined<P, True, False> = [undefined] extends [P] ? True : False;\n\n/**\n * @internal\n */\nexport type IfVoid<P, True, False> = [void] extends [P] ? True : False;\n\n/**\n * @internal\n */\nexport type IsEmptyObj<T, True, False = never> = T extends any ? keyof T extends never ? IsUnknown<T, False, IfMaybeUndefined<T, False, IfVoid<T, False, True>>> : False : never;\n\n/**\n * returns True if TS version is above 3.5, False if below.\n * uses feature detection to detect TS version >= 3.5\n * * versions below 3.5 will return `{}` for unresolvable interference\n * * versions above will return `unknown`\n *\n * @internal\n */\nexport type AtLeastTS35<True, False> = [True, False][IsUnknown<ReturnType<<T>() => T>, 0, 1>];\n\n/**\n * @internal\n */\nexport type IsUnknownOrNonInferrable<T, True, False> = AtLeastTS35<IsUnknown<T, True, False>, IsEmptyObj<T, True, IsUnknown<T, True, False>>>;\n\n/**\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\n */\nexport type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never;\n\n// Appears to have a convenient side effect of ignoring `never` even if that's not what you specified\nexport type ExcludeFromTuple<T, E, Acc extends unknown[] = []> = T extends [infer Head, ...infer Tail] ? ExcludeFromTuple<Tail, E, [...Acc, ...([Head] extends [E] ? [] : [Head])]> : Acc;\ntype ExtractDispatchFromMiddlewareTuple<MiddlewareTuple extends readonly any[], Acc extends {}> = MiddlewareTuple extends [infer Head, ...infer Tail] ? ExtractDispatchFromMiddlewareTuple<Tail, Acc & (Head extends Middleware<infer D> ? IsAny<D, {}, D> : {})> : Acc;\nexport type ExtractDispatchExtensions<M> = M extends Tuple<infer MiddlewareTuple> ? ExtractDispatchFromMiddlewareTuple<MiddlewareTuple, {}> : M extends ReadonlyArray<Middleware> ? ExtractDispatchFromMiddlewareTuple<[...M], {}> : never;\ntype ExtractStoreExtensionsFromEnhancerTuple<EnhancerTuple extends readonly any[], Acc extends {}> = EnhancerTuple extends [infer Head, ...infer Tail] ? ExtractStoreExtensionsFromEnhancerTuple<Tail, Acc & (Head extends StoreEnhancer<infer Ext> ? IsAny<Ext, {}, Ext> : {})> : Acc;\nexport type ExtractStoreExtensions<E> = E extends Tuple<infer EnhancerTuple> ? ExtractStoreExtensionsFromEnhancerTuple<EnhancerTuple, {}> : E extends ReadonlyArray<StoreEnhancer> ? UnionToIntersection<E[number] extends StoreEnhancer<infer Ext> ? Ext extends {} ? IsAny<Ext, {}, Ext> : {} : {}> : never;\ntype ExtractStateExtensionsFromEnhancerTuple<EnhancerTuple extends readonly any[], Acc extends {}> = EnhancerTuple extends [infer Head, ...infer Tail] ? ExtractStateExtensionsFromEnhancerTuple<Tail, Acc & (Head extends StoreEnhancer<any, infer StateExt> ? IsAny<StateExt, {}, StateExt> : {})> : Acc;\nexport type ExtractStateExtensions<E> = E extends Tuple<infer EnhancerTuple> ? ExtractStateExtensionsFromEnhancerTuple<EnhancerTuple, {}> : E extends ReadonlyArray<StoreEnhancer> ? UnionToIntersection<E[number] extends StoreEnhancer<any, infer StateExt> ? StateExt extends {} ? IsAny<StateExt, {}, StateExt> : {} : {}> : never;\n\n/**\n * Helper type. Passes T out again, but boxes it in a way that it cannot\n * \"widen\" the type by accident if it is a generic that should be inferred\n * from elsewhere.\n *\n * @internal\n */\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\nexport type NonUndefined<T> = T extends undefined ? never : T;\nexport type WithRequiredProp<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;\nexport type WithOptionalProp<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\nexport interface TypeGuard<T> {\n  (value: any): value is T;\n}\nexport interface HasMatchFunction<T> {\n  match: TypeGuard<T>;\n}\nexport const hasMatchFunction = <T,>(v: Matcher<T>): v is HasMatchFunction<T> => {\n  return v && typeof (v as HasMatchFunction<T>).match === 'function';\n};\n\n/** @public */\nexport type Matcher<T> = HasMatchFunction<T> | TypeGuard<T>;\n\n/** @public */\nexport type ActionFromMatcher<M extends Matcher<any>> = M extends Matcher<infer T> ? T : never;\nexport type Id<T> = { [K in keyof T]: T[K] } & {};\nexport type Tail<T extends any[]> = T extends [any, ...infer Tail] ? Tail : never;\nexport type UnknownIfNonSpecific<T> = {} extends T ? unknown : T;\n\n/**\n * A Promise that will never reject.\n * @see https://github.com/reduxjs/redux-toolkit/issues/4101\n */\nexport type SafePromise<T> = Promise<T> & {\n  __linterBrands: 'SafePromise';\n};\n\n/**\n * Properly wraps a Promise as a {@link SafePromise} with .catch(fallback).\n */\nexport function asSafePromise<Resolved, Rejected>(promise: Promise<Resolved>, fallback: (error: unknown) => Rejected) {\n  return (promise.catch(fallback) as SafePromise<Resolved | Rejected>);\n}", "import type { Middleware } from 'redux';\nimport { isActionCreator as isRTKAction } from './createAction';\nexport interface ActionCreatorInvariantMiddlewareOptions {\n  /**\r\n   * The function to identify whether a value is an action creator.\r\n   * The default checks for a function with a static type property and match method.\r\n   */\n  isActionCreator?: (action: unknown) => action is Function & {\n    type?: unknown;\n  };\n}\nexport function getMessage(type?: unknown) {\n  const splitType = type ? `${type}`.split('/') : [];\n  const actionName = splitType[splitType.length - 1] || 'actionCreator';\n  return `Detected an action creator with type \"${type || 'unknown'}\" being dispatched. \nMake sure you're calling the action creator before dispatching, i.e. \\`dispatch(${actionName}())\\` instead of \\`dispatch(${actionName})\\`. This is necessary even if the action has no payload.`;\n}\nexport function createActionCreatorInvariantMiddleware(options: ActionCreatorInvariantMiddlewareOptions = {}): Middleware {\n  if (process.env.NODE_ENV === 'production') {\n    return () => next => action => next(action);\n  }\n  const {\n    isActionCreator = isRTKAction\n  } = options;\n  return () => next => action => {\n    if (isActionCreator(action)) {\n      console.warn(getMessage(action.type));\n    }\n    return next(action);\n  };\n}", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport { produce as createNextState, isDraftable } from 'immer';\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\n  let elapsed = 0;\n  return {\n    measureTime<T>(fn: () => T): T {\n      const started = Date.now();\n      try {\n        return fn();\n      } finally {\n        const finished = Date.now();\n        elapsed += finished - started;\n      }\n    },\n    warnIfExceeded() {\n      if (elapsed > maxDelay) {\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.`);\n      }\n    }\n  };\n}\nexport function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport function find<T>(iterable: Iterable<T>, comparator: (item: T) => boolean): T | undefined {\n  for (const entry of iterable) {\n    if (comparator(entry)) {\n      return entry;\n    }\n  }\n  return undefined;\n}\nexport class Tuple<Items extends ReadonlyArray<unknown> = []> extends Array<Items[number]> {\n  constructor(length: number);\n  constructor(...items: Items);\n  constructor(...items: any[]) {\n    super(...items);\n    Object.setPrototypeOf(this, Tuple.prototype);\n  }\n  static get [Symbol.species]() {\n    return (Tuple as any);\n  }\n  concat<AdditionalItems extends ReadonlyArray<unknown>>(items: Tuple<AdditionalItems>): Tuple<[...Items, ...AdditionalItems]>;\n  concat<AdditionalItems extends ReadonlyArray<unknown>>(items: AdditionalItems): Tuple<[...Items, ...AdditionalItems]>;\n  concat<AdditionalItems extends ReadonlyArray<unknown>>(...items: AdditionalItems): Tuple<[...Items, ...AdditionalItems]>;\n  concat(...arr: any[]) {\n    return super.concat.apply(this, arr);\n  }\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(items: Tuple<AdditionalItems>): Tuple<[...AdditionalItems, ...Items]>;\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(items: AdditionalItems): Tuple<[...AdditionalItems, ...Items]>;\n  prepend<AdditionalItems extends ReadonlyArray<unknown>>(...items: AdditionalItems): Tuple<[...AdditionalItems, ...Items]>;\n  prepend(...arr: any[]) {\n    if (arr.length === 1 && Array.isArray(arr[0])) {\n      return new Tuple(...arr[0].concat(this));\n    }\n    return new Tuple(...arr.concat(this));\n  }\n}\nexport function freezeDraftable<T>(val: T) {\n  return isDraftable(val) ? createNextState(val, () => {}) : val;\n}\ninterface WeakMapEmplaceHandler<K extends object, V> {\n  /**\n   * Will be called to get value, if no value is currently in map.\n   */\n  insert?(key: K, map: WeakMap<K, V>): V;\n  /**\n   * Will be called to update a value, if one exists already.\n   */\n  update?(previous: V, key: K, map: WeakMap<K, V>): V;\n}\ninterface MapEmplaceHandler<K, V> {\n  /**\n   * Will be called to get value, if no value is currently in map.\n   */\n  insert?(key: K, map: Map<K, V>): V;\n  /**\n   * Will be called to update a value, if one exists already.\n   */\n  update?(previous: V, key: K, map: Map<K, V>): V;\n}\nexport function emplace<K, V>(map: Map<K, V>, key: K, handler: MapEmplaceHandler<K, V>): V;\nexport function emplace<K extends object, V>(map: WeakMap<K, V>, key: K, handler: WeakMapEmplaceHandler<K, V>): V;\n/**\n * Allow inserting a new value, or updating an existing one\n * @throws if called for a key with no current value and no `insert` handler is provided\n * @returns current value in map (after insertion/updating)\n * ```ts\n * // return current value if already in map, otherwise initialise to 0 and return that\n * const num = emplace(map, key, {\n *   insert: () => 0\n * })\n *\n * // increase current value by one if already in map, otherwise initialise to 0\n * const num = emplace(map, key, {\n *   update: (n) => n + 1,\n *   insert: () => 0,\n * })\n *\n * // only update if value's already in the map - and increase it by one\n * if (map.has(key)) {\n *   const num = emplace(map, key, {\n *     update: (n) => n + 1,\n *   })\n * }\n * ```\n *\n * @remarks\n * Based on https://github.com/tc39/proposal-upsert currently in Stage 2 - maybe in a few years we'll be able to replace this with direct method calls\n */\nexport function emplace<K extends object, V>(map: WeakMap<K, V>, key: K, handler: WeakMapEmplaceHandler<K, V>): V {\n  if (map.has(key)) {\n    let value = (map.get(key) as V);\n    if (handler.update) {\n      value = handler.update(value, key, map);\n      map.set(key, value);\n    }\n    return value;\n  }\n  if (!handler.insert) throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(10) : 'No insert provided for key not already in map');\n  const inserted = handler.insert(key, map);\n  map.set(key, inserted);\n  return inserted;\n}", "import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport type { Middleware } from 'redux';\nimport type { IgnorePaths } from './serializableStateInvariantMiddleware';\nimport { getTimeMeasureUtils } from './utils';\ntype EntryProcessor = (key: string, value: any) => any;\n\n/**\n * The default `isImmutable` function.\n *\n * @public\n */\nexport function isImmutableDefault(value: unknown): boolean {\n  return typeof value !== 'object' || value == null || Object.isFrozen(value);\n}\nexport function trackForMutations(isImmutable: IsImmutableFunc, ignorePaths: IgnorePaths | undefined, obj: any) {\n  const trackedProperties = trackProperties(isImmutable, ignorePaths, obj);\n  return {\n    detectMutations() {\n      return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);\n    }\n  };\n}\ninterface TrackedProperty {\n  value: any;\n  children: Record<string, any>;\n}\nfunction trackProperties(isImmutable: IsImmutableFunc, ignorePaths: IgnorePaths = [], obj: Record<string, any>, path: string = '', checkedObjects: Set<Record<string, any>> = new Set()) {\n  const tracked: Partial<TrackedProperty> = {\n    value: obj\n  };\n  if (!isImmutable(obj) && !checkedObjects.has(obj)) {\n    checkedObjects.add(obj);\n    tracked.children = {};\n    for (const key in obj) {\n      const childPath = path ? path + '.' + key : key;\n      if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\n        continue;\n      }\n      tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);\n    }\n  }\n  return (tracked as TrackedProperty);\n}\nfunction detectMutations(isImmutable: IsImmutableFunc, ignoredPaths: IgnorePaths = [], trackedProperty: TrackedProperty, obj: any, sameParentRef: boolean = false, path: string = ''): {\n  wasMutated: boolean;\n  path?: string;\n} {\n  const prevObj = trackedProperty ? trackedProperty.value : undefined;\n  const sameRef = prevObj === obj;\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\n    return {\n      wasMutated: true,\n      path\n    };\n  }\n  if (isImmutable(prevObj) || isImmutable(obj)) {\n    return {\n      wasMutated: false\n    };\n  }\n\n  // Gather all keys from prev (tracked) and after objs\n  const keysToDetect: Record<string, boolean> = {};\n  for (let key in trackedProperty.children) {\n    keysToDetect[key] = true;\n  }\n  for (let key in obj) {\n    keysToDetect[key] = true;\n  }\n  const hasIgnoredPaths = ignoredPaths.length > 0;\n  for (let key in keysToDetect) {\n    const nestedPath = path ? path + '.' + key : key;\n    if (hasIgnoredPaths) {\n      const hasMatches = ignoredPaths.some(ignored => {\n        if (ignored instanceof RegExp) {\n          return ignored.test(nestedPath);\n        }\n        return nestedPath === ignored;\n      });\n      if (hasMatches) {\n        continue;\n      }\n    }\n    const result = detectMutations(isImmutable, ignoredPaths, trackedProperty.children[key], obj[key], sameRef, nestedPath);\n    if (result.wasMutated) {\n      return result;\n    }\n  }\n  return {\n    wasMutated: false\n  };\n}\ntype IsImmutableFunc = (value: any) => boolean;\n\n/**\n * Options for `createImmutableStateInvariantMiddleware()`.\n *\n * @public\n */\nexport interface ImmutableStateInvariantMiddlewareOptions {\n  /**\n    Callback function to check if a value is considered to be immutable.\n    This function is applied recursively to every value contained in the state.\n    The default implementation will return true for primitive types\n    (like numbers, strings, booleans, null and undefined).\n   */\n  isImmutable?: IsImmutableFunc;\n  /**\n    An array of dot-separated path strings that match named nodes from\n    the root state to ignore when checking for immutability.\n    Defaults to undefined\n   */\n  ignoredPaths?: IgnorePaths;\n  /** Print a warning if checks take longer than N ms. Default: 32ms */\n  warnAfter?: number;\n}\n\n/**\n * Creates a middleware that checks whether any state was mutated in between\n * dispatches or during a dispatch. If any mutations are detected, an error is\n * thrown.\n *\n * @param options Middleware options.\n *\n * @public\n */\nexport function createImmutableStateInvariantMiddleware(options: ImmutableStateInvariantMiddlewareOptions = {}): Middleware {\n  if (process.env.NODE_ENV === 'production') {\n    return () => next => action => next(action);\n  } else {\n    function stringify(obj: any, serializer?: EntryProcessor, indent?: string | number, decycler?: EntryProcessor): string {\n      return JSON.stringify(obj, getSerialize(serializer, decycler), indent);\n    }\n    function getSerialize(serializer?: EntryProcessor, decycler?: EntryProcessor): EntryProcessor {\n      let stack: any[] = [],\n        keys: any[] = [];\n      if (!decycler) decycler = function (_: string, value: any) {\n        if (stack[0] === value) return '[Circular ~]';\n        return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n      };\n      return function (this: any, key: string, value: any) {\n        if (stack.length > 0) {\n          var thisPos = stack.indexOf(this);\n          ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n          ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n          if (~stack.indexOf(value)) value = decycler!.call(this, key, value);\n        } else stack.push(value);\n        return serializer == null ? value : serializer.call(this, key, value);\n      };\n    }\n    let {\n      isImmutable = isImmutableDefault,\n      ignoredPaths,\n      warnAfter = 32\n    } = options;\n    const track = trackForMutations.bind(null, isImmutable, ignoredPaths);\n    return ({\n      getState\n    }) => {\n      let state = getState();\n      let tracker = track(state);\n      let result;\n      return next => action => {\n        const measureUtils = getTimeMeasureUtils(warnAfter, 'ImmutableStateInvariantMiddleware');\n        measureUtils.measureTime(() => {\n          state = getState();\n          result = tracker.detectMutations();\n          // Track before potentially not meeting the invariant\n          tracker = track(state);\n          if (result.wasMutated) {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(19) : `A state mutation was detected between dispatches, in the path '${result.path || ''}'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`);\n          }\n        });\n        const dispatchedAction = next(action);\n        measureUtils.measureTime(() => {\n          state = getState();\n          result = tracker.detectMutations();\n          // Track before potentially not meeting the invariant\n          tracker = track(state);\n          if (result.wasMutated) {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(20) : `A state mutation was detected inside a dispatch, in the path: ${result.path || ''}. Take a look at the reducer(s) handling the action ${stringify(action)}. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`);\n          }\n        });\n        measureUtils.warnIfExceeded();\n        return dispatchedAction;\n      };\n    };\n  }\n}", "import type { Middleware } from 'redux';\nimport { isAction, isPlainObject } from 'redux';\nimport { getTimeMeasureUtils } from './utils';\n\n/**\n * Returns true if the passed value is \"plain\", i.e. a value that is either\n * directly JSON-serializable (boolean, number, string, array, plain object)\n * or `undefined`.\n *\n * @param val The value to check.\n *\n * @public\n */\nexport function isPlain(val: any) {\n  const type = typeof val;\n  return val == null || type === 'string' || type === 'boolean' || type === 'number' || Array.isArray(val) || isPlainObject(val);\n}\ninterface NonSerializableValue {\n  keyPath: string;\n  value: unknown;\n}\nexport type IgnorePaths = readonly (string | RegExp)[];\n\n/**\n * @public\n */\nexport function findNonSerializableValue(value: unknown, path: string = '', isSerializable: (value: unknown) => boolean = isPlain, getEntries?: (value: unknown) => [string, any][], ignoredPaths: IgnorePaths = [], cache?: WeakSet<object>): NonSerializableValue | false {\n  let foundNestedSerializable: NonSerializableValue | false;\n  if (!isSerializable(value)) {\n    return {\n      keyPath: path || '<root>',\n      value: value\n    };\n  }\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  if (cache?.has(value)) return false;\n  const entries = getEntries != null ? getEntries(value) : Object.entries(value);\n  const hasIgnoredPaths = ignoredPaths.length > 0;\n  for (const [key, nestedValue] of entries) {\n    const nestedPath = path ? path + '.' + key : key;\n    if (hasIgnoredPaths) {\n      const hasMatches = ignoredPaths.some(ignored => {\n        if (ignored instanceof RegExp) {\n          return ignored.test(nestedPath);\n        }\n        return nestedPath === ignored;\n      });\n      if (hasMatches) {\n        continue;\n      }\n    }\n    if (!isSerializable(nestedValue)) {\n      return {\n        keyPath: nestedPath,\n        value: nestedValue\n      };\n    }\n    if (typeof nestedValue === 'object') {\n      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths, cache);\n      if (foundNestedSerializable) {\n        return foundNestedSerializable;\n      }\n    }\n  }\n  if (cache && isNestedFrozen(value)) cache.add(value);\n  return false;\n}\nexport function isNestedFrozen(value: object) {\n  if (!Object.isFrozen(value)) return false;\n  for (const nestedValue of Object.values(value)) {\n    if (typeof nestedValue !== 'object' || nestedValue === null) continue;\n    if (!isNestedFrozen(nestedValue)) return false;\n  }\n  return true;\n}\n\n/**\n * Options for `createSerializableStateInvariantMiddleware()`.\n *\n * @public\n */\nexport interface SerializableStateInvariantMiddlewareOptions {\n  /**\n   * The function to check if a value is considered serializable. This\n   * function is applied recursively to every value contained in the\n   * state. Defaults to `isPlain()`.\n   */\n  isSerializable?: (value: any) => boolean;\n  /**\n   * The function that will be used to retrieve entries from each\n   * value.  If unspecified, `Object.entries` will be used. Defaults\n   * to `undefined`.\n   */\n  getEntries?: (value: any) => [string, any][];\n\n  /**\n   * An array of action types to ignore when checking for serializability.\n   * Defaults to []\n   */\n  ignoredActions?: string[];\n\n  /**\n   * An array of dot-separated path strings or regular expressions to ignore\n   * when checking for serializability, Defaults to\n   * ['meta.arg', 'meta.baseQueryMeta']\n   */\n  ignoredActionPaths?: (string | RegExp)[];\n\n  /**\n   * An array of dot-separated path strings or regular expressions to ignore\n   * when checking for serializability, Defaults to []\n   */\n  ignoredPaths?: (string | RegExp)[];\n  /**\n   * Execution time warning threshold. If the middleware takes longer\n   * than `warnAfter` ms, a warning will be displayed in the console.\n   * Defaults to 32ms.\n   */\n  warnAfter?: number;\n\n  /**\n   * Opt out of checking state. When set to `true`, other state-related params will be ignored.\n   */\n  ignoreState?: boolean;\n\n  /**\n   * Opt out of checking actions. When set to `true`, other action-related params will be ignored.\n   */\n  ignoreActions?: boolean;\n\n  /**\n   * Opt out of caching the results. The cache uses a WeakSet and speeds up repeated checking processes.\n   * The cache is automatically disabled if no browser support for WeakSet is present.\n   */\n  disableCache?: boolean;\n}\n\n/**\n * Creates a middleware that, after every state change, checks if the new\n * state is serializable. If a non-serializable value is found within the\n * state, an error is printed to the console.\n *\n * @param options Middleware options.\n *\n * @public\n */\nexport function createSerializableStateInvariantMiddleware(options: SerializableStateInvariantMiddlewareOptions = {}): Middleware {\n  if (process.env.NODE_ENV === 'production') {\n    return () => next => action => next(action);\n  } else {\n    const {\n      isSerializable = isPlain,\n      getEntries,\n      ignoredActions = [],\n      ignoredActionPaths = ['meta.arg', 'meta.baseQueryMeta'],\n      ignoredPaths = [],\n      warnAfter = 32,\n      ignoreState = false,\n      ignoreActions = false,\n      disableCache = false\n    } = options;\n    const cache: WeakSet<object> | undefined = !disableCache && WeakSet ? new WeakSet() : undefined;\n    return storeAPI => next => action => {\n      if (!isAction(action)) {\n        return next(action);\n      }\n      const result = next(action);\n      const measureUtils = getTimeMeasureUtils(warnAfter, 'SerializableStateInvariantMiddleware');\n      if (!ignoreActions && !(ignoredActions.length && ignoredActions.indexOf((action.type as any)) !== -1)) {\n        measureUtils.measureTime(() => {\n          const foundActionNonSerializableValue = findNonSerializableValue(action, '', isSerializable, getEntries, ignoredActionPaths, cache);\n          if (foundActionNonSerializableValue) {\n            const {\n              keyPath,\n              value\n            } = foundActionNonSerializableValue;\n            console.error(`A non-serializable value was detected in an action, in the path: \\`${keyPath}\\`. Value:`, value, '\\nTake a look at the logic that dispatched this action: ', action, '\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)', '\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)');\n          }\n        });\n      }\n      if (!ignoreState) {\n        measureUtils.measureTime(() => {\n          const state = storeAPI.getState();\n          const foundStateNonSerializableValue = findNonSerializableValue(state, '', isSerializable, getEntries, ignoredPaths, cache);\n          if (foundStateNonSerializableValue) {\n            const {\n              keyPath,\n              value\n            } = foundStateNonSerializableValue;\n            console.error(`A non-serializable value was detected in the state, in the path: \\`${keyPath}\\`. Value:`, value, `\nTake a look at the reducer(s) handling this action type: ${action.type}.\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)`);\n          }\n        });\n        measureUtils.warnIfExceeded();\n      }\n      return result;\n    };\n  }\n}", "import type { StoreEnhancer } from 'redux';\nexport const SHOULD_AUTOBATCH = 'RTK_autoBatch';\nexport const prepareAutoBatched = <T,>() => (payload: T): {\n  payload: T;\n  meta: unknown;\n} => ({\n  payload,\n  meta: {\n    [SHOULD_AUTOBATCH]: true\n  }\n});\nconst createQueueWithTimer = (timeout: number) => {\n  return (notify: () => void) => {\n    setTimeout(notify, timeout);\n  };\n};\n\n// requestAnimationFrame won't exist in SSR environments.\n// Fall back to a vague approximation just to keep from erroring.\nconst rAF = typeof window !== 'undefined' && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10);\nexport type AutoBatchOptions = {\n  type: 'tick';\n} | {\n  type: 'timer';\n  timeout: number;\n} | {\n  type: 'raf';\n} | {\n  type: 'callback';\n  queueNotification: (notify: () => void) => void;\n};\n\n/**\n * A Redux store enhancer that watches for \"low-priority\" actions, and delays\n * notifying subscribers until either the queued callback executes or the\n * next \"standard-priority\" action is dispatched.\n *\n * This allows dispatching multiple \"low-priority\" actions in a row with only\n * a single subscriber notification to the UI after the sequence of actions\n * is finished, thus improving UI re-render performance.\n *\n * Watches for actions with the `action.meta[SHOULD_AUTOBATCH]` attribute.\n * This can be added to `action.meta` manually, or by using the\n * `prepareAutoBatched` helper.\n *\n * By default, it will queue a notification for the end of the event loop tick.\n * However, you can pass several other options to configure the behavior:\n * - `{type: 'tick'}`: queues using `queueMicrotask`\n * - `{type: 'timer', timeout: number}`: queues using `setTimeout`\n * - `{type: 'raf'}`: queues using `requestAnimationFrame` (default)\n * - `{type: 'callback', queueNotification: (notify: () => void) => void}`: lets you provide your own callback\n *\n *\n */\nexport const autoBatchEnhancer = (options: AutoBatchOptions = {\n  type: 'raf'\n}): StoreEnhancer => next => (...args) => {\n  const store = next(...args);\n  let notifying = true;\n  let shouldNotifyAtEndOfTick = false;\n  let notificationQueued = false;\n  const listeners = new Set<() => void>();\n  const queueCallback = options.type === 'tick' ? queueMicrotask : options.type === 'raf' ? rAF : options.type === 'callback' ? options.queueNotification : createQueueWithTimer(options.timeout);\n  const notifyListeners = () => {\n    // We're running at the end of the event loop tick.\n    // Run the real listener callbacks to actually update the UI.\n    notificationQueued = false;\n    if (shouldNotifyAtEndOfTick) {\n      shouldNotifyAtEndOfTick = false;\n      listeners.forEach(l => l());\n    }\n  };\n  return Object.assign({}, store, {\n    // Override the base `store.subscribe` method to keep original listeners\n    // from running if we're delaying notifications\n    subscribe(listener: () => void) {\n      // Each wrapped listener will only call the real listener if\n      // the `notifying` flag is currently active when it's called.\n      // This lets the base store work as normal, while the actual UI\n      // update becomes controlled by this enhancer.\n      const wrappedListener: typeof listener = () => notifying && listener();\n      const unsubscribe = store.subscribe(wrappedListener);\n      listeners.add(listener);\n      return () => {\n        unsubscribe();\n        listeners.delete(listener);\n      };\n    },\n    // Override the base `store.dispatch` method so that we can check actions\n    // for the `shouldAutoBatch` flag and determine if batching is active\n    dispatch(action: any) {\n      try {\n        // If the action does _not_ have the `shouldAutoBatch` flag,\n        // we resume/continue normal notify-after-each-dispatch behavior\n        notifying = !action?.meta?.[SHOULD_AUTOBATCH];\n        // If a `notifyListeners` microtask was queued, you can't cancel it.\n        // Instead, we set a flag so that it's a no-op when it does run\n        shouldNotifyAtEndOfTick = !notifying;\n        if (shouldNotifyAtEndOfTick) {\n          // We've seen at least 1 action with `SHOULD_AUTOBATCH`. Try to queue\n          // a microtask to notify listeners at the end of the event loop tick.\n          // Make sure we only enqueue this _once_ per tick.\n          if (!notificationQueued) {\n            notificationQueued = true;\n            queueCallback(notifyListeners);\n          }\n        }\n        // Go ahead and process the action as usual, including reducers.\n        // If normal notification behavior is enabled, the store will notify\n        // all of its own listeners, and the wrapper callbacks above will\n        // see `notifying` is true and pass on to the real listener callbacks.\n        // If we're \"batching\" behavior, then the wrapped callbacks will\n        // bail out, causing the base store notification behavior to be no-ops.\n        return store.dispatch(action);\n      } finally {\n        // Assume we're back to normal behavior after each action\n        notifying = true;\n      }\n    }\n  });\n};", "import type { StoreEnhancer } from 'redux';\nimport type { AutoBatchOptions } from './autoBatchEnhancer';\nimport { autoBatchEnhancer } from './autoBatchEnhancer';\nimport { Tuple } from './utils';\nimport type { Middlewares } from './configureStore';\nimport type { ExtractDispatchExtensions } from './tsHelpers';\ntype GetDefaultEnhancersOptions = {\n  autoBatch?: boolean | AutoBatchOptions;\n};\nexport type GetDefaultEnhancers<M extends Middlewares<any>> = (options?: GetDefaultEnhancersOptions) => Tuple<[StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>]>;\nexport const buildGetDefaultEnhancers = <M extends Middlewares<any>,>(middlewareEnhancer: StoreEnhancer<{\n  dispatch: ExtractDispatchExtensions<M>;\n}>): GetDefaultEnhancers<M> => function getDefaultEnhancers(options) {\n  const {\n    autoBatch = true\n  } = options ?? {};\n  let enhancerArray = new Tuple<StoreEnhancer[]>(middlewareEnhancer);\n  if (autoBatch) {\n    enhancerArray.push(autoBatchEnhancer(typeof autoBatch === 'object' ? autoBatch : undefined));\n  }\n  return (enhancerArray as any);\n};", "import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport type { Draft } from 'immer';\nimport { produce as createNextState, isDraft, isDraftable } from 'immer';\nimport type { Action, Reducer, UnknownAction } from 'redux';\nimport type { ActionReducerMapBuilder } from './mapBuilders';\nimport { executeReducerBuilderCallback } from './mapBuilders';\nimport type { NoInfer, TypeGuard } from './tsHelpers';\nimport { freezeDraftable } from './utils';\n\n/**\r\n * Defines a mapping from action types to corresponding action object shapes.\r\n *\r\n * @deprecated This should not be used manually - it is only used for internal\r\n *             inference purposes and should not have any further value.\r\n *             It might be removed in the future.\r\n * @public\r\n */\nexport type Actions<T extends keyof any = string> = Record<T, Action>;\nexport type ActionMatcherDescription<S, A extends Action> = {\n  matcher: TypeGuard<A>;\n  reducer: CaseReducer<S, NoInfer<A>>;\n};\nexport type ReadonlyActionMatcherDescriptionCollection<S> = ReadonlyArray<ActionMatcherDescription<S, any>>;\nexport type ActionMatcherDescriptionCollection<S> = Array<ActionMatcherDescription<S, any>>;\n\n/**\r\n * A *case reducer* is a reducer function for a specific action type. Case\r\n * reducers can be composed to full reducers using `createReducer()`.\r\n *\r\n * Unlike a normal Redux reducer, a case reducer is never called with an\r\n * `undefined` state to determine the initial state. Instead, the initial\r\n * state is explicitly specified as an argument to `createReducer()`.\r\n *\r\n * In addition, a case reducer can choose to mutate the passed-in `state`\r\n * value directly instead of returning a new state. This does not actually\r\n * cause the store state to be mutated directly; instead, thanks to\r\n * [immer](https://github.com/mweststrate/immer), the mutations are\r\n * translated to copy operations that result in a new state.\r\n *\r\n * @public\r\n */\nexport type CaseReducer<S = any, A extends Action = UnknownAction> = (state: Draft<S>, action: A) => NoInfer<S> | void | Draft<NoInfer<S>>;\n\n/**\r\n * A mapping from action types to case reducers for `createReducer()`.\r\n *\r\n * @deprecated This should not be used manually - it is only used\r\n *             for internal inference purposes and using it manually\r\n *             would lead to type erasure.\r\n *             It might be removed in the future.\r\n * @public\r\n */\nexport type CaseReducers<S, AS extends Actions> = { [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void };\nexport type NotFunction<T> = T extends Function ? never : T;\nfunction isStateFunction<S>(x: unknown): x is () => S {\n  return typeof x === 'function';\n}\nexport type ReducerWithInitialState<S extends NotFunction<any>> = Reducer<S> & {\n  getInitialState: () => S;\n};\n\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * @remarks\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @overloadSummary\r\n * This function accepts a callback that receives a `builder` object as its argument.\r\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\r\n * called to define what actions this reducer will handle.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param builderCallback - `(builder: Builder) => void` A callback that receives a *builder* object to define\r\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  UnknownAction,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst increment = createAction<number>(\"increment\");\r\nconst decrement = createAction<number>(\"decrement\");\r\n\r\nfunction isActionWithNumberPayload(\r\n  action: UnknownAction\r\n): action is PayloadAction<number> {\r\n  return typeof action.payload === \"number\";\r\n}\r\n\r\nconst reducer = createReducer(\r\n  {\r\n    counter: 0,\r\n    sumOfNumberPayloads: 0,\r\n    unhandledActions: 0,\r\n  },\r\n  (builder) => {\r\n    builder\r\n      .addCase(increment, (state, action) => {\r\n        // action is inferred correctly here\r\n        state.counter += action.payload;\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {\r\n        state.counter -= action.payload;\r\n      })\r\n      // You can apply a \"matcher function\" to incoming actions\r\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {});\r\n  }\r\n);\r\n```\r\n * @public\r\n */\nexport function createReducer<S extends NotFunction<any>>(initialState: S | (() => S), mapOrBuilderCallback: (builder: ActionReducerMapBuilder<S>) => void): ReducerWithInitialState<S> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof mapOrBuilderCallback === 'object') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(8) : \"The object notation for `createReducer` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer\");\n    }\n  }\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] = executeReducerBuilderCallback(mapOrBuilderCallback);\n\n  // Ensure the initial state gets frozen either way (if draftable)\n  let getInitialState: () => S;\n  if (isStateFunction(initialState)) {\n    getInitialState = () => freezeDraftable(initialState());\n  } else {\n    const frozenInitialState = freezeDraftable(initialState);\n    getInitialState = () => frozenInitialState;\n  }\n  function reducer(state = getInitialState(), action: any): S {\n    let caseReducers = [actionsMap[action.type], ...finalActionMatchers.filter(({\n      matcher\n    }) => matcher(action)).map(({\n      reducer\n    }) => reducer)];\n    if (caseReducers.filter(cr => !!cr).length === 0) {\n      caseReducers = [finalDefaultCaseReducer];\n    }\n    return caseReducers.reduce((previousState, caseReducer): S => {\n      if (caseReducer) {\n        if (isDraft(previousState)) {\n          // If it's already a draft, we must already be inside a `createNextState` call,\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\n          const draft = (previousState as Draft<S>); // We can assume this is already a draft\n          const result = caseReducer(draft, action);\n          if (result === undefined) {\n            return previousState;\n          }\n          return (result as S);\n        } else if (!isDraftable(previousState)) {\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\n          // return the caseReducer func and not wrap it with produce.\n          const result = caseReducer((previousState as any), action);\n          if (result === undefined) {\n            if (previousState === null) {\n              return previousState;\n            }\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(9) : 'A case reducer on a non-draftable value must not return undefined');\n          }\n          return (result as S);\n        } else {\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n          // these two types.\n          return createNextState(previousState, (draft: Draft<S>) => {\n            return caseReducer(draft, action);\n          });\n        }\n      }\n      return previousState;\n    }, state);\n  }\n  reducer.getInitialState = getInitialState;\n  return (reducer as ReducerWithInitialState<S>);\n}", "import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3, formatProdErrorMessage as _formatProdErrorMessage4, formatProdErrorMessage as _formatProdErrorMessage5, formatProdErrorMessage as _formatProdErrorMessage6 } from \"@reduxjs/toolkit\";\nimport type { Action } from 'redux';\nimport type { CaseReducer, CaseReducers, ActionMatcherDescriptionCollection } from './createReducer';\nimport type { TypeGuard } from './tsHelpers';\nexport type TypedActionCreator<Type extends string> = {\n  (...args: any[]): Action<Type>;\n  type: Type;\n};\n\n/**\n * A builder for an action <-> reducer map.\n *\n * @public\n */\nexport interface ActionReducerMapBuilder<State> {\n  /**\n   * Adds a case reducer to handle a single exact action type.\n   * @remarks\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<ActionCreator extends TypedActionCreator<string>>(actionCreator: ActionCreator, reducer: CaseReducer<State, ReturnType<ActionCreator>>): ActionReducerMapBuilder<State>;\n  /**\n   * Adds a case reducer to handle a single exact action type.\n   * @remarks\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<Type extends string, A extends Action<Type>>(type: Type, reducer: CaseReducer<State, A>): ActionReducerMapBuilder<State>;\n\n  /**\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\n   * @remarks\n   * If multiple matcher reducers match, all of them will be executed in the order\n   * they were defined in - even if a case reducer already matched.\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates)\n   *   function\n   * @param reducer - The actual case reducer function.\n   *\n   * @example\n  ```ts\n  import {\n  createAction,\n  createReducer,\n  AsyncThunk,\n  UnknownAction,\n  } from \"@reduxjs/toolkit\";\n  type GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\n  type PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\n  type RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\n  type FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\n  const initialState: Record<string, string> = {};\n  const resetAction = createAction(\"reset-tracked-loading-state\");\n  function isPendingAction(action: UnknownAction): action is PendingAction {\n  return typeof action.type === \"string\" && action.type.endsWith(\"/pending\");\n  }\n  const reducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(resetAction, () => initialState)\n    // matcher can be defined outside as a type predicate function\n    .addMatcher(isPendingAction, (state, action) => {\n      state[action.meta.requestId] = \"pending\";\n    })\n    .addMatcher(\n      // matcher can be defined inline as a type predicate function\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\n      (state, action) => {\n        state[action.meta.requestId] = \"rejected\";\n      }\n    )\n    // matcher can just return boolean and the matcher can receive a generic argument\n    .addMatcher<FulfilledAction>(\n      (action) => action.type.endsWith(\"/fulfilled\"),\n      (state, action) => {\n        state[action.meta.requestId] = \"fulfilled\";\n      }\n    );\n  });\n  ```\n   */\n  addMatcher<A>(matcher: TypeGuard<A> | ((action: any) => boolean), reducer: CaseReducer<State, A extends Action ? A : A & Action>): Omit<ActionReducerMapBuilder<State>, 'addCase'>;\n\n  /**\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\n   * reducer was executed for this action.\n   * @param reducer - The fallback \"default case\" reducer function.\n   *\n   * @example\n  ```ts\n  import { createReducer } from '@reduxjs/toolkit'\n  const initialState = { otherActions: 0 }\n  const reducer = createReducer(initialState, builder => {\n  builder\n    // .addCase(...)\n    // .addMatcher(...)\n    .addDefaultCase((state, action) => {\n      state.otherActions++\n    })\n  })\n  ```\n   */\n  addDefaultCase(reducer: CaseReducer<State, Action>): {};\n}\nexport function executeReducerBuilderCallback<S>(builderCallback: (builder: ActionReducerMapBuilder<S>) => void): [CaseReducers<S, any>, ActionMatcherDescriptionCollection<S>, CaseReducer<S, Action> | undefined] {\n  const actionsMap: CaseReducers<S, any> = {};\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = [];\n  let defaultCaseReducer: CaseReducer<S, Action> | undefined;\n  const builder = {\n    addCase(typeOrActionCreator: string | TypedActionCreator<any>, reducer: CaseReducer<S>) {\n      if (process.env.NODE_ENV !== 'production') {\n        /*\n         to keep the definition by the user in line with actual behavior,\n         we enforce `addCase` to always be called before calling `addMatcher`\n         as matching cases take precedence over matchers\n         */\n        if (actionMatchers.length > 0) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(26) : '`builder.addCase` should only be called before calling `builder.addMatcher`');\n        }\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(27) : '`builder.addCase` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n      const type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n      if (!type) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(28) : '`builder.addCase` cannot be called with an empty action type');\n      }\n      if (type in actionsMap) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(29) : '`builder.addCase` cannot be called with two reducers for the same action type ' + `'${type}'`);\n      }\n      actionsMap[type] = reducer;\n      return builder;\n    },\n    addMatcher<A>(matcher: TypeGuard<A>, reducer: CaseReducer<S, A extends Action ? A : A & Action>) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(30) : '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`');\n        }\n      }\n      actionMatchers.push({\n        matcher,\n        reducer\n      });\n      return builder;\n    },\n    addDefaultCase(reducer: CaseReducer<S, Action>) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (defaultCaseReducer) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(31) : '`builder.addDefaultCase` can only be called once');\n        }\n      }\n      defaultCaseReducer = reducer;\n      return builder;\n    }\n  };\n  builderCallback(builder);\n  return [actionsMap, actionMatchers, defaultCaseReducer];\n}", "import type { ActionFromMatcher, Matcher, UnionToIntersection } from './tsHelpers';\nimport { hasMatchFunction } from './tsHelpers';\nimport type { AsyncThunk, AsyncThunkFulfilledActionCreator, AsyncThunkPendingActionCreator, AsyncThunkRejectedActionCreator } from './createAsyncThunk';\n\n/** @public */\nexport type ActionMatchingAnyOf<Matchers extends Matcher<any>[]> = ActionFromMatcher<Matchers[number]>;\n\n/** @public */\nexport type ActionMatchingAllOf<Matchers extends Matcher<any>[]> = UnionToIntersection<ActionMatchingAnyOf<Matchers>>;\nconst matches = (matcher: Matcher<any>, action: any) => {\n  if (hasMatchFunction(matcher)) {\n    return matcher.match(action);\n  } else {\n    return matcher(action);\n  }\n};\n\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action matches any one of the supplied type guards or action\n * creators.\n *\n * @param matchers The type guards or action creators to match against.\n *\n * @public\n */\nexport function isAnyOf<Matchers extends Matcher<any>[]>(...matchers: Matchers) {\n  return (action: any): action is ActionMatchingAnyOf<Matchers> => {\n    return matchers.some(matcher => matches(matcher, action));\n  };\n}\n\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action matches all of the supplied type guards or action\n * creators.\n *\n * @param matchers The type guards or action creators to match against.\n *\n * @public\n */\nexport function isAllOf<Matchers extends Matcher<any>[]>(...matchers: Matchers) {\n  return (action: any): action is ActionMatchingAllOf<Matchers> => {\n    return matchers.every(matcher => matches(matcher, action));\n  };\n}\n\n/**\n * @param action A redux action\n * @param validStatus An array of valid meta.requestStatus values\n *\n * @internal\n */\nexport function hasExpectedRequestMetadata(action: any, validStatus: readonly string[]) {\n  if (!action || !action.meta) return false;\n  const hasValidRequestId = typeof action.meta.requestId === 'string';\n  const hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;\n  return hasValidRequestId && hasValidRequestStatus;\n}\nfunction isAsyncThunkArray(a: [any] | AnyAsyncThunk[]): a is AnyAsyncThunk[] {\n  return typeof a[0] === 'function' && 'pending' in a[0] && 'fulfilled' in a[0] && 'rejected' in a[0];\n}\nexport type UnknownAsyncThunkPendingAction = ReturnType<AsyncThunkPendingActionCreator<unknown>>;\nexport type PendingActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['pending']>;\n\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is pending.\n *\n * @public\n */\nexport function isPending(): (action: any) => action is UnknownAsyncThunkPendingAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is pending.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\nexport function isPending<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is PendingActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a pending thunk action\n * @public\n */\nexport function isPending(action: any): action is UnknownAsyncThunkPendingAction;\nexport function isPending<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['pending']);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isPending()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.map(asyncThunk => asyncThunk.pending));\n}\nexport type UnknownAsyncThunkRejectedAction = ReturnType<AsyncThunkRejectedActionCreator<unknown, unknown>>;\nexport type RejectedActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['rejected']>;\n\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is rejected.\n *\n * @public\n */\nexport function isRejected(): (action: any) => action is UnknownAsyncThunkRejectedAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is rejected.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\nexport function isRejected<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is RejectedActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a rejected thunk action\n * @public\n */\nexport function isRejected(action: any): action is UnknownAsyncThunkRejectedAction;\nexport function isRejected<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['rejected']);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejected()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.map(asyncThunk => asyncThunk.rejected));\n}\nexport type UnknownAsyncThunkRejectedWithValueAction = ReturnType<AsyncThunkRejectedActionCreator<unknown, unknown>>;\nexport type RejectedWithValueActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['rejected']> & (T extends AsyncThunk<any, any, {\n  rejectValue: infer RejectedValue;\n}> ? {\n  payload: RejectedValue;\n} : unknown);\n\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is rejected with value.\n *\n * @public\n */\nexport function isRejectedWithValue(): (action: any) => action is UnknownAsyncThunkRejectedAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is rejected with value.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\nexport function isRejectedWithValue<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is RejectedWithValueActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a rejected thunk action with value\n * @public\n */\nexport function isRejectedWithValue(action: any): action is UnknownAsyncThunkRejectedAction;\nexport function isRejectedWithValue<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  const hasFlag = (action: any): action is any => {\n    return action && action.meta && action.meta.rejectedWithValue;\n  };\n  if (asyncThunks.length === 0) {\n    return isAllOf(isRejected(...asyncThunks), hasFlag);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isRejectedWithValue()(asyncThunks[0]);\n  }\n  return isAllOf(isRejected(...asyncThunks), hasFlag);\n}\nexport type UnknownAsyncThunkFulfilledAction = ReturnType<AsyncThunkFulfilledActionCreator<unknown, unknown>>;\nexport type FulfilledActionFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['fulfilled']>;\n\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator, and that\n * the action is fulfilled.\n *\n * @public\n */\nexport function isFulfilled(): (action: any) => action is UnknownAsyncThunkFulfilledAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators,\n * and that the action is fulfilled.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\nexport function isFulfilled<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is FulfilledActionFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a fulfilled thunk action\n * @public\n */\nexport function isFulfilled(action: any): action is UnknownAsyncThunkFulfilledAction;\nexport function isFulfilled<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['fulfilled']);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isFulfilled()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.map(asyncThunk => asyncThunk.fulfilled));\n}\nexport type UnknownAsyncThunkAction = UnknownAsyncThunkPendingAction | UnknownAsyncThunkRejectedAction | UnknownAsyncThunkFulfilledAction;\nexport type AnyAsyncThunk = {\n  pending: {\n    match: (action: any) => action is any;\n  };\n  fulfilled: {\n    match: (action: any) => action is any;\n  };\n  rejected: {\n    match: (action: any) => action is any;\n  };\n};\nexport type ActionsFromAsyncThunk<T extends AnyAsyncThunk> = ActionFromMatcher<T['pending']> | ActionFromMatcher<T['fulfilled']> | ActionFromMatcher<T['rejected']>;\n\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action was created by an async thunk action creator.\n *\n * @public\n */\nexport function isAsyncThunkAction(): (action: any) => action is UnknownAsyncThunkAction;\n/**\n * A higher-order function that returns a function that may be used to check\n * whether an action belongs to one of the provided async thunk action creators.\n *\n * @param asyncThunks (optional) The async thunk action creators to match against.\n *\n * @public\n */\nexport function isAsyncThunkAction<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks): (action: any) => action is ActionsFromAsyncThunk<AsyncThunks[number]>;\n/**\n * Tests if `action` is a thunk action\n * @public\n */\nexport function isAsyncThunkAction(action: any): action is UnknownAsyncThunkAction;\nexport function isAsyncThunkAction<AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]>(...asyncThunks: AsyncThunks | [any]) {\n  if (asyncThunks.length === 0) {\n    return (action: any) => hasExpectedRequestMetadata(action, ['pending', 'fulfilled', 'rejected']);\n  }\n  if (!isAsyncThunkArray(asyncThunks)) {\n    return isAsyncThunkAction()(asyncThunks[0]);\n  }\n  return isAnyOf(...asyncThunks.flatMap(asyncThunk => [asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled]));\n}", "// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n\n/**\r\n *\r\n * @public\r\n */\nexport let nanoid = (size = 21) => {\n  let id = '';\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};", "import type { Dispatch, UnknownAction } from 'redux';\nimport type { ThunkDispatch } from 'redux-thunk';\nimport type { ActionCreatorWithPreparedPayload } from './createAction';\nimport { createAction } from './createAction';\nimport { isAnyOf } from './matchers';\nimport { nanoid } from './nanoid';\nimport type { FallbackIfUnknown, Id, IsAny, IsUnknown, SafePromise } from './tsHelpers';\nexport type BaseThunkAPI<S, E, D extends Dispatch = Dispatch, RejectedValue = unknown, RejectedMeta = unknown, FulfilledMeta = unknown> = {\n  dispatch: D;\n  getState: () => S;\n  extra: E;\n  requestId: string;\n  signal: AbortSignal;\n  abort: (reason?: string) => void;\n  rejectWithValue: IsUnknown<RejectedMeta, (value: RejectedValue) => RejectWithValue<RejectedValue, RejectedMeta>, (value: RejectedValue, meta: RejectedMeta) => RejectWithValue<RejectedValue, RejectedMeta>>;\n  fulfillWithValue: IsUnknown<FulfilledMeta, <FulfilledValue>(value: FulfilledValue) => FulfilledValue, <FulfilledValue>(value: FulfilledValue, meta: FulfilledMeta) => FulfillWithMeta<FulfilledValue, FulfilledMeta>>;\n};\n\n/**\n * @public\n */\nexport interface SerializedError {\n  name?: string;\n  message?: string;\n  stack?: string;\n  code?: string;\n}\nconst commonProperties: Array<keyof SerializedError> = ['name', 'message', 'stack', 'code'];\nclass RejectWithValue<Payload, RejectedMeta> {\n  /*\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\n  does not exist at runtime\n  */\n  private readonly _type!: 'RejectWithValue';\n  constructor(public readonly payload: Payload, public readonly meta: RejectedMeta) {}\n}\nclass FulfillWithMeta<Payload, FulfilledMeta> {\n  /*\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\n  does not exist at runtime\n  */\n  private readonly _type!: 'FulfillWithMeta';\n  constructor(public readonly payload: Payload, public readonly meta: FulfilledMeta) {}\n}\n\n/**\n * Serializes an error into a plain object.\n * Reworked from https://github.com/sindresorhus/serialize-error\n *\n * @public\n */\nexport const miniSerializeError = (value: any): SerializedError => {\n  if (typeof value === 'object' && value !== null) {\n    const simpleError: SerializedError = {};\n    for (const property of commonProperties) {\n      if (typeof value[property] === 'string') {\n        simpleError[property] = value[property];\n      }\n    }\n    return simpleError;\n  }\n  return {\n    message: String(value)\n  };\n};\nexport type AsyncThunkConfig = {\n  state?: unknown;\n  dispatch?: ThunkDispatch<unknown, unknown, UnknownAction>;\n  extra?: unknown;\n  rejectValue?: unknown;\n  serializedErrorType?: unknown;\n  pendingMeta?: unknown;\n  fulfilledMeta?: unknown;\n  rejectedMeta?: unknown;\n};\nexport type GetState<ThunkApiConfig> = ThunkApiConfig extends {\n  state: infer State;\n} ? State : unknown;\ntype GetExtra<ThunkApiConfig> = ThunkApiConfig extends {\n  extra: infer Extra;\n} ? Extra : unknown;\ntype GetDispatch<ThunkApiConfig> = ThunkApiConfig extends {\n  dispatch: infer Dispatch;\n} ? FallbackIfUnknown<Dispatch, ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, UnknownAction>> : ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, UnknownAction>;\nexport type GetThunkAPI<ThunkApiConfig> = BaseThunkAPI<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, GetDispatch<ThunkApiConfig>, GetRejectValue<ThunkApiConfig>, GetRejectedMeta<ThunkApiConfig>, GetFulfilledMeta<ThunkApiConfig>>;\ntype GetRejectValue<ThunkApiConfig> = ThunkApiConfig extends {\n  rejectValue: infer RejectValue;\n} ? RejectValue : unknown;\ntype GetPendingMeta<ThunkApiConfig> = ThunkApiConfig extends {\n  pendingMeta: infer PendingMeta;\n} ? PendingMeta : unknown;\ntype GetFulfilledMeta<ThunkApiConfig> = ThunkApiConfig extends {\n  fulfilledMeta: infer FulfilledMeta;\n} ? FulfilledMeta : unknown;\ntype GetRejectedMeta<ThunkApiConfig> = ThunkApiConfig extends {\n  rejectedMeta: infer RejectedMeta;\n} ? RejectedMeta : unknown;\ntype GetSerializedErrorType<ThunkApiConfig> = ThunkApiConfig extends {\n  serializedErrorType: infer GetSerializedErrorType;\n} ? GetSerializedErrorType : SerializedError;\ntype MaybePromise<T> = T | Promise<T> | (T extends any ? Promise<T> : never);\n\n/**\n * A type describing the return value of the `payloadCreator` argument to `createAsyncThunk`.\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\n *\n * @public\n */\nexport type AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig extends AsyncThunkConfig> = MaybePromise<IsUnknown<GetFulfilledMeta<ThunkApiConfig>, Returned, FulfillWithMeta<Returned, GetFulfilledMeta<ThunkApiConfig>>> | RejectWithValue<GetRejectValue<ThunkApiConfig>, GetRejectedMeta<ThunkApiConfig>>>;\n/**\n * A type describing the `payloadCreator` argument to `createAsyncThunk`.\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\n *\n * @public\n */\nexport type AsyncThunkPayloadCreator<Returned, ThunkArg = void, ThunkApiConfig extends AsyncThunkConfig = {}> = (arg: ThunkArg, thunkAPI: GetThunkAPI<ThunkApiConfig>) => AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig>;\n\n/**\n * A ThunkAction created by `createAsyncThunk`.\n * Dispatching it returns a Promise for either a\n * fulfilled or rejected action.\n * Also, the returned value contains an `abort()` method\n * that allows the asyncAction to be cancelled from the outside.\n *\n * @public\n */\nexport type AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig> = (dispatch: NonNullable<GetDispatch<ThunkApiConfig>>, getState: () => GetState<ThunkApiConfig>, extra: GetExtra<ThunkApiConfig>) => SafePromise<ReturnType<AsyncThunkFulfilledActionCreator<Returned, ThunkArg>> | ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>>> & {\n  abort: (reason?: string) => void;\n  requestId: string;\n  arg: ThunkArg;\n  unwrap: () => Promise<Returned>;\n};\ntype AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig> = IsAny<ThunkArg,\n// any handling\n(arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\n// unknown handling\nunknown extends ThunkArg ? (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> /* argument not specified or specified as void or undefined*/ : [ThunkArg] extends [void] | [undefined] ? () => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> /* argument contains void*/ : [void] extends [ThunkArg] // make optional\n? (arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> /* argument contains undefined*/ : [undefined] extends [ThunkArg] ? WithStrictNullChecks<\n// with strict nullChecks: make optional\n(arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\n// without strict null checks this will match everything, so don't make it optional\n(arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>> /* default case: normal argument*/ : (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>>;\n\n/**\n * Options object for `createAsyncThunk`.\n *\n * @public\n */\nexport type AsyncThunkOptions<ThunkArg = void, ThunkApiConfig extends AsyncThunkConfig = {}> = {\n  /**\n   * A method to control whether the asyncThunk should be executed. Has access to the\n   * `arg`, `api.getState()` and `api.extra` arguments.\n   *\n   * @returns `false` if it should be skipped\n   */\n  condition?(arg: ThunkArg, api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>): MaybePromise<boolean | undefined>;\n  /**\n   * If `condition` returns `false`, the asyncThunk will be skipped.\n   * This option allows you to control whether a `rejected` action with `meta.condition == false`\n   * will be dispatched or not.\n   *\n   * @default `false`\n   */\n  dispatchConditionRejection?: boolean;\n  serializeError?: (x: unknown) => GetSerializedErrorType<ThunkApiConfig>;\n\n  /**\n   * A function to use when generating the `requestId` for the request sequence.\n   *\n   * @default `nanoid`\n   */\n  idGenerator?: (arg: ThunkArg) => string;\n} & IsUnknown<GetPendingMeta<ThunkApiConfig>, {\n  /**\n   * A method to generate additional properties to be added to `meta` of the pending action.\n   *\n   * Using this optional overload will not modify the types correctly, this overload is only in place to support JavaScript users.\n   * Please use the `ThunkApiConfig` parameter `pendingMeta` to get access to a correctly typed overload\n   */\n  getPendingMeta?(base: {\n    arg: ThunkArg;\n    requestId: string;\n  }, api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>): GetPendingMeta<ThunkApiConfig>;\n}, {\n  /**\n   * A method to generate additional properties to be added to `meta` of the pending action.\n   */\n  getPendingMeta(base: {\n    arg: ThunkArg;\n    requestId: string;\n  }, api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>): GetPendingMeta<ThunkApiConfig>;\n}>;\nexport type AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig = {}> = ActionCreatorWithPreparedPayload<[string, ThunkArg, GetPendingMeta<ThunkApiConfig>?], undefined, string, never, {\n  arg: ThunkArg;\n  requestId: string;\n  requestStatus: 'pending';\n} & GetPendingMeta<ThunkApiConfig>>;\nexport type AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig = {}> = ActionCreatorWithPreparedPayload<[Error | null, string, ThunkArg, GetRejectValue<ThunkApiConfig>?, GetRejectedMeta<ThunkApiConfig>?], GetRejectValue<ThunkApiConfig> | undefined, string, GetSerializedErrorType<ThunkApiConfig>, {\n  arg: ThunkArg;\n  requestId: string;\n  requestStatus: 'rejected';\n  aborted: boolean;\n  condition: boolean;\n} & (({\n  rejectedWithValue: false;\n} & { [K in keyof GetRejectedMeta<ThunkApiConfig>]?: undefined }) | ({\n  rejectedWithValue: true;\n} & GetRejectedMeta<ThunkApiConfig>))>;\nexport type AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig = {}> = ActionCreatorWithPreparedPayload<[Returned, string, ThunkArg, GetFulfilledMeta<ThunkApiConfig>?], Returned, string, never, {\n  arg: ThunkArg;\n  requestId: string;\n  requestStatus: 'fulfilled';\n} & GetFulfilledMeta<ThunkApiConfig>>;\n\n/**\n * A type describing the return value of `createAsyncThunk`.\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\n *\n * @public\n */\nexport type AsyncThunk<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig> = AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig> & {\n  pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig>;\n  rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>;\n  fulfilled: AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig>;\n  // matchSettled?\n  settled: (action: any) => action is ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig> | AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig>>;\n  typePrefix: string;\n};\nexport type OverrideThunkApiConfigs<OldConfig, NewConfig> = Id<NewConfig & Omit<OldConfig, keyof NewConfig>>;\ntype CreateAsyncThunk<CurriedThunkApiConfig extends AsyncThunkConfig> = {\n  /**\n   *\n   * @param typePrefix\n   * @param payloadCreator\n   * @param options\n   *\n   * @public\n   */\n  // separate signature without `AsyncThunkConfig` for better inference\n  <Returned, ThunkArg = void>(typePrefix: string, payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, CurriedThunkApiConfig>, options?: AsyncThunkOptions<ThunkArg, CurriedThunkApiConfig>): AsyncThunk<Returned, ThunkArg, CurriedThunkApiConfig>;\n\n  /**\n   *\n   * @param typePrefix\n   * @param payloadCreator\n   * @param options\n   *\n   * @public\n   */\n  <Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig>(typePrefix: string, payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>, options?: AsyncThunkOptions<ThunkArg, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>): AsyncThunk<Returned, ThunkArg, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>;\n  withTypes<ThunkApiConfig extends AsyncThunkConfig>(): CreateAsyncThunk<OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>;\n};\nexport const createAsyncThunk = /* @__PURE__ */(() => {\n  function createAsyncThunk<Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig>(typePrefix: string, payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>, options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>): AsyncThunk<Returned, ThunkArg, ThunkApiConfig> {\n    type RejectedValue = GetRejectValue<ThunkApiConfig>;\n    type PendingMeta = GetPendingMeta<ThunkApiConfig>;\n    type FulfilledMeta = GetFulfilledMeta<ThunkApiConfig>;\n    type RejectedMeta = GetRejectedMeta<ThunkApiConfig>;\n    const fulfilled: AsyncThunkFulfilledActionCreator<Returned, ThunkArg, ThunkApiConfig> = createAction(typePrefix + '/fulfilled', (payload: Returned, requestId: string, arg: ThunkArg, meta?: FulfilledMeta) => ({\n      payload,\n      meta: {\n        ...((meta as any) || {}),\n        arg,\n        requestId,\n        requestStatus: ('fulfilled' as const)\n      }\n    }));\n    const pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig> = createAction(typePrefix + '/pending', (requestId: string, arg: ThunkArg, meta?: PendingMeta) => ({\n      payload: undefined,\n      meta: {\n        ...((meta as any) || {}),\n        arg,\n        requestId,\n        requestStatus: ('pending' as const)\n      }\n    }));\n    const rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig> = createAction(typePrefix + '/rejected', (error: Error | null, requestId: string, arg: ThunkArg, payload?: RejectedValue, meta?: RejectedMeta) => ({\n      payload,\n      error: ((options && options.serializeError || miniSerializeError)(error || 'Rejected') as GetSerializedErrorType<ThunkApiConfig>),\n      meta: {\n        ...((meta as any) || {}),\n        arg,\n        requestId,\n        rejectedWithValue: !!payload,\n        requestStatus: ('rejected' as const),\n        aborted: error?.name === 'AbortError',\n        condition: error?.name === 'ConditionError'\n      }\n    }));\n    function actionCreator(arg: ThunkArg): AsyncThunkAction<Returned, ThunkArg, Required<ThunkApiConfig>> {\n      return (dispatch, getState, extra) => {\n        const requestId = options?.idGenerator ? options.idGenerator(arg) : nanoid();\n        const abortController = new AbortController();\n        let abortHandler: (() => void) | undefined;\n        let abortReason: string | undefined;\n        function abort(reason?: string) {\n          abortReason = reason;\n          abortController.abort();\n        }\n        const promise = async function () {\n          let finalAction: ReturnType<typeof fulfilled | typeof rejected>;\n          try {\n            let conditionResult = options?.condition?.(arg, {\n              getState,\n              extra\n            });\n            if (isThenable(conditionResult)) {\n              conditionResult = await conditionResult;\n            }\n            if (conditionResult === false || abortController.signal.aborted) {\n              // eslint-disable-next-line no-throw-literal\n              throw {\n                name: 'ConditionError',\n                message: 'Aborted due to condition callback returning false.'\n              };\n            }\n            const abortedPromise = new Promise<never>((_, reject) => {\n              abortHandler = () => {\n                reject({\n                  name: 'AbortError',\n                  message: abortReason || 'Aborted'\n                });\n              };\n              abortController.signal.addEventListener('abort', abortHandler);\n            });\n            dispatch((pending(requestId, arg, options?.getPendingMeta?.({\n              requestId,\n              arg\n            }, {\n              getState,\n              extra\n            })) as any));\n            finalAction = await Promise.race([abortedPromise, Promise.resolve(payloadCreator(arg, {\n              dispatch,\n              getState,\n              extra,\n              requestId,\n              signal: abortController.signal,\n              abort,\n              rejectWithValue: (((value: RejectedValue, meta?: RejectedMeta) => {\n                return new RejectWithValue(value, meta);\n              }) as any),\n              fulfillWithValue: (((value: unknown, meta?: FulfilledMeta) => {\n                return new FulfillWithMeta(value, meta);\n              }) as any)\n            })).then(result => {\n              if (result instanceof RejectWithValue) {\n                throw result;\n              }\n              if (result instanceof FulfillWithMeta) {\n                return fulfilled(result.payload, requestId, arg, result.meta);\n              }\n              return fulfilled((result as any), requestId, arg);\n            })]);\n          } catch (err) {\n            finalAction = err instanceof RejectWithValue ? rejected(null, requestId, arg, err.payload, err.meta) : rejected((err as any), requestId, arg);\n          } finally {\n            if (abortHandler) {\n              abortController.signal.removeEventListener('abort', abortHandler);\n            }\n          }\n          // We dispatch the result action _after_ the catch, to avoid having any errors\n          // here get swallowed by the try/catch block,\n          // per https://twitter.com/dan_abramov/status/770914221638942720\n          // and https://github.com/reduxjs/redux-toolkit/blob/e85eb17b39a2118d859f7b7746e0f3fee523e089/docs/tutorials/advanced-tutorial.md#async-error-handling-logic-in-thunks\n\n          const skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && (finalAction as any).meta.condition;\n          if (!skipDispatch) {\n            dispatch((finalAction as any));\n          }\n          return finalAction;\n        }();\n        return Object.assign((promise as SafePromise<any>), {\n          abort,\n          requestId,\n          arg,\n          unwrap() {\n            return promise.then<any>(unwrapResult);\n          }\n        });\n      };\n    }\n    return Object.assign((actionCreator as AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig>), {\n      pending,\n      rejected,\n      fulfilled,\n      settled: isAnyOf(rejected, fulfilled),\n      typePrefix\n    });\n  }\n  createAsyncThunk.withTypes = () => createAsyncThunk;\n  return (createAsyncThunk as CreateAsyncThunk<AsyncThunkConfig>);\n})();\ninterface UnwrappableAction {\n  payload: any;\n  meta?: any;\n  error?: any;\n}\ntype UnwrappedActionPayload<T extends UnwrappableAction> = Exclude<T, {\n  error: any;\n}>['payload'];\n\n/**\n * @public\n */\nexport function unwrapResult<R extends UnwrappableAction>(action: R): UnwrappedActionPayload<R> {\n  if (action.meta && action.meta.rejectedWithValue) {\n    throw action.payload;\n  }\n  if (action.error) {\n    throw action.error;\n  }\n  return action.payload;\n}\ntype WithStrictNullChecks<True, False> = undefined extends boolean ? False : True;\nfunction isThenable(value: any): value is PromiseLike<any> {\n  return value !== null && typeof value === 'object' && typeof value.then === 'function';\n}", "import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3, formatProdErrorMessage as _formatProdErrorMessage4, formatProdErrorMessage as _formatProdErrorMessage5, formatProdErrorMessage as _formatProdErrorMessage6, formatProdErrorMessage as _formatProdErrorMessage7, formatProdErrorMessage as _formatProdErrorMessage8 } from \"@reduxjs/toolkit\";\nimport type { Action, Reducer, UnknownAction } from 'redux';\nimport type { Selector } from 'reselect';\nimport type { InjectConfig } from './combineSlices';\nimport type { ActionCreatorWithoutPayload, PayloadAction, PayloadActionCreator, PrepareAction, _ActionCreatorWithPreparedPayload } from './createAction';\nimport { createAction } from './createAction';\nimport type { AsyncThunk, AsyncThunkConfig, AsyncThunkOptions, AsyncThunkPayloadCreator, OverrideThunkApiConfigs } from './createAsyncThunk';\nimport { createAsyncThunk as _createAsyncThunk } from './createAsyncThunk';\nimport type { ActionMatcherDescriptionCollection, CaseReducer, ReducerWithInitialState } from './createReducer';\nimport { createReducer } from './createReducer';\nimport type { ActionReducerMapBuilder, TypedActionCreator } from './mapBuilders';\nimport { executeReducerBuilderCallback } from './mapBuilders';\nimport type { Id, TypeGuard } from './tsHelpers';\nimport { emplace } from './utils';\nconst asyncThunkSymbol = /* @__PURE__ */Symbol.for('rtk-slice-createasyncthunk');\n// type is annotated because it's too long to infer\nexport const asyncThunkCreator: {\n  [asyncThunkSymbol]: typeof _createAsyncThunk;\n} = {\n  [asyncThunkSymbol]: _createAsyncThunk\n};\ntype InjectIntoConfig<NewReducerPath extends string> = InjectConfig & {\n  reducerPath?: NewReducerPath;\n};\n\n/**\n * The return value of `createSlice`\n *\n * @public\n */\nexport interface Slice<State = any, CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> {\n  /**\n   * The slice name.\n   */\n  name: Name;\n\n  /**\n   *  The slice reducer path.\n   */\n  reducerPath: ReducerPath;\n\n  /**\n   * The slice's reducer.\n   */\n  reducer: Reducer<State>;\n\n  /**\n   * Action creators for the types of actions that are handled by the slice\n   * reducer.\n   */\n  actions: CaseReducerActions<CaseReducers, Name>;\n\n  /**\n   * The individual case reducer functions that were passed in the `reducers` parameter.\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\n   */\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>;\n\n  /**\n   * Provides access to the initial state value given to the slice.\n   * If a lazy state initializer was provided, it will be called and a fresh value returned.\n   */\n  getInitialState: () => State;\n\n  /**\n   * Get localised slice selectors (expects to be called with *just* the slice's state as the first parameter)\n   */\n  getSelectors(): Id<SliceDefinedSelectors<State, Selectors, State>>;\n\n  /**\n   * Get globalised slice selectors (`selectState` callback is expected to receive first parameter and return slice state)\n   */\n  getSelectors<RootState>(selectState: (rootState: RootState) => State): Id<SliceDefinedSelectors<State, Selectors, RootState>>;\n\n  /**\n   * Selectors that assume the slice's state is `rootState[slice.reducerPath]` (which is usually the case)\n   *\n   * Equivalent to `slice.getSelectors((state: RootState) => state[slice.reducerPath])`.\n   */\n  get selectors(): Id<SliceDefinedSelectors<State, Selectors, { [K in ReducerPath]: State }>>;\n\n  /**\n   * Inject slice into provided reducer (return value from `combineSlices`), and return injected slice.\n   */\n  injectInto<NewReducerPath extends string = ReducerPath>(this: this, injectable: {\n    inject: (slice: {\n      reducerPath: string;\n      reducer: Reducer;\n    }, config?: InjectConfig) => void;\n  }, config?: InjectIntoConfig<NewReducerPath>): InjectedSlice<State, CaseReducers, Name, NewReducerPath, Selectors>;\n\n  /**\n   * Select the slice state, using the slice's current reducerPath.\n   *\n   * Will throw an error if slice is not found.\n   */\n  selectSlice(state: { [K in ReducerPath]: State }): State;\n}\n\n/**\n * A slice after being called with `injectInto(reducer)`.\n *\n * Selectors can now be called with an `undefined` value, in which case they use the slice's initial state.\n */\ntype InjectedSlice<State = any, CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> = Omit<Slice<State, CaseReducers, Name, ReducerPath, Selectors>, 'getSelectors' | 'selectors'> & {\n  /**\n   * Get localised slice selectors (expects to be called with *just* the slice's state as the first parameter)\n   */\n  getSelectors(): Id<SliceDefinedSelectors<State, Selectors, State | undefined>>;\n\n  /**\n   * Get globalised slice selectors (`selectState` callback is expected to receive first parameter and return slice state)\n   */\n  getSelectors<RootState>(selectState: (rootState: RootState) => State | undefined): Id<SliceDefinedSelectors<State, Selectors, RootState>>;\n\n  /**\n   * Selectors that assume the slice's state is `rootState[slice.name]` (which is usually the case)\n   *\n   * Equivalent to `slice.getSelectors((state: RootState) => state[slice.name])`.\n   */\n  get selectors(): Id<SliceDefinedSelectors<State, Selectors, { [K in ReducerPath]?: State | undefined }>>;\n\n  /**\n   * Select the slice state, using the slice's current reducerPath.\n   *\n   * Returns initial state if slice is not found.\n   */\n  selectSlice(state: { [K in ReducerPath]?: State | undefined }): State;\n};\n\n/**\n * Options for `createSlice()`.\n *\n * @public\n */\nexport interface CreateSliceOptions<State = any, CR extends SliceCaseReducers<State> = SliceCaseReducers<State>, Name extends string = string, ReducerPath extends string = Name, Selectors extends SliceSelectors<State> = SliceSelectors<State>> {\n  /**\n   * The slice's name. Used to namespace the generated action types.\n   */\n  name: Name;\n\n  /**\n   * The slice's reducer path. Used when injecting into a combined slice reducer.\n   */\n  reducerPath?: ReducerPath;\n\n  /**\n   * The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\n   */\n  initialState: State | (() => State);\n\n  /**\n   * A mapping from action types to action-type-specific *case reducer*\n   * functions. For every action type, a matching action creator will be\n   * generated using `createAction()`.\n   */\n  reducers: ValidateSliceCaseReducers<State, CR> | ((creators: ReducerCreators<State>) => CR);\n\n  /**\n   * A callback that receives a *builder* object to define\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\n   *\n   *\n   * @example\n  ```ts\n  import { createAction, createSlice, Action } from '@reduxjs/toolkit'\n  const incrementBy = createAction<number>('incrementBy')\n  const decrement = createAction('decrement')\n  interface RejectedAction extends Action {\n  error: Error\n  }\n  function isRejectedAction(action: Action): action is RejectedAction {\n  return action.type.endsWith('rejected')\n  }\n  createSlice({\n  name: 'counter',\n  initialState: 0,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(incrementBy, (state, action) => {\n        // action is inferred correctly here if using TS\n      })\n      // You can chain calls, or have separate `builder.addCase()` lines each time\n      .addCase(decrement, (state, action) => {})\n      // You can match a range of action types\n      .addMatcher(\n        isRejectedAction,\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\n        (state, action) => {}\n      )\n      // and provide a default case if no other handlers matched\n      .addDefaultCase((state, action) => {})\n    }\n  })\n  ```\n   */\n  extraReducers?: (builder: ActionReducerMapBuilder<State>) => void;\n\n  /**\n   * A map of selectors that receive the slice's state and any additional arguments, and return a result.\n   */\n  selectors?: Selectors;\n}\nexport enum ReducerType {\n  reducer = 'reducer',\n  reducerWithPrepare = 'reducerWithPrepare',\n  asyncThunk = 'asyncThunk',\n}\ntype ReducerDefinition<T extends ReducerType = ReducerType> = {\n  _reducerDefinitionType: T;\n};\nexport type CaseReducerDefinition<S = any, A extends Action = UnknownAction> = CaseReducer<S, A> & ReducerDefinition<ReducerType.reducer>;\n\n/**\n * A CaseReducer with a `prepare` method.\n *\n * @public\n */\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\n  reducer: CaseReducer<State, Action>;\n  prepare: PrepareAction<Action['payload']>;\n};\nexport interface CaseReducerWithPrepareDefinition<State, Action extends PayloadAction> extends CaseReducerWithPrepare<State, Action>, ReducerDefinition<ReducerType.reducerWithPrepare> {}\ntype AsyncThunkSliceReducerConfig<State, ThunkArg extends any, Returned = unknown, ThunkApiConfig extends AsyncThunkConfig = {}> = {\n  pending?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['pending']>>;\n  rejected?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['rejected']>>;\n  fulfilled?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['fulfilled']>>;\n  settled?: CaseReducer<State, ReturnType<AsyncThunk<Returned, ThunkArg, ThunkApiConfig>['rejected' | 'fulfilled']>>;\n  options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>;\n};\ntype AsyncThunkSliceReducerDefinition<State, ThunkArg extends any, Returned = unknown, ThunkApiConfig extends AsyncThunkConfig = {}> = AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, ThunkApiConfig> & ReducerDefinition<ReducerType.asyncThunk> & {\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>;\n};\n\n/**\n * Providing these as part of the config would cause circular types, so we disallow passing them\n */\ntype PreventCircular<ThunkApiConfig> = { [K in keyof ThunkApiConfig]: K extends 'state' | 'dispatch' ? never : ThunkApiConfig[K] };\ninterface AsyncThunkCreator<State, CurriedThunkApiConfig extends PreventCircular<AsyncThunkConfig> = PreventCircular<AsyncThunkConfig>> {\n  <Returned, ThunkArg = void>(payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, CurriedThunkApiConfig>, config?: AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, CurriedThunkApiConfig>): AsyncThunkSliceReducerDefinition<State, ThunkArg, Returned, CurriedThunkApiConfig>;\n  <Returned, ThunkArg, ThunkApiConfig extends PreventCircular<AsyncThunkConfig> = {}>(payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>, config?: AsyncThunkSliceReducerConfig<State, ThunkArg, Returned, ThunkApiConfig>): AsyncThunkSliceReducerDefinition<State, ThunkArg, Returned, ThunkApiConfig>;\n  withTypes<ThunkApiConfig extends PreventCircular<AsyncThunkConfig>>(): AsyncThunkCreator<State, OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>>;\n}\nexport interface ReducerCreators<State> {\n  reducer(caseReducer: CaseReducer<State, PayloadAction>): CaseReducerDefinition<State, PayloadAction>;\n  reducer<Payload>(caseReducer: CaseReducer<State, PayloadAction<Payload>>): CaseReducerDefinition<State, PayloadAction<Payload>>;\n  asyncThunk: AsyncThunkCreator<State>;\n  preparedReducer<Prepare extends PrepareAction<any>>(prepare: Prepare, reducer: CaseReducer<State, ReturnType<_ActionCreatorWithPreparedPayload<Prepare>>>): {\n    _reducerDefinitionType: ReducerType.reducerWithPrepare;\n    prepare: Prepare;\n    reducer: CaseReducer<State, ReturnType<_ActionCreatorWithPreparedPayload<Prepare>>>;\n  };\n}\n\n/**\n * The type describing a slice's `reducers` option.\n *\n * @public\n */\nexport type SliceCaseReducers<State> = Record<string, ReducerDefinition> | Record<string, CaseReducer<State, PayloadAction<any>> | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>>;\n\n/**\n * The type describing a slice's `selectors` option.\n */\nexport type SliceSelectors<State> = {\n  [K: string]: (sliceState: State, ...args: any[]) => any;\n};\ntype SliceActionType<SliceName extends string, ActionName extends keyof any> = ActionName extends string | number ? `${SliceName}/${ActionName}` : string;\n\n/**\n * Derives the slice's `actions` property from the `reducers` options\n *\n * @public\n */\nexport type CaseReducerActions<CaseReducers extends SliceCaseReducers<any>, SliceName extends string> = { [Type in keyof CaseReducers]: CaseReducers[Type] extends infer Definition ? Definition extends {\n  prepare: any;\n} ? ActionCreatorForCaseReducerWithPrepare<Definition, SliceActionType<SliceName, Type>> : Definition extends AsyncThunkSliceReducerDefinition<any, infer ThunkArg, infer Returned, infer ThunkApiConfig> ? AsyncThunk<Returned, ThunkArg, ThunkApiConfig> : Definition extends {\n  reducer: any;\n} ? ActionCreatorForCaseReducer<Definition['reducer'], SliceActionType<SliceName, Type>> : ActionCreatorForCaseReducer<Definition, SliceActionType<SliceName, Type>> : never };\n\n/**\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\n *\n * @internal\n */\ntype ActionCreatorForCaseReducerWithPrepare<CR extends {\n  prepare: any;\n}, Type extends string> = _ActionCreatorWithPreparedPayload<CR['prepare'], Type>;\n\n/**\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\n *\n * @internal\n */\ntype ActionCreatorForCaseReducer<CR, Type extends string> = CR extends (state: any, action: infer Action) => any ? Action extends {\n  payload: infer P;\n} ? PayloadActionCreator<P, Type> : ActionCreatorWithoutPayload<Type> : ActionCreatorWithoutPayload<Type>;\n\n/**\n * Extracts the CaseReducers out of a `reducers` object, even if they are\n * tested into a `CaseReducerWithPrepare`.\n *\n * @internal\n */\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = { [Type in keyof CaseReducers]: CaseReducers[Type] extends infer Definition ? Definition extends AsyncThunkSliceReducerDefinition<any, any, any> ? Id<Pick<Required<Definition>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>> : Definition extends {\n  reducer: infer Reducer;\n} ? Reducer : Definition : never };\ntype RemappedSelector<S extends Selector, NewState> = S extends Selector<any, infer R, infer P> ? Selector<NewState, R, P> & {\n  unwrapped: S;\n} : never;\n\n/**\n * Extracts the final selector type from the `selectors` object.\n *\n * Removes the `string` index signature from the default value.\n */\ntype SliceDefinedSelectors<State, Selectors extends SliceSelectors<State>, RootState> = { [K in keyof Selectors as string extends K ? never : K]: RemappedSelector<Selectors[K], RootState> };\n\n/**\n * Used on a SliceCaseReducers object.\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\n * the `reducer` and the `prepare` function use the same type of `payload`.\n *\n * Might do additional such checks in the future.\n *\n * This type is only ever useful if you want to write your own wrapper around\n * `createSlice`. Please don't use it otherwise!\n *\n * @public\n */\nexport type ValidateSliceCaseReducers<S, ACR extends SliceCaseReducers<S>> = ACR & { [T in keyof ACR]: ACR[T] extends {\n  reducer(s: S, action?: infer A): any;\n} ? {\n  prepare(...a: never[]): Omit<A, 'type'>;\n} : {} };\nfunction getType(slice: string, actionKey: string): string {\n  return `${slice}/${actionKey}`;\n}\ninterface BuildCreateSliceConfig {\n  creators?: {\n    asyncThunk?: typeof asyncThunkCreator;\n  };\n}\nexport function buildCreateSlice({\n  creators\n}: BuildCreateSliceConfig = {}) {\n  const cAT = creators?.asyncThunk?.[asyncThunkSymbol];\n  return function createSlice<State, CaseReducers extends SliceCaseReducers<State>, Name extends string, Selectors extends SliceSelectors<State>, ReducerPath extends string = Name>(options: CreateSliceOptions<State, CaseReducers, Name, ReducerPath, Selectors>): Slice<State, CaseReducers, Name, ReducerPath, Selectors> {\n    const {\n      name,\n      reducerPath = ((name as unknown) as ReducerPath)\n    } = options;\n    if (!name) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(11) : '`name` is a required option for createSlice');\n    }\n    if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n      if (options.initialState === undefined) {\n        console.error('You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`');\n      }\n    }\n    const reducers = (typeof options.reducers === 'function' ? options.reducers(buildReducerCreators<State>()) : options.reducers) || {};\n    const reducerNames = Object.keys(reducers);\n    const context: ReducerHandlingContext<State> = {\n      sliceCaseReducersByName: {},\n      sliceCaseReducersByType: {},\n      actionCreators: {},\n      sliceMatchers: []\n    };\n    const contextMethods: ReducerHandlingContextMethods<State> = {\n      addCase(typeOrActionCreator: string | TypedActionCreator<any>, reducer: CaseReducer<State>) {\n        const type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n        if (!type) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(12) : '`context.addCase` cannot be called with an empty action type');\n        }\n        if (type in context.sliceCaseReducersByType) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(13) : '`context.addCase` cannot be called with two reducers for the same action type: ' + type);\n        }\n        context.sliceCaseReducersByType[type] = reducer;\n        return contextMethods;\n      },\n      addMatcher(matcher, reducer) {\n        context.sliceMatchers.push({\n          matcher,\n          reducer\n        });\n        return contextMethods;\n      },\n      exposeAction(name, actionCreator) {\n        context.actionCreators[name] = actionCreator;\n        return contextMethods;\n      },\n      exposeCaseReducer(name, reducer) {\n        context.sliceCaseReducersByName[name] = reducer;\n        return contextMethods;\n      }\n    };\n    reducerNames.forEach(reducerName => {\n      const reducerDefinition = reducers[reducerName];\n      const reducerDetails: ReducerDetails = {\n        reducerName,\n        type: getType(name, reducerName),\n        createNotation: typeof options.reducers === 'function'\n      };\n      if (isAsyncThunkSliceReducerDefinition<State>(reducerDefinition)) {\n        handleThunkCaseReducerDefinition(reducerDetails, reducerDefinition, contextMethods, cAT);\n      } else {\n        handleNormalReducerDefinition<State>(reducerDetails, (reducerDefinition as any), contextMethods);\n      }\n    });\n    function buildReducer() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof options.extraReducers === 'object') {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(14) : \"The object notation for `createSlice.extraReducers` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice\");\n        }\n      }\n      const [extraReducers = {}, actionMatchers = [], defaultCaseReducer = undefined] = typeof options.extraReducers === 'function' ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers];\n      const finalCaseReducers = {\n        ...extraReducers,\n        ...context.sliceCaseReducersByType\n      };\n      return createReducer(options.initialState, builder => {\n        for (let key in finalCaseReducers) {\n          builder.addCase(key, (finalCaseReducers[key] as CaseReducer<any>));\n        }\n        for (let sM of context.sliceMatchers) {\n          builder.addMatcher(sM.matcher, sM.reducer);\n        }\n        for (let m of actionMatchers) {\n          builder.addMatcher(m.matcher, m.reducer);\n        }\n        if (defaultCaseReducer) {\n          builder.addDefaultCase(defaultCaseReducer);\n        }\n      });\n    }\n    const selectSelf = (state: State) => state;\n    const injectedSelectorCache = new Map<boolean, WeakMap<(rootState: any) => State | undefined, Record<string, (rootState: any) => any>>>();\n    let _reducer: ReducerWithInitialState<State>;\n    function reducer(state: State | undefined, action: UnknownAction) {\n      if (!_reducer) _reducer = buildReducer();\n      return _reducer(state, action);\n    }\n    function getInitialState() {\n      if (!_reducer) _reducer = buildReducer();\n      return _reducer.getInitialState();\n    }\n    function makeSelectorProps<CurrentReducerPath extends string = ReducerPath>(reducerPath: CurrentReducerPath, injected = false): Pick<Slice<State, CaseReducers, Name, CurrentReducerPath, Selectors>, 'getSelectors' | 'selectors' | 'selectSlice' | 'reducerPath'> {\n      function selectSlice(state: { [K in CurrentReducerPath]: State }) {\n        let sliceState = state[reducerPath];\n        if (typeof sliceState === 'undefined') {\n          if (injected) {\n            sliceState = getInitialState();\n          } else if (process.env.NODE_ENV !== 'production') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage5(15) : 'selectSlice returned undefined for an uninjected slice reducer');\n          }\n        }\n        return sliceState;\n      }\n      function getSelectors(selectState: (rootState: any) => State = selectSelf) {\n        const selectorCache = emplace(injectedSelectorCache, injected, {\n          insert: () => new WeakMap()\n        });\n        return (emplace(selectorCache, selectState, {\n          insert: () => {\n            const map: Record<string, Selector<any, any>> = {};\n            for (const [name, selector] of Object.entries(options.selectors ?? {})) {\n              map[name] = wrapSelector(selector, selectState, getInitialState, injected);\n            }\n            return map;\n          }\n        }) as any);\n      }\n      return {\n        reducerPath,\n        getSelectors,\n        get selectors() {\n          return getSelectors(selectSlice);\n        },\n        selectSlice\n      };\n    }\n    const slice: Slice<State, CaseReducers, Name, ReducerPath, Selectors> = {\n      name,\n      reducer,\n      actions: (context.actionCreators as any),\n      caseReducers: (context.sliceCaseReducersByName as any),\n      getInitialState,\n      ...makeSelectorProps(reducerPath),\n      injectInto(injectable, {\n        reducerPath: pathOpt,\n        ...config\n      } = {}) {\n        const newReducerPath = pathOpt ?? reducerPath;\n        injectable.inject({\n          reducerPath: newReducerPath,\n          reducer\n        }, config);\n        return ({\n          ...slice,\n          ...makeSelectorProps(newReducerPath, true)\n        } as any);\n      }\n    };\n    return slice;\n  };\n}\nfunction wrapSelector<State, NewState, S extends Selector<State>>(selector: S, selectState: Selector<NewState, State>, getInitialState: () => State, injected?: boolean) {\n  function wrapper(rootState: NewState, ...args: any[]) {\n    let sliceState = selectState(rootState);\n    if (typeof sliceState === 'undefined') {\n      if (injected) {\n        sliceState = getInitialState();\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage6(16) : 'selectState returned undefined for an uninjected slice reducer');\n      }\n    }\n    return selector(sliceState, ...args);\n  }\n  wrapper.unwrapped = selector;\n  return (wrapper as RemappedSelector<S, NewState>);\n}\n\n/**\n * A function that accepts an initial state, an object full of reducer\n * functions, and a \"slice name\", and automatically generates\n * action creators and action types that correspond to the\n * reducers and state.\n *\n * @public\n */\nexport const createSlice = /* @__PURE__ */buildCreateSlice();\ninterface ReducerHandlingContext<State> {\n  sliceCaseReducersByName: Record<string, CaseReducer<State, any> | Pick<AsyncThunkSliceReducerDefinition<State, any, any, any>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>>;\n  sliceCaseReducersByType: Record<string, CaseReducer<State, any>>;\n  sliceMatchers: ActionMatcherDescriptionCollection<State>;\n  actionCreators: Record<string, Function>;\n}\ninterface ReducerHandlingContextMethods<State> {\n  /**\n   * Adds a case reducer to handle a single action type.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<ActionCreator extends TypedActionCreator<string>>(actionCreator: ActionCreator, reducer: CaseReducer<State, ReturnType<ActionCreator>>): ReducerHandlingContextMethods<State>;\n  /**\n   * Adds a case reducer to handle a single action type.\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\n   * @param reducer - The actual case reducer function.\n   */\n  addCase<Type extends string, A extends Action<Type>>(type: Type, reducer: CaseReducer<State, A>): ReducerHandlingContextMethods<State>;\n\n  /**\n   * Allows you to match incoming actions against your own filter function instead of only the `action.type` property.\n   * @remarks\n   * If multiple matcher reducers match, all of them will be executed in the order\n   * they were defined in - even if a case reducer already matched.\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates)\n   *   function\n   * @param reducer - The actual case reducer function.\n   *\n   */\n  addMatcher<A>(matcher: TypeGuard<A>, reducer: CaseReducer<State, A extends Action ? A : A & Action>): ReducerHandlingContextMethods<State>;\n  /**\n   * Add an action to be exposed under the final `slice.actions` key.\n   * @param name The key to be exposed as.\n   * @param actionCreator The action to expose.\n   * @example\n   * context.exposeAction(\"addPost\", createAction<Post>(\"addPost\"));\n   *\n   * export const { addPost } = slice.actions\n   *\n   * dispatch(addPost(post))\n   */\n  exposeAction(name: string, actionCreator: Function): ReducerHandlingContextMethods<State>;\n  /**\n   * Add a case reducer to be exposed under the final `slice.caseReducers` key.\n   * @param name The key to be exposed as.\n   * @param reducer The reducer to expose.\n   * @example\n   * context.exposeCaseReducer(\"addPost\", (state, action: PayloadAction<Post>) => {\n   *   state.push(action.payload)\n   * })\n   *\n   * slice.caseReducers.addPost([], addPost(post))\n   */\n  exposeCaseReducer(name: string, reducer: CaseReducer<State, any> | Pick<AsyncThunkSliceReducerDefinition<State, any, any, any>, 'fulfilled' | 'rejected' | 'pending' | 'settled'>): ReducerHandlingContextMethods<State>;\n}\ninterface ReducerDetails {\n  /** The key the reducer was defined under */\n  reducerName: string;\n  /** The predefined action type, i.e. `${slice.name}/${reducerName}` */\n  type: string;\n  /** Whether create. notation was used when defining reducers */\n  createNotation: boolean;\n}\nfunction buildReducerCreators<State>(): ReducerCreators<State> {\n  function asyncThunk(payloadCreator: AsyncThunkPayloadCreator<any, any>, config: AsyncThunkSliceReducerConfig<State, any>): AsyncThunkSliceReducerDefinition<State, any> {\n    return {\n      _reducerDefinitionType: ReducerType.asyncThunk,\n      payloadCreator,\n      ...config\n    };\n  }\n  asyncThunk.withTypes = () => asyncThunk;\n  return {\n    reducer(caseReducer: CaseReducer<State, any>) {\n      return Object.assign({\n        // hack so the wrapping function has the same name as the original\n        // we need to create a wrapper so the `reducerDefinitionType` is not assigned to the original\n        [caseReducer.name](...args: Parameters<typeof caseReducer>) {\n          return caseReducer(...args);\n        }\n      }[caseReducer.name], ({\n        _reducerDefinitionType: ReducerType.reducer\n      } as const));\n    },\n    preparedReducer(prepare, reducer) {\n      return {\n        _reducerDefinitionType: ReducerType.reducerWithPrepare,\n        prepare,\n        reducer\n      };\n    },\n    asyncThunk: (asyncThunk as any)\n  };\n}\nfunction handleNormalReducerDefinition<State>({\n  type,\n  reducerName,\n  createNotation\n}: ReducerDetails, maybeReducerWithPrepare: CaseReducer<State, {\n  payload: any;\n  type: string;\n}> | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>, context: ReducerHandlingContextMethods<State>) {\n  let caseReducer: CaseReducer<State, any>;\n  let prepareCallback: PrepareAction<any> | undefined;\n  if ('reducer' in maybeReducerWithPrepare) {\n    if (createNotation && !isCaseReducerWithPrepareDefinition(maybeReducerWithPrepare)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage7(17) : 'Please use the `create.preparedReducer` notation for prepared action creators with the `create` notation.');\n    }\n    caseReducer = maybeReducerWithPrepare.reducer;\n    prepareCallback = maybeReducerWithPrepare.prepare;\n  } else {\n    caseReducer = maybeReducerWithPrepare;\n  }\n  context.addCase(type, caseReducer).exposeCaseReducer(reducerName, caseReducer).exposeAction(reducerName, prepareCallback ? createAction(type, prepareCallback) : createAction(type));\n}\nfunction isAsyncThunkSliceReducerDefinition<State>(reducerDefinition: any): reducerDefinition is AsyncThunkSliceReducerDefinition<State, any, any, any> {\n  return reducerDefinition._reducerDefinitionType === ReducerType.asyncThunk;\n}\nfunction isCaseReducerWithPrepareDefinition<State>(reducerDefinition: any): reducerDefinition is CaseReducerWithPrepareDefinition<State, any> {\n  return reducerDefinition._reducerDefinitionType === ReducerType.reducerWithPrepare;\n}\nfunction handleThunkCaseReducerDefinition<State>({\n  type,\n  reducerName\n}: ReducerDetails, reducerDefinition: AsyncThunkSliceReducerDefinition<State, any, any, any>, context: ReducerHandlingContextMethods<State>, cAT: typeof _createAsyncThunk | undefined) {\n  if (!cAT) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage8(18) : 'Cannot use `create.asyncThunk` in the built-in `createSlice`. ' + 'Use `buildCreateSlice({ creators: { asyncThunk: asyncThunkCreator } })` to create a customised version of `createSlice`.');\n  }\n  const {\n    payloadCreator,\n    fulfilled,\n    pending,\n    rejected,\n    settled,\n    options\n  } = reducerDefinition;\n  const thunk = cAT(type, payloadCreator, (options as any));\n  context.exposeAction(reducerName, thunk);\n  if (fulfilled) {\n    context.addCase(thunk.fulfilled, fulfilled);\n  }\n  if (pending) {\n    context.addCase(thunk.pending, pending);\n  }\n  if (rejected) {\n    context.addCase(thunk.rejected, rejected);\n  }\n  if (settled) {\n    context.addMatcher(thunk.settled, settled);\n  }\n  context.exposeCaseReducer(reducerName, {\n    fulfilled: fulfilled || noop,\n    pending: pending || noop,\n    rejected: rejected || noop,\n    settled: settled || noop\n  });\n}\nfunction noop() {}", "import type { EntityId, EntityState, EntityStateAdapter, EntityStateFactory } from './models';\nexport function getInitialEntityState<T, Id extends EntityId>(): EntityState<T, Id> {\n  return {\n    ids: [],\n    entities: ({} as Record<Id, T>)\n  };\n}\nexport function createInitialStateFactory<T, Id extends EntityId>(stateAdapter: EntityStateAdapter<T, Id>): EntityStateFactory<T, Id> {\n  function getInitialState(state?: undefined, entities?: readonly T[] | Record<Id, T>): EntityState<T, Id>;\n  function getInitialState<S extends object>(additionalState: S, entities?: readonly T[] | Record<Id, T>): EntityState<T, Id> & S;\n  function getInitialState(additionalState: any = {}, entities?: readonly T[] | Record<Id, T>): any {\n    const state = Object.assign(getInitialEntityState(), additionalState);\n    return entities ? stateAdapter.setAll(state, entities) : state;\n  }\n  return {\n    getInitialState\n  };\n}", "import type { CreateSelectorFunction, Selector } from 'reselect';\nimport { createDraftSafeSelector } from '../createDraftSafeSelector';\nimport type { EntityId, EntitySelectors, EntityState } from './models';\ntype AnyFunction = (...args: any) => any;\ntype AnyCreateSelectorFunction = CreateSelectorFunction<<F extends AnyFunction>(f: F) => F, <F extends AnyFunction>(f: F) => F>;\nexport type GetSelectorsOptions = {\n  createSelector?: AnyCreateSelectorFunction;\n};\nexport function createSelectorsFactory<T, Id extends EntityId>() {\n  function getSelectors(selectState?: undefined, options?: GetSelectorsOptions): EntitySelectors<T, EntityState<T, Id>, Id>;\n  function getSelectors<V>(selectState: (state: V) => EntityState<T, Id>, options?: GetSelectorsOptions): EntitySelectors<T, V, Id>;\n  function getSelectors<V>(selectState?: (state: V) => EntityState<T, Id>, options: GetSelectorsOptions = {}): EntitySelectors<T, any, Id> {\n    const {\n      createSelector = (createDraftSafeSelector as AnyCreateSelectorFunction)\n    } = options;\n    const selectIds = (state: EntityState<T, Id>) => state.ids;\n    const selectEntities = (state: EntityState<T, Id>) => state.entities;\n    const selectAll = createSelector(selectIds, selectEntities, (ids, entities): T[] => ids.map(id => entities[id]!));\n    const selectId = (_: unknown, id: Id) => id;\n    const selectById = (entities: Record<Id, T>, id: Id) => entities[id];\n    const selectTotal = createSelector(selectIds, ids => ids.length);\n    if (!selectState) {\n      return {\n        selectIds,\n        selectEntities,\n        selectAll,\n        selectTotal,\n        selectById: createSelector(selectEntities, selectId, selectById)\n      };\n    }\n    const selectGlobalizedEntities = createSelector((selectState as Selector<V, EntityState<T, Id>>), selectEntities);\n    return {\n      selectIds: createSelector(selectState, selectIds),\n      selectEntities: selectGlobalizedEntities,\n      selectAll: createSelector(selectState, selectAll),\n      selectTotal: createSelector(selectState, selectTotal),\n      selectById: createSelector(selectGlobalizedEntities, selectId, selectById)\n    };\n  }\n  return {\n    getSelectors\n  };\n}", "import { produce as createNextState, isDraft } from 'immer';\nimport type { Draft } from 'immer';\nimport type { EntityId, DraftableEntityState, PreventAny } from './models';\nimport type { PayloadAction } from '../createAction';\nimport { isFSA } from '../createAction';\nexport const isDraftTyped = (isDraft as <T>(value: T | Draft<T>) => value is Draft<T>);\nexport function createSingleArgumentStateOperator<T, Id extends EntityId>(mutator: (state: DraftableEntityState<T, Id>) => void) {\n  const operator = createStateOperator((_: undefined, state: DraftableEntityState<T, Id>) => mutator(state));\n  return function operation<S extends DraftableEntityState<T, Id>>(state: PreventAny<S, T, Id>): S {\n    return operator((state as S), undefined);\n  };\n}\nexport function createStateOperator<T, Id extends EntityId, R>(mutator: (arg: R, state: DraftableEntityState<T, Id>) => void) {\n  return function operation<S extends DraftableEntityState<T, Id>>(state: S, arg: R | PayloadAction<R>): S {\n    function isPayloadActionArgument(arg: R | PayloadAction<R>): arg is PayloadAction<R> {\n      return isFSA(arg);\n    }\n    const runMutator = (draft: DraftableEntityState<T, Id>) => {\n      if (isPayloadActionArgument(arg)) {\n        mutator(arg.payload, draft);\n      } else {\n        mutator(arg, draft);\n      }\n    };\n    if (isDraftTyped<DraftableEntityState<T, Id>>(state)) {\n      // we must already be inside a `createNextState` call, likely because\n      // this is being wrapped in `createReducer` or `createSlice`.\n      // It's safe to just pass the draft to the mutator.\n      runMutator(state);\n\n      // since it's a draft, we'll just return it\n      return state;\n    }\n    return createNextState(state, runMutator);\n  };\n}", "import type { Draft } from 'immer';\nimport { current, isDraft } from 'immer';\nimport type { DraftableEntityState, EntityId, IdSelector, Update } from './models';\nexport function selectIdValue<T, Id extends EntityId>(entity: T, selectId: IdSelector<T, Id>) {\n  const key = selectId(entity);\n  if (process.env.NODE_ENV !== 'production' && key === undefined) {\n    console.warn('The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n  }\n  return key;\n}\nexport function ensureEntitiesArray<T, Id extends EntityId>(entities: readonly T[] | Record<Id, T>): readonly T[] {\n  if (!Array.isArray(entities)) {\n    entities = Object.values(entities);\n  }\n  return entities;\n}\nexport function getCurrent<T>(value: T | Draft<T>): T {\n  return ((isDraft(value) ? current(value) : value) as T);\n}\nexport function splitAddedUpdatedEntities<T, Id extends EntityId>(newEntities: readonly T[] | Record<Id, T>, selectId: IdSelector<T, Id>, state: DraftableEntityState<T, Id>): [T[], Update<T, Id>[], Id[]] {\n  newEntities = ensureEntitiesArray(newEntities);\n  const existingIdsArray = getCurrent(state.ids);\n  const existingIds = new Set<Id>(existingIdsArray);\n  const added: T[] = [];\n  const updated: Update<T, Id>[] = [];\n  for (const entity of newEntities) {\n    const id = selectIdValue(entity, selectId);\n    if (existingIds.has(id)) {\n      updated.push({\n        id,\n        changes: entity\n      });\n    } else {\n      added.push(entity);\n    }\n  }\n  return [added, updated, existingIdsArray];\n}", "import type { Draft } from 'immer';\nimport type { EntityStateAdapter, IdSelector, Update, EntityId, DraftableEntityState } from './models';\nimport { createStateOperator, createSingleArgumentStateOperator } from './state_adapter';\nimport { selectIdValue, ensureEntitiesArray, splitAddedUpdatedEntities } from './utils';\nexport function createUnsortedStateAdapter<T, Id extends EntityId>(selectId: IdSelector<T, Id>): EntityStateAdapter<T, Id> {\n  type R = DraftableEntityState<T, Id>;\n  function addOneMutably(entity: T, state: R): void {\n    const key = selectIdValue(entity, selectId);\n    if (key in state.entities) {\n      return;\n    }\n    state.ids.push((key as Id & Draft<Id>));\n    (state.entities as Record<Id, T>)[key] = entity;\n  }\n  function addManyMutably(newEntities: readonly T[] | Record<Id, T>, state: R): void {\n    newEntities = ensureEntitiesArray(newEntities);\n    for (const entity of newEntities) {\n      addOneMutably(entity, state);\n    }\n  }\n  function setOneMutably(entity: T, state: R): void {\n    const key = selectIdValue(entity, selectId);\n    if (!(key in state.entities)) {\n      state.ids.push((key as Id & Draft<Id>));\n    }\n    ;\n    (state.entities as Record<Id, T>)[key] = entity;\n  }\n  function setManyMutably(newEntities: readonly T[] | Record<Id, T>, state: R): void {\n    newEntities = ensureEntitiesArray(newEntities);\n    for (const entity of newEntities) {\n      setOneMutably(entity, state);\n    }\n  }\n  function setAllMutably(newEntities: readonly T[] | Record<Id, T>, state: R): void {\n    newEntities = ensureEntitiesArray(newEntities);\n    state.ids = [];\n    state.entities = ({} as Record<Id, T>);\n    addManyMutably(newEntities, state);\n  }\n  function removeOneMutably(key: Id, state: R): void {\n    return removeManyMutably([key], state);\n  }\n  function removeManyMutably(keys: readonly Id[], state: R): void {\n    let didMutate = false;\n    keys.forEach(key => {\n      if (key in state.entities) {\n        delete (state.entities as Record<Id, T>)[key];\n        didMutate = true;\n      }\n    });\n    if (didMutate) {\n      state.ids = ((state.ids as Id[]).filter(id => id in state.entities) as Id[] | Draft<Id[]>);\n    }\n  }\n  function removeAllMutably(state: R): void {\n    Object.assign(state, {\n      ids: [],\n      entities: {}\n    });\n  }\n  function takeNewKey(keys: {\n    [id: string]: Id;\n  }, update: Update<T, Id>, state: R): boolean {\n    const original: T | undefined = (state.entities as Record<Id, T>)[update.id];\n    if (original === undefined) {\n      return false;\n    }\n    const updated: T = Object.assign({}, original, update.changes);\n    const newKey = selectIdValue(updated, selectId);\n    const hasNewKey = newKey !== update.id;\n    if (hasNewKey) {\n      keys[update.id] = newKey;\n      delete (state.entities as Record<Id, T>)[update.id];\n    }\n    ;\n    (state.entities as Record<Id, T>)[newKey] = updated;\n    return hasNewKey;\n  }\n  function updateOneMutably(update: Update<T, Id>, state: R): void {\n    return updateManyMutably([update], state);\n  }\n  function updateManyMutably(updates: ReadonlyArray<Update<T, Id>>, state: R): void {\n    const newKeys: {\n      [id: string]: Id;\n    } = {};\n    const updatesPerEntity: {\n      [id: string]: Update<T, Id>;\n    } = {};\n    updates.forEach(update => {\n      // Only apply updates to entities that currently exist\n      if (update.id in state.entities) {\n        // If there are multiple updates to one entity, merge them together\n        updatesPerEntity[update.id] = {\n          id: update.id,\n          // Spreads ignore falsy values, so this works even if there isn't\n          // an existing update already at this key\n          changes: {\n            ...updatesPerEntity[update.id]?.changes,\n            ...update.changes\n          }\n        };\n      }\n    });\n    updates = Object.values(updatesPerEntity);\n    const didMutateEntities = updates.length > 0;\n    if (didMutateEntities) {\n      const didMutateIds = updates.filter(update => takeNewKey(newKeys, update, state)).length > 0;\n      if (didMutateIds) {\n        state.ids = Object.values(state.entities).map(e => selectIdValue((e as T), selectId));\n      }\n    }\n  }\n  function upsertOneMutably(entity: T, state: R): void {\n    return upsertManyMutably([entity], state);\n  }\n  function upsertManyMutably(newEntities: readonly T[] | Record<Id, T>, state: R): void {\n    const [added, updated] = splitAddedUpdatedEntities<T, Id>(newEntities, selectId, state);\n    updateManyMutably(updated, state);\n    addManyMutably(added, state);\n  }\n  return {\n    removeAll: createSingleArgumentStateOperator(removeAllMutably),\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    setOne: createStateOperator(setOneMutably),\n    setMany: createStateOperator(setManyMutably),\n    setAll: createStateOperator(setAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    upsertMany: createStateOperator(upsertManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably)\n  };\n}", "import type { IdSelector, Comparer, EntityStateAdapter, Update, EntityId, DraftableEntityState } from './models';\nimport { createStateOperator } from './state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\nimport { selectIdValue, ensureEntitiesArray, splitAddedUpdatedEntities, getCurrent } from './utils';\n\n// Borrowed from Replay\nexport function findInsertIndex<T>(sortedItems: T[], item: T, comparisonFunction: Comparer<T>): number {\n  let lowIndex = 0;\n  let highIndex = sortedItems.length;\n  while (lowIndex < highIndex) {\n    let middleIndex = lowIndex + highIndex >>> 1;\n    const currentItem = sortedItems[middleIndex];\n    const res = comparisonFunction(item, currentItem);\n    if (res >= 0) {\n      lowIndex = middleIndex + 1;\n    } else {\n      highIndex = middleIndex;\n    }\n  }\n  return lowIndex;\n}\nexport function insert<T>(sortedItems: T[], item: T, comparisonFunction: Comparer<T>): T[] {\n  const insertAtIndex = findInsertIndex(sortedItems, item, comparisonFunction);\n  sortedItems.splice(insertAtIndex, 0, item);\n  return sortedItems;\n}\nexport function createSortedStateAdapter<T, Id extends EntityId>(selectId: IdSelector<T, Id>, comparer: Comparer<T>): EntityStateAdapter<T, Id> {\n  type R = DraftableEntityState<T, Id>;\n  const {\n    removeOne,\n    removeMany,\n    removeAll\n  } = createUnsortedStateAdapter(selectId);\n  function addOneMutably(entity: T, state: R): void {\n    return addManyMutably([entity], state);\n  }\n  function addManyMutably(newEntities: readonly T[] | Record<Id, T>, state: R, existingIds?: Id[]): void {\n    newEntities = ensureEntitiesArray(newEntities);\n    const existingKeys = new Set<Id>(existingIds ?? getCurrent(state.ids));\n    const models = newEntities.filter(model => !existingKeys.has(selectIdValue(model, selectId)));\n    if (models.length !== 0) {\n      mergeFunction(state, models);\n    }\n  }\n  function setOneMutably(entity: T, state: R): void {\n    return setManyMutably([entity], state);\n  }\n  function setManyMutably(newEntities: readonly T[] | Record<Id, T>, state: R): void {\n    newEntities = ensureEntitiesArray(newEntities);\n    if (newEntities.length !== 0) {\n      for (const item of newEntities) {\n        delete (state.entities as Record<Id, T>)[selectId(item)];\n      }\n      mergeFunction(state, newEntities);\n    }\n  }\n  function setAllMutably(newEntities: readonly T[] | Record<Id, T>, state: R): void {\n    newEntities = ensureEntitiesArray(newEntities);\n    state.entities = ({} as Record<Id, T>);\n    state.ids = [];\n    addManyMutably(newEntities, state, []);\n  }\n  function updateOneMutably(update: Update<T, Id>, state: R): void {\n    return updateManyMutably([update], state);\n  }\n  function updateManyMutably(updates: ReadonlyArray<Update<T, Id>>, state: R): void {\n    let appliedUpdates = false;\n    let replacedIds = false;\n    for (let update of updates) {\n      const entity: T | undefined = (state.entities as Record<Id, T>)[update.id];\n      if (!entity) {\n        continue;\n      }\n      appliedUpdates = true;\n      Object.assign(entity, update.changes);\n      const newId = selectId(entity);\n      if (update.id !== newId) {\n        // We do support the case where updates can change an item's ID.\n        // This makes things trickier - go ahead and swap the IDs in state now.\n        replacedIds = true;\n        delete (state.entities as Record<Id, T>)[update.id];\n        const oldIndex = (state.ids as Id[]).indexOf(update.id);\n        state.ids[oldIndex] = newId;\n        (state.entities as Record<Id, T>)[newId] = entity;\n      }\n    }\n    if (appliedUpdates) {\n      mergeFunction(state, [], appliedUpdates, replacedIds);\n    }\n  }\n  function upsertOneMutably(entity: T, state: R): void {\n    return upsertManyMutably([entity], state);\n  }\n  function upsertManyMutably(newEntities: readonly T[] | Record<Id, T>, state: R): void {\n    const [added, updated, existingIdsArray] = splitAddedUpdatedEntities<T, Id>(newEntities, selectId, state);\n    if (updated.length) {\n      updateManyMutably(updated, state);\n    }\n    if (added.length) {\n      addManyMutably(added, state, existingIdsArray);\n    }\n  }\n  function areArraysEqual(a: readonly unknown[], b: readonly unknown[]) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] === b[i]) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n  type MergeFunction = (state: R, addedItems: readonly T[], appliedUpdates?: boolean, replacedIds?: boolean) => void;\n  const mergeFunction: MergeFunction = (state, addedItems, appliedUpdates, replacedIds) => {\n    const currentEntities = getCurrent(state.entities);\n    const currentIds = getCurrent(state.ids);\n    const stateEntities = (state.entities as Record<Id, T>);\n    let ids: Iterable<Id> = currentIds;\n    if (replacedIds) {\n      ids = new Set(currentIds);\n    }\n    let sortedEntities: T[] = [];\n    for (const id of ids) {\n      const entity = currentEntities[id];\n      if (entity) {\n        sortedEntities.push(entity);\n      }\n    }\n    const wasPreviouslyEmpty = sortedEntities.length === 0;\n\n    // Insert/overwrite all new/updated\n    for (const item of addedItems) {\n      stateEntities[selectId(item)] = item;\n      if (!wasPreviouslyEmpty) {\n        // Binary search insertion generally requires fewer comparisons\n        insert(sortedEntities, item, comparer);\n      }\n    }\n    if (wasPreviouslyEmpty) {\n      // All we have is the incoming values, sort them\n      sortedEntities = addedItems.slice().sort(comparer);\n    } else if (appliedUpdates) {\n      // We should have a _mostly_-sorted array already\n      sortedEntities.sort(comparer);\n    }\n    const newSortedIds = sortedEntities.map(selectId);\n    if (!areArraysEqual(currentIds, newSortedIds)) {\n      state.ids = newSortedIds;\n    }\n  };\n  return {\n    removeOne,\n    removeMany,\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    upsertOne: createStateOperator(upsertOneMutably),\n    setOne: createStateOperator(setOneMutably),\n    setMany: createStateOperator(setManyMutably),\n    setAll: createStateOperator(setAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    upsertMany: createStateOperator(upsertManyMutably)\n  };\n}", "import type { EntityAdapter, EntityId, EntityAdapterOptions } from './models';\nimport { createInitialStateFactory } from './entity_state';\nimport { createSelectorsFactory } from './state_selectors';\nimport { createSortedStateAdapter } from './sorted_state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\nimport type { WithRequiredProp } from '../tsHelpers';\nexport function createEntityAdapter<T, Id extends EntityId>(options: WithRequiredProp<EntityAdapterOptions<T, Id>, 'selectId'>): EntityAdapter<T, Id>;\nexport function createEntityAdapter<T extends {\n  id: EntityId;\n}>(options?: Omit<EntityAdapterOptions<T, T['id']>, 'selectId'>): EntityAdapter<T, T['id']>;\n\n/**\r\n *\r\n * @param options\r\n *\r\n * @public\r\n */\nexport function createEntityAdapter<T>(options: EntityAdapterOptions<T, EntityId> = {}): EntityAdapter<T, EntityId> {\n  const {\n    selectId,\n    sortComparer\n  }: Required<EntityAdapterOptions<T, EntityId>> = {\n    sortComparer: false,\n    selectId: (instance: any) => instance.id,\n    ...options\n  };\n  const stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);\n  const stateFactory = createInitialStateFactory(stateAdapter);\n  const selectorsFactory = createSelectorsFactory<T, EntityId>();\n  return {\n    selectId,\n    sortComparer,\n    ...stateFactory,\n    ...selectorsFactory,\n    ...stateAdapter\n  };\n}", "import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2, formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport type { Action, Dispatch, MiddlewareAPI, UnknownAction } from 'redux';\nimport { isAction } from 'redux';\nimport type { ThunkDispatch } from 'redux-thunk';\nimport { createAction } from '../createAction';\nimport { nanoid } from '../nanoid';\nimport { find } from '../utils';\nimport { TaskAbortError, listenerCancelled, listenerCompleted, taskCancelled, taskCompleted } from './exceptions';\nimport { createDelay, createPause, raceWithSignal, runTask, validateActive } from './task';\nimport type { AbortSignalWithReason, AddListenerOverloads, AnyListenerPredicate, CreateListenerMiddlewareOptions, FallbackAddListenerOptions, ForkOptions, ForkedTask, ForkedTaskExecutor, ListenerEntry, ListenerErrorHandler, ListenerErrorInfo, ListenerMiddleware, ListenerMiddlewareInstance, TakePattern, TaskResult, TypedAddListener, TypedCreateListenerEntry, TypedRemoveListener, UnsubscribeListener, UnsubscribeListenerOptions } from './types';\nimport { abortControllerWithReason, addAbortSignalListener, assertFunction, catchRejection, noop } from './utils';\nexport { TaskAbortError } from './exceptions';\nexport type { AsyncTaskExecutor, CreateListenerMiddlewareOptions, ForkedTask, ForkedTaskAPI, ForkedTaskExecutor, ListenerEffect, ListenerEffectAPI, ListenerErrorHandler, ListenerMiddleware, ListenerMiddlewareInstance, SyncTaskExecutor, TaskCancelled, TaskRejected, TaskResolved, TaskResult, TypedAddListener, TypedRemoveListener, TypedStartListening, TypedStopListening, UnsubscribeListener, UnsubscribeListenerOptions } from './types';\n\n//Overly-aggressive byte-shaving\nconst {\n  assign\n} = Object;\n/**\n * @internal\n */\nconst INTERNAL_NIL_TOKEN = ({} as const);\nconst alm = ('listenerMiddleware' as const);\nconst createFork = (parentAbortSignal: AbortSignalWithReason<unknown>, parentBlockingPromises: Promise<any>[]) => {\n  const linkControllers = (controller: AbortController) => addAbortSignalListener(parentAbortSignal, () => abortControllerWithReason(controller, parentAbortSignal.reason));\n  return <T,>(taskExecutor: ForkedTaskExecutor<T>, opts?: ForkOptions): ForkedTask<T> => {\n    assertFunction(taskExecutor, 'taskExecutor');\n    const childAbortController = new AbortController();\n    linkControllers(childAbortController);\n    const result = runTask<T>(async (): Promise<T> => {\n      validateActive(parentAbortSignal);\n      validateActive(childAbortController.signal);\n      const result = ((await taskExecutor({\n        pause: createPause(childAbortController.signal),\n        delay: createDelay(childAbortController.signal),\n        signal: childAbortController.signal\n      })) as T);\n      validateActive(childAbortController.signal);\n      return result;\n    }, () => abortControllerWithReason(childAbortController, taskCompleted));\n    if (opts?.autoJoin) {\n      parentBlockingPromises.push(result.catch(noop));\n    }\n    return {\n      result: createPause<TaskResult<T>>(parentAbortSignal)(result),\n      cancel() {\n        abortControllerWithReason(childAbortController, taskCancelled);\n      }\n    };\n  };\n};\nconst createTakePattern = <S,>(startListening: AddListenerOverloads<UnsubscribeListener, S, Dispatch>, signal: AbortSignal): TakePattern<S> => {\n  /**\n   * A function that takes a ListenerPredicate and an optional timeout,\n   * and resolves when either the predicate returns `true` based on an action\n   * state combination or when the timeout expires.\n   * If the parent listener is canceled while waiting, this will throw a\n   * TaskAbortError.\n   */\n  const take = async <P extends AnyListenerPredicate<S>,>(predicate: P, timeout: number | undefined) => {\n    validateActive(signal);\n\n    // Placeholder unsubscribe function until the listener is added\n    let unsubscribe: UnsubscribeListener = () => {};\n    const tuplePromise = new Promise<[Action, S, S]>((resolve, reject) => {\n      // Inside the Promise, we synchronously add the listener.\n      let stopListening = startListening({\n        predicate: (predicate as any),\n        effect: (action, listenerApi): void => {\n          // One-shot listener that cleans up as soon as the predicate passes\n          listenerApi.unsubscribe();\n          // Resolve the promise with the same arguments the predicate saw\n          resolve([action, listenerApi.getState(), listenerApi.getOriginalState()]);\n        }\n      });\n      unsubscribe = () => {\n        stopListening();\n        reject();\n      };\n    });\n    const promises: (Promise<null> | Promise<[Action, S, S]>)[] = [tuplePromise];\n    if (timeout != null) {\n      promises.push(new Promise<null>(resolve => setTimeout(resolve, timeout, null)));\n    }\n    try {\n      const output = await raceWithSignal(signal, Promise.race(promises));\n      validateActive(signal);\n      return output;\n    } finally {\n      // Always clean up the listener\n      unsubscribe();\n    }\n  };\n  return (((predicate: AnyListenerPredicate<S>, timeout: number | undefined) => catchRejection(take(predicate, timeout))) as TakePattern<S>);\n};\nconst getListenerEntryPropsFrom = (options: FallbackAddListenerOptions) => {\n  let {\n    type,\n    actionCreator,\n    matcher,\n    predicate,\n    effect\n  } = options;\n  if (type) {\n    predicate = createAction(type).match;\n  } else if (actionCreator) {\n    type = actionCreator!.type;\n    predicate = actionCreator.match;\n  } else if (matcher) {\n    predicate = matcher;\n  } else if (predicate) {\n    // pass\n  } else {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(21) : 'Creating or removing a listener requires one of the known fields for matching an action');\n  }\n  assertFunction(effect, 'options.listener');\n  return {\n    predicate,\n    type,\n    effect\n  };\n};\n\n/** Accepts the possible options for creating a listener, and returns a formatted listener entry */\nexport const createListenerEntry: TypedCreateListenerEntry<unknown> = ( /* @__PURE__ */(assign((options: FallbackAddListenerOptions) => {\n  const {\n    type,\n    predicate,\n    effect\n  } = getListenerEntryPropsFrom(options);\n  const id = nanoid();\n  const entry: ListenerEntry<unknown> = {\n    id,\n    effect,\n    type,\n    predicate,\n    pending: new Set<AbortController>(),\n    unsubscribe: () => {\n      throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(22) : 'Unsubscribe not initialized');\n    }\n  };\n  return entry;\n}, {\n  withTypes: () => createListenerEntry\n}) as unknown) as TypedCreateListenerEntry<unknown>);\nconst cancelActiveListeners = (entry: ListenerEntry<unknown, Dispatch<UnknownAction>>) => {\n  entry.pending.forEach(controller => {\n    abortControllerWithReason(controller, listenerCancelled);\n  });\n};\nconst createClearListenerMiddleware = (listenerMap: Map<string, ListenerEntry>) => {\n  return () => {\n    listenerMap.forEach(cancelActiveListeners);\n    listenerMap.clear();\n  };\n};\n\n/**\n * Safely reports errors to the `errorHandler` provided.\n * Errors that occur inside `errorHandler` are notified in a new task.\n * Inspired by [rxjs reportUnhandledError](https://github.com/ReactiveX/rxjs/blob/6fafcf53dc9e557439b25debaeadfd224b245a66/src/internal/util/reportUnhandledError.ts)\n * @param errorHandler\n * @param errorToNotify\n */\nconst safelyNotifyError = (errorHandler: ListenerErrorHandler, errorToNotify: unknown, errorInfo: ListenerErrorInfo): void => {\n  try {\n    errorHandler(errorToNotify, errorInfo);\n  } catch (errorHandlerError) {\n    // We cannot let an error raised here block the listener queue.\n    // The error raised here will be picked up by `window.onerror`, `process.on('error')` etc...\n    setTimeout(() => {\n      throw errorHandlerError;\n    }, 0);\n  }\n};\n\n/**\n * @public\n */\nexport const addListener = ( /* @__PURE__ */(assign( /* @__PURE__ */createAction(`${alm}/add`), {\n  withTypes: () => addListener\n}) as unknown) as TypedAddListener<unknown>);\n\n/**\n * @public\n */\nexport const clearAllListeners = /* @__PURE__ */createAction(`${alm}/removeAll`);\n\n/**\n * @public\n */\nexport const removeListener = ( /* @__PURE__ */(assign( /* @__PURE__ */createAction(`${alm}/remove`), {\n  withTypes: () => removeListener\n}) as unknown) as TypedRemoveListener<unknown>);\nconst defaultErrorHandler: ListenerErrorHandler = (...args: unknown[]) => {\n  console.error(`${alm}/error`, ...args);\n};\n\n/**\n * @public\n */\nexport const createListenerMiddleware = <StateType = unknown, DispatchType extends Dispatch<Action> = ThunkDispatch<StateType, unknown, UnknownAction>, ExtraArgument = unknown>(middlewareOptions: CreateListenerMiddlewareOptions<ExtraArgument> = {}) => {\n  const listenerMap = new Map<string, ListenerEntry>();\n  const {\n    extra,\n    onError = defaultErrorHandler\n  } = middlewareOptions;\n  assertFunction(onError, 'onError');\n  const insertEntry = (entry: ListenerEntry) => {\n    entry.unsubscribe = () => listenerMap.delete(entry!.id);\n    listenerMap.set(entry.id, entry);\n    return (cancelOptions?: UnsubscribeListenerOptions) => {\n      entry.unsubscribe();\n      if (cancelOptions?.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    };\n  };\n  const startListening = (((options: FallbackAddListenerOptions) => {\n    let entry = find(Array.from(listenerMap.values()), existingEntry => existingEntry.effect === options.effect);\n    if (!entry) {\n      entry = createListenerEntry((options as any));\n    }\n    return insertEntry(entry);\n  }) as AddListenerOverloads<any>);\n  assign(startListening, {\n    withTypes: () => startListening\n  });\n  const stopListening = (options: FallbackAddListenerOptions & UnsubscribeListenerOptions): boolean => {\n    const {\n      type,\n      effect,\n      predicate\n    } = getListenerEntryPropsFrom(options);\n    const entry = find(Array.from(listenerMap.values()), entry => {\n      const matchPredicateOrType = typeof type === 'string' ? entry.type === type : entry.predicate === predicate;\n      return matchPredicateOrType && entry.effect === effect;\n    });\n    if (entry) {\n      entry.unsubscribe();\n      if (options.cancelActive) {\n        cancelActiveListeners(entry);\n      }\n    }\n    return !!entry;\n  };\n  assign(stopListening, {\n    withTypes: () => stopListening\n  });\n  const notifyListener = async (entry: ListenerEntry<unknown, Dispatch<UnknownAction>>, action: unknown, api: MiddlewareAPI, getOriginalState: () => StateType) => {\n    const internalTaskController = new AbortController();\n    const take = createTakePattern((startListening as AddListenerOverloads<any>), internalTaskController.signal);\n    const autoJoinPromises: Promise<any>[] = [];\n    try {\n      entry.pending.add(internalTaskController);\n      await Promise.resolve(entry.effect(action,\n      // Use assign() rather than ... to avoid extra helper functions added to bundle\n      assign({}, api, {\n        getOriginalState,\n        condition: (predicate: AnyListenerPredicate<any>, timeout?: number) => take(predicate, timeout).then(Boolean),\n        take,\n        delay: createDelay(internalTaskController.signal),\n        pause: createPause<any>(internalTaskController.signal),\n        extra,\n        signal: internalTaskController.signal,\n        fork: createFork(internalTaskController.signal, autoJoinPromises),\n        unsubscribe: entry.unsubscribe,\n        subscribe: () => {\n          listenerMap.set(entry.id, entry);\n        },\n        cancelActiveListeners: () => {\n          entry.pending.forEach((controller, _, set) => {\n            if (controller !== internalTaskController) {\n              abortControllerWithReason(controller, listenerCancelled);\n              set.delete(controller);\n            }\n          });\n        },\n        cancel: () => {\n          abortControllerWithReason(internalTaskController, listenerCancelled);\n          entry.pending.delete(internalTaskController);\n        },\n        throwIfCancelled: () => {\n          validateActive(internalTaskController.signal);\n        }\n      })));\n    } catch (listenerError) {\n      if (!(listenerError instanceof TaskAbortError)) {\n        safelyNotifyError(onError, listenerError, {\n          raisedBy: 'effect'\n        });\n      }\n    } finally {\n      await Promise.all(autoJoinPromises);\n      abortControllerWithReason(internalTaskController, listenerCompleted); // Notify that the task has completed\n      entry.pending.delete(internalTaskController);\n    }\n  };\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap);\n  const middleware: ListenerMiddleware<StateType, DispatchType, ExtraArgument> = api => next => action => {\n    if (!isAction(action)) {\n      // we only want to notify listeners for action objects\n      return next(action);\n    }\n    if (addListener.match(action)) {\n      return startListening((action.payload as any));\n    }\n    if (clearAllListeners.match(action)) {\n      clearListenerMiddleware();\n      return;\n    }\n    if (removeListener.match(action)) {\n      return stopListening(action.payload);\n    }\n\n    // Need to get this state _before_ the reducer processes the action\n    let originalState: StateType | typeof INTERNAL_NIL_TOKEN = api.getState();\n\n    // `getOriginalState` can only be called synchronously.\n    // @see https://github.com/reduxjs/redux-toolkit/discussions/1648#discussioncomment-1932820\n    const getOriginalState = (): StateType => {\n      if (originalState === INTERNAL_NIL_TOKEN) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(23) : `${alm}: getOriginalState can only be called synchronously`);\n      }\n      return (originalState as StateType);\n    };\n    let result: unknown;\n    try {\n      // Actually forward the action to the reducer before we handle listeners\n      result = next(action);\n      if (listenerMap.size > 0) {\n        const currentState = api.getState();\n        // Work around ESBuild+TS transpilation issue\n        const listenerEntries = Array.from(listenerMap.values());\n        for (const entry of listenerEntries) {\n          let runListener = false;\n          try {\n            runListener = entry.predicate(action, currentState, originalState);\n          } catch (predicateError) {\n            runListener = false;\n            safelyNotifyError(onError, predicateError, {\n              raisedBy: 'predicate'\n            });\n          }\n          if (!runListener) {\n            continue;\n          }\n          notifyListener(entry, action, api, getOriginalState);\n        }\n      }\n    } finally {\n      // Remove `originalState` store from this scope.\n      originalState = INTERNAL_NIL_TOKEN;\n    }\n    return result;\n  };\n  return ({\n    middleware,\n    startListening,\n    stopListening,\n    clearListeners: clearListenerMiddleware\n  } as ListenerMiddlewareInstance<StateType, DispatchType, ExtraArgument>);\n};", "import type { SerializedError } from '@reduxjs/toolkit';\nconst task = 'task';\nconst listener = 'listener';\nconst completed = 'completed';\nconst cancelled = 'cancelled';\n\n/* TaskAbortError error codes  */\nexport const taskCancelled = (`task-${cancelled}` as const);\nexport const taskCompleted = (`task-${completed}` as const);\nexport const listenerCancelled = (`${listener}-${cancelled}` as const);\nexport const listenerCompleted = (`${listener}-${completed}` as const);\nexport class TaskAbortError implements SerializedError {\n  name = 'TaskAbortError';\n  message: string;\n  constructor(public code: string | undefined) {\n    this.message = `${task} ${cancelled} (reason: ${code})`;\n  }\n}", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { AbortSignalWithReason } from './types';\nexport const assertFunction: (func: unknown, expected: string) => asserts func is (...args: unknown[]) => unknown = (func: unknown, expected: string) => {\n  if (typeof func !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(32) : `${expected} is not a function`);\n  }\n};\nexport const noop = () => {};\nexport const catchRejection = <T,>(promise: Promise<T>, onError = noop): Promise<T> => {\n  promise.catch(onError);\n  return promise;\n};\nexport const addAbortSignalListener = (abortSignal: AbortSignal, callback: (evt: Event) => void) => {\n  abortSignal.addEventListener('abort', callback, {\n    once: true\n  });\n  return () => abortSignal.removeEventListener('abort', callback);\n};\n\n/**\r\n * Calls `abortController.abort(reason)` and patches `signal.reason`.\r\n * if it is not supported.\r\n *\r\n * At the time of writing `signal.reason` is available in FF chrome, edge node 17 and deno.\r\n * @param abortController\r\n * @param reason\r\n * @returns\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/reason\r\n */\nexport const abortControllerWithReason = <T,>(abortController: AbortController, reason: T): void => {\n  type Consumer<T> = (val: T) => void;\n  const signal = (abortController.signal as AbortSignalWithReason<T>);\n  if (signal.aborted) {\n    return;\n  }\n\n  // Patch `reason` if necessary.\n  // - We use defineProperty here because reason is a getter of `AbortSignal.__proto__`.\n  // - We need to patch 'reason' before calling `.abort()` because listeners to the 'abort'\n  // event are are notified immediately.\n  if (!('reason' in signal)) {\n    Object.defineProperty(signal, 'reason', {\n      enumerable: true,\n      value: reason,\n      configurable: true,\n      writable: true\n    });\n  }\n  ;\n  (abortController.abort as Consumer<typeof reason>)(reason);\n};", "import { TaskAbortError } from './exceptions';\nimport type { AbortSignalWithReason, TaskResult } from './types';\nimport { addAbortSignalListener, catchRejection, noop } from './utils';\n\n/**\r\n * Synchronously raises {@link TaskAbortError} if the task tied to the input `signal` has been cancelled.\r\n * @param signal\r\n * @param reason\r\n * @see {TaskAbortError}\r\n */\nexport const validateActive = (signal: AbortSignal): void => {\n  if (signal.aborted) {\n    const {\n      reason\n    } = (signal as AbortSignalWithReason<string>);\n    throw new TaskAbortError(reason);\n  }\n};\n\n/**\r\n * Generates a race between the promise(s) and the AbortSignal\r\n * This avoids `Promise.race()`-related memory leaks:\r\n * https://github.com/nodejs/node/issues/17469#issuecomment-349794909\r\n */\nexport function raceWithSignal<T>(signal: AbortSignalWithReason<string>, promise: Promise<T>): Promise<T> {\n  let cleanup = noop;\n  return new Promise<T>((resolve, reject) => {\n    const notifyRejection = () => reject(new TaskAbortError(signal.reason));\n    if (signal.aborted) {\n      notifyRejection();\n      return;\n    }\n    cleanup = addAbortSignalListener(signal, notifyRejection);\n    promise.finally(() => cleanup()).then(resolve, reject);\n  }).finally(() => {\n    // after this point, replace `cleanup` with a noop, so there is no reference to `signal` any more\n    cleanup = noop;\n  });\n}\n\n/**\r\n * Runs a task and returns promise that resolves to {@link TaskResult}.\r\n * Second argument is an optional `cleanUp` function that always runs after task.\r\n *\r\n * **Note:** `runTask` runs the executor in the next microtask.\r\n * @returns\r\n */\nexport const runTask = async <T,>(task: () => Promise<T>, cleanUp?: () => void): Promise<TaskResult<T>> => {\n  try {\n    await Promise.resolve();\n    const value = await task();\n    return {\n      status: 'ok',\n      value\n    };\n  } catch (error: any) {\n    return {\n      status: error instanceof TaskAbortError ? 'cancelled' : 'rejected',\n      error\n    };\n  } finally {\n    cleanUp?.();\n  }\n};\n\n/**\r\n * Given an input `AbortSignal` and a promise returns another promise that resolves\r\n * as soon the input promise is provided or rejects as soon as\r\n * `AbortSignal.abort` is `true`.\r\n * @param signal\r\n * @returns\r\n */\nexport const createPause = <T,>(signal: AbortSignal) => {\n  return (promise: Promise<T>): Promise<T> => {\n    return catchRejection(raceWithSignal(signal, promise).then(output => {\n      validateActive(signal);\n      return output;\n    }));\n  };\n};\n\n/**\r\n * Given an input `AbortSignal` and `timeoutMs` returns a promise that resolves\r\n * after `timeoutMs` or rejects as soon as `AbortSignal.abort` is `true`.\r\n * @param signal\r\n * @returns\r\n */\nexport const createDelay = (signal: AbortSignal) => {\n  const pause = createPause<void>(signal);\n  return (timeoutMs: number): Promise<void> => {\n    return pause(new Promise<void>(resolve => setTimeout(resolve, timeoutMs)));\n  };\n};", "import type { Dispatch, Middleware, UnknownAction } from 'redux';\nimport { compose } from 'redux';\nimport { createAction } from '../createAction';\nimport { isAllOf } from '../matchers';\nimport { nanoid } from '../nanoid';\nimport { emplace, find } from '../utils';\nimport type { AddMiddleware, DynamicMiddleware, DynamicMiddlewareInstance, MiddlewareEntry, WithMiddleware } from './types';\nexport type { DynamicMiddlewareInstance, GetDispatchType as GetDispatch, MiddlewareApiConfig } from './types';\nconst createMiddlewareEntry = <State = any, DispatchType extends Dispatch<UnknownAction> = Dispatch<UnknownAction>>(middleware: Middleware<any, State, DispatchType>): MiddlewareEntry<State, DispatchType> => ({\n  id: nanoid(),\n  middleware,\n  applied: new Map()\n});\nconst matchInstance = (instanceId: string) => (action: any): action is {\n  meta: {\n    instanceId: string;\n  };\n} => action?.meta?.instanceId === instanceId;\nexport const createDynamicMiddleware = <State = any, DispatchType extends Dispatch<UnknownAction> = Dispatch<UnknownAction>>(): DynamicMiddlewareInstance<State, DispatchType> => {\n  const instanceId = nanoid();\n  const middlewareMap = new Map<string, MiddlewareEntry<State, DispatchType>>();\n  const withMiddleware = (Object.assign(createAction('dynamicMiddleware/add', (...middlewares: Middleware<any, State, DispatchType>[]) => ({\n    payload: middlewares,\n    meta: {\n      instanceId\n    }\n  })), {\n    withTypes: () => withMiddleware\n  }) as WithMiddleware<State, DispatchType>);\n  const addMiddleware = (Object.assign(function addMiddleware(...middlewares: Middleware<any, State, DispatchType>[]) {\n    middlewares.forEach(middleware => {\n      let entry = find(Array.from(middlewareMap.values()), entry => entry.middleware === middleware);\n      if (!entry) {\n        entry = createMiddlewareEntry(middleware);\n      }\n      middlewareMap.set(entry.id, entry);\n    });\n  }, {\n    withTypes: () => addMiddleware\n  }) as AddMiddleware<State, DispatchType>);\n  const getFinalMiddleware: Middleware<{}, State, DispatchType> = api => {\n    const appliedMiddleware = Array.from(middlewareMap.values()).map(entry => emplace(entry.applied, api, {\n      insert: () => entry.middleware(api)\n    }));\n    return compose(...appliedMiddleware);\n  };\n  const isWithMiddleware = isAllOf(withMiddleware, matchInstance(instanceId));\n  const middleware: DynamicMiddleware<State, DispatchType> = api => next => action => {\n    if (isWithMiddleware(action)) {\n      addMiddleware(...action.payload);\n      return api.dispatch;\n    }\n    return getFinalMiddleware(api)(next)(action);\n  };\n  return {\n    middleware,\n    addMiddleware,\n    withMiddleware,\n    instanceId\n  };\n};", "import { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport type { Reducer, StateFromReducersMapObject, UnknownAction } from 'redux';\nimport { combineReducers } from 'redux';\nimport { nanoid } from './nanoid';\nimport type { Id, NonUndefined, Tail, UnionToIntersection, WithOptionalProp } from './tsHelpers';\nimport { emplace } from './utils';\ntype SliceLike<ReducerPath extends string, State> = {\n  reducerPath: ReducerPath;\n  reducer: Reducer<State>;\n};\ntype AnySliceLike = SliceLike<string, any>;\ntype SliceLikeReducerPath<A extends AnySliceLike> = A extends SliceLike<infer ReducerPath, any> ? ReducerPath : never;\ntype SliceLikeState<A extends AnySliceLike> = A extends SliceLike<any, infer State> ? State : never;\nexport type WithSlice<A extends AnySliceLike> = { [Path in SliceLikeReducerPath<A>]: SliceLikeState<A> };\ntype ReducerMap = Record<string, Reducer>;\ntype ExistingSliceLike<DeclaredState> = { [ReducerPath in keyof DeclaredState]: SliceLike<ReducerPath & string, NonUndefined<DeclaredState[ReducerPath]>> }[keyof DeclaredState];\nexport type InjectConfig = {\n  /**\n   * Allow replacing reducer with a different reference. Normally, an error will be thrown if a different reducer instance to the one already injected is used.\n   */\n  overrideExisting?: boolean;\n};\n\n/**\n * A reducer that allows for slices/reducers to be injected after initialisation.\n */\nexport interface CombinedSliceReducer<InitialState, DeclaredState = InitialState> extends Reducer<DeclaredState, UnknownAction, Partial<DeclaredState>> {\n  /**\n   * Provide a type for slices that will be injected lazily.\n   *\n   * One way to do this would be with interface merging:\n   * ```ts\n   *\n   * export interface LazyLoadedSlices {}\n   *\n   * export const rootReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n   *\n   * // elsewhere\n   *\n   * declare module './reducer' {\n   *   export interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n   * }\n   *\n   * const withBoolean = rootReducer.inject(booleanSlice);\n   *\n   * // elsewhere again\n   *\n   * declare module './reducer' {\n   *   export interface LazyLoadedSlices {\n   *     customName: CustomState\n   *   }\n   * }\n   *\n   * const withCustom = rootReducer.inject({ reducerPath: \"customName\", reducer: customSlice.reducer })\n   * ```\n   */\n  withLazyLoadedSlices<Lazy = {}>(): CombinedSliceReducer<InitialState, Id<DeclaredState & Partial<Lazy>>>;\n\n  /**\n   * Inject a slice.\n   *\n   * Accepts an individual slice, RTKQ API instance, or a \"slice-like\" { reducerPath, reducer } object.\n   *\n   * ```ts\n   * rootReducer.inject(booleanSlice)\n   * rootReducer.inject(baseApi)\n   * rootReducer.inject({ reducerPath: 'boolean' as const, reducer: newReducer }, { overrideExisting: true })\n   * ```\n   *\n   */\n  inject<Sl extends Id<ExistingSliceLike<DeclaredState>>>(slice: Sl, config?: InjectConfig): CombinedSliceReducer<InitialState, Id<DeclaredState & WithSlice<Sl>>>;\n\n  /**\n   * Inject a slice.\n   *\n   * Accepts an individual slice, RTKQ API instance, or a \"slice-like\" { reducerPath, reducer } object.\n   *\n   * ```ts\n   * rootReducer.inject(booleanSlice)\n   * rootReducer.inject(baseApi)\n   * rootReducer.inject({ reducerPath: 'boolean' as const, reducer: newReducer }, { overrideExisting: true })\n   * ```\n   *\n   */\n  inject<ReducerPath extends string, State>(slice: SliceLike<ReducerPath, State & (ReducerPath extends keyof DeclaredState ? never : State)>, config?: InjectConfig): CombinedSliceReducer<InitialState, Id<DeclaredState & WithSlice<SliceLike<ReducerPath, State>>>>;\n\n  /**\n   * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n   *\n   * ```ts\n   * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n   * //                                                                ^? boolean | undefined\n   *\n   * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n   *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n   *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n   *   return state.boolean;\n   *   //           ^? boolean\n   * })\n   * ```\n   *\n   * If the reducer is nested inside the root state, a selectState callback can be passed to retrieve the reducer's state.\n   *\n   * ```ts\n   *\n   * export interface LazyLoadedSlices {};\n   *\n   * export const innerReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n   *\n   * export const rootReducer = combineSlices({ inner: innerReducer });\n   *\n   * export type RootState = ReturnType<typeof rootReducer>;\n   *\n   * // elsewhere\n   *\n   * declare module \"./reducer.ts\" {\n   *  export interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n   * }\n   *\n   * const withBool = innerReducer.inject(booleanSlice);\n   *\n   * const selectBoolean = withBool.selector(\n   *   (state) => state.boolean,\n   *   (rootState: RootState) => state.inner\n   * );\n   * //    now expects to be passed RootState instead of innerReducer state\n   *\n   * ```\n   *\n   * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n   *\n   * ```ts\n   * const injectedReducer = rootReducer.inject(booleanSlice);\n   * const selectBoolean = injectedReducer.selector((state) => {\n   *   console.log(injectedReducer.selector.original(state).boolean) // possibly undefined\n   *   return state.boolean\n   * })\n   * ```\n   */\n  selector: {\n    /**\n     * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n     *\n     * ```ts\n     * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n     * //                                                                ^? boolean | undefined\n     *\n     * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n     *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n     *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n     *   return state.boolean;\n     *   //           ^? boolean\n     * })\n     * ```\n     *\n     * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n     *\n     * ```ts\n     * const injectedReducer = rootReducer.inject(booleanSlice);\n     * const selectBoolean = injectedReducer.selector((state) => {\n     *   console.log(injectedReducer.selector.original(state).boolean) // undefined\n     *   return state.boolean\n     * })\n     * ```\n     */\n    <Selector extends (state: DeclaredState, ...args: any[]) => unknown>(selectorFn: Selector): (state: WithOptionalProp<Parameters<Selector>[0], Exclude<keyof DeclaredState, keyof InitialState>>, ...args: Tail<Parameters<Selector>>) => ReturnType<Selector>;\n\n    /**\n     * Create a selector that guarantees that the slices injected will have a defined value when selector is run.\n     *\n     * ```ts\n     * const selectBooleanWithoutInjection = (state: RootState) => state.boolean;\n     * //                                                                ^? boolean | undefined\n     *\n     * const selectBoolean = rootReducer.inject(booleanSlice).selector((state) => {\n     *   // if action hasn't been dispatched since slice was injected, this would usually be undefined\n     *   // however selector() uses a Proxy around the first parameter to ensure that it evaluates to the initial state instead, if undefined\n     *   return state.boolean;\n     *   //           ^? boolean\n     * })\n     * ```\n     *\n     * If the reducer is nested inside the root state, a selectState callback can be passed to retrieve the reducer's state.\n     *\n     * ```ts\n     *\n     * interface LazyLoadedSlices {};\n     *\n     * const innerReducer = combineSlices(stringSlice).withLazyLoadedSlices<LazyLoadedSlices>();\n     *\n     * const rootReducer = combineSlices({ inner: innerReducer });\n     *\n     * type RootState = ReturnType<typeof rootReducer>;\n     *\n     * // elsewhere\n     *\n     * declare module \"./reducer.ts\" {\n     *  interface LazyLoadedSlices extends WithSlice<typeof booleanSlice> {}\n     * }\n     *\n     * const withBool = innerReducer.inject(booleanSlice);\n     *\n     * const selectBoolean = withBool.selector(\n     *   (state) => state.boolean,\n     *   (rootState: RootState) => state.inner\n     * );\n     * //    now expects to be passed RootState instead of innerReducer state\n     *\n     * ```\n     *\n     * Value passed to selectorFn will be a Proxy - use selector.original(proxy) to get original state value (useful for debugging)\n     *\n     * ```ts\n     * const injectedReducer = rootReducer.inject(booleanSlice);\n     * const selectBoolean = injectedReducer.selector((state) => {\n     *   console.log(injectedReducer.selector.original(state).boolean) // possibly undefined\n     *   return state.boolean\n     * })\n     * ```\n     */\n    <Selector extends (state: DeclaredState, ...args: any[]) => unknown, RootState>(selectorFn: Selector, selectState: (rootState: RootState, ...args: Tail<Parameters<Selector>>) => WithOptionalProp<Parameters<Selector>[0], Exclude<keyof DeclaredState, keyof InitialState>>): (state: RootState, ...args: Tail<Parameters<Selector>>) => ReturnType<Selector>;\n    /**\n     * Returns the unproxied state. Useful for debugging.\n     * @param state state Proxy, that ensures injected reducers have value\n     * @returns original, unproxied state\n     * @throws if value passed is not a state Proxy\n     */\n    original: (state: DeclaredState) => InitialState & Partial<DeclaredState>;\n  };\n}\ntype InitialState<Slices extends Array<AnySliceLike | ReducerMap>> = UnionToIntersection<Slices[number] extends infer Slice ? Slice extends AnySliceLike ? WithSlice<Slice> : StateFromReducersMapObject<Slice> : never>;\nconst isSliceLike = (maybeSliceLike: AnySliceLike | ReducerMap): maybeSliceLike is AnySliceLike => 'reducerPath' in maybeSliceLike && typeof maybeSliceLike.reducerPath === 'string';\nconst getReducers = (slices: Array<AnySliceLike | ReducerMap>) => slices.flatMap(sliceOrMap => isSliceLike(sliceOrMap) ? [([sliceOrMap.reducerPath, sliceOrMap.reducer] as const)] : Object.entries(sliceOrMap));\nconst ORIGINAL_STATE = Symbol.for('rtk-state-proxy-original');\nconst isStateProxy = (value: any) => !!value && !!value[ORIGINAL_STATE];\nconst stateProxyMap = new WeakMap<object, object>();\nconst createStateProxy = <State extends object,>(state: State, reducerMap: Partial<Record<string, Reducer>>) => (emplace(stateProxyMap, state, {\n  insert: () => new Proxy(state, {\n    get: (target, prop, receiver) => {\n      if (prop === ORIGINAL_STATE) return target;\n      const result = Reflect.get(target, prop, receiver);\n      if (typeof result === 'undefined') {\n        const reducer = reducerMap[prop.toString()];\n        if (reducer) {\n          // ensure action type is random, to prevent reducer treating it differently\n          const reducerResult = reducer(undefined, {\n            type: nanoid()\n          });\n          if (typeof reducerResult === 'undefined') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(24) : `The slice reducer for key \"${prop.toString()}\" returned undefined when called for selector(). ` + `If the state passed to the reducer is undefined, you must ` + `explicitly return the initial state. The initial state may ` + `not be undefined. If you don't want to set a value for this reducer, ` + `you can use null instead of undefined.`);\n          }\n          return reducerResult;\n        }\n      }\n      return result;\n    }\n  })\n}) as State);\nconst original = (state: any) => {\n  if (!isStateProxy(state)) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(25) : 'original must be used on state Proxy');\n  }\n  return state[ORIGINAL_STATE];\n};\nconst noopReducer: Reducer<Record<string, any>> = (state = {}) => state;\nexport function combineSlices<Slices extends Array<AnySliceLike | ReducerMap>>(...slices: Slices): CombinedSliceReducer<Id<InitialState<Slices>>> {\n  const reducerMap = Object.fromEntries<Reducer>(getReducers(slices));\n  const getReducer = () => Object.keys(reducerMap).length ? combineReducers(reducerMap) : noopReducer;\n  let reducer = getReducer();\n  function combinedReducer(state: Record<string, unknown>, action: UnknownAction) {\n    return reducer(state, action);\n  }\n  combinedReducer.withLazyLoadedSlices = () => combinedReducer;\n  const inject = (slice: AnySliceLike, config: InjectConfig = {}): typeof combinedReducer => {\n    const {\n      reducerPath,\n      reducer: reducerToInject\n    } = slice;\n    const currentReducer = reducerMap[reducerPath];\n    if (!config.overrideExisting && currentReducer && currentReducer !== reducerToInject) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n        console.error(`called \\`inject\\` to override already-existing reducer ${reducerPath} without specifying \\`overrideExisting: true\\``);\n      }\n      return combinedReducer;\n    }\n    reducerMap[reducerPath] = reducerToInject;\n    reducer = getReducer();\n    return combinedReducer;\n  };\n  const selector = Object.assign(function makeSelector<State extends object, RootState, Args extends any[]>(selectorFn: (state: State, ...args: Args) => any, selectState?: (rootState: RootState, ...args: Args) => State) {\n    return function selector(state: State, ...args: Args) {\n      return selectorFn(createStateProxy(selectState ? selectState((state as any), ...args) : state, reducerMap), ...args);\n    };\n  }, {\n    original\n  });\n  return (Object.assign(combinedReducer, {\n    inject,\n    selector\n  }) as any);\n}", "/**\r\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\r\n *\r\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\r\n * during build.\r\n * @param {number} code\r\n */\nexport function formatProdErrorMessage(code: number) {\n  return `Minified Redux Toolkit error #${code}; visit https://redux-toolkit.js.org/Errors?code=${code} for the full message or ` + 'use the non-minified dev environment for full errors. ';\n}", "import {createSelector} from '@reduxjs/toolkit';\nimport {CommercePaginationSection} from '../../../state/state-sections.js';\n\nexport const perPagePrincipalSelector = createSelector(\n  (state: Partial<CommercePaginationSection>) =>\n    state.commercePagination?.principal.perPage || 0,\n  (perPage) => perPage\n);\n\nexport const perPageRecommendationSelector = createSelector(\n  (state: Partial<CommercePaginationSection>, slotId: string) =>\n    state.commercePagination?.recommendations[slotId]?.perPage || 0,\n  (perPage) => perPage\n);\n\nexport const totalEntriesPrincipalSelector = createSelector(\n  (state: Partial<CommercePaginationSection>) =>\n    state.commercePagination?.principal.totalEntries || 0,\n  (totalEntries) => totalEntries\n);\n\nexport const totalEntriesRecommendationSelector = createSelector(\n  (state: Partial<CommercePaginationSection>, slotId: string) =>\n    state.commercePagination?.recommendations[slotId]?.totalEntries || 0,\n  (totalEntries) => totalEntries\n);\n\nexport const pagePrincipalSelector = createSelector(\n  (state: Partial<CommercePaginationSection>) =>\n    state.commercePagination?.principal.page || 0,\n  (page) => page\n);\n\nexport const pageRecommendationSelector = createSelector(\n  (state: Partial<CommercePaginationSection>, slotId: string) =>\n    state.commercePagination?.recommendations[slotId]?.page || 0,\n  (page) => page\n);\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {SearchCommerceSuccessResponse} from '../../../api/commerce/search/response.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {\n  CommercePaginationSection,\n  CommerceQuerySection,\n  CommerceSearchSection,\n} from '../../../state/state-sections.js';\nimport {getQ} from '../../parameter-manager/parameter-manager-selectors.js';\nimport {totalEntriesPrincipalSelector} from '../pagination/pagination-selectors.js';\nimport {\n  activeParametersSelector as coreActiveParametersSelector,\n  enrichedParametersSelector as coreEnrichedParametersSelector,\n} from '../parameters/parameters-selectors.js';\nimport {getCommerceQueryInitialState} from '../query/query-state.js';\nimport {CommerceSearchParameters} from '../search-parameters/search-parameters-actions.js';\n\n/**\n * Duplicate selector since the state is no longer accessible externally\n * TODO: KIT-3199: Update all other selectors to use the engine as a parameter\n */\nexport const responseIdSelectorFromEngine = createSelector(\n  (engine: CommerceEngine) => engine[stateKey].commerceSearch.responseId,\n  (responseId) => responseId\n);\n\nexport const responseIdSelector = createSelector(\n  (state: CommerceEngineState) => state.commerceSearch.responseId,\n  (responseId) => responseId\n);\n\nexport const requestIdSelector = createSelector(\n  (state: CommerceEngineState) => state.commerceSearch.requestId,\n  (requestId) => requestId\n);\n\nexport const numberOfProductsSelector = createSelector(\n  (state: Partial<CommerceSearchSection>) =>\n    state.commerceSearch?.products.length || 0,\n  (len) => len\n);\n\nexport const moreProductsAvailableSelector = createSelector(\n  (state: Partial<CommercePaginationSection & CommerceSearchSection>) => ({\n    total: totalEntriesPrincipalSelector(state),\n    current: numberOfProductsSelector(state),\n  }),\n  ({current, total}) => current < total\n);\n\nexport const isLoadingSelector = createSelector(\n  (state: Partial<CommerceSearchSection>) => state.commerceSearch?.isLoading,\n  (isLoading) => (isNullOrUndefined(isLoading) ? false : isLoading)\n);\n\nexport const errorSelector = createSelector(\n  (state: Partial<CommerceSearchSection>) => state.commerceSearch?.error,\n  (error) => error ?? null\n);\n\nexport const querySelector = createSelector(\n  (state: CommerceQuerySection) => state.commerceQuery?.query,\n  (query) => query ?? ''\n);\n\nexport const queryExecutedSelector = createSelector(\n  (state: CommerceSearchSection) => state.commerceSearch?.queryExecuted,\n  (query) => query\n);\n\nexport const queryExecutedFromResponseSelector = (\n  state: CommerceQuerySection,\n  response: SearchCommerceSuccessResponse\n) => {\n  if (!isNullOrUndefined(response.queryCorrection?.correctedQuery)) {\n    return response.queryCorrection.correctedQuery;\n  }\n\n  return querySelector(state);\n};\n\nexport const activeParametersSelector = (\n  state: CommerceEngine[typeof stateKey]\n): CommerceSearchParameters => {\n  return {\n    ...getQ(\n      state?.commerceQuery,\n      (s) => s.query,\n      getCommerceQueryInitialState().query\n    ),\n    ...coreActiveParametersSelector(state),\n  };\n};\n\nexport function enrichedParametersSelector(\n  state: CommerceEngine[typeof stateKey],\n  activeParams: CommerceSearchParameters\n) {\n  return {\n    q: getCommerceQueryInitialState().query!,\n    ...coreEnrichedParametersSelector(state, activeParams),\n  };\n}\n\nexport function enrichedSummarySelector(state: CommerceEngineState) {\n  return {\n    query: queryExecutedSelector(state) || '',\n  };\n}\n", "export function getQ<Section, Value>(\n  section: Section | undefined,\n  querySelector: (state: Section) => Value,\n  initialState: Value\n) {\n  if (section === undefined) {\n    return {};\n  }\n\n  const q = querySelector(section);\n  const shouldInclude = q !== initialState;\n  return shouldInclude ? {q} : {};\n}\n\nexport function getSortCriteria<Section, Value>(\n  section: Section | undefined,\n  sortCriteriaSelector: (state: Section) => Value,\n  initialState: Value\n) {\n  if (section === undefined) {\n    return {};\n  }\n\n  const sortCriteria = sortCriteriaSelector(section);\n  const shouldInclude = sortCriteria !== initialState;\n  return shouldInclude ? {sortCriteria} : {};\n}\n\nexport function getFacets<Value, Request, Parameters>(\n  section: Record<string, {request: Request}> | undefined,\n  facetIsEnabled: (facetId: string) => boolean,\n  valuesSelector: (request: Request) => Value[],\n  out: keyof Parameters\n) {\n  if (section === undefined) {\n    return {};\n  }\n\n  const facets = Object.entries(section!)\n    .filter(([facetId]) => facetIsEnabled(facetId))\n    .map(([facetId, {request}]) => {\n      const selectedValues = valuesSelector(request);\n      return selectedValues.length ? {[facetId]: selectedValues} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(facets).length ? {[out]: facets} : {};\n}\n", "import {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {CommerceFacetSetSection} from '../../../state/state-sections.js';\nimport {findActiveValueAncestry} from '../../facets/category-facet-set/category-facet-utils.js';\nimport {\n  getFacets,\n  getSortCriteria,\n} from '../../parameter-manager/parameter-manager-selectors.js';\nimport {FacetType} from '../facets/facet-set/interfaces/common.js';\nimport {\n  AnyFacetRequest,\n  CategoryFacetRequest,\n  DateFacetRequest,\n  LocationFacetRequest,\n  NumericFacetRequest,\n  RegularFacetRequest,\n} from '../facets/facet-set/interfaces/request.js';\nimport {ManualNumericFacetSetState} from '../facets/numeric-facet/manual-numeric-facet-state.js';\nimport {\n  CommercePaginationState,\n  getCommercePaginationInitialSlice,\n} from '../pagination/pagination-state.js';\nimport {getCommerceSortInitialState} from '../sort/sort-state.js';\nimport {Parameters as ManagedParameters} from './parameters-actions.js';\n\nexport function initialParametersSelector(\n  state: CommerceEngine[typeof stateKey]\n): Required<ManagedParameters> {\n  return {\n    page:\n      state.commercePagination.principal.page ??\n      getCommercePaginationInitialSlice().page,\n    perPage:\n      state.commercePagination.principal.perPage ??\n      getCommercePaginationInitialSlice().perPage,\n    sortCriteria:\n      state.commerceSort.appliedSort ??\n      getCommerceSortInitialState().appliedSort,\n    cf: {},\n    nf: {},\n    mnf: {},\n    df: {},\n    f: {},\n    lf: {},\n  };\n}\n\nexport function activeParametersSelector(\n  state: CommerceEngine[typeof stateKey]\n): ManagedParameters {\n  return {\n    ...getPage(\n      state?.commercePagination,\n      (s) => s.principal.page,\n      getCommercePaginationInitialSlice().page\n    ),\n    ...getPerPage(\n      state?.commercePagination,\n      (s) => s.principal.perPage,\n      getCommercePaginationInitialSlice().perPage\n    ),\n    ...getSortCriteria(\n      state?.commerceSort,\n      (s) => s.appliedSort,\n      getCommerceSortInitialState().appliedSort\n    ),\n    ...getFacets(\n      state.commerceFacetSet,\n      facetIsOfType(state, 'regular'),\n      getSelectedValues,\n      'f'\n    ),\n    ...getFacets(\n      state.commerceFacetSet,\n      facetIsOfType(state, 'location'),\n      getSelectedLocationValues,\n      'lf'\n    ),\n    ...getFacets(\n      state.commerceFacetSet,\n      facetIsOfType(state, 'hierarchical'),\n      getSelectedCategoryValues,\n      'cf'\n    ),\n    ...getFacets(\n      state.commerceFacetSet,\n      facetIsOfType(state, 'dateRange'),\n      getSelectedRangeValues,\n      'df'\n    ),\n    ...getFacets(\n      state.commerceFacetSet,\n      facetIsOfType(state, 'numericalRange'),\n      getSelectedRangeValues,\n      'nf'\n    ),\n    ...getManualNumericFacet(state.manualNumericFacetSet),\n  };\n}\n\nexport function enrichedParametersSelector(\n  state: CommerceEngine[typeof stateKey],\n  activeParams: ManagedParameters\n) {\n  return {\n    ...initialParametersSelector(state),\n    ...activeParams,\n  };\n}\n\nfunction getPage(\n  section: CommercePaginationState | undefined,\n  pageSelector: (section: CommercePaginationState) => number,\n  initialState: number\n) {\n  if (section === undefined) {\n    return {};\n  }\n\n  const page = pageSelector(section);\n  const shouldInclude = page !== initialState;\n  return shouldInclude ? {page} : {};\n}\n\nfunction getPerPage(\n  section: CommercePaginationState | undefined,\n  perPageSelector: (section: CommercePaginationState) => number,\n  initialState: number\n) {\n  if (section === undefined) {\n    return {};\n  }\n\n  const perPage = perPageSelector(section);\n  const shouldInclude = perPage !== initialState;\n  return shouldInclude ? {perPage} : {};\n}\n\nfunction getSelectedValues(request: AnyFacetRequest) {\n  return (request as RegularFacetRequest).values\n    .filter((fv) => fv.state === 'selected')\n    .map((fv) => fv.value);\n}\n\nfunction getSelectedLocationValues(request: AnyFacetRequest) {\n  return (request as LocationFacetRequest).values\n    .filter((fv) => fv.state === 'selected')\n    .map((fv) => fv.value);\n}\n\nfunction getSelectedRangeValues(request: AnyFacetRequest) {\n  return (request as NumericFacetRequest | DateFacetRequest).values.filter(\n    (fv) => fv.state === 'selected'\n  );\n}\n\nfunction getManualNumericFacet(section?: ManualNumericFacetSetState) {\n  if (!section) {\n    return {};\n  }\n\n  const manualNumericFacets = Object.entries(section)\n    .map(([facetId, manualFacetRange]) => {\n      if (manualFacetRange.manualRange === undefined) {\n        return;\n      }\n      return {[facetId]: [manualFacetRange.manualRange]};\n    })\n    .filter((manualRange) => manualRange !== undefined)\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return {mnf: manualNumericFacets};\n}\n\nfunction getSelectedCategoryValues(request: AnyFacetRequest): string[] {\n  const categoryRequest = request as CategoryFacetRequest;\n  return findActiveValueAncestry(\n    categoryRequest.values as Parameters<typeof findActiveValueAncestry>[0]\n  ).map((v) => v.value);\n}\n\nfunction facetIsOfType(\n  state: Partial<CommerceFacetSetSection>,\n  type: FacetType\n) {\n  return (facetId: string) => {\n    return state.commerceFacetSet![facetId].request.type === type;\n  };\n}\n", "import {CategoryFacetValue as CommerceCategoryFacetValue} from '../../commerce/facets/facet-set/interfaces/response.js';\nimport {CategoryFacetValueCommon} from './interfaces/commons.js';\nimport {CategoryFacetValueRequest} from './interfaces/request.js';\nimport {CategoryFacetValue} from './interfaces/response.js';\n\ntype GenericCategoryFacetValue = CategoryFacetValueRequest | CategoryFacetValue;\n\ntype CategoryFacetValuePartition<T extends GenericCategoryFacetValue> = {\n  parents: T[];\n  values: T[];\n};\n\nexport function partitionIntoParentsAndValues<\n  T extends GenericCategoryFacetValue,\n>(nestedValues: T[] | undefined): CategoryFacetValuePartition<T> {\n  if (!nestedValues) {\n    return {parents: [], values: []};\n  }\n\n  let parents: T[] = [];\n  let values = nestedValues;\n\n  while (values.length && values[0].children.length) {\n    parents = [...parents, ...values];\n    values = values[0].children as T[];\n  }\n\n  const selectedLeafValue = values.find((v) => v.state === 'selected');\n\n  if (selectedLeafValue) {\n    parents = [...parents, selectedLeafValue];\n    values = [];\n  }\n\n  return {parents, values};\n}\n\nexport function findActiveValueAncestry(\n  valuesAsTress: CategoryFacetValueRequest[]\n): CategoryFacetValueRequest[];\nexport function findActiveValueAncestry(\n  valuesAsTress: CommerceCategoryFacetValue[]\n): CommerceCategoryFacetValue[];\nexport function findActiveValueAncestry(\n  valuesAsTress: CategoryFacetValue[]\n): CategoryFacetValue[];\nexport function findActiveValueAncestry(\n  valuesAsTree: CategoryFacetValueCommon[]\n): CategoryFacetValueCommon[] {\n  const {activeValue, ancestryMap} =\n    getActiveValueAndAncestryFromValueTree(valuesAsTree);\n  return activeValue ? getActiveValueAncestry(activeValue, ancestryMap) : [];\n}\n\nfunction getActiveValueAndAncestryFromValueTree(\n  valuesAsTrees: CategoryFacetValueCommon[]\n) {\n  const valueToVisit: CategoryFacetValueCommon[] = [...valuesAsTrees];\n  const ancestryMap = new Map<\n    CategoryFacetValueCommon,\n    CategoryFacetValueCommon\n  >();\n  while (valueToVisit.length > 0) {\n    const currentValue: CategoryFacetValueCommon = valueToVisit.shift()!;\n    if (currentValue.state === 'selected') {\n      return {activeValue: currentValue, ancestryMap};\n    }\n    if (ancestryMap) {\n      for (const childValue of currentValue.children) {\n        ancestryMap.set(childValue, currentValue);\n      }\n    }\n    valueToVisit.unshift(...currentValue.children);\n  }\n  return {};\n}\n\nfunction getActiveValueAncestry(\n  activeValue: CategoryFacetValueCommon | undefined,\n  valueToParentMap: Map<CategoryFacetValueCommon, CategoryFacetValueCommon>\n): CategoryFacetValueCommon[] {\n  const activeValueAncestry: CategoryFacetValueCommon[] = [];\n  if (!activeValue) {\n    return [];\n  }\n  let lastParent: CategoryFacetValueCommon | undefined = activeValue;\n  do {\n    activeValueAncestry.unshift(lastParent);\n    lastParent = valueToParentMap.get(lastParent);\n  } while (lastParent);\n  return activeValueAncestry;\n}\n", "export interface PaginationSlice {\n  page: number;\n  perPage: number;\n  totalEntries: number;\n  totalPages: number;\n}\n\nexport interface CommercePaginationState {\n  principal: PaginationSlice;\n  recommendations: Record<string, PaginationSlice | undefined>;\n}\n\nexport function getCommercePaginationInitialState(): CommercePaginationState {\n  return {\n    principal: getCommercePaginationInitialSlice(),\n    recommendations: {},\n  };\n}\n\nexport function getCommercePaginationInitialSlice(): PaginationSlice {\n  return {\n    page: 0,\n    perPage: 0,\n    totalEntries: 0,\n    totalPages: 0,\n  };\n}\n", "import {buildRelevanceSortCriterion, SortCriterion} from './sort.js';\n\nexport interface CommerceSortState {\n  appliedSort: SortCriterion;\n  availableSorts: SortCriterion[];\n}\n\nexport function getCommerceSortInitialState(): CommerceSortState {\n  return {\n    appliedSort: buildRelevanceSortCriterion(),\n    availableSorts: [buildRelevanceSortCriterion()],\n  };\n}\n", "import {ArrayValue, EnumValue, StringValue, RecordValue} from '@coveo/bueno';\nimport {\n  SortBy,\n  SortByRelevance,\n  SortDirection,\n  SortByFields as CoreSortByFields,\n  SortByFieldsFields as CoreSortByFieldsFields,\n  buildRelevanceSortCriterion,\n} from '../../sort/sort.js';\n\nexport type {SortByRelevance};\nexport {SortBy, SortDirection, buildRelevanceSortCriterion};\n\nexport type SortByFields = Pick<CoreSortByFields, 'by'> & {\n  fields: SortByFieldsFields[];\n};\n\nexport type SortByFieldsFields = CoreSortByFieldsFields & {\n  displayName?: string;\n};\n\nexport type SortCriterion = SortByRelevance | SortByFields;\n\n/**\n * Builds a field sort criterion.\n *\n * @param fields - An array of fields to sort by.\n * @returns The sort criterion object.\n */\nexport const buildFieldsSortCriterion = (\n  fields: SortByFieldsFields[]\n): SortByFields => ({\n  by: SortBy.Fields,\n  fields,\n});\n\nexport const sortCriterionDefinition = new RecordValue({\n  options: {\n    required: false,\n  },\n  values: {\n    by: new EnumValue({enum: SortBy, required: true}),\n    fields: new ArrayValue({\n      each: new RecordValue({\n        values: {\n          field: new StringValue({required: true}),\n          direction: new EnumValue({enum: SortDirection}),\n          displayName: new StringValue(),\n        },\n      }),\n    }),\n  },\n});\n", "import {ArrayValue, EnumValue, RecordValue, StringValue} from '@coveo/bueno';\n\nexport enum SortBy {\n  Relevance = 'relevance',\n  Fields = 'fields',\n}\n\nexport enum SortDirection {\n  Ascending = 'asc',\n  Descending = 'desc',\n}\n\nexport type SortByRelevance = {\n  by: SortBy.Relevance;\n};\n\nexport type SortByFieldsFields = {\n  name: string;\n  direction?: SortDirection;\n};\n\nexport type SortByFields = {\n  by: SortBy.Fields;\n  fields: SortByFieldsFields[];\n};\n\nexport type SortCriterion = SortByRelevance | SortByFields;\n\nexport const buildRelevanceSortCriterion = (): SortByRelevance => ({\n  by: SortBy.Relevance,\n});\n\nexport const buildFieldsSortCriterion = (\n  fields: SortByFieldsFields[]\n): SortByFields => ({\n  by: SortBy.Fields,\n  fields,\n});\n\nexport const sortCriterionDefinition = new RecordValue({\n  options: {\n    required: false,\n  },\n  values: {\n    by: new EnumValue({enum: SortBy, required: true}),\n    fields: new ArrayValue({\n      each: new RecordValue({\n        values: {\n          name: new StringValue(),\n          direction: new EnumValue({enum: SortDirection}),\n        },\n      }),\n    }),\n  },\n});\n", "export interface CommerceQueryState {\n  query: string;\n}\n\nexport const getCommerceQueryInitialState: () => CommerceQueryState = () => ({\n  query: '',\n});\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {isEmptyString} from './utils.js';\n\nexport interface HighlightKeyword {\n  /**\n   * The 0 based offset inside the string where the highlight should start.\n   */\n  offset: number;\n  /**\n   * The length of the offset.\n   */\n  length: number;\n}\n\nexport interface HighlightParams {\n  /**\n   * The string to highlight items in.\n   */\n  content: string;\n  /**\n   * The highlighted positions to highlight in the string.\n   */\n  highlights: HighlightKeyword[];\n  /**\n   * The opening delimiter used when starting to highlight.\n   */\n  openingDelimiter: string;\n  /**\n   * The closing delimiter used to close highlighted section.\n   */\n  closingDelimiter: string;\n}\n\nexport interface Delimiters {\n  /**\n   * Opening delimiter\n   */\n  open: string;\n\n  /**\n   * Closing delimiter\n   */\n  close: string;\n}\n\nexport interface SuggestionHighlightingOptions {\n  /**\n   * Delimiters for substrings that do not match the input\n   */\n  notMatchDelimiters?: Delimiters;\n\n  /**\n   * Delimiters for substrings that are exact match of the input\n   */\n  exactMatchDelimiters?: Delimiters;\n\n  /**\n   * Delimiters for substrings that are correction of the input\n   */\n  correctionDelimiters?: Delimiters;\n}\n\n/**\n * Highlight the passed string using specified highlights.\n */\nexport function highlightString(params: HighlightParams): string {\n  if (\n    isEmptyString(params.openingDelimiter) ||\n    isEmptyString(params.closingDelimiter)\n  ) {\n    throw Error('delimiters should be a non-empty string');\n  }\n\n  if (isNullOrUndefined(params.content) || isEmptyString(params.content)) {\n    return params.content;\n  }\n  if (params.highlights.length === 0) {\n    return escape(params.content);\n  }\n\n  const maxIndex = params.content.length;\n  let highlighted = '';\n  let last = 0;\n  for (let i = 0; i < params.highlights.length; i++) {\n    const highlight = params.highlights[i];\n    const start: number = highlight.offset;\n    const end: number = start + highlight.length;\n\n    if (end > maxIndex) {\n      break;\n    }\n    highlighted += escape(params.content.slice(last, start));\n    highlighted += params.openingDelimiter;\n    highlighted += escape(params.content.slice(start, end));\n    highlighted += params.closingDelimiter;\n\n    last = end;\n  }\n  if (last !== maxIndex) {\n    highlighted += escape(params.content.slice(last));\n  }\n  return highlighted;\n}\n\n/**\n * Highlight a suggestion with the given delimiters.\n * @param suggestion The suggestion to highlight\n * @param options The object contaning the delimiters used\n */\nexport function getHighlightedSuggestion(\n  suggestion: string,\n  options: SuggestionHighlightingOptions\n) {\n  suggestion = escape(suggestion);\n  return suggestion.replace(\n    /\\[(.*?)\\]|\\{(.*?)\\}|\\((.*?)\\)/g,\n    (part, notMatched, matched, corrected) => {\n      if (notMatched) {\n        return suggestionWithDelimiters(notMatched, options.notMatchDelimiters);\n      }\n      if (matched) {\n        return suggestionWithDelimiters(matched, options.exactMatchDelimiters);\n      }\n      if (corrected) {\n        return suggestionWithDelimiters(\n          corrected,\n          options.correctionDelimiters\n        );\n      }\n\n      return part;\n    }\n  );\n}\n\nfunction suggestionWithDelimiters(\n  suggestion: string,\n  delimiters: Delimiters | undefined\n) {\n  if (delimiters) {\n    return delimiters.open + suggestion + delimiters.close;\n  }\n  return suggestion;\n}\n\n/**\n * Escapes a string. For more information, refer to {@link https://underscorejs.org/#escape}\n *\n * @param str The string to escape\n */\n\nexport function escape(str: string) {\n  const mapOfCharToEscape: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;',\n  };\n\n  const source = '(?:' + Object.keys(mapOfCharToEscape).join('|') + ')';\n  const testRegexp = RegExp(source);\n  const replaceRegexp = RegExp(source, 'g');\n\n  return testRegexp.test(str)\n    ? str.replace(replaceRegexp, (substring) => mapOfCharToEscape[substring])\n    : str;\n}\n", "import {Middleware, Action} from '@reduxjs/toolkit';\n\nexport const randomID = (prepend?: string, length = 5) =>\n  prepend +\n  Math.random()\n    .toString(36)\n    .substring(2, 2 + length);\n\nexport function isArray<T>(value: T | T[]): value is T[] {\n  return Array.isArray(value);\n}\n\nexport function isEmptyString(str: string) {\n  return str.trim() === '';\n}\n\nexport function removeDuplicates<T>(arr: T[], predicate: (value: T) => string) {\n  return [\n    ...arr\n      .reduce((map, item) => {\n        const key = predicate(item);\n\n        map.has(key) || map.set(key, item);\n\n        return map;\n      }, new Map())\n      .values(),\n  ];\n}\n\nexport function encodedBtoa(stringToEncode: string) {\n  return btoa(encodeURI(stringToEncode))!;\n}\n\nexport function omit<T>(key: keyof T, obj: T) {\n  const {[key]: omitted, ...rest} = obj;\n  return rest;\n}\n\nexport function getObjectHash<T>(obj: T) {\n  return encodedBtoa(JSON.stringify(obj));\n}\n\nconst doNotTrackValues = new Set(['1', 1, 'yes', true]);\n// TODO KIT-2844\n\n/**\n * Logic copied from coveo.analytics.\n *\n * @deprecated V4 - Starting with Event Protocol, Coveo will no longer respect the DNT standard.\n * Instead, we will provide implementers with documentation on privacy best-practices, letting\n * them decide which standards to respect.\n * For more context behind the decision, see: https://coveord.atlassian.net/browse/LENS-1502\n */\nexport function doNotTrack() {\n  if (typeof navigator === 'undefined' || typeof window === 'undefined') {\n    return false;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const nav = <any>navigator;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const win = <any>window;\n  return [\n    nav.globalPrivacyControl,\n    nav.doNotTrack,\n    nav.msDoNotTrack,\n    win.doNotTrack,\n  ].some((value) => doNotTrackValues.has(value));\n}\n\nexport function fromEntries<K extends PropertyKey, V>(\n  values: [K, V][]\n): Record<K, V> {\n  const newObject: Partial<Record<K, V>> = {};\n  for (const [key, value] of values) {\n    newObject[key] = value;\n  }\n  return newObject as Record<K, V>;\n}\n\nexport function resetTimeout(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => void,\n  timeoutId?: ReturnType<typeof setTimeout>,\n  ms?: number | undefined\n) {\n  clearTimeout(timeoutId);\n  return setTimeout(callback, ms);\n}\n\nexport function mapObject<TKey extends string, TInitialValue, TNewValue>(\n  obj: Record<TKey, TInitialValue>,\n  predicate: (value: TInitialValue, key: TKey) => TNewValue\n): Record<TKey, TNewValue> {\n  return Object.fromEntries(\n    Object.entries(obj).map(([key, value]) => [\n      key,\n      predicate(value as TInitialValue, key as TKey),\n    ])\n  ) as Record<TKey, TNewValue>;\n}\n\nexport function filterObject<TKey extends string, TValue>(\n  obj: Record<TKey, TValue>,\n  predicate: (value: TValue, key: TKey) => boolean\n): Record<TKey, TValue> {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([key, value]) =>\n      predicate(value as TValue, key as TKey)\n    )\n  ) as Record<TKey, TValue>;\n}\n\n// TODO: Could eventually be replaced with `structuredClone`.\n// However, this is not compatible with salesforce locker service.\nexport function clone<T>(value: T): T {\n  if (typeof value !== 'object') {\n    return value;\n  }\n  if (!value) {\n    return value;\n  }\n  // JSON parse/stringify can fail in some cases (ie: recursive objects)\n  // add defensive code to prevent the whole app from crashing\n  try {\n    return JSON.parse(JSON.stringify(value));\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction createDeferredPromise<T>(): {\n  promise: Promise<T>;\n  resolve(value: T): void;\n  reject(error: unknown): void;\n} {\n  let resolve: null | ((value: T) => void) = null;\n  let reject: null | ((error: unknown) => void) = null;\n  const promise = new Promise<T>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  return {promise, resolve: resolve!, reject: reject!};\n}\n\nexport function createWaitForActionMiddleware<TAction extends Action>(\n  isDesiredAction: (action: unknown) => action is TAction\n): {promise: Promise<TAction>; middleware: Middleware} {\n  const {promise, resolve} = createDeferredPromise<TAction>();\n\n  const middleware: Middleware = () => (next) => (action) => {\n    next(action);\n    if (isDesiredAction(action)) {\n      resolve(action);\n    }\n  };\n\n  return {promise, middleware};\n}\n", "import {backOff} from 'exponential-backoff';\nimport {Logger} from 'pino';\nimport {DisconnectedError, ExpiredTokenError} from '../utils/errors.js';\nimport {PlatformEnvironment} from '../utils/url-utils.js';\nimport {clone} from '../utils/utils.js';\nimport {canBeFormUrlEncoded, encodeAsFormUrl} from './form-url-encoder.js';\nimport {\n  PlatformClientOrigin,\n  PlatformRequestOptions,\n  PreprocessRequest,\n  RequestMetadata,\n} from './preprocess-request.js';\n\nexport type HttpMethods = 'POST' | 'GET' | 'DELETE' | 'PUT';\nexport type HTTPContentType =\n  | 'application/json'\n  | 'application/x-www-form-urlencoded'\n  | 'text/html';\n\nfunction isThrottled(status: number): boolean {\n  return status === 429;\n}\n\nexport interface PlatformClientCallOptions<T = Record<string, unknown>> {\n  origin: PlatformClientOrigin;\n  url: string;\n  method: HttpMethods;\n  contentType: HTTPContentType;\n  headers?: Record<string, string>;\n  requestParams: T;\n  accessToken: string;\n  preprocessRequest: PreprocessRequest;\n  requestMetadata?: RequestMetadata;\n  logger: Logger;\n  signal?: AbortSignal;\n}\n\nexport interface PlatformResponse<T> {\n  body: T;\n  response: Response;\n}\n\nexport type PlatformClientCallError =\n  | ExpiredTokenError\n  | DisconnectedError\n  | Error;\n\nexport class PlatformClient {\n  static async call(\n    options: PlatformClientCallOptions\n  ): Promise<Response | PlatformClientCallError> {\n    const defaultRequestOptions = buildDefaultRequestOptions(options);\n    const {logger} = options;\n\n    const requestInfo = await PlatformClient.preprocessRequest(\n      defaultRequestOptions,\n      options\n    );\n\n    logger.info(requestInfo, 'Platform request');\n\n    const {url, ...requestData} = requestInfo;\n    const request = async () => {\n      const response = await fetch(url, requestData);\n      if (isThrottled(response.status)) {\n        throw response;\n      }\n      return response;\n    };\n\n    try {\n      const response = await backOff(request, {\n        retry: (e: Response) => {\n          const shouldRetry = e && isThrottled(e.status);\n          shouldRetry && logger.info('Platform retrying request');\n          return shouldRetry;\n        },\n      });\n      switch (response.status) {\n        case 419:\n        case 401:\n          logger.info('Platform renewing token');\n          throw new ExpiredTokenError();\n        case 404:\n          throw new DisconnectedError(url, response.status);\n        default:\n          logger.info({response, requestInfo}, 'Platform response');\n          return response;\n      }\n    } catch (error) {\n      if ((error as PlatformClientCallError).message === 'Failed to fetch') {\n        return new DisconnectedError(url);\n      }\n\n      return error as PlatformClientCallError;\n    }\n  }\n\n  private static async preprocessRequest(\n    defaultRequestOptions: PlatformRequestOptions,\n    options: PlatformClientCallOptions\n  ) {\n    const {origin, preprocessRequest, logger, requestMetadata} = options;\n    const {signal, ...withoutSignal} = defaultRequestOptions;\n    const untaintedOutput: PlatformRequestOptions = clone(withoutSignal);\n\n    try {\n      const processedRequest = await preprocessRequest(\n        defaultRequestOptions,\n        origin,\n        requestMetadata\n      );\n      return {\n        ...defaultRequestOptions,\n        ...processedRequest,\n      };\n    } catch (e) {\n      logger.error(\n        e as Error,\n        'Platform request preprocessing failed. Returning default request options.'\n      );\n    }\n    return untaintedOutput;\n  }\n}\n\n/**\n * Retrieves the endpoint URL for a specific organization.\n *\n * @param organizationId - The ID of the organization.\n * @param environment - The environment of the organization. Defaults to 'prod'.\n * @param endpointType - The type of the endpoint. Defaults to 'platform'.\n * @returns The endpoint URL for the organization.\n */\nexport function getOrganizationEndpoint(\n  organizationId: string,\n  environment: PlatformEnvironment = 'prod',\n  endpointType: 'admin' | 'analytics' | 'platform' = 'platform'\n) {\n  const environmentSuffix = environment === 'prod' ? '' : environment;\n  const endpointTypePart =\n    endpointType === 'platform' ? '' : `.${endpointType}`;\n\n  return `https://${organizationId}${endpointTypePart}.org${environmentSuffix}.coveo.com`;\n}\n\nexport function getAdministrationOrganizationEndpoint(\n  organizationId: string,\n  environment: PlatformEnvironment = 'prod'\n) {\n  return getOrganizationEndpoint(organizationId, environment, 'admin');\n}\n\nexport function getSearchApiBaseUrl(\n  organizationId: string,\n  environment: PlatformEnvironment = 'prod'\n) {\n  const organizationEndpoint = getOrganizationEndpoint(\n    organizationId,\n    environment\n  );\n\n  return `${organizationEndpoint}/rest/search/v2`;\n}\n\nexport function getAnalyticsNextApiBaseUrl(\n  organizationId: string,\n  environment: PlatformEnvironment = 'prod'\n) {\n  const organizationEndpoint = getOrganizationEndpoint(\n    organizationId,\n    environment,\n    'analytics'\n  );\n\n  return `${organizationEndpoint}/rest/organizations/${organizationId}/events/v1`;\n}\n\nfunction buildDefaultRequestOptions(\n  options: PlatformClientCallOptions\n): PlatformRequestOptions {\n  const {url, method, requestParams, contentType, accessToken, signal} =\n    options;\n  const isMethodWithBody =\n    options.method === 'POST' || options.method === 'PUT';\n  const body = encodeBody(requestParams, contentType);\n\n  return {\n    url,\n    method,\n    headers: {\n      'Content-Type': contentType,\n      Authorization: `Bearer ${accessToken}`,\n      ...options.headers,\n    },\n    ...(isMethodWithBody && {body}),\n    signal,\n  };\n}\n\nfunction encodeBody(body: unknown, contentType: HTTPContentType) {\n  if (contentType === 'application/x-www-form-urlencoded') {\n    return canBeFormUrlEncoded(body) ? encodeAsFormUrl(body) : '';\n  }\n\n  return JSON.stringify(body);\n}\n", "import {SolutionType} from '../app/commerce-ssr-engine/types/common.js';\n\nexport const loadReducerError = new Error('Failed to load reducers.');\n\nexport class ExpiredTokenError extends Error {\n  constructor() {\n    super();\n    this.name = 'ExpiredToken';\n    this.message = 'The token being used to perform the request is expired.';\n  }\n}\n\nexport class InvalidControllerDefinition extends Error {\n  constructor() {\n    super();\n    this.name = 'InvalidControllerDefinition';\n    this.message = `A controller must be defined for at least one solution type: ${Object.keys(\n      SolutionType\n    )\n      .map((s) => s.toLowerCase())\n      .join(', ')}`;\n  }\n}\n\nexport class DisconnectedError extends Error {\n  public statusCode: number;\n  constructor(url: string, statusCode?: number) {\n    super();\n    this.name = 'Disconnected';\n    this.message = `Client could not connect to the following URL: ${url}`;\n    this.statusCode = statusCode ?? 0;\n  }\n}\n", "import type {Controller} from '../../../controllers/controller/headless-controller.js';\nimport type {InvalidControllerDefinition} from '../../../utils/errors.js';\nimport type {CommerceEngine} from '../../commerce-engine/commerce-engine.js';\nimport type {CoreEngine, CoreEngineNext} from '../../engine.js';\nimport type {\n  HasKey,\n  InferControllerStaticStateMapFromControllers,\n  InferControllerStaticStateFromController,\n  InferControllerPropsMapFromDefinitions,\n} from '../../ssr-engine/types/common.js';\n\nexport type {\n  InferControllerStaticStateFromController,\n  InferControllerStaticStateMapFromControllers,\n  InferControllerPropsMapFromDefinitions,\n};\n\nexport enum SolutionType {\n  search = 'search',\n  listing = 'listing',\n  standalone = 'standalone',\n}\n\nexport interface ControllerDefinitionWithoutProps<\n  TEngine extends CoreEngine | CoreEngineNext,\n  TController extends Controller,\n> {\n  /**\n   * Creates an instance of the given controller.\n   *\n   * @param engine - The search engine.\n   * @param solutionType - The type of solution for which the controller should be built (e.g. search or listing). This option only applies to sub-controllers.\n   * @returns The created controller instance.\n   */\n  build(engine: TEngine, solutionType?: SolutionType): TController;\n}\n\nexport interface ControllerDefinitionWithProps<\n  TEngine extends CoreEngine | CoreEngineNext,\n  TController extends Controller,\n  TProps,\n> {\n  /**\n   * Creates an instance of the given controller.\n   *\n   * @param engine - The search engine.\n   * @param props - The controller properties.\n   * @param solutionType - The type of solution for which the controller should be built (e.g. search or listing). This option only applies to sub-controllers.\n   * @returns The created controller instance.\n   */\n  buildWithProps(\n    engine: TEngine,\n    props: TProps,\n    solutionType?: SolutionType\n  ): TController;\n}\n\nexport type ControllerDefinition<\n  TEngine extends CoreEngine | CoreEngineNext,\n  TController extends Controller,\n> =\n  | ControllerDefinitionWithoutProps<TEngine, TController>\n  | ControllerDefinitionWithProps<TEngine, TController, unknown>;\n\nexport interface ControllerDefinitionsMap<\n  TEngine extends CoreEngine | CoreEngineNext,\n  TController extends Controller,\n> {\n  [customName: string]: ControllerDefinition<TEngine, TController>;\n}\n\nexport type InferControllerPropsFromDefinition<\n  TController extends ControllerDefinition<\n    CoreEngine | CoreEngineNext,\n    Controller\n  >,\n> =\n  TController extends ControllerDefinitionWithProps<\n    CoreEngine | CoreEngineNext,\n    Controller,\n    infer Props\n  >\n    ? Props\n    : TController extends ControllerDefinitionWithoutProps<\n          CoreEngine | CoreEngineNext,\n          Controller\n        >\n      ? {}\n      : unknown;\n\nexport type InferControllerFromDefinition<\n  TDefinition extends ControllerDefinition<\n    CoreEngine | CoreEngineNext,\n    Controller\n  >,\n> =\n  TDefinition extends ControllerDefinition<infer _, infer TController>\n    ? TController\n    : never;\n\nexport type InferControllersMapFromDefinition<\n  TControllers extends ControllerDefinitionsMap<\n    CoreEngine | CoreEngineNext,\n    Controller\n  >,\n  TSolutionType extends SolutionType,\n> = {\n  [K in keyof TControllers as HasKey<\n    TControllers[K],\n    TSolutionType\n  > extends never\n    ? never\n    : K]: InferControllerFromDefinition<TControllers[K]>;\n};\n\nexport type InferControllerStaticStateMapFromDefinitionsWithSolutionType<\n  TControllers extends ControllerDefinitionsMap<\n    CoreEngine | CoreEngineNext,\n    Controller\n  >,\n  TSolutionType extends SolutionType,\n> = {\n  [K in keyof TControllers as HasKey<\n    TControllers[K],\n    TSolutionType\n  > extends never\n    ? never\n    : K]: InferControllerStaticStateFromController<\n    InferControllerFromDefinition<TControllers[K]>\n  >;\n};\n\nexport interface ControllerDefinitionOption {\n  /**\n   * Whether the controller will be used in a product listing context.\n   * @defaultValue true\n   */\n  listing?: boolean;\n  /**\n   * Whether the controller will be used in a search page context.\n   * @defaultValue true\n   */\n  search?: boolean;\n}\n\ninterface UniversalController {\n  /**\n   * @internal\n   */\n  [SolutionType.search]: true;\n  /**\n   * @internal\n   */\n  [SolutionType.listing]: true;\n  /**\n   * @internal\n   */\n  [SolutionType.standalone]: true;\n}\n\ninterface SearchOnlyController {\n  /**\n   * @internal\n   */\n  [SolutionType.search]: true;\n}\n\ninterface ListingOnlyController {\n  /**\n   * @internal\n   */\n  [SolutionType.listing]: true;\n}\n\ninterface SearchAndListingController {\n  /**\n   * @internal\n   */\n  [SolutionType.search]: true;\n  /**\n   * @internal\n   */\n  [SolutionType.listing]: true;\n}\n\nexport type SearchOnlyControllerDefinitionWithoutProps<\n  TController extends Controller,\n> = ControllerDefinitionWithoutProps<CommerceEngine, TController> &\n  SearchOnlyController;\n\nexport type SearchOnlyControllerDefinitionWithProps<\n  TController extends Controller,\n  TProps,\n> = ControllerDefinitionWithProps<CommerceEngine, TController, TProps> &\n  SearchOnlyController;\n\nexport type ListingOnlyControllerDefinitionWithoutProps<\n  TController extends Controller,\n> = ControllerDefinitionWithoutProps<CommerceEngine, TController> &\n  ListingOnlyController;\n\nexport type ListingOnlyControllerDefinitionWithProps<\n  TController extends Controller,\n  TProps,\n> = ControllerDefinitionWithProps<CommerceEngine, TController, TProps> &\n  ListingOnlyController;\n\nexport type UniversalControllerDefinitionWithoutProps<\n  TController extends Controller,\n> = ControllerDefinitionWithoutProps<CommerceEngine, TController> &\n  UniversalController;\n\nexport type SearchAndListingControllerDefinitionWithoutProps<\n  TController extends Controller,\n> = ControllerDefinitionWithoutProps<CommerceEngine, TController> &\n  SearchAndListingController;\n\nexport type SearchAndListingControllerDefinitionWithProps<\n  TController extends Controller,\n  TProps,\n> = ControllerDefinitionWithProps<CommerceEngine, TController, TProps> &\n  SearchAndListingController;\n\nexport type SubControllerDefinitionWithoutProps<\n  TController extends Controller,\n  TDefinition extends ControllerDefinitionOption | undefined,\n> = TDefinition extends {listing?: true; search?: true} | undefined\n  ? SearchAndListingControllerDefinitionWithoutProps<TController>\n  : TDefinition extends {listing?: true; search?: false}\n    ? ListingOnlyControllerDefinitionWithoutProps<TController>\n    : TDefinition extends {listing?: false; search?: true}\n      ? SearchOnlyControllerDefinitionWithoutProps<TController>\n      : TDefinition extends {listing: false; search: false}\n        ? InvalidControllerDefinition\n        : never;\n\nexport type SubControllerDefinitionWithProps<\n  TController extends Controller,\n  TDefinition extends ControllerDefinitionOption | undefined,\n  TProps,\n> = TDefinition extends {listing?: true; search?: true} | undefined\n  ? SearchAndListingControllerDefinitionWithProps<TController, TProps>\n  : TDefinition extends {listing?: true; search?: false}\n    ? ListingOnlyControllerDefinitionWithProps<TController, TProps>\n    : TDefinition extends {listing?: false; search?: true}\n      ? SearchOnlyControllerDefinitionWithProps<TController, TProps>\n      : TDefinition extends {listing: false; search: false}\n        ? InvalidControllerDefinition\n        : never;\n", "type FormEncodable = Record<string, string | number | boolean>;\n\nexport function encodeAsFormUrl(obj: FormEncodable) {\n  const body = [];\n\n  for (const property in obj) {\n    const key = encodeURIComponent(property);\n    const value = encodeURIComponent(obj[property]);\n    body.push(`${key}=${value}`);\n  }\n\n  return body.join('&');\n}\n\nexport function canBeFormUrlEncoded(obj: unknown): obj is FormEncodable {\n  if (typeof obj !== 'object') {\n    return false;\n  }\n\n  if (!obj) {\n    return false;\n  }\n\n  return Object.values(obj).every(isPrimitive);\n}\n\nfunction isPrimitive(val: unknown) {\n  return (\n    typeof val === 'string' ||\n    typeof val === 'number' ||\n    typeof val === 'boolean'\n  );\n}\n", "import {Logger} from 'pino';\nimport {CommerceThunkExtraArguments} from '../../app/commerce-thunk-extra-arguments.js';\nimport {CommerceAppState} from '../../state/commerce-app-state.js';\nimport {PlatformEnvironment} from '../../utils/url-utils.js';\nimport {\n  getOrganizationEndpoint,\n  PlatformClient,\n  PlatformClientCallOptions,\n} from '../platform-client.js';\nimport {PreprocessRequest} from '../preprocess-request.js';\nimport {SpecificFacetSearchResponse} from '../search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {buildAPIResponseFromErrorOrThrow} from '../search/search-api-error-response.js';\nimport {\n  CommerceAPIErrorResponse,\n  CommerceAPIErrorStatusResponse,\n} from './commerce-api-error-response.js';\nimport {buildRequest, CommerceAPIRequest} from './common/request.js';\nimport {CommerceSuccessResponse} from './common/response.js';\nimport {\n  CommerceFacetSearchRequest,\n  FacetSearchType,\n} from './facet-search/facet-search-request.js';\nimport {\n  CommerceRecommendationsRequest,\n  buildRecommendationsRequest,\n} from './recommendations/recommendations-request.js';\nimport {RecommendationsCommerceSuccessResponse} from './recommendations/recommendations-response.js';\nimport {\n  buildQuerySuggestRequest,\n  QuerySuggestRequest,\n} from './search/query-suggest/query-suggest-request.js';\nimport {QuerySuggestSuccessResponse} from './search/query-suggest/query-suggest-response.js';\nimport {CommerceSearchRequest} from './search/request.js';\nimport {SearchCommerceSuccessResponse} from './search/response.js';\n\nexport interface CommerceFacetSearchAPIClient {\n  facetSearch(\n    req: CommerceFacetSearchRequest,\n    facetSearchOrigin: string\n  ): Promise<CommerceAPIResponse<SpecificFacetSearchResponse>>;\n}\n\nexport interface AsyncThunkCommerceOptions<\n  T extends Partial<CommerceAppState>,\n> {\n  state: T;\n  rejectValue: CommerceAPIErrorStatusResponse;\n  extra: CommerceThunkExtraArguments;\n}\n\nexport interface CommerceAPIClientOptions {\n  logger: Logger;\n  preprocessRequest: PreprocessRequest;\n}\n\nexport type CommerceAPIResponse<T> =\n  | CommerceAPISuccessResponse<T>\n  | CommerceAPIErrorResponse;\n\nexport interface CommerceAPISuccessResponse<T> {\n  success: T;\n}\n\nexport const isErrorResponse = <T>(\n  r: CommerceAPIResponse<T>\n): r is CommerceAPIErrorResponse => {\n  return (r as CommerceAPIErrorResponse).error !== undefined;\n};\n\nexport class CommerceAPIClient implements CommerceFacetSearchAPIClient {\n  constructor(private options: CommerceAPIClientOptions) {}\n\n  async getProductListing(\n    req: CommerceAPIRequest\n  ): Promise<CommerceAPIResponse<CommerceSuccessResponse>> {\n    return this.query({\n      ...buildRequest(req, 'listing'),\n      ...this.options,\n    });\n  }\n\n  async search(\n    req: CommerceSearchRequest\n  ): Promise<CommerceAPIResponse<SearchCommerceSuccessResponse>> {\n    const requestOptions = buildRequest(req, 'search');\n    return this.query({\n      ...requestOptions,\n      requestParams: {\n        ...requestOptions.requestParams,\n        query: req?.query,\n      },\n      ...this.options,\n    });\n  }\n\n  async getRecommendations(\n    req: CommerceRecommendationsRequest\n  ): Promise<CommerceAPIResponse<RecommendationsCommerceSuccessResponse>> {\n    return this.query({\n      ...buildRecommendationsRequest(req, 'recommendations'),\n      ...this.options,\n    });\n  }\n\n  async productSuggestions(\n    req: CommerceSearchRequest\n  ): Promise<CommerceAPIResponse<SearchCommerceSuccessResponse>> {\n    const requestOptions = buildRequest(req, 'search/productSuggest');\n    return this.query({\n      ...requestOptions,\n      requestParams: {\n        ...requestOptions.requestParams,\n        query: req?.query,\n      },\n      ...this.options,\n    });\n  }\n\n  async querySuggest(\n    req: QuerySuggestRequest\n  ): Promise<CommerceAPIResponse<QuerySuggestSuccessResponse>> {\n    const requestOptions = buildQuerySuggestRequest(req);\n    return this.query<QuerySuggestSuccessResponse>({\n      ...requestOptions,\n      requestParams: {\n        ...requestOptions.requestParams,\n        query: req?.query,\n      },\n      ...this.options,\n    });\n  }\n\n  async facetSearch(\n    req: CommerceFacetSearchRequest,\n    type: FacetSearchType\n  ): Promise<CommerceAPIResponse<SpecificFacetSearchResponse>> {\n    const requestOptions = buildRequest(req, 'facet');\n    return this.query<SpecificFacetSearchResponse>({\n      ...requestOptions,\n      url: `${requestOptions.url}?type=${type}`,\n      requestParams: {\n        ...requestOptions.requestParams,\n        facetId: req?.facetId,\n        facetQuery: req?.facetQuery,\n        query: req?.query,\n      },\n      ...this.options,\n    });\n  }\n\n  // eslint-disable-next-line @cspell/spellchecker\n  // TODO: CAPI-867 - Use Commerce API's equivalent of the /plan endpoint when it becomes available.\n  async plan(\n    req: CommerceSearchRequest\n  ): Promise<CommerceAPIResponse<CommerceSuccessResponse>> {\n    const requestOptions = buildRequest(req, 'search');\n    return this.query({\n      ...requestOptions,\n      requestParams: {\n        ...requestOptions.requestParams,\n        query: req?.query,\n      },\n      ...this.options,\n    });\n  }\n\n  private async query<T = CommerceSuccessResponse>(\n    options: PlatformClientCallOptions\n  ) {\n    const response = await PlatformClient.call(options);\n\n    if (response instanceof Error) {\n      return buildAPIResponseFromErrorOrThrow(response);\n    }\n\n    const body = await response.json();\n    return response.ok\n      ? {success: body as T}\n      : {error: body as CommerceAPIErrorStatusResponse};\n  }\n}\n\nexport function getCommerceApiBaseUrl(\n  organizationId: string,\n  environment: PlatformEnvironment = 'prod'\n) {\n  const platformEndpoint = getOrganizationEndpoint(organizationId, environment);\n\n  return `${platformEndpoint}/rest/organizations/${organizationId}/commerce/v2`;\n}\n", "import {DisconnectedError} from '../../utils/errors.js';\nimport {QueryException} from './search/query-exception.js';\n\nexport interface SearchAPIErrorWithStatusCode {\n  statusCode: number;\n  message: string;\n  type: string;\n  ignored?: boolean;\n}\n\nexport interface SearchAPIErrorWithExceptionInBody {\n  exception: QueryException;\n}\n\nfunction buildDisconnectedError(\n  error: DisconnectedError\n): SearchAPIErrorWithStatusCode {\n  return {\n    statusCode: error.statusCode,\n    type: error.name,\n    message: error.message,\n  };\n}\n\nfunction buildIgnoredAbortedError(\n  error: DOMException\n): SearchAPIErrorWithStatusCode {\n  return {\n    statusCode: error.code,\n    type: error.name,\n    message: error.message,\n    ignored: true,\n  };\n}\n\nexport function buildAPIResponseFromErrorOrThrow(\n  error: Error | DOMException,\n  disableAbortWarning?: boolean\n): {\n  error: SearchAPIErrorWithStatusCode;\n} {\n  if (disableAbortWarning && error.name === 'AbortError') {\n    return {\n      error: buildIgnoredAbortedError(error as DOMException),\n    };\n  }\n  if (error instanceof DisconnectedError) {\n    return {error: buildDisconnectedError(error)};\n  }\n  throw error;\n}\n", "import {PlatformClientCallOptions} from '../../platform-client.js';\nimport {BaseParam} from '../../platform-service-params.js';\nimport {\n  TrackingIdParam,\n  LanguageParam,\n  CountryParam,\n  CurrencyParam,\n  ClientIdParam,\n  ContextParam,\n  FacetsParam,\n  PageParam,\n  SortParam,\n  PerPageParam,\n} from '../commerce-api-params.js';\nimport {CommerceApiMethod} from '../commerce-metadata.js';\n\nexport type BaseCommerceAPIRequest = BaseParam &\n  TrackingIdParam &\n  LanguageParam &\n  CountryParam &\n  CurrencyParam &\n  ClientIdParam &\n  ContextParam &\n  PageParam &\n  PerPageParam;\n\nexport type CommerceAPIRequest = BaseCommerceAPIRequest &\n  FacetsParam &\n  SortParam;\n\nexport const buildRequest = (\n  req: CommerceAPIRequest,\n  path: CommerceApiMethod\n) => {\n  return {\n    ...baseRequest(req, path),\n    requestParams: prepareRequestParams(req),\n  };\n};\n\nconst prepareRequestParams = (req: CommerceAPIRequest) => {\n  const {\n    trackingId,\n    clientId,\n    context,\n    language,\n    country,\n    currency,\n    page,\n    perPage,\n    facets,\n    sort,\n  } = req;\n  return {\n    trackingId,\n    clientId,\n    context,\n    language,\n    country,\n    currency,\n    page,\n    perPage,\n    facets,\n    sort,\n  };\n};\n\nexport const baseRequest = (\n  req: BaseParam,\n  path: CommerceApiMethod\n): Pick<\n  PlatformClientCallOptions,\n  | 'accessToken'\n  | 'method'\n  | 'contentType'\n  | 'url'\n  | 'origin'\n  | 'requestMetadata'\n> => {\n  const {url, accessToken} = req;\n  const baseUrl = `${url}/${path}`;\n\n  return {\n    accessToken,\n    method: 'POST',\n    contentType: 'application/json',\n    url: baseUrl,\n    origin: 'commerceApiFetch',\n    requestMetadata: {method: path},\n  };\n};\n", "import {SlotIdParam} from '../commerce-api-params.js';\nimport {CommerceApiMethod} from '../commerce-metadata.js';\nimport {BaseCommerceAPIRequest, baseRequest} from '../common/request.js';\n\nexport type CommerceRecommendationsRequest = BaseCommerceAPIRequest &\n  SlotIdParam;\nexport const buildRecommendationsRequest = (\n  req: CommerceRecommendationsRequest,\n  path: CommerceApiMethod\n) => {\n  return {\n    ...baseRequest(req, path),\n    requestParams: prepareRecommendationsRequestParams(req),\n  };\n};\n\nconst prepareRecommendationsRequestParams = (\n  req: CommerceRecommendationsRequest\n) => {\n  const {\n    slotId,\n    trackingId,\n    clientId,\n    context,\n    language,\n    country,\n    currency,\n    page,\n    perPage,\n  } = req;\n  return {\n    slotId,\n    trackingId,\n    clientId,\n    context,\n    language,\n    country,\n    currency,\n    page,\n    perPage,\n  };\n};\n", "import {BaseParam} from '../../../platform-service-params.js';\nimport {\n  ClientIdParam,\n  CurrencyParam,\n  LanguageParam,\n  QueryParam,\n  TrackingIdParam,\n  ContextParam,\n  CountryParam,\n} from '../../commerce-api-params.js';\nimport {baseRequest} from '../../common/request.js';\n\nexport type QuerySuggestRequest = BaseParam &\n  TrackingIdParam &\n  LanguageParam &\n  CountryParam &\n  CurrencyParam &\n  ClientIdParam &\n  ContextParam &\n  QueryParam;\n\nexport const buildQuerySuggestRequest = (req: QuerySuggestRequest) => {\n  return {\n    ...baseRequest(req, 'search/querySuggest'),\n    requestParams: prepareRequestParams(req),\n  };\n};\n\nconst prepareRequestParams = (req: QuerySuggestRequest) => {\n  const {trackingId, query, clientId, context, language, country, currency} =\n    req;\n  return {\n    trackingId,\n    query,\n    clientId,\n    context,\n    language,\n    country,\n    currency,\n  };\n};\n", "import {StateFromReducersMapObject} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\nimport {CommerceAPIClient} from '../../api/commerce/commerce-api-client.js';\nimport {NoopPreprocessRequest} from '../../api/preprocess-request.js';\nimport {\n  updateAnalyticsConfiguration,\n  updateBasicConfiguration,\n  updateProxyBaseUrl,\n} from '../../features/commerce/configuration/configuration-actions.js';\nimport {configurationReducer} from '../../features/commerce/configuration/configuration-slice.js';\nimport {ConfigurationState} from '../../features/commerce/configuration/configuration-state.js';\nimport {setItems} from '../../features/commerce/context/cart/cart-actions.js';\nimport {cartReducer} from '../../features/commerce/context/cart/cart-slice.js';\nimport {setContext} from '../../features/commerce/context/context-actions.js';\nimport {contextReducer} from '../../features/commerce/context/context-slice.js';\nimport {didYouMeanReducer} from '../../features/commerce/did-you-mean/did-you-mean-slice.js';\nimport {commerceFacetSetReducer} from '../../features/commerce/facets/facet-set/facet-set-slice.js';\nimport {fieldSuggestionsOrderReducer} from '../../features/commerce/facets/field-suggestions-order/field-suggestions-order-slice.js';\nimport {manualNumericFacetReducer} from '../../features/commerce/facets/numeric-facet/manual-numeric-facet-slice.js';\nimport {paginationReducer} from '../../features/commerce/pagination/pagination-slice.js';\nimport {productListingReducer} from '../../features/commerce/product-listing/product-listing-slice.js';\nimport {queryReducer} from '../../features/commerce/query/query-slice.js';\nimport {recommendationsReducer} from '../../features/commerce/recommendations/recommendations-slice.js';\nimport {commerceSearchReducer} from '../../features/commerce/search/search-slice.js';\nimport {sortReducer} from '../../features/commerce/sort/sort-slice.js';\nimport {commerceTriggersReducer} from '../../features/commerce/triggers/triggers-slice.js';\nimport {versionReducer} from '../../features/debug/version-slice.js';\nimport {facetOrderReducer} from '../../features/facets/facet-order/facet-order-slice.js';\nimport {categoryFacetSearchSetReducer} from '../../features/facets/facet-search-set/category/category-facet-search-set-slice.js';\nimport {specificFacetSearchSetReducer} from '../../features/facets/facet-search-set/specific/specific-facet-search-set-slice.js';\nimport {CommerceAppState} from '../../state/commerce-app-state.js';\nimport {CommerceThunkExtraArguments} from '../commerce-thunk-extra-arguments.js';\nimport {\n  buildCoreEngine,\n  CoreEngineNext,\n  CoreState,\n  EngineOptions,\n  ExternalEngineOptions,\n} from '../engine.js';\nimport {buildLogger} from '../logger.js';\nimport {redactEngine, stateKey} from '../state-key.js';\nimport {buildThunkExtraArguments} from '../thunk-extra-arguments.js';\nimport {\n  CommerceEngineConfiguration,\n  commerceEngineConfigurationSchema,\n} from './commerce-engine-configuration.js';\n\nexport type {CommerceEngineConfiguration};\n\nconst commerceEngineReducers = {\n  productListing: productListingReducer,\n  recommendations: recommendationsReducer,\n  commerceSearch: commerceSearchReducer,\n  commercePagination: paginationReducer,\n  commerceSort: sortReducer,\n  facetOrder: facetOrderReducer,\n  fieldSuggestionsOrder: fieldSuggestionsOrderReducer,\n  facetSearchSet: specificFacetSearchSetReducer,\n  categoryFacetSearchSet: categoryFacetSearchSetReducer,\n  commerceFacetSet: commerceFacetSetReducer,\n  manualNumericFacetSet: manualNumericFacetReducer,\n  commerceContext: contextReducer,\n  commerceQuery: queryReducer,\n  cart: cartReducer,\n  didYouMean: didYouMeanReducer,\n  triggers: commerceTriggersReducer,\n};\ntype CommerceEngineReducers = typeof commerceEngineReducers;\n\nexport type CommerceEngineState =\n  StateFromReducersMapObject<CommerceEngineReducers> &\n    Partial<CommerceAppState>;\n\n/**\n * The engine for powering commerce experiences.\n *\n * @group Engine\n */\nexport interface CommerceEngine<State extends object = {}>\n  extends CoreEngineNext<\n    State & CoreState<ConfigurationState> & CommerceEngineState,\n    CommerceThunkExtraArguments,\n    ConfigurationState\n  > {}\n\n/**\n * The commerce engine options.\n *\n * @group Engine\n */\nexport interface CommerceEngineOptions\n  extends ExternalEngineOptions<CommerceEngineState> {\n  /**\n   * The commerce engine configuration options.\n   */\n  configuration: CommerceEngineConfiguration;\n}\n\n/**\n * Creates a commerce engine instance.\n *\n * @param options - The commerce engine options.\n * @returns A commerce engine instance.\n *\n * @group Engine\n */\nexport function buildCommerceEngine(\n  options: CommerceEngineOptions\n): CommerceEngine {\n  const logger = buildLogger(options.loggerOptions);\n  const {configuration} = options;\n  validateConfiguration(configuration, logger);\n\n  const commerceClient = createCommerceAPIClient(configuration, logger);\n\n  const thunkArguments = {\n    ...buildThunkExtraArguments(configuration, logger),\n    apiClient: commerceClient,\n  };\n\n  const reducers = {\n    ...commerceEngineReducers,\n    configuration: configurationReducer,\n    version: versionReducer,\n  };\n\n  const augmentedOptions: EngineOptions<CommerceEngineReducers> = {\n    ...options,\n    reducers,\n  };\n\n  const internalEngine = buildCoreEngine(\n    augmentedOptions,\n    thunkArguments,\n    configurationReducer\n  );\n\n  const {state: _, ...engine} = internalEngine;\n\n  const {\n    accessToken,\n    environment,\n    organizationId,\n    analytics,\n    proxyBaseUrl,\n    context,\n    cart,\n  } = configuration;\n\n  engine.dispatch(\n    updateBasicConfiguration({\n      accessToken,\n      environment,\n      organizationId,\n    })\n  );\n\n  engine.dispatch(updateAnalyticsConfiguration(analytics));\n\n  if (proxyBaseUrl !== undefined) {\n    engine.dispatch(\n      updateProxyBaseUrl({\n        proxyBaseUrl,\n      })\n    );\n  }\n\n  engine.dispatch(setContext(context));\n\n  if (cart?.items !== undefined) {\n    engine.dispatch(setItems(cart.items));\n  }\n\n  return redactEngine({\n    ...engine,\n\n    get [stateKey]() {\n      return internalEngine.state;\n    },\n\n    get configuration(): ConfigurationState {\n      return {\n        ...internalEngine.state.configuration,\n      };\n    },\n  });\n}\n\nfunction validateConfiguration(\n  configuration: CommerceEngineConfiguration,\n  logger: Logger\n) {\n  try {\n    commerceEngineConfigurationSchema.validate(configuration);\n  } catch (error) {\n    logger.error('Commerce engine configuration error', error);\n    throw error;\n  }\n}\n\nfunction createCommerceAPIClient(\n  configuration: CommerceEngineConfiguration,\n  logger: Logger\n) {\n  return new CommerceAPIClient({\n    logger,\n    preprocessRequest: configuration.preprocessRequest || NoopPreprocessRequest,\n  });\n}\n", "import {AnalyticsClientOrigin} from 'coveo.analytics/dist/definitions/client/analyticsRequestClient.js';\nimport {CommerceApiMethod} from './commerce/commerce-metadata.js';\nimport {SearchApiMethod, SearchOrigin} from './search/search-metadata.js';\n\nexport interface PlatformRequestOptions extends RequestInit {\n  url: string;\n}\n\nexport type PlatformClientOrigin =\n  | AnalyticsClientOrigin\n  | 'searchApiFetch'\n  | 'insightApiFetch'\n  | 'caseAssistApiFetch'\n  | 'commerceApiFetch';\n\nexport interface RequestMetadata {\n  /**\n   * Method called on the client.\n   */\n  method: SearchApiMethod | CommerceApiMethod;\n  /**\n   * Origin of the client, helps differentiate in between features using the same method.\n   */\n  origin?: SearchOrigin;\n}\n\nexport type PreprocessRequest = (\n  /**\n   * The HTTP request sent to the Platform.\n   */\n  request: PlatformRequestOptions,\n  /**\n   * Origin of the request.\n   */\n  clientOrigin: PlatformClientOrigin,\n  /**\n   * Optional metadata provided for the request.\n   */\n  metadata?: RequestMetadata\n) => PlatformRequestOptions | Promise<PlatformRequestOptions>;\n\nexport const NoopPreprocessRequest: PreprocessRequest = (request) => request;\n", "import {StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {PlatformEnvironment} from '../../../utils/url-utils.js';\nimport {\n  nonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload.js';\nimport {\n  UpdateAnalyticsConfigurationActionCreatorPayload,\n  UpdateBasicConfigurationActionCreatorPayload,\n  analyticsConfigurationSchema,\n} from '../../configuration/configuration-actions.js';\n\nexport type UpdateBasicConfigurationPayload =\n  UpdateBasicConfigurationActionCreatorPayload;\n\nexport const updateBasicConfiguration = createAction(\n  'commerce/configuration/updateBasicConfiguration',\n  (payload: UpdateBasicConfigurationPayload) =>\n    validatePayload(payload, {\n      accessToken: nonEmptyString,\n      environment: new StringValue<PlatformEnvironment>({\n        required: false,\n        constrainTo: ['prod', 'hipaa', 'stg', 'dev'],\n      }),\n      organizationId: nonEmptyString,\n    })\n);\n\nexport type UpdateProxyBaseUrlPayload = {\n  /**\n   * The base URL to use to proxy Coveo commerce requests (e.g., `https://example.com/commerce`).\n   *\n   * This is an advanced option that you should only set if you need to proxy Coveo commerce requests through your own\n   * server. In most cases, you should not set this option.\n   *\n   *  See [Headless proxy: Commerce](https://docs.coveo.com/en/headless/latest/usage/proxy#commerce).\n   **/\n  proxyBaseUrl?: string;\n};\n\nexport const updateProxyBaseUrl = createAction(\n  'commerce/configuration/updateProxyBaseUrl',\n  (payload: UpdateProxyBaseUrlPayload) =>\n    validatePayload(payload, {\n      proxyBaseUrl: new StringValue({required: false, url: true}),\n    })\n);\n\nexport type UpdateAnalyticsConfigurationPayload = Pick<\n  UpdateAnalyticsConfigurationActionCreatorPayload,\n  'enabled' | 'proxyBaseUrl' | 'source' | 'trackingId'\n>;\n\nexport const updateAnalyticsConfiguration = createAction(\n  'commerce/configuration/updateAnalyticsConfiguration',\n  (payload: UpdateAnalyticsConfigurationPayload) => {\n    return validatePayload(payload, {\n      enabled: analyticsConfigurationSchema.enabled,\n      proxyBaseUrl: analyticsConfigurationSchema.proxyBaseUrl,\n      source: analyticsConfigurationSchema.source,\n      trackingId: analyticsConfigurationSchema.trackingId,\n    });\n  }\n);\n\nexport const disableAnalytics = createAction(\n  'commerce/configuration/analytics/disable'\n);\n\nexport const enableAnalytics = createAction(\n  'commerce/configuration/analytics/enable'\n);\n", "import {\n  SchemaDefinition,\n  SchemaValue,\n  Schema,\n  SchemaValidationError,\n  StringValue,\n  RecordValue,\n  ArrayValue,\n} from '@coveo/bueno';\nimport {SerializedError} from '@reduxjs/toolkit';\nimport type {CoreEngine, CoreEngineNext} from '../app/engine.js';\n\nexport const requiredNonEmptyString = new StringValue({\n  required: true,\n  emptyAllowed: false,\n});\n\nexport const nonEmptyString = new StringValue({\n  required: false,\n  emptyAllowed: false,\n});\n\nexport const requiredEmptyAllowedString = new StringValue({\n  required: true,\n  emptyAllowed: true,\n});\n\nexport const nonRequiredEmptyAllowedString = new StringValue({\n  required: false,\n  emptyAllowed: true,\n});\n\nexport const nonEmptyStringArray = new ArrayValue({\n  each: requiredNonEmptyString,\n  required: true,\n});\n\nexport const optionalNonEmptyVersionString = new StringValue({\n  required: false,\n  emptyAllowed: false,\n  regex: /^\\d+\\.\\d+\\.\\d+$/,\n});\n\nexport const serializeSchemaValidationError = ({\n  message,\n  name,\n  stack,\n}: SchemaValidationError): SerializedError => ({message, name, stack});\n\n/**\n * Validates an action payload and throws an error if invalid\n * @param payload the action payload\n * @param definition Either a Bueno SchemaDefinition or a SchemaValue\n */\nexport const validatePayloadAndThrow = <P>(\n  payload: P,\n  definition: SchemaDefinition<Required<P>> | SchemaValue<P>\n) => {\n  const isSchemaValue = 'required' in definition;\n  if (isSchemaValue) {\n    return {\n      payload: new Schema({\n        value: definition as SchemaValue<P>,\n      }).validate({value: payload}).value as P,\n    };\n  }\n\n  const asRecordValue = new RecordValue({\n    options: {required: true},\n    values: definition as SchemaDefinition<Record<string, Object>>,\n  });\n\n  const isInvalid = asRecordValue.validate(payload);\n  if (isInvalid) {\n    throw new SchemaValidationError(isInvalid);\n  }\n  return {payload};\n};\n\n/**\n * Validates an action payload and return an `error` alongside the payload if it's invalid\n * @param payload the action payload\n * @param definition Either a Bueno SchemaDefinition or a SchemaValue\n */\nexport const validatePayload = <P>(\n  payload: P,\n  definition: SchemaDefinition<Required<P>> | SchemaValue<P>\n): {payload: P; error?: SerializedError} => {\n  try {\n    return validatePayloadAndThrow(payload, definition);\n  } catch (error) {\n    return {\n      payload,\n      error: serializeSchemaValidationError(error as Error),\n    };\n  }\n};\n\nexport const validateInitialState = <T extends object>(\n  engine: CoreEngine | CoreEngineNext,\n  schema: Schema<T>,\n  obj: T | undefined,\n  functionName: string\n) => {\n  const message = `Check the initialState of ${functionName}`;\n  return validateObject(\n    engine,\n    schema,\n    obj,\n    message,\n    'Controller initialization error'\n  );\n};\n\nexport const validateOptions = <T extends object>(\n  engine: CoreEngine<object> | CoreEngineNext<object>,\n  schema: Schema<T>,\n  obj: Partial<T> | undefined,\n  functionName: string\n) => {\n  const message = `Check the options of ${functionName}`;\n  return validateObject(\n    engine,\n    schema,\n    obj,\n    message,\n    'Controller initialization error'\n  );\n};\n\nconst validateObject = <T extends object>(\n  engine: CoreEngine<object> | CoreEngineNext<object>,\n  schema: Schema<T>,\n  obj: T | undefined,\n  validationMessage: string,\n  errorMessage: string\n) => {\n  try {\n    return schema.validate(obj, validationMessage);\n  } catch (error) {\n    engine.logger.error(error as Error, errorMessage);\n    throw error;\n  }\n};\n", "import {\n  ArrayValue,\n  BooleanValue,\n  RecordValue,\n  SchemaDefinition,\n  StringValue,\n  Value,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {IRuntimeEnvironment} from 'coveo.analytics';\nimport {PlatformEnvironment} from '../../utils/url-utils.js';\nimport {\n  nonEmptyString,\n  validatePayload,\n  requiredNonEmptyString,\n  optionalNonEmptyVersionString,\n} from '../../utils/validate-payload.js';\nimport {COVEO_FRAMEWORK, CoveoFramework} from '../../utils/version.js';\n\nconst originSchemaOnConfigUpdate = () => nonEmptyString;\n\nconst originSchemaOnUpdate = () => requiredNonEmptyString;\n\nexport interface UpdateBasicConfigurationActionCreatorPayload {\n  /**\n   * The access token to use to authenticate requests against the Coveo Cloud endpoints. Typically, this will be an API key or search token that grants the privileges to execute queries and push usage analytics data in the target Coveo Cloud organization.\n   */\n  accessToken?: string;\n\n  /**\n   * The environment in which the organization is hosted.\n   *\n   * The `dev` and `stg` environments are only available internally for Coveo employees (e.g., Professional Services).\n   */\n  environment?: PlatformEnvironment;\n\n  /**\n   * The unique identifier of the target Coveo Cloud organization (e.g., `mycoveocloudorganizationg8tp8wu3`)\n   */\n  organizationId?: string;\n}\n\nexport const updateBasicConfiguration = createAction(\n  'configuration/updateBasicConfiguration',\n  (payload: UpdateBasicConfigurationActionCreatorPayload) =>\n    validatePayload(payload, {\n      accessToken: nonEmptyString,\n      environment: new StringValue<PlatformEnvironment>({\n        required: false,\n        constrainTo: ['prod', 'hipaa', 'stg', 'dev'],\n      }),\n      organizationId: nonEmptyString,\n    })\n);\n\nexport interface UpdateSearchConfigurationActionCreatorPayload {\n  /**\n   * The base URL to use to proxy Coveo search requests (e.g., `https://example.com/search`).\n   *\n   * This is an advanced option that you should only set if you need to proxy Coveo searchrequests through your own\n   * server. In most cases, you should not set this option.\n   *\n   *  See [Headless proxy: Search](https://docs.coveo.com/en/headless/latest/usage/proxy#search).\n   */\n  proxyBaseUrl?: string;\n\n  /**\n   * The name of the query pipeline to use for the query (e.g., `External Search`).\n   */\n  pipeline?: string;\n\n  /**\n   * The first level of origin of the request, typically the identifier of the graphical search interface from which the request originates (e.g., `ExternalSearch`).\n   */\n  searchHub?: string;\n\n  /**\n   * The locale of the current user. Must comply with IETF\u2019s BCP 47 definition: https://www.rfc-editor.org/rfc/bcp/bcp47.txt.\n   */\n  locale?: string;\n\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone of the user.\n   */\n  timezone?: string;\n  /**\n   * Specifies the name of the authentication providers to use to perform queries.\n   *\n   * See [SAML Authentication](https://docs.coveo.com/en/91/).\n   */\n  authenticationProviders?: string[];\n}\n\nexport const updateSearchConfiguration = createAction(\n  'configuration/updateSearchConfiguration',\n  (payload: UpdateSearchConfigurationActionCreatorPayload) => {\n    return validatePayload(payload, {\n      proxyBaseUrl: new StringValue({required: false, url: true}),\n      pipeline: new StringValue({required: false, emptyAllowed: true}),\n      searchHub: nonEmptyString,\n      timezone: nonEmptyString,\n      locale: nonEmptyString,\n      authenticationProviders: new ArrayValue({\n        required: false,\n        each: requiredNonEmptyString,\n      }),\n    });\n  }\n);\n\nexport interface UpdateAnalyticsConfigurationActionCreatorPayload {\n  /**\n   * Whether to enable usage analytics tracking.\n   */\n  enabled?: boolean;\n\n  /**\n   * Sets the Origin Context dimension on the analytic events.\n   *\n   * You can use this dimension to specify the context of your application.\n   * Suggested values are \"Search\", \"InternalSearch\" and \"CommunitySearch\"\n   */\n  originContext?: string;\n\n  /**\n   * The origin level 2 usage analytics event metadata whose value should typically be the identifier of the tab from which the usage analytics event originates (e.g., `All`).\n   */\n  originLevel2?: string;\n\n  /**\n   * The origin level 3 usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface that\u2019s making the request (e.g., `https://connect.coveo.com/s/`).\n   */\n  originLevel3?: string;\n\n  /**\n   * The base URL to use to proxy Coveo analytics requests (e.g., `https://example.com/analytics`).\n   *\n   * This is an advanced option that you should only set if you need to proxy Coveo analytics requests through your own\n   * server. In most cases, you should not set this option.\n   *\n   * See [Headless proxy: Analytics](https://docs.coveo.com/en/headless/latest/usage/proxy#analytics).\n   */\n  proxyBaseUrl?: string;\n\n  /**\n   * The Coveo analytics runtime to use, see https://github.com/coveo/coveo.analytics.js for more info.\n   */\n  runtimeEnvironment?: AnalyticsRuntimeEnvironment;\n  /**\n   * Whether analytics events should be logged anonymously.\n   * If set to true, the Usage Analytics Write API will not extract the name and userDisplayName, if present, from the search token\n   */\n  anonymous?: boolean;\n  /**\n   *  The name of the device that the end user is using. It should be explicitly configured in the context of a native mobile app.\n   */\n  deviceId?: string;\n  /**\n   * Specifies the user display name for the usage analytics logs.\n   */\n  userDisplayName?: string;\n  /**\n   * Specifies the URL of the current page or component.\n   */\n  documentLocation?: string;\n  /**\n   * The unique identifier of the tracking target.\n   */\n  trackingId?: string;\n  /**\n   * The analytics client to use.\n   * - `legacy`: The legacy analytics client, i.e., the Coveo Analytics.js library.\n   * - `next`: The next analytics client, i.e., the Coveo Event Protocol with the Relay library.\n   *\n   * @default 'next'\n   */\n  analyticsMode?: 'legacy' | 'next';\n  /**\n   * Specifies the frameworks and version used around Headless (e.g. @coveo/atomic).\n   * @internal\n   */\n  source?: Partial<Record<CoveoFramework, string>>;\n}\n\nexport type AnalyticsRuntimeEnvironment = IRuntimeEnvironment;\n\nexport const analyticsConfigurationSchema: SchemaDefinition<\n  Required<UpdateAnalyticsConfigurationActionCreatorPayload>\n> = {\n  enabled: new BooleanValue({default: true}),\n  originContext: originSchemaOnConfigUpdate(),\n  originLevel2: originSchemaOnConfigUpdate(),\n  originLevel3: originSchemaOnConfigUpdate(),\n  proxyBaseUrl: new StringValue({required: false, url: true}),\n  runtimeEnvironment: new Value(),\n  anonymous: new BooleanValue({default: false}),\n  deviceId: nonEmptyString,\n  userDisplayName: nonEmptyString,\n  documentLocation: nonEmptyString,\n  trackingId: nonEmptyString,\n  analyticsMode: new StringValue<'legacy' | 'next'>({\n    constrainTo: ['legacy', 'next'],\n    required: false,\n    default: 'next',\n  }),\n  source: new RecordValue({\n    options: {required: false},\n    values: COVEO_FRAMEWORK.reduce(\n      (acc, framework) => {\n        acc[framework] = optionalNonEmptyVersionString;\n        return acc;\n      },\n      {} as Record<CoveoFramework, StringValue>\n    ),\n  }),\n};\n\nexport const updateAnalyticsConfiguration = createAction(\n  'configuration/updateAnalyticsConfiguration',\n  (payload: UpdateAnalyticsConfigurationActionCreatorPayload) => {\n    return validatePayload(payload, analyticsConfigurationSchema);\n  }\n);\n\nexport const disableAnalytics = createAction('configuration/analytics/disable');\nexport const enableAnalytics = createAction('configuration/analytics/enable');\n\nexport interface SetOriginLevel2ActionCreatorPayload {\n  /**\n   * The origin level 2 usage analytics event metadata whose value should typically be the identifier of the tab (e.g., `All`).\n   */\n  originLevel2: string;\n}\n\nexport const setOriginLevel2 = createAction(\n  'configuration/analytics/originlevel2',\n  (payload: SetOriginLevel2ActionCreatorPayload) =>\n    validatePayload(payload, {originLevel2: originSchemaOnUpdate()})\n);\n\nexport interface SetOriginLevel3ActionCreatorPayload {\n  /**\n   * The origin level 3 usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface (e.g., `https://connect.coveo.com/s/`).\n   */\n  originLevel3: string;\n}\n\nexport const setOriginLevel3 = createAction(\n  'configuration/analytics/originlevel3',\n  (payload: SetOriginLevel3ActionCreatorPayload) =>\n    validatePayload(payload, {originLevel3: originSchemaOnUpdate()})\n);\n", "export const VERSION = process.env.VERSION || 'Test version';\n\nexport const COVEO_FRAMEWORK = ['@coveo/atomic', '@coveo/quantic'] as const;\n\nexport type CoveoFramework = (typeof COVEO_FRAMEWORK)[number];\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n  disableAnalytics,\n  enableAnalytics,\n  updateAnalyticsConfiguration,\n  UpdateAnalyticsConfigurationPayload,\n  updateBasicConfiguration,\n  UpdateBasicConfigurationPayload,\n  updateProxyBaseUrl,\n  UpdateProxyBaseUrlPayload,\n} from './configuration-actions.js';\nimport {\n  ConfigurationState,\n  getConfigurationInitialState,\n} from './configuration-state.js';\n\nexport const configurationReducer = createReducer(\n  getConfigurationInitialState(),\n  (builder) =>\n    builder\n      .addCase(updateBasicConfiguration, (state, action) => {\n        handleUpdateBasicConfiguration(state, action.payload);\n      })\n      .addCase(updateProxyBaseUrl, (state, action) => {\n        handleUpdateCommerceProxyBaseUrl(state, action.payload);\n      })\n      .addCase(updateAnalyticsConfiguration, (state, action) => {\n        handleupdateAnalyticsConfiguration(state, action.payload);\n      })\n      .addCase(disableAnalytics, (state) => {\n        state.analytics.enabled = false;\n      })\n      .addCase(enableAnalytics, (state) => {\n        state.analytics.enabled = true;\n      })\n);\n\nfunction handleUpdateBasicConfiguration(\n  state: ConfigurationState,\n  payload: UpdateBasicConfigurationPayload\n) {\n  if (!isNullOrUndefined(payload.accessToken)) {\n    state.accessToken = payload.accessToken;\n  }\n\n  state.environment = payload.environment ?? 'prod';\n\n  if (!isNullOrUndefined(payload.organizationId)) {\n    state.organizationId = payload.organizationId;\n  }\n}\n\nfunction handleUpdateCommerceProxyBaseUrl(\n  state: ConfigurationState,\n  payload: UpdateProxyBaseUrlPayload\n) {\n  if (!isNullOrUndefined(payload.proxyBaseUrl)) {\n    state.commerce.apiBaseUrl = payload.proxyBaseUrl;\n  }\n}\n\nfunction handleupdateAnalyticsConfiguration(\n  state: ConfigurationState,\n  payload: UpdateAnalyticsConfigurationPayload\n) {\n  if (!isNullOrUndefined(payload.enabled)) {\n    state.analytics.enabled = payload.enabled;\n  }\n  if (!isNullOrUndefined(payload.proxyBaseUrl)) {\n    state.analytics.apiBaseUrl = payload.proxyBaseUrl;\n  }\n  if (!isNullOrUndefined(payload.source)) {\n    state.analytics.source = payload.source;\n  }\n  if (!isNullOrUndefined(payload.trackingId)) {\n    state.analytics.trackingId = payload.trackingId;\n  }\n}\n", "import {CoreConfigurationState} from '../../configuration/configuration-state.js';\n\nexport interface ConfigurationState extends CoreConfigurationState {\n  /**\n   * The global headless engine Commerce API configuration.\n   */\n  commerce: CommerceState;\n}\n\ninterface CommerceState {\n  /**\n   * The Commerce API base URL to use.\n   *\n   * By default, will append `/rest/organizations/{organizationId}/commerce/v2` to the automatically resolved\n   * platform [organization endpoint](https://docs.coveo.com/en/mcc80216)\n   * (i.e., `https;://<ORG_ID>.org<hipaa|dev|stg|>.coveo.com`)\n   *\n   * If necessary, you can override this value by specifying a `commerce.proxyBaseUrl` in the configuration of your\n   * commerce engine, or by manually dispatching the `updateProxyBaseUrl` action.\n   */\n  apiBaseUrl?: string;\n}\n\nexport const getConfigurationInitialState: () => ConfigurationState = () => ({\n  accessToken: '',\n  environment: 'prod',\n  organizationId: '',\n  analytics: {\n    enabled: true,\n    trackingId: '',\n    source: {},\n  },\n  commerce: {},\n});\n", "import {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngineState} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {validatePayload} from '../../../../utils/validate-payload.js';\nimport {\n  CartActionDetails,\n  Transaction,\n  getECCartActionPayload,\n  getECPurchasePayload,\n} from './cart-selector.js';\nimport {CartItemWithMetadata} from './cart-state.js';\nimport {\n  setItemsPayloadDefinition,\n  itemPayloadDefinition,\n} from './cart-validation.js';\n\nexport type SetItemsPayload = CartItemWithMetadata[];\n\nexport const setItems = createAction(\n  'commerce/cart/setItems',\n  (payload: SetItemsPayload) =>\n    validatePayload<SetItemsPayload>(payload, setItemsPayloadDefinition)\n);\n\nexport type UpdateItemQuantityPayload = CartItemWithMetadata;\n\nexport const updateItemQuantity = createAction(\n  'commerce/cart/updateItemQuantity',\n  (payload: UpdateItemQuantityPayload) =>\n    validatePayload(payload, itemPayloadDefinition)\n);\n\nexport const purchase = createAction('commerce/cart/purchase');\n\nexport type PurchasePayload = Transaction;\n\nexport const emitPurchaseEvent = createAsyncThunk<\n  void,\n  PurchasePayload,\n  AsyncThunkCommerceOptions<CommerceEngineState>\n>(\n  'commerce/cart/emit/purchaseEvent',\n  async (payload: PurchasePayload, {extra, getState}) => {\n    const relayPayload = getECPurchasePayload(payload, getState());\n    const {relay} = extra;\n\n    relay.emit('ec.purchase', relayPayload);\n  }\n);\n\nexport type CartActionPayload = CartActionDetails;\n\nexport const emitCartActionEvent = createAsyncThunk<\n  void,\n  CartActionPayload,\n  AsyncThunkCommerceOptions<CommerceEngineState>\n>(\n  'commerce/cart/emit/cartActionEvent',\n  async (payload: CartActionPayload, {extra, getState}) => {\n    const relayPayload = getECCartActionPayload(payload, getState());\n    const {relay} = extra;\n\n    relay.emit('ec.cartAction', relayPayload);\n  }\n);\n", "import {Ec} from '@coveo/relay-event-types';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {CommerceEngineState} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {CartKey} from '../../../../controllers/commerce/context/cart/headless-cart.js';\nimport {getCurrency} from '../context-selector.js';\nimport {CartState} from './cart-state.js';\n\n/**\n * The purchase transaction.\n */\nexport interface Transaction {\n  /**\n   * The transaction's id\n   */\n  id: string;\n\n  /**\n   * The total revenue from the transaction, including taxes, shipping, and discounts.\n   */\n  revenue: number;\n}\n\nexport const getECPurchasePayload = (\n  transaction: Transaction,\n  state: CommerceEngineState\n): Ec.Purchase => ({\n  currency: getCurrency(state.commerceContext),\n  products: productQuantitySelector(state.cart),\n  transaction,\n});\n\nexport interface CartActionDetails extends Omit<Ec.CartAction, 'currency'> {}\n\nexport const getECCartActionPayload = (\n  cartActionDetails: CartActionDetails,\n  state: CommerceEngineState\n): Ec.CartAction => ({\n  currency: getCurrency(state.commerceContext),\n  ...cartActionDetails,\n});\n\nexport const itemsSelector = createSelector(\n  (cartState: CartState) => cartState.cart,\n  (cartState: CartState) => cartState.cartItems,\n  (cart, cartItems) => cartItems.map((key: CartKey) => cart[key])\n);\n\nconst productQuantitySelector = createSelector(itemsSelector, (items) =>\n  items.map(({quantity, ...product}) => ({\n    quantity,\n    product,\n  }))\n);\n", "import {CurrencyCodeISO4217} from '@coveo/relay-event-types';\nimport {CommerceContextState} from './context-state.js';\n\nexport function getCurrency(state: CommerceContextState): CurrencyCodeISO4217 {\n  return state.currency;\n}\n", "import {\n  ArrayValue,\n  NumberValue,\n  RecordValue,\n  Schema,\n  StringValue,\n} from '@coveo/bueno';\nimport {CartInitialState} from '../../../../controllers/commerce/context/cart/headless-cart.js';\nimport {requiredNonEmptyString} from '../../../../utils/validate-payload.js';\n\nexport const itemPayloadDefinition = {\n  productId: requiredNonEmptyString,\n  quantity: new NumberValue({\n    required: true,\n    min: 0,\n  }),\n  name: new StringValue({required: false}),\n  price: new NumberValue({required: false, min: 0}),\n};\n\nexport const setItemsPayloadDefinition = new ArrayValue({\n  each: new RecordValue({\n    values: {\n      ...itemPayloadDefinition,\n    },\n  }),\n});\n\nexport const cartDefinition = {\n  items: setItemsPayloadDefinition,\n};\n\nexport const cartSchema = new Schema<CartInitialState>(cartDefinition);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {createCartKey} from '../../../../controllers/commerce/context/cart/headless-cart.js';\nimport {purchase, setItems, updateItemQuantity} from './cart-actions.js';\nimport {\n  CartItemWithMetadata,\n  CartState,\n  getCartInitialState,\n} from './cart-state.js';\n\nexport const cartReducer = createReducer(\n  getCartInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(setItems, (state, {payload}) => {\n        const {cart, cartItems} = payload.reduce((acc, item) => {\n          const key = createCartKey(item);\n          return {\n            cartItems: [...acc.cartItems, key],\n            cart: {\n              ...acc.cart,\n              [key]: item,\n            },\n            purchasedItems: [],\n            purchased: {},\n          };\n        }, getCartInitialState());\n\n        setItemsInState(state, cartItems, cart);\n      })\n      .addCase(updateItemQuantity, (state, {payload}) => {\n        const key = createCartKey(payload);\n        if (!(key in state.cart)) {\n          createItemInCart(payload, state);\n          return;\n        }\n\n        if (payload.quantity <= 0) {\n          deleteProductFromCart(payload, state);\n          return;\n        }\n\n        state.cart[key] = payload;\n        return;\n      })\n      .addCase(purchase, (state) => {\n        setItemsAsPurchased(state);\n        const {cart, cartItems} = getCartInitialState();\n        setItemsInState(state, cartItems, cart);\n      });\n  }\n);\n\nfunction setItemsInState(\n  state: CartState,\n  cartItems: string[],\n  cart: Record<string, CartItemWithMetadata>\n) {\n  state.cartItems = cartItems;\n  state.cart = cart;\n}\n\nfunction createItemInCart(item: CartItemWithMetadata, state: CartState) {\n  if (item.quantity <= 0) {\n    return;\n  }\n\n  const key = createCartKey(item);\n  state.cartItems = [...state.cartItems, key];\n  state.cart[key] = item;\n}\n\nfunction deleteProductFromCart(item: CartItemWithMetadata, state: CartState) {\n  const key = createCartKey(item);\n  state.cartItems = state.cartItems.filter((cartKey) => cartKey !== key);\n  delete state.cart[key];\n}\n\nfunction setItemsAsPurchased(state: CartState) {\n  for (const key of state.cartItems) {\n    if (key in state.purchased) {\n      state.purchased[key].quantity += state.cart[key].quantity;\n      continue;\n    }\n    state.purchasedItems = [...state.purchasedItems, key];\n    state.purchased[key] = state.cart[key];\n  }\n}\n", "import {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {\n  CartActionPayload,\n  emitCartActionEvent,\n  emitPurchaseEvent,\n  purchase,\n  setItems,\n  updateItemQuantity,\n} from '../../../../features/commerce/context/cart/cart-actions.js';\nimport {\n  Transaction,\n  itemsSelector,\n} from '../../../../features/commerce/context/cart/cart-selector.js';\nimport {cartReducer as cart} from '../../../../features/commerce/context/cart/cart-slice.js';\nimport {CartItemWithMetadata} from '../../../../features/commerce/context/cart/cart-state.js';\nimport {cartSchema} from '../../../../features/commerce/context/cart/cart-validation.js';\nimport {CartSection} from '../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../utils/errors.js';\nimport {validateInitialState} from '../../../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../../../controller/headless-controller.js';\nimport {\n  itemSelector,\n  totalPriceSelector,\n  totalQuantitySelector,\n} from './headless-cart-selectors.js';\n\nexport interface CartInitialState {\n  items?: CartItemWithMetadata[];\n}\n\n/**\n * The shape of a cart item.\n */\nexport interface CartItem {\n  /**\n   * The unique identifier of the product.\n   */\n  productId: string;\n\n  /**\n   * The human-readable name of the product.\n   */\n  name: string;\n\n  /**\n   * The price per unit of the product.\n   */\n  price: number;\n\n  /**\n   * The number of units of the product in the cart.\n   */\n  quantity: number;\n}\n\nexport interface CartProps {\n  /**\n   * The initial state to apply to this `Cart` controller.\n   */\n  initialState?: CartInitialState;\n}\n\n/**\n * The `Cart` controller exposes methods for managing the cart in a commerce interface.\n *\n * @group Buildable controllers\n * @category Cart\n */\nexport interface Cart extends Controller {\n  /**\n   * Creates, updates, or deletes an item in the cart, and emits an `ec.cartAction` analytics event if the `quantity` of\n   * the item in the cart changes.\n   *\n   * If an item with the specified `productId`, `name` and `price` already exists in the cart:\n   * - Setting `quantity` to `0` deletes the item from the cart.\n   * - Setting `quantity` to a positive number updates the item.\n   *\n   * Otherwise:\n   * - Setting `quantity` to a positive number creates the item in the cart with the specified `name`,\n   * `price`, and `quantity`.\n   *\n   * If the specified `quantity` is equivalent to the current quantity of the item in the cart, no analytics event is\n   * emitted. Otherwise, the method emits an `ec.cartAction` event with the appropriate action (`add` or `remove`).\n   *\n   * Note: Updating the `name` or `price` will create a new item in the cart, leaving the previous item with the same\n   * `productId`, `name` and `price` unchanged. If you wish to change these items, delete and recreate the item.\n   *\n   * @param item - The cart item to create, update, or delete.\n   */\n  updateItemQuantity(item: CartItem): void;\n\n  /**\n   * Sets the quantity of each item in the cart to 0, effectively emptying the cart.\n   *\n   * Emits an `ec.cartAction` analytics event with the `remove` action for each item removed from the cart.\n   */\n  empty(): void;\n\n  /**\n   * Emits an `ec.purchase` analytics event and then empties the cart without emitting any additional events.\n   *\n   * @param transaction - The object with the id and the total revenue from the transaction, including taxes, shipping, and discounts.\n   */\n  purchase(transaction: Transaction): void;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `Cart` controller.\n   */\n  state: CartState;\n}\n\n/**\n * The state of the `Cart` controller.\n *\n * @group Buildable controllers\n * @category Cart\n */\nexport interface CartState {\n  /**\n   * The items in the cart.\n   */\n  items: CartItem[];\n\n  /**\n   * The sum total of the `quantity` of each item in the cart.\n   */\n  totalQuantity: number;\n\n  /**\n   * The sum total of the `price` multiplied by the `quantity` of each item in the cart.\n   */\n  totalPrice: number;\n}\n\n/**\n * Creates a `Cart` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `Cart` properties.\n * @returns A `Cart` controller instance.\n *\n * @group Buildable controllers\n * @category Cart\n */\nexport function buildCart(engine: CommerceEngine, props: CartProps = {}): Cart {\n  if (!loadBaseCartReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n  const getState = () => engine[stateKey].cart;\n\n  const initialState = {\n    ...props.initialState,\n  };\n\n  validateInitialState(engine, cartSchema, initialState, 'buildCart');\n\n  // TODO: expose some helpers to facilitate storing / restoring the cart state for MPAs\n  if (initialState.items !== undefined) {\n    dispatch(setItems(initialState.items));\n  }\n\n  function isNewQuantityDifferent(\n    currentItem: CartItem,\n    prevItem: CartItemWithMetadata\n  ) {\n    return prevItem ? prevItem.quantity !== currentItem.quantity : true;\n  }\n\n  function getCartAction(\n    currentItem: CartItem,\n    prevItem: CartItemWithMetadata | undefined\n  ): 'add' | 'remove' {\n    const isCurrentQuantityGreater =\n      !prevItem || currentItem.quantity > prevItem.quantity;\n    return isCurrentQuantityGreater ? 'add' : 'remove';\n  }\n\n  function isEqual(\n    currentItem: CartItem,\n    prevItem: CartItemWithMetadata | undefined\n  ): boolean {\n    return prevItem\n      ? currentItem.name === prevItem.name &&\n          currentItem.price === prevItem.price &&\n          currentItem.quantity === prevItem.quantity\n      : false;\n  }\n\n  function createEcCartActionPayload(\n    currentItem: CartItem,\n    prevItem: CartItemWithMetadata | undefined\n  ): CartActionPayload {\n    const {quantity: currentQuantity, ...product} = currentItem;\n    const action = getCartAction(currentItem, prevItem);\n    const quantity = !prevItem\n      ? currentQuantity\n      : Math.abs(currentQuantity - prevItem.quantity);\n\n    return {\n      action,\n      quantity,\n      product,\n    };\n  }\n\n  return {\n    ...controller,\n\n    empty: function () {\n      for (const item of itemsSelector(getState())) {\n        this.updateItemQuantity({...item, quantity: 0});\n      }\n    },\n\n    purchase(transaction: Transaction) {\n      dispatch(emitPurchaseEvent(transaction));\n      dispatch(purchase());\n    },\n\n    updateItemQuantity(item: CartItem) {\n      const prevItem = itemSelector(getState(), item);\n      const doesNotNeedUpdate = !prevItem && item.quantity <= 0;\n\n      if (doesNotNeedUpdate || isEqual(item, prevItem)) {\n        return;\n      }\n\n      if (isNewQuantityDifferent(item, prevItem)) {\n        dispatch(\n          emitCartActionEvent(createEcCartActionPayload(item, prevItem))\n        );\n      }\n\n      dispatch(updateItemQuantity(item));\n    },\n\n    get state() {\n      const cartState = getState();\n\n      return {\n        items: itemsSelector(cartState),\n        totalQuantity: totalQuantitySelector(cartState),\n        totalPrice: totalPriceSelector(cartState),\n      };\n    },\n  };\n}\n\nexport type CartKey = string;\n\nexport function createCartKey(item: CartItem): CartKey {\n  return `${item.productId},${item.name},${item.price}`;\n}\n\nfunction loadBaseCartReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<CartSection> {\n  engine.addReducers({cart});\n  return true;\n}\n", "import {Unsubscribe} from '@reduxjs/toolkit';\nimport type {CoreEngine, CoreEngineNext} from '../../app/engine.js';\n\nexport interface Subscribable {\n  /**\n   * Adds a callback that's invoked on state change.\n   *\n   * @param listener A callback that's invoked on state change.\n   * @returns A function to remove the listener.\n   */\n  subscribe(listener: () => void): Unsubscribe;\n}\n\nexport interface Controller extends Subscribable {\n  readonly state: {};\n}\n\nexport function buildController<T extends object>(\n  engine: CoreEngine<T> | CoreEngineNext<T>\n): Controller {\n  let prevState: string;\n  const listeners: Map<Symbol, () => void> = new Map();\n  const hasNoListeners = () => listeners.size === 0;\n\n  const hasStateChanged = (currentState: Record<string, unknown>): boolean => {\n    try {\n      const stringifiedState = JSON.stringify(currentState);\n      const hasChanged = prevState !== stringifiedState;\n      prevState = stringifiedState;\n      return hasChanged;\n    } catch (e) {\n      console.warn(\n        'Could not detect if state has changed, check the controller \"get state method\"',\n        e\n      );\n      return true;\n    }\n  };\n\n  return {\n    subscribe(listener: () => void) {\n      listener();\n      const symbol = Symbol();\n      let unsubscribe: () => void;\n\n      if (hasNoListeners()) {\n        prevState = JSON.stringify(this.state);\n        unsubscribe = engine.subscribe(() => {\n          if (hasStateChanged(this.state)) {\n            listeners.forEach((listener) => listener());\n          }\n        });\n      }\n      listeners.set(symbol, listener);\n\n      return () => {\n        listeners.delete(symbol);\n        if (hasNoListeners()) {\n          unsubscribe && unsubscribe();\n        }\n      };\n    },\n\n    get state() {\n      return {};\n    },\n  };\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {itemsSelector} from '../../../../features/commerce/context/cart/cart-selector.js';\nimport {CartState} from '../../../../features/commerce/context/cart/cart-state.js';\nimport {CartItem, createCartKey} from './headless-cart.js';\n\nexport function itemSelector(cartState: CartState, item: CartItem) {\n  return cartState.cart[createCartKey(item)];\n}\n\nexport const totalQuantitySelector = createSelector(itemsSelector, (items) =>\n  items.reduce((prev, cur) => prev + cur.quantity, 0)\n);\n\nexport const totalPriceSelector = createSelector(itemsSelector, (items) =>\n  items.reduce((prev, cur) => prev + cur.price * cur.quantity, 0)\n);\n", "import {CartItemParam} from '../../../../api/commerce/commerce-api-params.js';\n\nexport interface CartItemWithMetadata extends CartItemParam {\n  /**\n   * The name of the cart item.\n   */\n  name: string;\n  /**\n   * The price of the cart item.\n   */\n  price: number;\n}\n\nexport interface CartState {\n  cartItems: string[];\n  cart: Record<string, CartItemWithMetadata>;\n  purchasedItems: string[];\n  purchased: Record<string, CartItemWithMetadata>;\n}\n\nexport const getCartInitialState = (): CartState => ({\n  cartItems: [],\n  cart: {},\n  purchasedItems: [],\n  purchased: {},\n});\n\nexport const getProductsFromCartState = (state: CartState): CartItemParam[] =>\n  getProductsFromCart(state.cartItems, state.cart);\nexport const getProductsFromCartPurchasedState = (\n  state: CartState\n): CartItemParam[] =>\n  getProductsFromCart(state.purchasedItems, state.purchased);\n\nfunction getProductsFromCart(\n  items: string[],\n  itemMap: Record<string, CartItemWithMetadata>\n) {\n  const productsMap = items.reduce(\n    (acc, key) => {\n      const {productId, quantity} = itemMap[key];\n      if (!(productId in acc)) {\n        acc[productId] = {\n          productId,\n          quantity: 0,\n        };\n      }\n      acc[productId].quantity += quantity;\n\n      return acc;\n    },\n    {} as Record<string, CartItemParam>\n  );\n\n  return [...Object.values(productsMap)];\n}\n", "import {CurrencyCodeISO4217} from '@coveo/relay-event-types';\nimport {createAction} from '@reduxjs/toolkit';\nimport {ViewParams} from '../../../api/commerce/commerce-api-params.js';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {LocationState} from './context-state.js';\nimport {\n  contextDefinition,\n  locationDefinition,\n  viewDefinition,\n} from './context-validation.js';\n\nexport interface SetContextPayload {\n  language: string;\n  country: string;\n  currency: CurrencyCodeISO4217;\n  view: SetViewPayload;\n  location?: SetLocationPayload;\n}\n\nexport const setContext = createAction(\n  'commerce/context/set',\n  (payload: SetContextPayload) => validatePayload(payload, contextDefinition)\n);\n\nexport type SetViewPayload = Pick<ViewParams, 'url'>;\n\nexport const setView = createAction(\n  'commerce/context/setView',\n  (payload: SetViewPayload) => validatePayload(payload, viewDefinition)\n);\n\nexport type SetLocationPayload = LocationState;\n\nexport const setLocation = createAction(\n  'commerce/context/setLocation',\n  (payload: SetLocationPayload) => validatePayload(payload, locationDefinition)\n);\n", "import {NumberValue, RecordValue, Schema, StringValue} from '@coveo/bueno';\nimport {CurrencyCodeISO4217} from '@coveo/relay-event-types';\nimport {requiredNonEmptyString} from '../../../utils/validate-payload.js';\n\nconst currencies = Intl.supportedValuesOf('currency') as CurrencyCodeISO4217[];\n\nconst currencyDefinition = new StringValue<CurrencyCodeISO4217>({\n  required: true,\n  emptyAllowed: false,\n  constrainTo: currencies,\n});\n\nexport const viewDefinition = {\n  url: requiredNonEmptyString,\n};\n\nexport const locationDefinition = {\n  latitude: new NumberValue({min: -90, max: 90, required: true}),\n  longitude: new NumberValue({min: -180, max: 180, required: true}),\n};\n\nexport const contextDefinition = {\n  language: requiredNonEmptyString,\n  country: requiredNonEmptyString,\n  currency: currencyDefinition,\n  view: new RecordValue({\n    options: {required: true},\n    values: viewDefinition,\n  }),\n  location: new RecordValue({\n    options: {required: false},\n    values: locationDefinition,\n  }),\n};\n\nexport const contextSchema = new Schema(contextDefinition);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {setContext, setLocation, setView} from './context-actions.js';\nimport {getContextInitialState} from './context-state.js';\n\nexport const contextReducer = createReducer(\n  getContextInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(setContext, (_, {payload}) => {\n        return payload;\n      })\n      .addCase(setView, (state, {payload}) => {\n        state.view = payload;\n      })\n      .addCase(setLocation, (state, {payload}) => {\n        state.location = payload;\n      });\n  }\n);\n", "import {CurrencyCodeISO4217} from '@coveo/relay-event-types';\nimport {\n  UserParams,\n  ViewParams,\n} from '../../../api/commerce/commerce-api-params.js';\n\nexport type LocationState = Required<\n  Pick<UserParams, 'latitude' | 'longitude'>\n>;\n\nexport interface CommerceContextState {\n  language: string;\n  country: string;\n  currency: CurrencyCodeISO4217;\n  view: ViewParams;\n  location?: LocationState;\n}\n\nexport const getContextInitialState = (): CommerceContextState => ({\n  language: '',\n  country: '',\n  currency: '' as CurrencyCodeISO4217,\n  view: {\n    url: '',\n  },\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {emptyNextCorrection} from '../../did-you-mean/did-you-mean-state.js';\nimport {executeSearch} from '../search/search-actions.js';\nimport {getDidYouMeanInitialState} from './did-you-mean-state.js';\n\nexport const didYouMeanReducer = createReducer(\n  getDidYouMeanInitialState(),\n  (builder) => {\n    builder\n      .addCase(executeSearch.pending, (state) => {\n        state.queryCorrection = emptyNextCorrection();\n        state.wasCorrectedTo = '';\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const {queryCorrection} = action.payload.response;\n\n        state.originalQuery = action.payload.originalQuery;\n        state.wasCorrectedTo = queryCorrection?.correctedQuery ?? '';\n        state.queryCorrection = {\n          correctedQuery:\n            queryCorrection?.correctedQuery ??\n            queryCorrection?.corrections[0]?.correctedQuery ??\n            '',\n          wordCorrections:\n            queryCorrection?.corrections[0]?.wordCorrections ?? [],\n        };\n      });\n  }\n);\n", "import {\n  Correction,\n  QueryCorrection,\n} from '../../api/search/search/query-corrections.js';\n\n/**\n * Define which query correction system to use\n *\n * `legacy`: Query correction is powered by the legacy index system. This system relies on an algorithm using solely the index content to compute the suggested terms.\n * `next`: Query correction is powered by a machine learning system, requiring a valid query suggestion model configured in your Coveo environment to function properly. This system relies on machine learning algorithms to compute the suggested terms.\n *\n * Default value is `legacy`. In the next major version of Headless, the default value will be `next`.\n */\nexport type CorrectionMode = 'next' | 'legacy';\n\nexport interface DidYouMeanState {\n  /**\n   * Specifies if the \"did you mean\" feature of the Coveo platform should be enabled or not.\n   */\n  enableDidYouMean: boolean;\n  /**\n   * The correction that was applied to the query. If no correction was applied, will default to an empty string.\n   */\n  wasCorrectedTo: string;\n  /**\n   * Specifies if the query was automatically corrected by Headless.\n   *\n   * This happens when there is no result returned by the API for a particular misspelling.\n   */\n  wasAutomaticallyCorrected: boolean;\n  /**\n   * The query correction that is currently applied by the \"did you mean\" module.\n   */\n  queryCorrection: QueryCorrection;\n  /**\n   * The original query that was originally performed when an automatic correction is executed.\n   */\n  originalQuery: string;\n  /**\n   * Whether to automatically correct queries that will return no results.\n   *\n   */\n  automaticallyCorrectQuery: boolean;\n  /**\n   * Define which query correction system to use\n   *\n   * `legacy`: Query correction is powered by the legacy index system. This system relies on an algorithm using solely the index content to compute the suggested terms.\n   * `next`: Query correction is powered by a machine learning system, requiring a valid query suggestion model configured in your Coveo environment to function properly. This system relies on machine learning algorithms to compute the suggested terms.\n   *\n   * Default value is `legacy`. In the next major version of Headless, the default value will be `next`.\n   */\n  queryCorrectionMode: CorrectionMode;\n}\n\nexport const emptyLegacyCorrection: () => QueryCorrection = () => ({\n  correctedQuery: '',\n  wordCorrections: [],\n  originalQuery: '',\n});\n\nexport const emptyNextCorrection: () => Correction = () => ({\n  correctedQuery: '',\n  corrections: [],\n  originalQuery: '',\n});\n\nexport function getDidYouMeanInitialState(): DidYouMeanState {\n  return {\n    enableDidYouMean: false,\n    wasCorrectedTo: '',\n    wasAutomaticallyCorrected: false,\n    queryCorrection: emptyLegacyCorrection(),\n    originalQuery: '',\n    automaticallyCorrectQuery: true,\n    queryCorrectionMode: 'legacy',\n  };\n}\n", "import {BooleanValue, RecordValue, StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  AsyncThunkCommerceOptions,\n  isErrorResponse,\n} from '../../../api/commerce/commerce-api-client.js';\nimport {ChildProduct} from '../../../api/commerce/common/product.js';\nimport {SearchCommerceSuccessResponse} from '../../../api/commerce/search/response.js';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {deselectAllNonBreadcrumbs} from '../../breadcrumb/breadcrumb-actions.js';\nimport {buildCommerceAPIRequest} from '../common/actions.js';\nimport {\n  clearAllCoreFacets,\n  updateAutoSelectionForAllCoreFacets,\n} from '../facets/core-facet/core-facet-actions.js';\nimport {selectPage} from '../pagination/pagination-actions.js';\nimport {perPagePrincipalSelector} from '../pagination/pagination-selectors.js';\nimport {UpdateQueryPayload, updateQuery} from '../query/query-actions.js';\nimport {\n  AsyncSearchThunkProcessor,\n  StateNeededByExecuteSearch,\n} from './search-actions-thunk-processor.js';\nimport {\n  querySelector,\n  moreProductsAvailableSelector,\n  numberOfProductsSelector,\n} from './search-selectors.js';\n\nexport interface QuerySearchCommerceAPIThunkReturn {\n  /** The successful response. */\n  response: SearchCommerceSuccessResponse;\n  /** The query that was executed. */\n  queryExecuted: string;\n  /** The original query expression that was received and automatically corrected. */\n  originalQuery: string;\n}\n\nexport interface PrepareForSearchWithQueryOptions {\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the search box.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters: boolean;\n}\n\nexport interface FetchInstantProductsPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n  /**\n   * The query for which instant products are retrieved.\n   */\n  q: string;\n  /**\n   * Number in milliseconds that cached products will be valid for. Set to 0 so that products never expire.\n   */\n  cacheTimeout?: number;\n}\n\nexport interface FetchInstantProductsThunkReturn {\n  /** The successful response. */\n  response: SearchCommerceSuccessResponse;\n}\n\nexport const executeSearch = createAsyncThunk<\n  QuerySearchCommerceAPIThunkReturn,\n  void,\n  AsyncThunkCommerceOptions<StateNeededByExecuteSearch>\n>('commerce/search/executeSearch', async (_action, config) => {\n  const {getState} = config;\n  const state = getState();\n  const {navigatorContext} = config.extra;\n\n  const request = buildCommerceAPIRequest(state, navigatorContext);\n  const query = querySelector(state);\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >(config);\n  const fetchedResponse = await processor.fetchFromAPI({...request, query});\n\n  return processor.process(fetchedResponse);\n});\n\nexport const fetchMoreProducts = createAsyncThunk<\n  QuerySearchCommerceAPIThunkReturn | null,\n  void,\n  AsyncThunkCommerceOptions<StateNeededByExecuteSearch>\n>('commerce/search/fetchMoreProducts', async (_action, config) => {\n  const {getState} = config;\n  const state = getState();\n  const {navigatorContext} = config.extra;\n\n  const moreProductsAvailable = moreProductsAvailableSelector(state);\n  if (!moreProductsAvailable) {\n    return null;\n  }\n\n  const perPage = perPagePrincipalSelector(state);\n  const numberOfProducts = numberOfProductsSelector(state);\n  const nextPageToRequest = numberOfProducts / perPage;\n  const query = querySelector(state);\n\n  const request = buildCommerceAPIRequest(state, navigatorContext);\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >(config);\n  const fetchedResponse = await processor.fetchFromAPI({\n    ...request,\n    query,\n    page: nextPageToRequest,\n  });\n\n  return processor.process(fetchedResponse);\n});\n\nexport type PrepareForSearchWithQueryPayload = UpdateQueryPayload &\n  PrepareForSearchWithQueryOptions;\n\nexport const prepareForSearchWithQuery = createAsyncThunk<\n  void,\n  PrepareForSearchWithQueryPayload,\n  AsyncThunkCommerceOptions<StateNeededByExecuteSearch>\n>('commerce/search/prepareForSearchWithQuery', (payload, thunk) => {\n  const {dispatch} = thunk;\n  validatePayload(payload, {\n    query: new StringValue(),\n    clearFilters: new BooleanValue(),\n  });\n\n  if (payload.clearFilters) {\n    dispatch(clearAllCoreFacets());\n    dispatch(deselectAllNonBreadcrumbs());\n  }\n\n  dispatch(updateAutoSelectionForAllCoreFacets({allow: true}));\n  dispatch(\n    updateQuery({\n      query: payload.query,\n    })\n  );\n  dispatch(selectPage({page: 0}));\n});\n\nexport const fetchInstantProducts = createAsyncThunk<\n  FetchInstantProductsThunkReturn,\n  FetchInstantProductsPayload,\n  AsyncThunkCommerceOptions<StateNeededByExecuteSearch>\n>(\n  'commerce/search/fetchInstantProducts',\n  async (payload, {getState, rejectWithValue, extra}) => {\n    const state = getState();\n    const {apiClient, navigatorContext} = extra;\n    const {q} = payload;\n    const fetched = await apiClient.productSuggestions({\n      ...buildCommerceAPIRequest(state, navigatorContext),\n      query: q,\n    });\n\n    if (isErrorResponse(fetched)) {\n      return rejectWithValue(fetched.error);\n    }\n\n    // TODO: Should ultimately rely on different config for product suggest endpoint which would support\n    // different config for pagination: Would not have to cull array of products client side.\n    // https://coveord.atlassian.net/browse/CAPI-682\n    const products = fetched.success.products.slice(0, 5);\n\n    return {\n      response: {...fetched.success, products},\n    };\n  }\n);\n\nexport interface PromoteChildToParentPayload {\n  child: ChildProduct;\n}\n\nexport const promoteChildToParentDefinition = {\n  child: new RecordValue({\n    options: {required: true},\n    values: {\n      permanentid: new StringValue({required: true}),\n    },\n  }),\n};\n\nexport const promoteChildToParent = createAction(\n  'commerce/search/promoteChildToParent',\n  (payload: PromoteChildToParentPayload) =>\n    validatePayload(payload, promoteChildToParentDefinition)\n);\n", "import {createAction} from '@reduxjs/toolkit';\n\nexport const deselectAllBreadcrumbs = createAction('breadcrumb/deselectAll');\nexport const deselectAllNonBreadcrumbs = createAction(\n  'breadcrumb/deselectAllNonBreadcrumbs'\n);\n", "import {getAnalyticsSource} from '../../../api/analytics/analytics-selectors.js';\nimport {getCommerceApiBaseUrl} from '../../../api/commerce/commerce-api-client.js';\nimport {SortParam} from '../../../api/commerce/commerce-api-params.js';\nimport {\n  BaseCommerceAPIRequest,\n  CommerceAPIRequest,\n} from '../../../api/commerce/common/request.js';\nimport {CommerceSuccessResponse} from '../../../api/commerce/common/response.js';\nimport {NavigatorContext} from '../../../app/navigatorContextProvider.js';\nimport {\n  CartSection,\n  CommerceContextSection,\n  CommerceFacetSetSection,\n  CommercePaginationSection,\n  CommerceSortSection,\n  CommerceConfigurationSection,\n  FacetOrderSection,\n  ManualRangeSection,\n  VersionSection,\n} from '../../../state/state-sections.js';\nimport {getProductsFromCartState} from '../context/cart/cart-state.js';\nimport {AnyFacetRequest} from '../facets/facet-set/interfaces/request.js';\nimport {SortBy, SortCriterion} from '../sort/sort.js';\n\nexport type StateNeededByQueryCommerceAPI = CommerceConfigurationSection &\n  CommerceContextSection &\n  CartSection &\n  Partial<CommercePaginationSection & VersionSection>;\n\nexport type ListingAndSearchStateNeededByQueryCommerceAPI =\n  StateNeededByQueryCommerceAPI &\n    Partial<\n      CommerceSortSection &\n        CommerceFacetSetSection &\n        FacetOrderSection &\n        ManualRangeSection\n    >;\n\nexport interface QueryCommerceAPIThunkReturn {\n  /** The successful response. */\n  response: CommerceSuccessResponse;\n}\n\nexport const buildCommerceAPIRequest = (\n  state: ListingAndSearchStateNeededByQueryCommerceAPI,\n  navigatorContext: NavigatorContext\n): CommerceAPIRequest => {\n  return {\n    ...buildBaseCommerceAPIRequest(state, navigatorContext),\n    facets: [...getFacets(state), ...getManualNumericFacets(state)],\n    ...(state.commerceSort && {\n      sort: getSort(state.commerceSort.appliedSort),\n    }),\n  };\n};\n\nexport const buildBaseCommerceAPIRequest = (\n  state: StateNeededByQueryCommerceAPI,\n  navigatorContext: NavigatorContext,\n  slotId?: string\n): BaseCommerceAPIRequest => {\n  const {view, location, ...restOfContext} = state.commerceContext;\n  return {\n    accessToken: state.configuration.accessToken,\n    url:\n      state.configuration.commerce.apiBaseUrl ??\n      getCommerceApiBaseUrl(\n        state.configuration.organizationId,\n        state.configuration.environment\n      ),\n    organizationId: state.configuration.organizationId,\n    trackingId: state.configuration.analytics.trackingId,\n    ...restOfContext,\n    ...(state.configuration.analytics.enabled\n      ? {clientId: navigatorContext.clientId}\n      : {}),\n    context: {\n      user: {\n        ...location,\n        ...(navigatorContext.userAgent\n          ? {userAgent: navigatorContext.userAgent}\n          : {}),\n      },\n      view: {\n        ...view,\n        ...(navigatorContext.referrer\n          ? {referrer: navigatorContext.referrer}\n          : {}),\n      },\n      capture: state.configuration.analytics.enabled,\n      cart: getProductsFromCartState(state.cart),\n      source: getAnalyticsSource(state.configuration.analytics),\n    },\n    ...effectivePagination(state, slotId),\n  };\n};\n\nconst effectivePagination = (\n  state: StateNeededByQueryCommerceAPI,\n  slotId?: string\n) => {\n  const effectiveSlice = slotId\n    ? state.commercePagination?.recommendations[slotId]\n    : state.commercePagination?.principal;\n  return (\n    effectiveSlice && {\n      page: effectiveSlice!.page,\n      ...(effectiveSlice!.perPage && {\n        perPage: effectiveSlice!.perPage,\n      }),\n    }\n  );\n};\n\nfunction getFacets(state: ListingAndSearchStateNeededByQueryCommerceAPI) {\n  if (!state.facetOrder || !state.commerceFacetSet) {\n    return [];\n  }\n\n  return state.facetOrder\n    .filter((facetId) => state.commerceFacetSet?.[facetId])\n    .map((facetId) => state.commerceFacetSet![facetId].request)\n    .filter((facet) => facet && facet.values.length > 0);\n}\n\nfunction getManualNumericFacets(\n  state: ListingAndSearchStateNeededByQueryCommerceAPI\n): AnyFacetRequest[] {\n  if (!state.manualNumericFacetSet) {\n    return [];\n  }\n\n  return Object.entries(state.manualNumericFacetSet!)\n    .filter(\n      ([_, manualNumericFacet]) => manualNumericFacet.manualRange !== undefined\n    )\n    .map(([facetId, manualNumericFacet]) => ({\n      facetId,\n      field: facetId,\n      numberOfValues: 1,\n      isFieldExpanded: false,\n      preventAutoSelect: true,\n      type: 'numericalRange' as const,\n      values: [manualNumericFacet.manualRange!],\n      initialNumberOfValues: 1,\n    }));\n}\n\nfunction getSort(appliedSort: SortCriterion): SortParam['sort'] | undefined {\n  if (appliedSort.by === SortBy.Relevance) {\n    return {\n      sortCriteria: SortBy.Relevance,\n    };\n  } else {\n    return {\n      sortCriteria: SortBy.Fields,\n      fields: appliedSort.fields.map(({name, direction}) => ({\n        field: name,\n        direction,\n      })),\n    };\n  }\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {CoreAnalyticsState} from '../../features/configuration/configuration-state.js';\nimport {VERSION} from '../../utils/version.js';\n\nexport const getAnalyticsSource = createSelector(\n  (state: CoreAnalyticsState) => state.source,\n  (source) =>\n    Object.entries(source)\n      .map(\n        ([frameworkName, frameworkVersion]) =>\n          `${frameworkName}@${frameworkVersion}`\n      )\n      .concat(`@coveo/headless@${VERSION}`)\n);\n", "import {BooleanValue, NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../../utils/validate-payload.js';\nimport {\n  UpdateFacetIsFieldExpandedActionCreatorPayload,\n  UpdateFacetNumberOfValuesActionCreatorPayload,\n  UpdateFreezeCurrentValuesActionCreatorPayload,\n} from '../../../facets/facet-set/facet-set-actions.js';\nimport {UpdateFacetAutoSelectionActionCreatorPayload} from '../../../facets/generic/facet-actions.js';\n\nexport type UpdateCoreFacetNumberOfValuesPayload =\n  UpdateFacetNumberOfValuesActionCreatorPayload;\n\nexport const updateCoreFacetNumberOfValues = createAction(\n  'commerce/facets/core/updateNumberOfValues',\n  (payload: UpdateCoreFacetNumberOfValuesPayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      numberOfValues: new NumberValue({required: true, min: 1}),\n    })\n);\n\nexport type UpdateCoreFacetIsFieldExpandedPayload =\n  UpdateFacetIsFieldExpandedActionCreatorPayload;\n\nexport const updateCoreFacetIsFieldExpanded = createAction(\n  'commerce/facets/core/updateIsFieldExpanded',\n  (payload: UpdateCoreFacetIsFieldExpandedPayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      isFieldExpanded: new BooleanValue({required: true}),\n    })\n);\n\nexport const clearAllCoreFacets = createAction('commerce/facets/core/clearAll');\n\nexport type DeselectAllValuesInCoreFacetPayload = {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n};\n\nexport const deselectAllValuesInCoreFacet = createAction(\n  'commerce/facets/core/deselectAllValues',\n  (payload: DeselectAllValuesInCoreFacetPayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n    })\n);\n\nexport type UpdateCoreFacetFreezeCurrentValuesPayload =\n  UpdateFreezeCurrentValuesActionCreatorPayload;\n\nexport const updateCoreFacetFreezeCurrentValues = createAction(\n  'commerce/facets/core/updateFreezeCurrentValues',\n  (payload: UpdateCoreFacetFreezeCurrentValuesPayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      freezeCurrentValues: new BooleanValue({required: true}),\n    })\n);\n\nexport type UpdateAutoSelectionForAllCoreFacetsPayload =\n  UpdateFacetAutoSelectionActionCreatorPayload;\n\nexport const updateAutoSelectionForAllCoreFacets = createAction(\n  'commerce/facets/core/updateAutoSelectionForAll',\n  (payload: UpdateAutoSelectionForAllCoreFacetsPayload) =>\n    validatePayload(payload, {\n      allow: new BooleanValue({required: true}),\n    })\n);\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  nonRequiredEmptyAllowedString,\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload.js';\n\nexport const slotIdDefinition = {\n  slotId: nonRequiredEmptyAllowedString,\n};\n\ninterface SlotIdPayload {\n  /**\n   * The unique identifier of the target recommendations slot.\n   */\n  slotId?: string;\n}\n\nconst setPageSizeDefinition = {\n  ...slotIdDefinition,\n  pageSize: new NumberValue({required: true, min: 0}),\n};\n\nexport type SetPageSizePayload = SlotIdPayload & {\n  /**\n   * The number of items to display per page.\n   */\n  pageSize: number;\n};\n\nexport const setPageSize = createAction(\n  'commerce/pagination/setPageSize',\n  (payload: SetPageSizePayload) =>\n    validatePayload(payload, setPageSizeDefinition)\n);\n\nconst selectPageDefinition = {\n  ...slotIdDefinition,\n  page: new NumberValue({required: true, min: 0}),\n};\n\nexport type SelectPagePayload = SlotIdPayload & {\n  /**\n   * The 1-based page number to select.\n   */\n  page: number;\n};\n\nexport const selectPage = createAction(\n  'commerce/pagination/selectPage',\n  (payload: SelectPagePayload) => validatePayload(payload, selectPageDefinition)\n);\n\nexport type NextPagePayload = SlotIdPayload;\n\nexport const nextPage = createAction(\n  'commerce/pagination/nextPage',\n  (payload?: NextPagePayload) => validatePayload(payload, slotIdDefinition)\n);\n\nexport type PreviousPagePayload = SlotIdPayload;\n\nexport const previousPage = createAction(\n  'commerce/pagination/previousPage',\n  (payload?: PreviousPagePayload) => validatePayload(payload, slotIdDefinition)\n);\n\nexport type RegisterRecommendationsSlotPaginationPayload =\n  Required<SlotIdPayload>;\n\nexport const registerRecommendationsSlotPagination = createAction(\n  'commerce/pagination/registerRecommendationsSlot',\n  (payload: RegisterRecommendationsSlotPaginationPayload) =>\n    validatePayload(payload, {\n      slotId: requiredNonEmptyString,\n    })\n);\n", "import {StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload.js';\n\nexport interface UpdateQueryPayload {\n  /**\n   * The new basic query expression (e.g., `red surfboards`).\n   */\n  query?: string;\n}\n\nexport const updateQuery = createAction(\n  'commerce/query/update',\n  (payload: UpdateQueryPayload) =>\n    validatePayload(payload, {\n      query: new StringValue(),\n    })\n);\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {UnknownAction} from '@reduxjs/toolkit';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {\n  CommerceAPIClient,\n  CommerceAPIResponse,\n  isErrorResponse,\n} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {CommerceAPIRequest} from '../../../api/commerce/common/request.js';\nimport {CommerceSearchRequest} from '../../../api/commerce/search/request.js';\nimport {SearchCommerceSuccessResponse} from '../../../api/commerce/search/response.js';\nimport {ClientThunkExtraArguments} from '../../../app/thunk-extra-arguments.js';\nimport {\n  CommerceSearchSection,\n  CommerceQuerySection,\n  CommerceDidYouMeanSection,\n  TriggerSection,\n} from '../../../state/state-sections.js';\nimport {\n  ListingAndSearchStateNeededByQueryCommerceAPI,\n  buildCommerceAPIRequest,\n} from '../common/actions.js';\nimport {updateQuery} from '../query/query-actions.js';\nimport {\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from '../triggers/triggers-actions.js';\nimport {QuerySearchCommerceAPIThunkReturn} from './search-actions.js';\nimport {queryExecutedFromResponseSelector} from './search-selectors.js';\n\ninterface FetchedResponse {\n  response: CommerceAPIResponse<SearchCommerceSuccessResponse>;\n  duration: number;\n  queryExecuted: string;\n  requestExecuted: CommerceAPIRequest;\n}\n\nexport type StateNeededByExecuteSearch =\n  ListingAndSearchStateNeededByQueryCommerceAPI &\n    CommerceSearchSection &\n    CommerceQuerySection &\n    CommerceDidYouMeanSection &\n    TriggerSection;\n\nexport interface AsyncThunkConfig {\n  getState: () => StateNeededByExecuteSearch;\n  dispatch: ThunkDispatch<\n    StateNeededByExecuteSearch,\n    ClientThunkExtraArguments<CommerceAPIClient> & {\n      apiClient?: CommerceAPIClient | undefined;\n    },\n    UnknownAction\n  >;\n\n  rejectWithValue: (err: CommerceAPIErrorStatusResponse) => unknown;\n  extra: ClientThunkExtraArguments<CommerceAPIClient>;\n}\n\ntype ValidReturnTypeFromProcessingStep<RejectionType> =\n  | QuerySearchCommerceAPIThunkReturn\n  | RejectionType;\n\nexport class AsyncSearchThunkProcessor<RejectionType> {\n  constructor(private config: AsyncThunkConfig) {}\n\n  public async process(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType>> {\n    return (\n      this.processQueryErrorOrContinue(fetched) ??\n      (await this.processQueryCorrectionsOrContinue(fetched)) ??\n      (await this.processQueryTriggersOrContinue(fetched)) ??\n      this.processSuccessResponse(fetched)\n    );\n  }\n\n  public async fetchFromAPI(\n    request: CommerceAPIRequest | CommerceSearchRequest\n  ) {\n    const startedAt = new Date().getTime();\n    const response = await this.extra.apiClient.search(request);\n    const duration = new Date().getTime() - startedAt;\n    const queryExecuted = this.getState().commerceQuery.query || '';\n    return {response, duration, queryExecuted, requestExecuted: request};\n  }\n\n  private processSuccessResponse(\n    fetched: FetchedResponse\n  ): QuerySearchCommerceAPIThunkReturn {\n    return {\n      ...fetched,\n      response: this.getSuccessResponse(fetched)!,\n      originalQuery: this.getCurrentQuery(),\n    };\n  }\n\n  private processQueryErrorOrContinue(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> | null {\n    if (isErrorResponse(fetched.response)) {\n      return this.rejectWithValue(fetched.response.error) as RejectionType;\n    }\n\n    return null;\n  }\n\n  private async processQueryCorrectionsOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const state = this.getState();\n    const successResponse = this.getSuccessResponse(fetched);\n\n    if (!successResponse || !state.didYouMean) {\n      return null;\n    }\n    const {queryCorrection} = successResponse;\n\n    const shouldExecuteQueryCorrection =\n      !isNullOrUndefined(queryCorrection) &&\n      !isNullOrUndefined(queryCorrection.correctedQuery);\n\n    if (!shouldExecuteQueryCorrection) {\n      return null;\n    }\n\n    const {correctedQuery, originalQuery} = successResponse.queryCorrection!;\n\n    this.onUpdateQueryForCorrection(correctedQuery ?? '');\n\n    return {\n      ...fetched,\n      response: {\n        ...successResponse,\n      },\n      queryExecuted: queryExecutedFromResponseSelector(state, successResponse),\n      originalQuery: originalQuery ?? '',\n    };\n  }\n\n  private async processQueryTriggersOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const successResponse = this.getSuccessResponse(fetched);\n    if (!successResponse) {\n      return null;\n    }\n    const correctedQuery =\n      (successResponse.triggers.find((trigger) => trigger.type === 'query')\n        ?.content as string) || '';\n\n    if (!correctedQuery) {\n      return null;\n    }\n\n    const ignored = this.getState().triggers?.queryModification.queryToIgnore;\n\n    if (ignored === correctedQuery) {\n      this.dispatch(updateIgnoreQueryTrigger({q: ''}));\n      return null;\n    }\n\n    const originalQuery = this.getCurrentQuery();\n    const retried =\n      await this.automaticallyRetryQueryWithTriggerModification(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n      },\n      originalQuery,\n    };\n  }\n\n  private async automaticallyRetryQueryWithTriggerModification(\n    modified: string\n  ) {\n    this.dispatch(\n      applyQueryTriggerModification({\n        newQuery: modified,\n        originalQuery: this.getCurrentQuery(),\n      })\n    );\n    this.onUpdateQueryForCorrection(modified);\n    const fetched = await this.fetchFromAPI({\n      ...buildCommerceAPIRequest(this.getState(), this.navigatorContext),\n      query: modified,\n    });\n\n    return fetched;\n  }\n\n  private get dispatch() {\n    return this.config.dispatch;\n  }\n\n  private get rejectWithValue() {\n    return this.config.rejectWithValue;\n  }\n\n  private getState() {\n    return this.config.getState();\n  }\n\n  private get navigatorContext() {\n    return this.config.extra.navigatorContext;\n  }\n\n  private getCurrentQuery() {\n    const state = this.getState();\n    return state.commerceQuery.query !== undefined\n      ? state.commerceQuery.query\n      : '';\n  }\n\n  private getSuccessResponse(fetched: FetchedResponse) {\n    if (isErrorResponse(fetched.response)) {\n      return null;\n    }\n    return fetched.response.success;\n  }\n\n  private get extra() {\n    return this.config.extra;\n  }\n\n  private onUpdateQueryForCorrection(modification: string) {\n    this.dispatch(updateQuery({query: modification}));\n  }\n}\n", "import {RecordValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  nonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload.js';\nimport {ApplyQueryTriggerModificationPayload} from '../../triggers/triggers-actions.js';\n\nexport type UpdateIgnoreQueryTriggerPayload = {\n  /**\n   * The query to ignore.\n   */\n  q: string;\n};\n\nexport const updateIgnoreQueryTrigger = createAction(\n  'commerce/triggers/query/updateIgnore',\n  (payload: UpdateIgnoreQueryTriggerPayload) =>\n    validatePayload(payload, {\n      q: new StringValue({emptyAllowed: true, required: true}),\n    })\n);\n\nexport const applyQueryTriggerModification = createAction(\n  'commerce/triggers/query/applyModification',\n  (payload: ApplyQueryTriggerModificationPayload) =>\n    validatePayload<ApplyQueryTriggerModificationPayload>(\n      payload,\n      new RecordValue({\n        values: {originalQuery: nonEmptyString, modification: nonEmptyString},\n      })\n    )\n);\n", "import {QueryCorrection} from '../../../api/search/search/query-corrections.js';\nimport {emptyNextCorrection} from '../../did-you-mean/did-you-mean-state.js';\n\nexport interface DidYouMeanState {\n  /**\n   * The correction that was automatically applied to the query. If no correction was automatically applied, will default to an empty string.\n   */\n  wasCorrectedTo: string;\n  /**\n   * The query correction that was returned by the \"did you mean\" feature.\n   */\n  queryCorrection: QueryCorrection;\n  /**\n   * The original query expression that was received.\n   */\n  originalQuery: string;\n}\n\nexport function getDidYouMeanInitialState(): DidYouMeanState {\n  return {\n    wasCorrectedTo: '',\n    queryCorrection: emptyNextCorrection(),\n    originalQuery: '',\n  };\n}\n", "import {createReducer, type Draft as WritableDraft} from '@reduxjs/toolkit';\nimport {\n  CategoryFacetValueRequest,\n  DateRangeRequest,\n  FacetValueRequest,\n  NumericRangeRequest,\n} from '../../../../controllers/commerce/core/facets/headless-core-commerce-facet.js';\nimport {defaultNumberOfValuesIncrement} from '../../../facets/category-facet-set/category-facet-set-actions.js';\nimport {selectCategoryFacetSearchResult} from '../../../facets/facet-search-set/category/category-facet-search-actions.js';\nimport {\n  excludeFacetSearchResult,\n  selectFacetSearchResult,\n} from '../../../facets/facet-search-set/specific/specific-facet-search-actions.js';\nimport {convertFacetValueToRequest} from '../../../facets/facet-set/facet-set-slice.js';\nimport {handleFacetUpdateNumberOfValues} from '../../../facets/generic/facet-reducer-helpers.js';\nimport {convertToDateRangeRequests} from '../../../facets/range-facets/date-facet-set/date-facet-set-slice.js';\nimport {findExactRangeValue} from '../../../facets/range-facets/generic/range-facet-reducers.js';\nimport {convertToNumericRangeRequests} from '../../../facets/range-facets/numeric-facet-set/numeric-facet-set-slice.js';\nimport {setContext, setView} from '../../context/context-actions.js';\nimport {restoreProductListingParameters} from '../../product-listing-parameters/product-listing-parameters-actions.js';\nimport {fetchProductListing} from '../../product-listing/product-listing-actions.js';\nimport {fetchQuerySuggestions} from '../../query-suggest/query-suggest-actions.js';\nimport {restoreSearchParameters} from '../../search-parameters/search-parameters-actions.js';\nimport {executeSearch} from '../../search/search-actions.js';\nimport '../category-facet/category-facet-actions.js';\nimport {\n  toggleSelectCategoryFacetValue,\n  updateCategoryFacetNumberOfValues,\n} from '../category-facet/category-facet-actions.js';\nimport {\n  deselectAllValuesInCoreFacet,\n  updateCoreFacetFreezeCurrentValues,\n  updateCoreFacetIsFieldExpanded,\n  updateCoreFacetNumberOfValues,\n  updateAutoSelectionForAllCoreFacets,\n  clearAllCoreFacets,\n} from '../core-facet/core-facet-actions.js';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n  updateDateFacetValues,\n} from '../date-facet/date-facet-actions.js';\nimport {\n  executeCommerceFieldSuggest,\n  getFacetIdWithCommerceFieldSuggestionNamespace,\n} from '../facet-search-set/commerce-facet-search-actions.js';\nimport {toggleSelectLocationFacetValue} from '../location-facet/location-facet-actions.js';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n  updateManualNumericFacetRange,\n  updateNumericFacetValues,\n} from '../numeric-facet/numeric-facet-actions.js';\nimport {\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n} from '../regular-facet/regular-facet-actions.js';\nimport {handleCategoryFacetNestedNumberOfValuesUpdate} from './facet-set-reducer-helpers.js';\nimport {\n  buildCategoryFacetValueRequest,\n  buildSelectedFacetValueRequest,\n  restoreFromParameters,\n  selectPath,\n} from './facet-set-reducers.js';\nimport {\n  CommerceFacetSetState,\n  getCommerceFacetSetInitialState,\n} from './facet-set-state.js';\nimport {\n  AnyFacetRequest,\n  AnyFacetValueRequest,\n  RegularFacetRequest,\n  NumericFacetRequest,\n  DateFacetRequest,\n  CategoryFacetRequest,\n  LocationFacetRequest,\n  LocationFacetValueRequest,\n} from './interfaces/request.js';\nimport {CategoryFacetValue, LocationFacetValue} from './interfaces/response.js';\nimport {AnyFacetResponse} from './interfaces/response.js';\n\nexport const commerceFacetSetReducer = createReducer(\n  getCommerceFacetSetInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(fetchProductListing.fulfilled, handleQueryFulfilled)\n      .addCase(executeSearch.fulfilled, handleQueryFulfilled)\n      .addCase(executeCommerceFieldSuggest.fulfilled, (state, action) =>\n        handleFieldSuggestionsFulfilled(\n          state,\n          getFacetIdWithCommerceFieldSuggestionNamespace(action.payload.facetId)\n        )\n      )\n      .addCase(fetchQuerySuggestions.fulfilled, (state, action) => {\n        if (!action.payload.fieldSuggestionsFacets) {\n          return;\n        }\n\n        for (const {facetId} of action.payload.fieldSuggestionsFacets) {\n          handleFieldSuggestionsFulfilled(\n            state,\n            getFacetIdWithCommerceFieldSuggestionNamespace(facetId)\n          );\n        }\n      })\n      .addCase(toggleSelectFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureRegularFacetRequest(facetRequest)) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.values.find(\n          (req) => req.value === selection.value\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        updateExistingFacetValueState(existingValue, 'select');\n        facetRequest.freezeCurrentValues = true;\n      })\n      .addCase(toggleSelectLocationFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureLocationFacetRequest(facetRequest)) {\n          return;\n        }\n\n        const existingValue = facetRequest.values.find(\n          (req) => req.value === selection.value\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        updateExistingFacetValueState(existingValue, 'select');\n      })\n      .addCase(toggleSelectNumericFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureNumericFacetRequest(facetRequest)) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = findExactRangeValue(\n          facetRequest.values,\n          selection\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n        updateExistingFacetValueState(existingValue, 'select');\n\n        if (\n          facetRequest.interval === 'continuous' &&\n          existingValue.state === 'idle'\n        ) {\n          facetRequest.values = [];\n          return;\n        }\n      })\n      .addCase(toggleSelectDateFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureDateFacetRequest(facetRequest)) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = findExactRangeValue(\n          facetRequest.values,\n          selection\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n        updateExistingFacetValueState(existingValue, 'select');\n      })\n      .addCase(toggleSelectCategoryFacetValue, (state, action) => {\n        const {facetId, selection, retrieveCount} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request || !ensureCategoryFacetRequest(request)) {\n          return;\n        }\n\n        const {path} = selection;\n        const pathToSelection = path.slice(0, path.length - 1);\n        const children = ensurePathAndReturnChildren(\n          request,\n          pathToSelection,\n          retrieveCount\n        );\n\n        if (children.length) {\n          const lastSelectedParent = children[0];\n\n          lastSelectedParent.state = 'selected';\n          lastSelectedParent.children = [];\n          return;\n        }\n\n        const newParent = buildCategoryFacetValueRequest(\n          selection.value,\n          retrieveCount\n        );\n        newParent.state = 'selected';\n        children.push(newParent);\n        request.numberOfValues = 1;\n      })\n      .addCase(toggleExcludeFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureRegularFacetRequest(facetRequest)) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.values.find(\n          (req) => req.value === selection.value\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        updateExistingFacetValueState(existingValue, 'exclude');\n        facetRequest.freezeCurrentValues = true;\n      })\n      .addCase(toggleExcludeNumericFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureNumericFacetRequest(facetRequest)) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = findExactRangeValue(\n          facetRequest.values,\n          selection\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        updateExistingFacetValueState(existingValue, 'exclude');\n\n        if (\n          facetRequest.interval === 'continuous' &&\n          existingValue.state === 'idle'\n        ) {\n          facetRequest.values = [];\n          return;\n        }\n      })\n      .addCase(toggleExcludeDateFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureDateFacetRequest(facetRequest)) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = findExactRangeValue(\n          facetRequest.values,\n          selection\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        updateExistingFacetValueState(existingValue, 'exclude');\n      })\n      .addCase(updateCategoryFacetNumberOfValues, (state, action) => {\n        const {facetId, numberOfValues} = action.payload;\n        const request = state[facetId]?.request;\n        if (!request) {\n          return;\n        }\n        if (!request.values.length) {\n          return handleFacetUpdateNumberOfValues<AnyFacetRequest>(\n            request,\n            numberOfValues\n          );\n        }\n        handleCategoryFacetNestedNumberOfValuesUpdate(state, action.payload);\n      })\n      .addCase(selectFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureRegularFacetRequest(facetRequest)) {\n          return;\n        }\n\n        const {rawValue} = value;\n\n        facetRequest.freezeCurrentValues = true;\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.values.find(\n          (v) => v.value === rawValue\n        );\n\n        if (!existingValue) {\n          insertNewValue(\n            facetRequest,\n            buildSelectedFacetValueRequest(rawValue) as AnyFacetValueRequest\n          );\n          return;\n        }\n\n        updateExistingFacetValueState(existingValue, 'select');\n      })\n      .addCase(excludeFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest || !ensureRegularFacetRequest(facetRequest)) {\n          return;\n        }\n\n        const {rawValue} = value;\n\n        facetRequest.freezeCurrentValues = true;\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.values.find(\n          (v) =>\n            (v as FacetValueRequest | CategoryFacetValueRequest).value ===\n            rawValue\n        );\n\n        if (!existingValue) {\n          insertNewValue(facetRequest, {state: 'excluded', value: rawValue});\n          return;\n        }\n\n        updateExistingFacetValueState(existingValue, 'exclude');\n      })\n      .addCase(selectCategoryFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facetRequest = state[facetId];\n\n        if (\n          !facetRequest ||\n          !ensureCategoryFacetRequest(facetRequest?.request)\n        ) {\n          return;\n        }\n\n        const path = [...value.path, value.rawValue];\n        selectPath(\n          facetRequest.request,\n          path,\n          facetRequest.request.initialNumberOfValues\n        );\n      })\n      .addCase(updateNumericFacetValues, (state, action) => {\n        const {facetId, values} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request || !ensureNumericFacetRequest(request)) {\n          return;\n        }\n\n        request.values = values;\n        request.numberOfValues = values.length;\n      })\n      .addCase(updateDateFacetValues, (state, action) => {\n        const {facetId, values} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request || !ensureDateFacetRequest(request)) {\n          return;\n        }\n\n        request.values = convertToDateRangeRequests(values);\n        request.numberOfValues = values.length;\n      })\n      .addCase(updateCoreFacetNumberOfValues, (state, action) => {\n        const {facetId, numberOfValues} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.numberOfValues = numberOfValues;\n      })\n      .addCase(updateCoreFacetIsFieldExpanded, (state, action) => {\n        const {facetId, isFieldExpanded} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.isFieldExpanded = isFieldExpanded;\n      })\n      .addCase(updateAutoSelectionForAllCoreFacets, (state, action) =>\n        Object.values(state).forEach((slice) => {\n          slice.request.preventAutoSelect = !action.payload.allow;\n        })\n      )\n      .addCase(updateCoreFacetFreezeCurrentValues, (state, action) => {\n        const {facetId, freezeCurrentValues} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.freezeCurrentValues = freezeCurrentValues;\n      })\n      .addCase(deselectAllValuesInCoreFacet, (state, action) => {\n        const {facetId} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request) {\n          return;\n        }\n\n        handleDeselectAllFacetValues(request);\n      })\n      .addCase(updateManualNumericFacetRange, (state, action) => {\n        const {facetId} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request) {\n          return;\n        }\n\n        handleDeselectAllFacetValues(request);\n      })\n      .addCase(clearAllCoreFacets, setAllFacetValuesToIdle)\n      .addCase(setContext, clearAllFacetValues)\n      .addCase(setView, clearAllFacetValues)\n      .addCase(restoreSearchParameters, restoreFromParameters)\n      .addCase(restoreProductListingParameters, restoreFromParameters);\n  }\n);\n\nfunction ensureRegularFacetRequest(\n  facetRequest: AnyFacetRequest\n): facetRequest is RegularFacetRequest {\n  return facetRequest.type === 'regular';\n}\n\nfunction ensureLocationFacetRequest(\n  facetRequest: AnyFacetRequest\n): facetRequest is LocationFacetRequest {\n  return facetRequest.type === 'location';\n}\n\nfunction ensureNumericFacetRequest(\n  facetRequest: AnyFacetRequest\n): facetRequest is NumericFacetRequest {\n  return facetRequest.type === 'numericalRange';\n}\n\nfunction ensureDateFacetRequest(\n  facetRequest: AnyFacetRequest\n): facetRequest is DateFacetRequest {\n  return facetRequest.type === 'dateRange';\n}\n\nfunction ensureCategoryFacetRequest(\n  facetRequest: AnyFacetRequest\n): facetRequest is CategoryFacetRequest {\n  return facetRequest.type === 'hierarchical';\n}\n\nfunction handleQueryFulfilled(\n  state: WritableDraft<CommerceFacetSetState>,\n  action: ReturnType<\n    typeof fetchProductListing.fulfilled | typeof executeSearch.fulfilled\n  >\n) {\n  const existingFacets = new Set(Object.keys(state));\n  const facets = action.payload.response.facets;\n  for (const facetResponse of facets) {\n    updateStateFromFacetResponse(state, facetResponse, existingFacets);\n  }\n\n  for (const facetId of existingFacets) {\n    delete state[facetId];\n  }\n}\n\nfunction handleFieldSuggestionsFulfilled(\n  state: WritableDraft<CommerceFacetSetState>,\n  facetId: string\n) {\n  let facetRequest = state[facetId]?.request;\n  if (!facetRequest) {\n    state[facetId] = {request: {} as AnyFacetRequest};\n    facetRequest = state[facetId].request;\n    facetRequest.initialNumberOfValues = 10;\n    facetRequest.values = [];\n  }\n}\n\nfunction handleDeselectAllFacetValues(request: AnyFacetRequest) {\n  if (request.type === 'hierarchical') {\n    request.numberOfValues = request.initialNumberOfValues;\n    request.values = [];\n    request.preventAutoSelect = true;\n  } else {\n    request.values.forEach((value) => (value.state = 'idle'));\n  }\n}\n\nfunction ensurePathAndReturnChildren(\n  request: CategoryFacetRequest,\n  path: string[],\n  retrieveCount: number\n) {\n  let children = request.values;\n\n  for (const segment of path) {\n    let parent = children[0];\n    const missingParent = !parent;\n\n    if (missingParent || segment !== parent.value) {\n      parent = buildCategoryFacetValueRequest(segment, retrieveCount);\n      children.length = 0;\n      children.push(parent);\n    }\n\n    parent.state = 'idle';\n    children = parent.children;\n  }\n\n  return children;\n}\nfunction updateExistingFacetValueState(\n  existingFacetValue: WritableDraft<\n    | FacetValueRequest\n    | LocationFacetValueRequest\n    | NumericRangeRequest\n    | DateRangeRequest\n  >,\n  toggleAction: 'select' | 'exclude'\n) {\n  switch (existingFacetValue.state) {\n    case 'idle':\n      existingFacetValue.state =\n        toggleAction === 'exclude' ? 'excluded' : 'selected';\n      break;\n    case 'excluded':\n      existingFacetValue.state =\n        toggleAction === 'exclude' ? 'idle' : 'selected';\n      break;\n    case 'selected':\n      existingFacetValue.state =\n        toggleAction === 'exclude' ? 'excluded' : 'idle';\n      break;\n    default:\n      break;\n  }\n}\n\nfunction updateStateFromFacetResponse(\n  state: WritableDraft<CommerceFacetSetState>,\n  facetResponse: AnyFacetResponse,\n  facetsToRemove: Set<string>\n) {\n  const facetId = facetResponse.facetId ?? facetResponse.field;\n\n  let facetRequest = state[facetId]?.request;\n  if (!facetRequest) {\n    state[facetId] = {request: {} as AnyFacetRequest};\n    facetRequest = state[facetId].request;\n    facetRequest.initialNumberOfValues = facetResponse.numberOfValues;\n  } else {\n    facetsToRemove.delete(facetId);\n  }\n\n  facetRequest.facetId = facetId;\n  facetRequest.displayName = facetResponse.displayName;\n  facetRequest.numberOfValues = facetResponse.numberOfValues;\n  facetRequest.field = facetResponse.field;\n  facetRequest.type = facetResponse.type;\n  facetRequest.values =\n    getFacetRequestValuesFromFacetResponse(facetResponse) ?? [];\n  facetRequest.freezeCurrentValues = false;\n  facetRequest.preventAutoSelect = false;\n  if (\n    facetResponse.type === 'hierarchical' &&\n    ensureCategoryFacetRequest(facetRequest)\n  ) {\n    facetRequest.delimitingCharacter = facetResponse.delimitingCharacter;\n  } else if (facetResponse.type === 'numericalRange') {\n    facetRequest.interval = facetResponse.interval;\n    if (facetResponse.domain) {\n      facetRequest.domain = {\n        min: facetResponse.domain.min,\n        max: facetResponse.domain.max,\n        increment: facetResponse.domain.increment,\n      };\n    }\n  }\n}\n\nfunction getFacetRequestValuesFromFacetResponse(\n  facetResponse: AnyFacetResponse\n) {\n  switch (facetResponse.type) {\n    case 'numericalRange':\n      return convertToNumericRangeRequests(facetResponse.values);\n    case 'dateRange':\n      return convertToDateRangeRequests(facetResponse.values);\n    case 'hierarchical':\n      return facetResponse.values.every(\n        (f) => f.state === 'idle' && f.children.length === 0\n      )\n        ? []\n        : facetResponse.values.map(convertCategoryFacetValueToRequest);\n    case 'regular':\n      return facetResponse.values.map(convertFacetValueToRequest);\n    case 'location':\n      return facetResponse.values.map(convertLocationFacetValueToRequest);\n    default:\n      return;\n  }\n}\n\nexport function convertCategoryFacetValueToRequest(\n  responseValue: CategoryFacetValue\n): CategoryFacetValueRequest {\n  const children = responseValue.children.every(\n    (c) => c.state === 'idle' && c.children.length === 0\n  )\n    ? []\n    : responseValue.children.map(convertCategoryFacetValueToRequest);\n  const {state, value} = responseValue;\n  return {\n    children,\n    state,\n    value,\n    retrieveCount: defaultNumberOfValuesIncrement,\n  };\n}\n\nexport function convertLocationFacetValueToRequest(\n  facetValue: LocationFacetValue\n): LocationFacetValueRequest {\n  const {value, state} = facetValue;\n\n  return {value, state};\n}\n\nfunction insertNewValue(\n  facetRequest: AnyFacetRequest,\n  facetValue: AnyFacetValueRequest\n) {\n  const {values} = facetRequest;\n  const firstIdleIndex = values.findIndex((v) => v.state === 'idle');\n  const indexToInsertAt =\n    firstIdleIndex === -1 ? values.length : firstIdleIndex;\n\n  const valuesBefore = values.slice(0, indexToInsertAt);\n  const valuesAfter = values.slice(indexToInsertAt + 1);\n\n  facetRequest.values = [...valuesBefore, facetValue, ...valuesAfter];\n\n  facetRequest.numberOfValues = facetRequest.values.length;\n}\n\nfunction setAllFacetValuesToIdle(state: CommerceFacetSetState) {\n  Object.values(state).forEach((facet) =>\n    handleDeselectAllFacetValues(facet.request)\n  );\n}\n\nfunction clearAllFacetValues(state: CommerceFacetSetState) {\n  Object.values(state).forEach((facet) => {\n    facet.request.values = [];\n  });\n}\n", "import {\n  Value,\n  BooleanValue,\n  ArrayValue,\n  StringValue,\n  NumberValue,\n  RecordValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  serializeSchemaValidationError,\n  validatePayload,\n  validatePayloadAndThrow,\n  requiredNonEmptyString,\n} from '../../../utils/validate-payload.js';\nimport {facetIdDefinition} from '../generic/facet-actions-validation.js';\nimport {validateCategoryFacetValue} from './category-facet-validate-payload.js';\nimport {CategoryFacetSortCriterion} from './interfaces/request.js';\nimport {CategoryFacetValue} from './interfaces/response.js';\n\nexport interface RegisterCategoryFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the facet.\n   * */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   * */\n  field: string;\n\n  /**\n   * The tabs on which the facet should be enabled or disabled.\n   */\n  tabs?: {included?: string[]; excluded?: string[]};\n\n  /**\n   * The currently active tab.\n   */\n  activeTab?: string;\n\n  /**\n   * The base path shared by all values for the facet.\n   *\n   * @defaultValue `[]`\n   */\n  basePath?: string[];\n\n  /**\n   * The character that specifies the hierarchical dependency.\n   *\n   * @defaultValue `;`\n   */\n  delimitingCharacter?: string;\n\n  /**\n   * Whether to use basePath as a filter for the results.\n   *\n   * @defaultValue `true`\n   */\n  filterByBasePath?: boolean;\n\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   * */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet. Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `5`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The criterion to use for sorting returned facet values.\n   *\n   * @defaultValue `occurrences`\n   */\n  sortCriteria?: CategoryFacetSortCriterion;\n}\n\nconst categoryFacetPayloadDefinition = {\n  facetId: facetIdDefinition,\n  field: requiredNonEmptyString,\n  tabs: new RecordValue({\n    options: {\n      required: false,\n    },\n    values: {\n      included: new ArrayValue({each: new StringValue()}),\n      excluded: new ArrayValue({each: new StringValue()}),\n    },\n  }),\n  activeTab: new StringValue({required: false}),\n  delimitingCharacter: new StringValue({required: false, emptyAllowed: true}),\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<CategoryFacetSortCriterion>({required: false}),\n  basePath: new ArrayValue({required: false, each: requiredNonEmptyString}),\n  filterByBasePath: new BooleanValue({required: false}),\n};\n\nexport const defaultNumberOfValuesIncrement = 5;\n\nexport const registerCategoryFacet = createAction(\n  'categoryFacet/register',\n  (payload: RegisterCategoryFacetActionCreatorPayload) =>\n    validatePayload(payload, categoryFacetPayloadDefinition)\n);\n\nexport interface ToggleSelectCategoryFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target category facet value.\n   */\n  selection: CategoryFacetValue;\n\n  /**\n   * The number of child values to display.\n   */\n  retrieveCount: number;\n}\n\nexport const toggleSelectCategoryFacetValue = createAction(\n  'categoryFacet/toggleSelectValue',\n  (payload: ToggleSelectCategoryFacetValueActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload.facetId, requiredNonEmptyString);\n      validateCategoryFacetValue(payload.selection);\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport const deselectAllCategoryFacetValues = createAction(\n  'categoryFacet/deselectAll',\n  (payload: string) =>\n    validatePayload(payload, categoryFacetPayloadDefinition.facetId)\n);\n\nexport interface UpdateCategoryFacetNumberOfValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The new number of facet values (e.g., `10`).\n   */\n  numberOfValues: number;\n}\n\nexport const updateCategoryFacetNumberOfValues = createAction(\n  'categoryFacet/updateNumberOfValues',\n  (payload: UpdateCategoryFacetNumberOfValuesActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: categoryFacetPayloadDefinition.facetId,\n      numberOfValues: categoryFacetPayloadDefinition.numberOfValues,\n    })\n);\n\nexport interface UpdateCategoryFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The criterion by which to sort the facet.\n   */\n  criterion: CategoryFacetSortCriterion;\n}\n\nexport const updateCategoryFacetSortCriterion = createAction(\n  'categoryFacet/updateSortCriterion',\n  (payload: UpdateCategoryFacetSortCriterionActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: categoryFacetPayloadDefinition.facetId,\n      criterion: new Value<CategoryFacetSortCriterion>(),\n    })\n);\n\nexport interface UpdateCategoryFacetBasePathActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The base path shared by all values for the facet.\n   */\n  basePath: string[];\n}\n\nexport const updateCategoryFacetBasePath = createAction(\n  'categoryFacet/updateBasePath',\n  (payload: UpdateCategoryFacetBasePathActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: categoryFacetPayloadDefinition.facetId,\n      basePath: new ArrayValue({each: requiredNonEmptyString}),\n    })\n);\n", "import {requiredNonEmptyString} from '../../../utils/validate-payload.js';\n\nexport const facetIdDefinition = requiredNonEmptyString;\n", "import {\n  Value,\n  NumberValue,\n  StringValue,\n  ArrayValue,\n  BooleanValue,\n} from '@coveo/bueno';\nimport {\n  validatePayloadAndThrow,\n  requiredNonEmptyString,\n} from '../../../utils/validate-payload.js';\nimport {FacetValueState} from '../facet-api/value.js';\nimport {CategoryFacetValue} from './interfaces/response.js';\n\nexport const categoryFacetValueDefinition = {\n  state: new Value<FacetValueState>({required: true}),\n  numberOfResults: new NumberValue({required: true, min: 0}),\n  value: new StringValue({required: true, emptyAllowed: true}),\n  path: new ArrayValue({required: true, each: requiredNonEmptyString}),\n  moreValuesAvailable: new BooleanValue({required: false}),\n};\n\nexport function validateCategoryFacetValue(payload: CategoryFacetValue) {\n  payload.children.forEach((child) => {\n    validateCategoryFacetValue(child);\n  });\n  validatePayloadAndThrow(\n    {\n      state: payload.state,\n      numberOfResults: payload.numberOfResults,\n      value: payload.value,\n      path: payload.path,\n      moreValuesAvailable: payload.moreValuesAvailable,\n    },\n    categoryFacetValueDefinition\n  );\n}\n", "import {NumberValue, RecordValue, ArrayValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchResult} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-response.js';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  requiredEmptyAllowedString,\n} from '../../../../utils/validate-payload.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {FacetSearchOptions} from '../facet-search-request-options.js';\nimport {facetSearchOptionsDefinition} from '../generic/generic-facet-search-validate-payload.js';\n\nconst categoryFacetSearchResultDefinition = {\n  path: new ArrayValue({\n    required: true,\n    each: requiredNonEmptyString,\n  }),\n  displayValue: requiredEmptyAllowedString,\n  rawValue: requiredEmptyAllowedString,\n  count: new NumberValue({required: true, min: 0}),\n};\n\nexport const selectCategoryFacetSearchResult = createAction(\n  'categoryFacet/selectSearchResult',\n  (payload: {facetId: string; value: CategoryFacetSearchResult}) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      value: new RecordValue({values: categoryFacetSearchResultDefinition}),\n    })\n);\n\nexport const registerCategoryFacetSearch = createAction(\n  'categoryFacetSearch/register',\n  (payload: FacetSearchOptions) =>\n    validatePayload(payload, facetSearchOptionsDefinition)\n);\n", "import {RecordValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\n\nexport const facetSearchOptionsDefinition = {\n  facetId: facetIdDefinition,\n  captions: new RecordValue({options: {required: false}}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  query: new StringValue({required: false, emptyAllowed: true}),\n};\n", "import {RecordValue, NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {SpecificFacetSearchResult} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {\n  validatePayload,\n  requiredEmptyAllowedString,\n} from '../../../../utils/validate-payload.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {FacetSearchOptions} from '../facet-search-request-options.js';\nimport {facetSearchOptionsDefinition} from '../generic/generic-facet-search-validate-payload.js';\n\nconst selectFacetSearchResultPayloadDefinition = {\n  facetId: facetIdDefinition,\n  value: new RecordValue({\n    values: {\n      displayValue: requiredEmptyAllowedString,\n      rawValue: requiredEmptyAllowedString,\n      count: new NumberValue({required: true, min: 0}),\n    },\n  }),\n};\n\ntype selectFacetSearchResultPayload = {\n  facetId: string;\n  value: SpecificFacetSearchResult;\n};\n\nexport const registerFacetSearch = createAction(\n  'facetSearch/register',\n  (payload: FacetSearchOptions) =>\n    validatePayload(payload, facetSearchOptionsDefinition)\n);\n\nexport const updateFacetSearch = createAction(\n  'facetSearch/update',\n  (payload: FacetSearchOptions) =>\n    validatePayload(payload, facetSearchOptionsDefinition)\n);\n\nexport const selectFacetSearchResult = createAction(\n  'facetSearch/toggleSelectValue',\n  (payload: selectFacetSearchResultPayload) =>\n    validatePayload(payload, selectFacetSearchResultPayloadDefinition)\n);\n\nexport const excludeFacetSearchResult = createAction(\n  'facetSearch/toggleExcludeValue',\n  (payload: selectFacetSearchResultPayload) =>\n    validatePayload(payload, selectFacetSearchResultPayloadDefinition)\n);\n", "import {createReducer, type Draft as WritableDraft} from '@reduxjs/toolkit';\nimport {\n  deselectAllBreadcrumbs,\n  deselectAllNonBreadcrumbs,\n} from '../../breadcrumb/breadcrumb-actions.js';\nimport {disableFacet} from '../../facet-options/facet-options-actions.js';\nimport {change} from '../../history/history-actions.js';\nimport {restoreSearchParameters} from '../../search-parameters/search-parameter-actions.js';\nimport {executeSearch, fetchFacetValues} from '../../search/search-actions.js';\nimport {\n  excludeFacetSearchResult,\n  selectFacetSearchResult,\n} from '../facet-search-set/specific/specific-facet-search-actions.js';\nimport {updateFacetAutoSelection} from '../generic/facet-actions.js';\nimport {\n  handleFacetSortCriterionUpdate,\n  handleFacetDeselectAll,\n  handleFacetUpdateNumberOfValues,\n} from '../generic/facet-reducer-helpers.js';\nimport {AnyFacetResponse} from '../generic/interfaces/generic-facet-response.js';\nimport {\n  registerFacet,\n  toggleSelectFacetValue,\n  toggleExcludeFacetValue,\n  deselectAllFacetValues,\n  updateFacetSortCriterion,\n  updateFacetNumberOfValues,\n  updateFacetIsFieldExpanded,\n  updateFreezeCurrentValues,\n  RegisterFacetActionCreatorPayload,\n} from './facet-set-actions.js';\nimport {\n  getFacetSetInitialState,\n  getFacetSetSliceInitialState,\n} from './facet-set-state.js';\nimport {FacetOptionalParameters} from './interfaces/options.js';\nimport {FacetRequest, FacetValueRequest} from './interfaces/request.js';\nimport {FacetValue, FacetResponse} from './interfaces/response.js';\n\nexport const facetSetReducer = createReducer(\n  getFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerFacet, (state, action) => {\n        const {facetId} = action.payload;\n\n        if (facetId in state) {\n          return;\n        }\n\n        state[facetId] = getFacetSetSliceInitialState(\n          buildFacetRequest(action.payload)\n        );\n      })\n      .addCase(change.fulfilled, (_, action) => {\n        if (!action.payload) {\n          return;\n        }\n\n        if (Object.keys(action.payload.facetSet).length === 0) {\n          return;\n        }\n\n        return action.payload.facetSet;\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        const f = action.payload.f || {};\n        const fExcluded = action.payload.fExcluded || {};\n        const facetIds = Object.keys(state);\n\n        facetIds.forEach((id) => {\n          const {request} = state[id]!;\n          const selectedValues = f[id] || [];\n          const excludedValues = fExcluded[id] || [];\n          const activeValueCount =\n            selectedValues.length + excludedValues.length;\n          const idleValues = request.currentValues.filter(\n            (facetValue) =>\n              !selectedValues.includes(facetValue.value) &&\n              !excludedValues.includes(facetValue.value)\n          );\n\n          request.currentValues = [\n            ...selectedValues.map(buildSelectedFacetValueRequest),\n            ...excludedValues.map(buildExcludedFacetValueRequest),\n            ...idleValues.map(restoreFacetValueToIdleState),\n          ];\n          request.preventAutoSelect = activeValueCount > 0;\n          request.numberOfValues = Math.max(\n            activeValueCount,\n            request.numberOfValues\n          );\n        });\n      })\n      .addCase(toggleSelectFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.currentValues.find(\n          (req) => req.value === selection.value\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        const isSelected = existingValue.state === 'selected';\n        existingValue.state = isSelected ? 'idle' : 'selected';\n        facetRequest.freezeCurrentValues = true;\n      })\n      .addCase(toggleExcludeFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.currentValues.find(\n          (req) => req.value === selection.value\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        const isExcluded = existingValue.state === 'excluded';\n        existingValue.state = isExcluded ? 'idle' : 'excluded';\n        facetRequest.freezeCurrentValues = true;\n      })\n      .addCase(updateFreezeCurrentValues, (state, action) => {\n        const {facetId, freezeCurrentValues} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.freezeCurrentValues = freezeCurrentValues;\n      })\n      .addCase(deselectAllFacetValues, (state, action) => {\n        handleFacetDeselectAll(state[action.payload]?.request);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.values(state)\n          .filter((slice) => slice.hasBreadcrumbs)\n          .forEach(({request}) => handleFacetDeselectAll(request));\n      })\n      .addCase(deselectAllNonBreadcrumbs, (state) => {\n        Object.values(state)\n          .filter((slice) => !slice.hasBreadcrumbs)\n          .forEach(({request}) => handleFacetDeselectAll(request));\n      })\n      .addCase(updateFacetAutoSelection, (state, action) =>\n        Object.values(state).forEach((slice) => {\n          slice.request.preventAutoSelect = !action.payload.allow;\n        })\n      )\n      .addCase(updateFacetSortCriterion, (state, action) => {\n        handleFacetSortCriterionUpdate(state, action.payload);\n      })\n      .addCase(updateFacetNumberOfValues, (state, action) => {\n        const {facetId, numberOfValues} = action.payload;\n        handleFacetUpdateNumberOfValues<FacetRequest>(\n          state[facetId]?.request,\n          numberOfValues\n        );\n      })\n      .addCase(updateFacetIsFieldExpanded, (state, action) => {\n        const {facetId, isFieldExpanded} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.isFieldExpanded = isFieldExpanded;\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets;\n        facets.forEach((facetResponse) =>\n          mutateStateFromFacetResponse(\n            state[facetResponse.facetId]?.request,\n            facetResponse\n          )\n        );\n      })\n      .addCase(fetchFacetValues.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets;\n        facets.forEach((facetResponse) =>\n          mutateStateFromFacetResponse(\n            state[facetResponse.facetId]?.request,\n            facetResponse\n          )\n        );\n      })\n      .addCase(selectFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        const {rawValue} = value;\n        const {currentValues} = facetRequest;\n        const matchingValue = currentValues.find((v) => v.value === rawValue);\n\n        if (matchingValue) {\n          matchingValue.state = 'selected';\n          return;\n        }\n\n        const searchResultValue = buildSelectedFacetValueRequest(rawValue);\n        insertNewValue(facetRequest, searchResultValue);\n        facetRequest.freezeCurrentValues = true;\n        facetRequest.preventAutoSelect = true;\n      })\n      .addCase(excludeFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        const {rawValue} = value;\n        const {currentValues} = facetRequest;\n        const matchingValue = currentValues.find((v) => v.value === rawValue);\n\n        if (matchingValue) {\n          matchingValue.state = 'excluded';\n          return;\n        }\n\n        const searchResultValue = buildExcludedFacetValueRequest(rawValue);\n        insertNewValue(facetRequest, searchResultValue);\n        facetRequest.freezeCurrentValues = true;\n        facetRequest.preventAutoSelect = true;\n      })\n      .addCase(disableFacet, (state, action) => {\n        if (!(action.payload in state)) {\n          return;\n        }\n        const {request} = state[action.payload]!;\n        handleFacetDeselectAll(request);\n      });\n  }\n);\n\nfunction insertNewValue(\n  facetRequest: FacetRequest,\n  facetValue: FacetValueRequest\n) {\n  const {currentValues} = facetRequest;\n  const firstIdleIndex = currentValues.findIndex((v) => v.state === 'idle');\n  const indexToInsertAt =\n    firstIdleIndex === -1 ? currentValues.length : firstIdleIndex;\n\n  const valuesBefore = currentValues.slice(0, indexToInsertAt);\n  const valuesAfter = currentValues.slice(indexToInsertAt + 1);\n\n  facetRequest.currentValues = [...valuesBefore, facetValue, ...valuesAfter];\n  facetRequest.numberOfValues = facetRequest.currentValues.length;\n}\n\nfunction mutateStateFromFacetResponse(\n  facetRequest: WritableDraft<FacetRequest> | undefined,\n  facetResponse: AnyFacetResponse\n) {\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.currentValues = (facetResponse as FacetResponse).values.map(\n    convertFacetValueToRequest\n  );\n  facetRequest.freezeCurrentValues = false;\n  facetRequest.preventAutoSelect = false;\n}\n\nexport const defaultFacetOptions: FacetOptionalParameters = {\n  filterFacetCount: true,\n  injectionDepth: 1000,\n  numberOfValues: 8,\n  sortCriteria: 'automatic',\n  resultsMustMatch: 'atLeastOneValue',\n};\n\nfunction buildFacetRequest(\n  config: RegisterFacetActionCreatorPayload\n): FacetRequest {\n  return {\n    ...defaultFacetOptions,\n    type: 'specific',\n    currentValues: [],\n    freezeCurrentValues: false,\n    isFieldExpanded: false,\n    preventAutoSelect: false,\n    ...config,\n  };\n}\n\nexport function convertFacetValueToRequest(\n  facetValue: FacetValue\n): FacetValueRequest {\n  const {value, state} = facetValue;\n\n  return {value, state};\n}\n\nfunction buildSelectedFacetValueRequest(value: string): FacetValueRequest {\n  return {value, state: 'selected'};\n}\n\nfunction buildExcludedFacetValueRequest(value: string): FacetValueRequest {\n  return {value, state: 'excluded'};\n}\n\nfunction restoreFacetValueToIdleState(\n  facetValue: FacetValueRequest\n): FacetValueRequest {\n  return {...facetValue, state: 'idle'};\n}\n", "import {BooleanValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload.js';\nimport {facetIdDefinition} from '../facets/generic/facet-actions-validation.js';\n\nexport interface UpdateFacetOptionsActionCreatorPayload {\n  /**\n   * Whether facets should be returned in the same order they were requested.\n   */\n  freezeFacetOrder?: boolean;\n}\n\nexport type EnableFacetActionCreatorPayload = string;\n\nexport type DisableFacetActionCreatorPayload = string;\n\nexport const updateFacetOptions = createAction(\n  'facetOptions/update',\n  (\n    payload: UpdateFacetOptionsActionCreatorPayload = {freezeFacetOrder: true}\n  ) =>\n    validatePayload(payload, {\n      freezeFacetOrder: new BooleanValue({required: false}),\n    })\n);\n\nexport const enableFacet = createAction(\n  'facetOptions/facet/enable',\n  (payload: EnableFacetActionCreatorPayload) =>\n    validatePayload(payload, facetIdDefinition)\n);\n\nexport const disableFacet = createAction(\n  'facetOptions/facet/disable',\n  (payload: EnableFacetActionCreatorPayload) =>\n    validatePayload(payload, facetIdDefinition)\n);\n", "import {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {HistoryState} from './history-state.js';\n\nexport const undo = createAction('history/undo');\nexport const redo = createAction('history/redo');\n\nexport const snapshot = createAction<HistoryState>('history/snapshot');\n\nexport const back = createAsyncThunk('history/back', async (_, {dispatch}) => {\n  dispatch(undo());\n  await dispatch(change());\n});\n\nexport const forward = createAsyncThunk(\n  'history/forward',\n  async (_, {dispatch}) => {\n    dispatch(redo());\n    await dispatch(change());\n  }\n);\n\nexport const change = createAsyncThunk(\n  'history/change',\n  async (_, {getState}) => {\n    const s = getState() as SearchAppState;\n    return s.history.present;\n  }\n);\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload.js';\nimport {DateRangeRequest} from '../facets/range-facets/date-facet-set/interfaces/request.js';\nimport {NumericRangeRequest} from '../facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {searchParametersDefinition} from './search-parameter-schema.js';\n\n/**\n * The parameters affecting the search response.\n */\nexport interface SearchParameters {\n  /**\n   * The advanced query expression.\n   */\n  aq?: string;\n\n  /**\n   * A record of the category facets, where the key is the facet id, and value is an array containing the parts of the selected path.\n   */\n  cf?: Record<string, string[]>;\n\n  /**\n   * The constant query expression.\n   */\n  cq?: string;\n\n  /**\n   * Determines whether to return debug information for a query.\n   */\n  debug?: boolean;\n\n  /**\n   * A record of the date facets, where the key is the facet id, and value is an array containing the date ranges to request.\n   */\n  df?: Record<string, DateRangeRequest[]>;\n\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   */\n  enableQuerySyntax?: boolean;\n\n  /**\n   * A record of the facets, where the key is the facet id, and value is an array containing the selected values.\n   */\n  f?: Record<string, string[]>;\n\n  /**\n   * A record of the excluded facets, where the key is the facet id, and value is an array containing the excluded values.\n   */\n  fExcluded?: Record<string, string[]>;\n\n  /**\n   * A zero-based index of the first result.\n   */\n  firstResult?: number;\n\n  /**\n   * A record of the numeric facets, where the key is the facet id, and value is an array containing the numeric ranges to request.\n   */\n  nf?: Record<string, NumericRangeRequest[]>;\n  /**\n   * A record of the manual numeric facets, where the key is the facet id, and the value is the selected numeric range.\n   */\n  mnf?: Record<string, NumericRangeRequest>;\n\n  /**\n   * The number of results to return.\n   */\n  numberOfResults?: number;\n\n  /**\n   * The query.\n   */\n  q?: string;\n\n  /**\n   * The sort expression to order returned results by.\n   */\n  sortCriteria?: string;\n\n  /**\n   * A record of the static filters, where the key is the static filter id, and value is an array containing the selected static filter captions.\n   */\n  sf?: Record<string, string[]>;\n\n  /**\n   * The active tab id.\n   */\n  tab?: string;\n\n  /**\n   * A record of the automatic facets, where the key is the facet id, and value is an array containing the selected values.\n   */\n  af?: Record<string, string[]>;\n}\n\nexport const restoreSearchParameters = createAction(\n  'searchParameters/restore',\n  (payload: SearchParameters) =>\n    validatePayload(payload, searchParametersDefinition)\n);\n", "import {\n  BooleanValue,\n  StringValue,\n  SchemaDefinition,\n  NumberValue,\n  RecordValue,\n} from '@coveo/bueno';\nimport {SearchParameters} from './search-parameter-actions.js';\n\nexport const searchParametersDefinition: SchemaDefinition<\n  Required<SearchParameters>\n> = {\n  q: new StringValue(),\n  enableQuerySyntax: new BooleanValue(),\n  aq: new StringValue(),\n  cq: new StringValue(),\n  firstResult: new NumberValue({min: 0}),\n  numberOfResults: new NumberValue({min: 0}),\n  sortCriteria: new StringValue(),\n  f: new RecordValue(),\n  fExcluded: new RecordValue(),\n  cf: new RecordValue(),\n  nf: new RecordValue(),\n  mnf: new RecordValue(),\n  df: new RecordValue(),\n  debug: new BooleanValue(),\n  sf: new RecordValue(),\n  tab: new StringValue(),\n  af: new RecordValue(),\n};\n", "import {BooleanValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {EventDescription} from 'coveo.analytics';\nimport {historyStore} from '../../api/analytics/coveo-analytics-utils.js';\nimport {AsyncThunkSearchOptions} from '../../api/search/search-api-client.js';\nimport {SearchResponseSuccess} from '../../api/search/search/search-response.js';\nimport {AsyncThunkOptions} from '../../app/async-thunk-options.js';\nimport {NavigatorContext} from '../../app/navigatorContextProvider.js';\nimport {InstantResultSection} from '../../state/state-sections.js';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../utils/validate-payload.js';\nimport {\n  LegacySearchAction,\n  makeBasicNewSearchAnalyticsAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {\n  deselectAllBreadcrumbs,\n  deselectAllNonBreadcrumbs,\n} from '../breadcrumb/breadcrumb-actions.js';\nimport {updateFacetAutoSelection} from '../facets/generic/facet-actions.js';\nimport {searchboxAsYouType} from '../instant-results/instant-result-analytics-actions.js';\nimport {\n  FetchInstantResultsActionCreatorPayload,\n  FetchInstantResultsThunkReturn,\n  updateInstantResultsQuery,\n} from '../instant-results/instant-results-actions.js';\nimport {updatePage} from '../pagination/pagination-actions.js';\nimport {\n  updateQuery,\n  UpdateQueryActionCreatorPayload,\n} from '../query/query-actions.js';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../search-and-folding/search-and-folding-request.js';\nimport {\n  legacyExecuteSearch,\n  legacyFetchInstantResults,\n  legacyFetchMoreResults,\n  legacyFetchPage,\n} from './legacy/search-actions.js';\nimport {\n  AsyncSearchThunkProcessor,\n  StateNeededByExecuteSearch,\n} from './search-actions-thunk-processor.js';\nimport {MappedSearchRequest, mapSearchRequest} from './search-mappings.js';\nimport {buildSearchRequest} from './search-request.js';\n\nexport interface SearchAction {\n  actionCause: string;\n}\n\nexport type {StateNeededByExecuteSearch} from './search-actions-thunk-processor.js';\n\nexport interface ExecuteSearchThunkReturn {\n  /** The successful search response. */\n  response: SearchResponseSuccess;\n  /** The number of milliseconds it took to receive the response. */\n  duration: number;\n  /** The query that was executed. */\n  queryExecuted: string;\n  /** Whether the query was automatically corrected. */\n  automaticallyCorrected: boolean;\n  /** The original query that was performed when an automatic correction is executed.*/\n  originalQuery: string;\n}\n\nexport interface PrepareForSearchWithQueryOptions {\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the search box.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters: boolean;\n}\n\nexport const prepareForSearchWithQuery = createAsyncThunk<\n  void,\n  UpdateQueryActionCreatorPayload & PrepareForSearchWithQueryOptions,\n  AsyncThunkOptions<StateNeededByExecuteSearch>\n>('search/prepareForSearchWithQuery', (payload, thunk) => {\n  const {dispatch} = thunk;\n  validatePayload(payload, {\n    q: new StringValue(),\n    enableQuerySyntax: new BooleanValue(),\n    clearFilters: new BooleanValue(),\n  });\n\n  if (payload.clearFilters) {\n    dispatch(deselectAllBreadcrumbs());\n    dispatch(deselectAllNonBreadcrumbs());\n  }\n\n  dispatch(updateFacetAutoSelection({allow: true}));\n  dispatch(\n    updateQuery({q: payload.q, enableQuerySyntax: payload.enableQuerySyntax})\n  );\n  dispatch(updatePage(1));\n});\n\nexport interface TransitiveSearchAction {\n  legacy: LegacySearchAction;\n  next?: SearchAction;\n}\n\nexport const executeSearch = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  TransitiveSearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>(\n  'search/executeSearch',\n  async (searchAction: TransitiveSearchAction, config) => {\n    const state = config.getState();\n    if (state.configuration.analytics.analyticsMode === 'legacy') {\n      return legacyExecuteSearch(state, config, searchAction.legacy);\n    }\n    addEntryInActionsHistory(state);\n    const analyticsAction = searchAction.next\n      ? buildSearchReduxAction(searchAction.next)\n      : undefined;\n\n    const request = await buildSearchRequest(\n      state,\n      config.extra.navigatorContext,\n      analyticsAction\n    );\n\n    const processor = new AsyncSearchThunkProcessor<\n      ReturnType<typeof config.rejectWithValue>\n    >({...config, analyticsAction: analyticsAction ?? {}});\n\n    const fetched = await processor.fetchFromAPI(request, {\n      origin: 'mainSearch',\n    });\n\n    return await processor.process(fetched);\n  }\n);\n\nexport const fetchPage = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  TransitiveSearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchPage', async (searchAction: TransitiveSearchAction, config) => {\n  const state = config.getState();\n  addEntryInActionsHistory(state);\n\n  if (\n    state.configuration.analytics.analyticsMode === 'legacy' ||\n    !searchAction.next\n  ) {\n    return legacyFetchPage(state, config, searchAction.legacy);\n  }\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction: searchAction.next,\n  });\n\n  const request = await buildSearchRequest(\n    state,\n    config.extra.navigatorContext,\n    searchAction.next\n  );\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n});\n\nexport const fetchMoreResults = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  void,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchMoreResults', async (_, config) => {\n  const state = config.getState();\n  if (state.configuration.analytics.analyticsMode === 'legacy') {\n    return legacyFetchMoreResults(config, state);\n  }\n\n  const analyticsAction = makeBasicNewSearchAnalyticsAction(\n    SearchPageEvents.browseResults,\n    config.getState\n  );\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction,\n  });\n\n  const request = await buildFetchMoreRequest(\n    state,\n    config.extra.navigatorContext,\n    analyticsAction\n  );\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n});\n\nexport const fetchFacetValues = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  TransitiveSearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>(\n  'search/fetchFacetValues',\n  async (searchAction: TransitiveSearchAction, config) => {\n    const state = config.getState();\n    if (state.configuration.analytics.analyticsMode === 'legacy') {\n      return legacyExecuteSearch(state, config, searchAction.legacy);\n    }\n\n    const processor = new AsyncSearchThunkProcessor<\n      ReturnType<typeof config.rejectWithValue>\n    >({...config, analyticsAction: {}});\n\n    const request = await buildFetchFacetValuesRequest(\n      state,\n      config.extra.navigatorContext\n    );\n    const fetched = await processor.fetchFromAPI(request, {\n      origin: 'facetValues',\n    });\n\n    return await processor.process(fetched);\n  }\n);\n\nexport const fetchInstantResults = createAsyncThunk<\n  FetchInstantResultsThunkReturn,\n  FetchInstantResultsActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch & InstantResultSection>\n>(\n  'search/fetchInstantResults',\n  async (payload: FetchInstantResultsActionCreatorPayload, config) => {\n    const state = config.getState();\n    if (state.configuration.analytics.analyticsMode === 'legacy') {\n      return legacyFetchInstantResults(payload, config);\n    }\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      q: requiredNonEmptyString,\n      maxResultsPerQuery: new NumberValue({\n        required: true,\n        min: 1,\n      }),\n      cacheTimeout: new NumberValue(),\n    });\n    const {q, maxResultsPerQuery} = payload;\n\n    const analyticsAction = buildSearchReduxAction(searchboxAsYouType());\n\n    const request = await buildInstantResultSearchRequest(\n      state,\n      config.extra.navigatorContext,\n      q,\n      maxResultsPerQuery,\n      analyticsAction\n    );\n\n    const processor = new AsyncSearchThunkProcessor<\n      ReturnType<typeof config.rejectWithValue>\n    >({...config, analyticsAction}, (modification) => {\n      config.dispatch(\n        updateInstantResultsQuery({q: modification, id: payload.id})\n      );\n    });\n    const fetched = await processor.fetchFromAPI(request, {\n      origin: 'instantResults',\n      disableAbortWarning: true,\n    });\n\n    const processed = await processor.process(fetched);\n    if ('response' in processed) {\n      return {\n        results: processed.response.results,\n        searchUid: processed.response.searchUid,\n        totalCountFiltered: processed.response.totalCountFiltered,\n        duration: processed.duration,\n      };\n    }\n    return processed as ReturnType<typeof config.rejectWithValue>;\n  }\n);\n\nconst buildFetchMoreRequest = async (\n  state: StateNeededByExecuteSearch,\n  navigatorContext: NavigatorContext,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(\n    state,\n    navigatorContext,\n    eventDescription\n  );\n  mappedRequest.request = {\n    ...mappedRequest.request,\n    firstResult:\n      (state.pagination?.firstResult ?? 0) +\n      (state.search?.results.length ?? 0),\n  };\n  return mappedRequest;\n};\n\nexport const buildInstantResultSearchRequest = async (\n  state: StateNeededByExecuteSearch,\n  navigatorContext: NavigatorContext,\n  q: string,\n  numberOfResults: number,\n  eventDescription: EventDescription\n) => {\n  const sharedWithFoldingRequest = buildSearchAndFoldingLoadCollectionRequest(\n    state,\n    navigatorContext,\n    eventDescription\n  );\n\n  return mapSearchRequest({\n    ...sharedWithFoldingRequest,\n    ...(state.didYouMean && {\n      enableDidYouMean: state.didYouMean.enableDidYouMean,\n    }),\n    numberOfResults,\n    q,\n  });\n};\n\nconst buildFetchFacetValuesRequest = async (\n  state: StateNeededByExecuteSearch,\n  navigatorContext: NavigatorContext,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(\n    state,\n    navigatorContext,\n    eventDescription\n  );\n  // Specifying a numberOfResults of 0 will not log the query as a full fledged query in the API\n  // it will also alleviate the load on the index\n  mappedRequest.request.numberOfResults = 0;\n  return mappedRequest;\n};\n\nconst addEntryInActionsHistory = (state: StateNeededByExecuteSearch) => {\n  if (state.configuration.analytics.enabled) {\n    historyStore.addElement({\n      name: 'Query',\n      ...(state.query?.q && {\n        value: state.query.q,\n      }),\n      time: JSON.stringify(new Date()),\n    });\n  }\n};\n\nconst buildSearchReduxAction = (action: SearchAction) => ({\n  actionCause: action.actionCause,\n  type: action.actionCause,\n});\n", "import {\n  AnalyticsClientSendEventHook,\n  CoveoAnalyticsClient,\n  IRuntimeEnvironment,\n  history,\n} from 'coveo.analytics';\nimport {Logger} from 'pino';\nimport {clone} from '../../utils/utils.js';\nimport {PreprocessRequest} from '../preprocess-request.js';\n\nexport const getVisitorID = (options: {\n  runtimeEnvironment?: IRuntimeEnvironment;\n}) => new CoveoAnalyticsClient(options).getCurrentVisitorId();\n\nexport const historyStore = new history.HistoryStore();\n\nexport const wrapPreprocessRequest = (\n  logger: Logger,\n  preprocessRequest?: PreprocessRequest\n) => {\n  return typeof preprocessRequest === 'function'\n    ? (...args: Parameters<PreprocessRequest>) => {\n        const untaintedOutput = clone(args[0]);\n        try {\n          return preprocessRequest.apply(preprocessRequest, args);\n        } catch (e) {\n          logger.error(\n            e as Error,\n            'Error in analytics preprocessRequest. Returning original request.'\n          );\n          return untaintedOutput;\n        }\n      }\n    : undefined;\n};\n\nexport const wrapAnalyticsClientSendEventHook = (\n  logger: Logger,\n  hook: AnalyticsClientSendEventHook\n) => {\n  return (...args: Parameters<AnalyticsClientSendEventHook>) => {\n    const untaintedOutput = clone(args[1]);\n    try {\n      return hook.apply(hook, args);\n    } catch (e) {\n      logger.error(\n        e as Error,\n        'Error in analytics hook. Returning original request.'\n      );\n      return untaintedOutput;\n    }\n  };\n};\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nvar EventType;\n(function (EventType) {\n    EventType[\"search\"] = \"search\";\n    EventType[\"click\"] = \"click\";\n    EventType[\"custom\"] = \"custom\";\n    EventType[\"view\"] = \"view\";\n    EventType[\"collect\"] = \"collect\";\n})(EventType || (EventType = {}));\n\nfunction hasWindow() {\n    return typeof window !== 'undefined';\n}\nfunction hasNavigator() {\n    return typeof navigator !== 'undefined';\n}\nfunction hasDocument() {\n    return typeof document !== 'undefined';\n}\nfunction hasLocalStorage() {\n    try {\n        return typeof localStorage !== 'undefined';\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction hasSessionStorage() {\n    try {\n        return typeof sessionStorage !== 'undefined';\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction hasCookieStorage() {\n    return hasNavigator() && navigator.cookieEnabled;\n}\n\nconst eventTypesForDefaultValues = [EventType.click, EventType.custom, EventType.search, EventType.view];\nconst addDefaultValues = (eventType, payload) => {\n    return eventTypesForDefaultValues.indexOf(eventType) !== -1\n        ? Object.assign({ language: hasDocument() ? document.documentElement.lang : 'unknown', userAgent: hasNavigator() ? navigator.userAgent : 'unknown' }, payload) : payload;\n};\n\nclass Cookie {\n    static set(name, value, expire) {\n        var domain, expirationDate, domainParts, host;\n        if (expire) {\n            expirationDate = new Date();\n            expirationDate.setTime(expirationDate.getTime() + expire);\n        }\n        host = window.location.hostname;\n        if (host.indexOf('.') === -1) {\n            writeCookie(name, value, expirationDate);\n        }\n        else {\n            domainParts = host.split('.');\n            domain = domainParts[domainParts.length - 2] + '.' + domainParts[domainParts.length - 1];\n            writeCookie(name, value, expirationDate, domain);\n        }\n    }\n    static get(name) {\n        var cookiePrefix = name + '=';\n        var cookieArray = document.cookie.split(';');\n        for (var i = 0; i < cookieArray.length; i++) {\n            var cookie = cookieArray[i];\n            cookie = cookie.replace(/^\\s+/, '');\n            if (cookie.lastIndexOf(cookiePrefix, 0) === 0) {\n                return cookie.substring(cookiePrefix.length, cookie.length);\n            }\n        }\n        return null;\n    }\n    static erase(name) {\n        Cookie.set(name, '', -1);\n    }\n}\nfunction writeCookie(name, value, expirationDate, domain) {\n    document.cookie =\n        `${name}=${value}` +\n            (expirationDate ? `;expires=${expirationDate.toUTCString()}` : '') +\n            (domain ? `;domain=${domain}` : '') +\n            ';path=/;SameSite=Lax';\n}\n\nfunction getAvailableStorage() {\n    if (hasLocalStorage()) {\n        return localStorage;\n    }\n    if (hasCookieStorage()) {\n        return new CookieStorage();\n    }\n    if (hasSessionStorage()) {\n        return sessionStorage;\n    }\n    return new NullStorage();\n}\nclass CookieStorage {\n    getItem(key) {\n        return Cookie.get(`${CookieStorage.prefix}${key}`);\n    }\n    removeItem(key) {\n        Cookie.erase(`${CookieStorage.prefix}${key}`);\n    }\n    setItem(key, data, expire) {\n        Cookie.set(`${CookieStorage.prefix}${key}`, data, expire);\n    }\n}\nCookieStorage.prefix = 'coveo_';\nclass CookieAndLocalStorage {\n    constructor() {\n        this.cookieStorage = new CookieStorage();\n    }\n    getItem(key) {\n        return localStorage.getItem(key) || this.cookieStorage.getItem(key);\n    }\n    removeItem(key) {\n        this.cookieStorage.removeItem(key);\n        localStorage.removeItem(key);\n    }\n    setItem(key, data) {\n        localStorage.setItem(key, data);\n        this.cookieStorage.setItem(key, data, 31556926000);\n    }\n}\nclass NullStorage {\n    getItem(key) {\n        return null;\n    }\n    removeItem(key) {\n    }\n    setItem(key, data) {\n    }\n}\n\nconst STORE_KEY = '__coveo.analytics.history';\nconst MAX_NUMBER_OF_HISTORY_ELEMENTS = 20;\nconst MIN_THRESHOLD_FOR_DUPLICATE_VALUE = 1000 * 60;\nconst MAX_VALUE_SIZE = 75;\nclass HistoryStore {\n    constructor(store) {\n        this.store = store || getAvailableStorage();\n    }\n    addElement(elem) {\n        elem.internalTime = new Date().getTime();\n        elem = this.cropQueryElement(this.stripEmptyQuery(elem));\n        let currentHistory = this.getHistoryWithInternalTime();\n        if (currentHistory != null) {\n            if (this.isValidEntry(elem)) {\n                this.setHistory([elem].concat(currentHistory));\n            }\n        }\n        else {\n            this.setHistory([elem]);\n        }\n    }\n    addElementAsync(elem) {\n        return __awaiter(this, void 0, void 0, function* () {\n            elem.internalTime = new Date().getTime();\n            elem = this.cropQueryElement(this.stripEmptyQuery(elem));\n            let currentHistory = yield this.getHistoryWithInternalTimeAsync();\n            if (currentHistory != null) {\n                if (this.isValidEntry(elem)) {\n                    this.setHistory([elem].concat(currentHistory));\n                }\n            }\n            else {\n                this.setHistory([elem]);\n            }\n        });\n    }\n    getHistory() {\n        const history = this.getHistoryWithInternalTime();\n        return this.stripEmptyQueries(this.stripInternalTime(history));\n    }\n    getHistoryAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const history = yield this.getHistoryWithInternalTimeAsync();\n            return this.stripEmptyQueries(this.stripInternalTime(history));\n        });\n    }\n    getHistoryWithInternalTime() {\n        try {\n            const elements = this.store.getItem(STORE_KEY);\n            if (elements && typeof elements === 'string') {\n                return JSON.parse(elements);\n            }\n            else {\n                return [];\n            }\n        }\n        catch (e) {\n            return [];\n        }\n    }\n    getHistoryWithInternalTimeAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const elements = yield this.store.getItem(STORE_KEY);\n                if (elements) {\n                    return JSON.parse(elements);\n                }\n                else {\n                    return [];\n                }\n            }\n            catch (e) {\n                return [];\n            }\n        });\n    }\n    setHistory(history) {\n        try {\n            this.store.setItem(STORE_KEY, JSON.stringify(history.slice(0, MAX_NUMBER_OF_HISTORY_ELEMENTS)));\n        }\n        catch (e) {\n        }\n    }\n    clear() {\n        try {\n            this.store.removeItem(STORE_KEY);\n        }\n        catch (e) {\n        }\n    }\n    getMostRecentElement() {\n        let currentHistory = this.getHistoryWithInternalTime();\n        if (Array.isArray(currentHistory)) {\n            const sorted = currentHistory.sort((first, second) => {\n                return (second.internalTime || 0) - (first.internalTime || 0);\n            });\n            return sorted[0];\n        }\n        return null;\n    }\n    cropQueryElement(part) {\n        if (part.name && part.value && part.name.toLowerCase() === 'query') {\n            part.value = part.value.slice(0, MAX_VALUE_SIZE);\n        }\n        return part;\n    }\n    isValidEntry(elem) {\n        let lastEntry = this.getMostRecentElement();\n        if (lastEntry && lastEntry.value == elem.value) {\n            return (elem.internalTime || 0) - (lastEntry.internalTime || 0) > MIN_THRESHOLD_FOR_DUPLICATE_VALUE;\n        }\n        return true;\n    }\n    stripInternalTime(history) {\n        if (Array.isArray(history)) {\n            return history.map((part) => {\n                const { name, time, value } = part;\n                return { name, time, value };\n            });\n        }\n        return [];\n    }\n    stripEmptyQuery(part) {\n        const { name, time, value } = part;\n        if (name && typeof value === 'string' && name.toLowerCase() === 'query' && value.trim() === '') {\n            return { name, time };\n        }\n        return part;\n    }\n    stripEmptyQueries(history) {\n        return history.map((part) => this.stripEmptyQuery(part));\n    }\n}\n\nvar history = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    HistoryStore: HistoryStore,\n    MAX_NUMBER_OF_HISTORY_ELEMENTS: MAX_NUMBER_OF_HISTORY_ELEMENTS,\n    MAX_VALUE_SIZE: MAX_VALUE_SIZE,\n    MIN_THRESHOLD_FOR_DUPLICATE_VALUE: MIN_THRESHOLD_FOR_DUPLICATE_VALUE,\n    STORE_KEY: STORE_KEY,\n    default: HistoryStore\n});\n\nconst enhanceViewEvent = (eventType, payload) => __awaiter(void 0, void 0, void 0, function* () {\n    if (eventType === EventType.view) {\n        yield addPageViewToHistory(payload.contentIdValue);\n        return Object.assign({ location: window.location.toString(), referrer: document.referrer, title: document.title }, payload);\n    }\n    return payload;\n});\nconst addPageViewToHistory = (pageViewValue) => __awaiter(void 0, void 0, void 0, function* () {\n    const store = new HistoryStore();\n    const historyElement = {\n        name: 'PageView',\n        value: pageViewValue,\n        time: new Date().toISOString(),\n    };\n    yield store.addElementAsync(historyElement);\n});\n\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nconst URL$1 = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL$1;\n  return generateUUID;\n}\n\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native = {\n  randomUUID\n};\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nconst v5 = v35('v5', 0x50, sha1);\nvar uuidv5 = v5;\n\nconst libVersion = \"2.30.39\" ;\n\nconst getFormattedLocation = (location) => `${location.protocol}//${location.hostname}${location.pathname.indexOf('/') === 0 ? location.pathname : `/${location.pathname}`}${location.search}`;\n\nconst BasePluginEventTypes = {\n    pageview: 'pageview',\n    event: 'event',\n};\nclass Plugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        this.client = client;\n        this.uuidGenerator = uuidGenerator;\n    }\n}\nclass BasePlugin extends Plugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        super({ client, uuidGenerator });\n        this.actionData = {};\n        this.pageViewId = uuidGenerator();\n        this.nextPageViewId = this.pageViewId;\n        this.currentLocation = getFormattedLocation(window.location);\n        this.lastReferrer = hasDocument() ? document.referrer : '';\n        this.addHooks();\n    }\n    getApi(name) {\n        switch (name) {\n            case 'setAction':\n                return this.setAction;\n            default:\n                return null;\n        }\n    }\n    setAction(action, options) {\n        this.action = action;\n        this.actionData = options;\n    }\n    clearData() {\n        this.clearPluginData();\n        this.action = undefined;\n        this.actionData = {};\n    }\n    getLocationInformation(eventType, payload) {\n        return Object.assign({ hitType: eventType }, this.getNextValues(eventType, payload));\n    }\n    updateLocationInformation(eventType, payload) {\n        this.updateLocationForNextPageView(eventType, payload);\n    }\n    getDefaultContextInformation(eventType) {\n        const documentContext = {\n            title: hasDocument() ? document.title : '',\n            encoding: hasDocument() ? document.characterSet : 'UTF-8',\n        };\n        const screenContext = {\n            screenResolution: `${screen.width}x${screen.height}`,\n            screenColor: `${screen.colorDepth}-bit`,\n        };\n        const navigatorContext = {\n            language: navigator.language,\n            userAgent: navigator.userAgent,\n        };\n        const eventContext = {\n            time: Date.now(),\n            eventId: this.uuidGenerator(),\n        };\n        return Object.assign(Object.assign(Object.assign(Object.assign({}, eventContext), screenContext), navigatorContext), documentContext);\n    }\n    updateLocationForNextPageView(eventType, payload) {\n        const { pageViewId, referrer, location } = this.getNextValues(eventType, payload);\n        this.lastReferrer = referrer;\n        this.pageViewId = pageViewId;\n        this.currentLocation = location;\n        if (eventType === BasePluginEventTypes.pageview) {\n            this.nextPageViewId = this.uuidGenerator();\n            this.hasSentFirstPageView = true;\n        }\n    }\n    getNextValues(eventType, payload) {\n        return {\n            pageViewId: eventType === BasePluginEventTypes.pageview ? this.nextPageViewId : this.pageViewId,\n            referrer: eventType === BasePluginEventTypes.pageview && this.hasSentFirstPageView\n                ? this.currentLocation\n                : this.lastReferrer,\n            location: eventType === BasePluginEventTypes.pageview\n                ? this.getCurrentLocationFromPayload(payload)\n                : this.currentLocation,\n        };\n    }\n    getCurrentLocationFromPayload(payload) {\n        if (!!payload.page) {\n            const removeStartingSlash = (page) => page.replace(/^\\/?(.*)$/, '/$1');\n            const extractHostnamePart = (location) => location.split('/').slice(0, 3).join('/');\n            return `${extractHostnamePart(this.currentLocation)}${removeStartingSlash(payload.page)}`;\n        }\n        else {\n            return getFormattedLocation(window.location);\n        }\n    }\n}\n\nclass CoveoLinkParam {\n    constructor(clientId, timestamp) {\n        if (!validate(clientId))\n            throw Error('Not a valid uuid');\n        this.clientId = clientId;\n        this.creationDate = Math.floor(timestamp / 1000);\n    }\n    toString() {\n        return this.clientId.replace(/-/g, '') + '.' + this.creationDate.toString();\n    }\n    get expired() {\n        const age = Math.floor(Date.now() / 1000) - this.creationDate;\n        return age < 0 || age > CoveoLinkParam.expirationTime;\n    }\n    validate(referrerString, referrerList) {\n        return !this.expired && this.matchReferrer(referrerString, referrerList);\n    }\n    matchReferrer(referrerString, referrerList) {\n        try {\n            const url = new URL(referrerString);\n            return referrerList.some((value) => {\n                const hostRegExp = new RegExp(value.replace(/\\\\/g, '\\\\\\\\').replace(/\\./g, '\\\\.').replace(/\\*/g, '.*') + '$');\n                return hostRegExp.test(url.host);\n            });\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    static fromString(input) {\n        const parts = input.split('.');\n        if (parts.length !== 2) {\n            return null;\n        }\n        const [clientIdPart, creationDate] = parts;\n        if (clientIdPart.length !== 32 || isNaN(parseInt(creationDate))) {\n            return null;\n        }\n        const clientId = clientIdPart.substring(0, 8) +\n            '-' +\n            clientIdPart.substring(8, 12) +\n            '-' +\n            clientIdPart.substring(12, 16) +\n            '-' +\n            clientIdPart.substring(16, 20) +\n            '-' +\n            clientIdPart.substring(20, 32);\n        if (validate(clientId)) {\n            return new CoveoLinkParam(clientId, Number.parseInt(creationDate) * 1000);\n        }\n        else {\n            return null;\n        }\n    }\n}\nCoveoLinkParam.cvo_cid = 'cvo_cid';\nCoveoLinkParam.expirationTime = 120;\nclass LinkPlugin extends Plugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        super({ client, uuidGenerator });\n    }\n    getApi(name) {\n        switch (name) {\n            case 'decorate':\n                return this.decorate;\n            case 'acceptFrom':\n                return this.acceptFrom;\n            default:\n                return null;\n        }\n    }\n    decorate(urlString) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client.getCurrentVisitorId) {\n                throw new Error('Could not retrieve current clientId');\n            }\n            try {\n                const url = new URL(urlString);\n                const clientId = yield this.client.getCurrentVisitorId();\n                url.searchParams.set(CoveoLinkParam.cvo_cid, new CoveoLinkParam(clientId, Date.now()).toString());\n                return url.toString();\n            }\n            catch (error) {\n                throw new Error('Invalid URL provided');\n            }\n        });\n    }\n    acceptFrom(acceptedReferrers) {\n        this.client.setAcceptedLinkReferrers(acceptedReferrers);\n    }\n}\nLinkPlugin.Id = 'link';\n\nconst keysOf = Object.keys;\nfunction isObject(o) {\n    return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\nconst UTF8_HIGH_BIT = 128;\nconst UTF8_HEADER_2 = 192;\nconst UTF8_HEADER_3 = 224;\nconst UTF8_HEADER_4 = 240;\nfunction utf8ByteCountFromFirstByte(firstByte) {\n    if ((firstByte & 248) === UTF8_HEADER_4) {\n        return 4;\n    }\n    if ((firstByte & UTF8_HEADER_4) === UTF8_HEADER_3) {\n        return 3;\n    }\n    if ((firstByte & UTF8_HEADER_3) === UTF8_HEADER_2) {\n        return 2;\n    }\n    return 1;\n}\nfunction truncateUrl(input, limit) {\n    if (limit < 0 || input.length <= limit) {\n        return input;\n    }\n    let end = input.indexOf('%', limit - 2);\n    if (end < 0 || end > limit) {\n        end = limit;\n    }\n    else {\n        limit = end;\n    }\n    while (end > 2 && input.charAt(end - 3) == '%') {\n        const peekByte = Number.parseInt(input.substring(end - 2, end), 16);\n        if ((peekByte & UTF8_HIGH_BIT) != UTF8_HIGH_BIT) {\n            break;\n        }\n        end -= 3;\n        if ((peekByte & UTF8_HEADER_2) != UTF8_HIGH_BIT) {\n            if (limit - end >= utf8ByteCountFromFirstByte(peekByte) * 3) {\n                end = limit;\n            }\n            break;\n        }\n    }\n    return input.substring(0, end);\n}\n\nconst ticketKeysMapping = {\n    id: 'svc_ticket_id',\n    subject: 'svc_ticket_subject',\n    description: 'svc_ticket_description',\n    category: 'svc_ticket_category',\n    productId: 'svc_ticket_product_id',\n    custom: 'svc_ticket_custom',\n};\nconst ticketKeysMappingValues = keysOf(ticketKeysMapping).map((key) => ticketKeysMapping[key]);\nconst ticketSubKeysMatchGroup = [...ticketKeysMappingValues].join('|');\nconst ticketKeyRegex = new RegExp(`^(${ticketSubKeysMatchGroup}$)`);\nconst serviceActionsKeysMapping = {\n    svcAction: 'svc_action',\n    svcActionData: 'svc_action_data',\n};\nconst convertTicketToMeasurementProtocol = (ticket) => {\n    return keysOf(ticket)\n        .filter((key) => ticket[key] !== undefined)\n        .reduce((mappedTicket, key) => {\n        const newKey = ticketKeysMapping[key] || key;\n        return Object.assign(Object.assign({}, mappedTicket), { [newKey]: ticket[key] });\n    }, {});\n};\nconst isTicketKey = (key) => ticketKeyRegex.test(key);\nconst isServiceKey = [isTicketKey];\n\nconst productKeysMapping = {\n    id: 'id',\n    name: 'nm',\n    brand: 'br',\n    category: 'ca',\n    variant: 'va',\n    price: 'pr',\n    quantity: 'qt',\n    coupon: 'cc',\n    position: 'ps',\n    group: 'group',\n};\nconst impressionKeysMapping = {\n    id: 'id',\n    name: 'nm',\n    brand: 'br',\n    category: 'ca',\n    variant: 'va',\n    position: 'ps',\n    price: 'pr',\n    group: 'group',\n};\nconst productActionsKeysMapping = {\n    action: 'pa',\n    list: 'pal',\n    listSource: 'pls',\n};\nconst transactionActionsKeysMapping = {\n    id: 'ti',\n    revenue: 'tr',\n    tax: 'tt',\n    shipping: 'ts',\n    coupon: 'tcc',\n    affiliation: 'ta',\n    step: 'cos',\n    option: 'col',\n};\nconst coveoCommerceExtensionKeys = [\n    'loyaltyCardId',\n    'loyaltyTier',\n    'thirdPartyPersona',\n    'companyName',\n    'favoriteStore',\n    'storeName',\n    'userIndustry',\n    'userRole',\n    'userDepartment',\n    'businessUnit',\n];\nconst quoteActionsKeysMapping = {\n    id: 'quoteId',\n    affiliation: 'quoteAffiliation',\n};\nconst reviewActionsKeysMapping = {\n    id: 'reviewId',\n    rating: 'reviewRating',\n    comment: 'reviewComment',\n};\nconst commerceActionKeysMappingPerAction = {\n    add: productActionsKeysMapping,\n    bookmark_add: productActionsKeysMapping,\n    bookmark_remove: productActionsKeysMapping,\n    click: productActionsKeysMapping,\n    checkout: productActionsKeysMapping,\n    checkout_option: productActionsKeysMapping,\n    detail: productActionsKeysMapping,\n    impression: productActionsKeysMapping,\n    remove: productActionsKeysMapping,\n    refund: Object.assign(Object.assign({}, productActionsKeysMapping), transactionActionsKeysMapping),\n    purchase: Object.assign(Object.assign({}, productActionsKeysMapping), transactionActionsKeysMapping),\n    quickview: productActionsKeysMapping,\n    quote: Object.assign(Object.assign({}, productActionsKeysMapping), quoteActionsKeysMapping),\n    review: Object.assign(Object.assign({}, productActionsKeysMapping), reviewActionsKeysMapping),\n};\nconst productKeysMappingValues = keysOf(productKeysMapping).map((key) => productKeysMapping[key]);\nconst impressionKeysMappingValues = keysOf(impressionKeysMapping).map((key) => impressionKeysMapping[key]);\nconst productActionsKeysMappingValues = keysOf(productActionsKeysMapping).map((key) => productActionsKeysMapping[key]);\nconst transactionActionsKeysMappingValues = keysOf(transactionActionsKeysMapping).map((key) => transactionActionsKeysMapping[key]);\nconst reviewKeysMappingValues = keysOf(reviewActionsKeysMapping).map((key) => reviewActionsKeysMapping[key]);\nconst quoteKeysMappingValues = keysOf(quoteActionsKeysMapping).map((key) => quoteActionsKeysMapping[key]);\nconst productSubKeysMatchGroup = [...productKeysMappingValues, 'custom'].join('|');\nconst impressionSubKeysMatchGroup = [...impressionKeysMappingValues, 'custom'].join('|');\nconst productPrefixMatchGroup = '(pr[0-9]+)';\nconst impressionPrefixMatchGroup = '(il[0-9]+pi[0-9]+)';\nconst productKeyRegex = new RegExp(`^${productPrefixMatchGroup}(${productSubKeysMatchGroup})$`);\nconst impressionKeyRegex = new RegExp(`^(${impressionPrefixMatchGroup}(${impressionSubKeysMatchGroup}))|(il[0-9]+nm)$`);\nconst productActionsKeyRegex = new RegExp(`^(${productActionsKeysMappingValues.join('|')})$`);\nconst transactionActionsKeyRegex = new RegExp(`^(${transactionActionsKeysMappingValues.join('|')})$`);\nconst customProductKeyRegex = new RegExp(`^${productPrefixMatchGroup}custom$`);\nconst customImpressionKeyRegex = new RegExp(`^${impressionPrefixMatchGroup}custom$`);\nconst coveoCommerceExtensionKeysRegex = new RegExp(`^(${[...coveoCommerceExtensionKeys, ...reviewKeysMappingValues, ...quoteKeysMappingValues].join('|')})$`);\nconst isProductKey = (key) => productKeyRegex.test(key);\nconst isImpressionKey = (key) => impressionKeyRegex.test(key);\nconst isProductActionsKey = (key) => productActionsKeyRegex.test(key);\nconst isTransactionActionsKeyRegex = (key) => transactionActionsKeyRegex.test(key);\nconst isCoveoCommerceExtensionKey = (key) => coveoCommerceExtensionKeysRegex.test(key);\nconst isCommerceKey = [\n    isImpressionKey,\n    isProductKey,\n    isProductActionsKey,\n    isTransactionActionsKeyRegex,\n    isCoveoCommerceExtensionKey,\n];\nconst isCustomCommerceKey = [customProductKeyRegex, customImpressionKeyRegex];\n\nconst globalParamKeysMapping = {\n    anonymizeIp: 'aip',\n};\nconst eventKeysMapping = {\n    eventCategory: 'ec',\n    eventAction: 'ea',\n    eventLabel: 'el',\n    eventValue: 'ev',\n    page: 'dp',\n    visitorId: 'cid',\n    clientId: 'cid',\n    userId: 'uid',\n    currencyCode: 'cu',\n};\nconst contextInformationMapping = {\n    hitType: 't',\n    pageViewId: 'pid',\n    encoding: 'de',\n    location: 'dl',\n    referrer: 'dr',\n    screenColor: 'sd',\n    screenResolution: 'sr',\n    title: 'dt',\n    userAgent: 'ua',\n    language: 'ul',\n    eventId: 'z',\n    time: 'tm',\n};\nconst coveoExtensionsKeys = [\n    'contentId',\n    'contentIdKey',\n    'contentType',\n    'searchHub',\n    'tab',\n    'searchUid',\n    'permanentId',\n    'contentLocale',\n    'trackingId',\n];\nconst baseMeasurementProtocolKeysMapping = Object.assign(Object.assign(Object.assign(Object.assign({}, globalParamKeysMapping), eventKeysMapping), contextInformationMapping), coveoExtensionsKeys.reduce((all, key) => (Object.assign(Object.assign({}, all), { [key]: key })), {}));\n\nconst measurementProtocolKeysMapping = Object.assign(Object.assign({}, baseMeasurementProtocolKeysMapping), serviceActionsKeysMapping);\nconst convertKeysToMeasurementProtocol = (params) => {\n    const keysMappingForAction = (!!params.action && commerceActionKeysMappingPerAction[params.action]) || {};\n    return keysOf(params).reduce((mappedKeys, key) => {\n        const newKey = keysMappingForAction[key] || measurementProtocolKeysMapping[key] || key;\n        return Object.assign(Object.assign({}, mappedKeys), { [newKey]: params[key] });\n    }, {});\n};\nconst measurementProtocolKeysMappingValues = keysOf(measurementProtocolKeysMapping).map((key) => measurementProtocolKeysMapping[key]);\nconst isKnownMeasurementProtocolKey = (key) => measurementProtocolKeysMappingValues.indexOf(key) !== -1;\nconst isCustomKey = (key) => key === 'custom';\nconst isMeasurementProtocolKey = (key) => {\n    return [...isCommerceKey, ...isServiceKey, isKnownMeasurementProtocolKey, isCustomKey].some((test) => test(key));\n};\nconst convertCustomMeasurementProtocolKeys = (data) => {\n    return keysOf(data).reduce((all, current) => {\n        const match = getFirstCustomMeasurementProtocolKeyMatch(current);\n        if (match) {\n            return Object.assign(Object.assign({}, all), convertCustomObject(match, data[current]));\n        }\n        else {\n            return Object.assign(Object.assign({}, all), { [current]: data[current] });\n        }\n    }, {});\n};\nconst getFirstCustomMeasurementProtocolKeyMatch = (key) => {\n    let matchedKey = undefined;\n    [...isCustomCommerceKey].every((regex) => {\n        var _a;\n        matchedKey = (_a = regex.exec(key)) === null || _a === void 0 ? void 0 : _a[1];\n        return !Boolean(matchedKey);\n    });\n    return matchedKey;\n};\nconst convertCustomObject = (prefix, customData) => {\n    return keysOf(customData).reduce((allCustom, currentCustomKey) => (Object.assign(Object.assign({}, allCustom), { [`${prefix}${currentCustomKey}`]: customData[currentCustomKey] })), {});\n};\n\nclass AnalyticsBeaconClient {\n    constructor(opts) {\n        this.opts = opts;\n    }\n    sendEvent(eventType, originalPayload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable()) {\n                throw new Error(`navigator.sendBeacon is not supported in this browser. Consider adding a polyfill like \"sendbeacon-polyfill\".`);\n            }\n            const { baseUrl, preprocessRequest } = this.opts;\n            const paramsFragments = yield this.getQueryParamsForEventType(eventType);\n            const { url, payload } = yield this.preProcessRequestAsPotentialJSONString(`${baseUrl}/analytics/${eventType}?${paramsFragments}`, originalPayload, preprocessRequest);\n            const parsedRequestData = this.encodeForEventType(eventType, payload);\n            const body = new Blob([parsedRequestData], {\n                type: 'application/x-www-form-urlencoded',\n            });\n            navigator.sendBeacon(url, body);\n            return;\n        });\n    }\n    isAvailable() {\n        return 'sendBeacon' in navigator;\n    }\n    deleteHttpCookieVisitorId() {\n        return Promise.resolve();\n    }\n    preProcessRequestAsPotentialJSONString(originalURL, originalPayload, preprocessRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let returnedUrl = originalURL;\n            let returnedPayload = originalPayload;\n            if (preprocessRequest) {\n                const processedRequest = yield preprocessRequest({ url: originalURL, body: JSON.stringify(originalPayload) }, 'analyticsBeacon');\n                const { url: processedURL, body: processedBody } = processedRequest;\n                returnedUrl = processedURL || originalURL;\n                try {\n                    returnedPayload = JSON.parse(processedBody);\n                }\n                catch (e) {\n                    console.error('Unable to process the request body as a JSON string', e);\n                }\n            }\n            return {\n                payload: returnedPayload,\n                url: returnedUrl,\n            };\n        });\n    }\n    encodeForEventType(eventType, payload) {\n        return this.isEventTypeLegacy(eventType)\n            ? this.encodeEventToJson(eventType, payload)\n            : this.encodeEventToJson(eventType, payload, this.opts.token);\n    }\n    getQueryParamsForEventType(eventType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { token, visitorIdProvider } = this.opts;\n            const visitorId = yield visitorIdProvider.getCurrentVisitorId();\n            return [\n                token && this.isEventTypeLegacy(eventType) ? `access_token=${token}` : '',\n                visitorId ? `visitorId=${visitorId}` : '',\n                'discardVisitInfo=true',\n            ]\n                .filter((p) => !!p)\n                .join('&');\n        });\n    }\n    isEventTypeLegacy(eventType) {\n        return [EventType.click, EventType.custom, EventType.search, EventType.view].indexOf(eventType) !== -1;\n    }\n    encodeEventToJson(eventType, payload, access_token) {\n        let encoded = `${eventType}Event=${encodeURIComponent(JSON.stringify(payload))}`;\n        if (access_token) {\n            encoded = `access_token=${encodeURIComponent(access_token)}&${encoded}`;\n        }\n        return encoded;\n    }\n}\n\nclass NoopAnalyticsClient {\n    sendEvent(_, __) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n    deleteHttpCookieVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n}\n\nclass AnalyticsFetchClient {\n    constructor(opts) {\n        this.opts = opts;\n    }\n    sendEvent(eventType, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { baseUrl, visitorIdProvider, preprocessRequest } = this.opts;\n            const visitorIdParam = this.shouldAppendVisitorId(eventType) ? yield this.getVisitorIdParam() : '';\n            const defaultOptions = {\n                url: `${baseUrl}/analytics/${eventType}${visitorIdParam}`,\n                credentials: 'include',\n                mode: 'cors',\n                headers: this.getHeaders(),\n                method: 'POST',\n                body: JSON.stringify(payload),\n            };\n            const _a = Object.assign(Object.assign({}, defaultOptions), (preprocessRequest ? yield preprocessRequest(defaultOptions, 'analyticsFetch') : {})), { url } = _a, fetchData = __rest(_a, [\"url\"]);\n            let response;\n            try {\n                response = yield fetch(url, fetchData);\n            }\n            catch (error) {\n                console.error('An error has occured when sending the event.', error);\n                return;\n            }\n            if (response.ok) {\n                const visit = (yield response.json());\n                if (visit.visitorId) {\n                    visitorIdProvider.setCurrentVisitorId(visit.visitorId);\n                }\n                return visit;\n            }\n            else {\n                try {\n                    response.json();\n                }\n                catch (_b) {\n                }\n                console.error(`An error has occured when sending the \"${eventType}\" event.`, response, payload);\n                throw new Error(`An error has occurred when sending the \"${eventType}\" event. Check the console logs for more details.`);\n            }\n        });\n    }\n    deleteHttpCookieVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { baseUrl } = this.opts;\n            const url = `${baseUrl}/analytics/visit`;\n            yield fetch(url, { headers: this.getHeaders(), method: 'DELETE' });\n        });\n    }\n    shouldAppendVisitorId(eventType) {\n        return [EventType.click, EventType.custom, EventType.search, EventType.view].indexOf(eventType) !== -1;\n    }\n    getVisitorIdParam() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { visitorIdProvider } = this.opts;\n            const visitorId = yield visitorIdProvider.getCurrentVisitorId();\n            return visitorId ? `?visitor=${visitorId}` : '';\n        });\n    }\n    getHeaders() {\n        const { token } = this.opts;\n        return Object.assign(Object.assign({}, (token ? { Authorization: `Bearer ${token}` } : {})), { 'Content-Type': `application/json` });\n    }\n}\n\nclass BrowserRuntime {\n    constructor(clientOptions, getUnprocessedRequests) {\n        if (hasLocalStorage() && hasCookieStorage()) {\n            this.storage = new CookieAndLocalStorage();\n        }\n        else if (hasLocalStorage()) {\n            this.storage = localStorage;\n        }\n        else {\n            console.warn('BrowserRuntime detected no valid storage available.', this);\n            this.storage = new NullStorage();\n        }\n        this.client = new AnalyticsFetchClient(clientOptions);\n        this.beaconClient = new AnalyticsBeaconClient(clientOptions);\n        window.addEventListener('beforeunload', () => {\n            const requests = getUnprocessedRequests();\n            for (let { eventType, payload } of requests) {\n                this.beaconClient.sendEvent(eventType, payload);\n            }\n        });\n    }\n    getClientDependingOnEventType(eventType) {\n        return eventType === 'click' && this.beaconClient.isAvailable() ? this.beaconClient : this.client;\n    }\n}\nclass NodeJSRuntime {\n    constructor(clientOptions, storage) {\n        this.storage = storage || new NullStorage();\n        this.client = new AnalyticsFetchClient(clientOptions);\n    }\n    getClientDependingOnEventType(eventType) {\n        return this.client;\n    }\n}\nclass NoopRuntime {\n    constructor() {\n        this.storage = new NullStorage();\n        this.client = new NoopAnalyticsClient();\n    }\n    getClientDependingOnEventType(eventType) {\n        return this.client;\n    }\n}\n\nconst API_KEY_PREFIX = 'xx';\nconst isApiKey = (token) => (token === null || token === void 0 ? void 0 : token.startsWith(API_KEY_PREFIX)) || false;\n\nconst ReactNativeRuntimeWarning = `\n        We've detected you're using React Native but have not provided the corresponding runtime, \n        for an optimal experience please use the \"coveo.analytics/react-native\" subpackage.\n        Follow the Readme on how to set it up: https://github.com/coveo/coveo.analytics.js#using-react-native\n    `;\nfunction isReactNative() {\n    return typeof navigator != 'undefined' && navigator.product == 'ReactNative';\n}\n\nconst doNotTrackValues = ['1', 1, 'yes', true];\nfunction doNotTrack() {\n    return (hasNavigator() &&\n        [\n            navigator.globalPrivacyControl,\n            navigator.doNotTrack,\n            navigator.msDoNotTrack,\n            window.doNotTrack,\n        ].some((value) => doNotTrackValues.indexOf(value) !== -1));\n}\n\nconst Version = 'v15';\nconst Endpoints = {\n    default: 'https://analytics.cloud.coveo.com/rest/ua',\n    production: 'https://analytics.cloud.coveo.com/rest/ua',\n    hipaa: 'https://analyticshipaa.cloud.coveo.com/rest/ua',\n};\nfunction buildBaseUrl(endpoint = Endpoints.default, apiVersion = Version, isCustomEndpoint = false) {\n    endpoint = endpoint.replace(/\\/$/, '');\n    if (isCustomEndpoint) {\n        return `${endpoint}/${apiVersion}`;\n    }\n    const hasUARestEndpoint = endpoint.endsWith('/rest') || endpoint.endsWith('/rest/ua');\n    return `${endpoint}${hasUARestEndpoint ? '' : '/rest'}/${apiVersion}`;\n}\nconst COVEO_NAMESPACE = '38824e1f-37f5-42d3-8372-a4b8fa9df946';\nclass CoveoAnalyticsClient {\n    get defaultOptions() {\n        return {\n            endpoint: Endpoints.default,\n            isCustomEndpoint: false,\n            token: '',\n            version: Version,\n            beforeSendHooks: [],\n            afterSendHooks: [],\n        };\n    }\n    get version() {\n        return libVersion;\n    }\n    constructor(opts) {\n        this.acceptedLinkReferrers = [];\n        if (!opts) {\n            throw new Error('You have to pass options to this constructor');\n        }\n        this.options = Object.assign(Object.assign({}, this.defaultOptions), opts);\n        this.visitorId = '';\n        this.bufferedRequests = [];\n        this.beforeSendHooks = [enhanceViewEvent, addDefaultValues].concat(this.options.beforeSendHooks);\n        this.afterSendHooks = this.options.afterSendHooks;\n        this.eventTypeMapping = {};\n        const clientsOptions = {\n            baseUrl: this.baseUrl,\n            token: this.options.token,\n            visitorIdProvider: this,\n            preprocessRequest: this.options.preprocessRequest,\n        };\n        if (doNotTrack()) {\n            this.runtime = new NoopRuntime();\n        }\n        else {\n            this.runtime = this.options.runtimeEnvironment || this.initRuntime(clientsOptions);\n        }\n        this.addEventTypeMapping(EventType.view, { newEventType: EventType.view, addClientIdParameter: true });\n        this.addEventTypeMapping(EventType.click, { newEventType: EventType.click, addClientIdParameter: true });\n        this.addEventTypeMapping(EventType.custom, { newEventType: EventType.custom, addClientIdParameter: true });\n        this.addEventTypeMapping(EventType.search, { newEventType: EventType.search, addClientIdParameter: true });\n    }\n    initRuntime(clientsOptions) {\n        if (hasWindow() && hasDocument()) {\n            return new BrowserRuntime(clientsOptions, () => {\n                const copy = [...this.bufferedRequests];\n                this.bufferedRequests = [];\n                return copy;\n            });\n        }\n        else if (isReactNative()) {\n            console.warn(ReactNativeRuntimeWarning);\n        }\n        return new NodeJSRuntime(clientsOptions);\n    }\n    get storage() {\n        return this.runtime.storage;\n    }\n    determineVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return ((hasWindow() && this.extractClientIdFromLink(window.location.href)) ||\n                    (yield this.storage.getItem('visitorId')) ||\n                    v4());\n            }\n            catch (err) {\n                console.log('Could not get visitor ID from the current runtime environment storage. Using a random ID instead.', err);\n                return v4();\n            }\n        });\n    }\n    getCurrentVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.visitorId) {\n                const id = yield this.determineVisitorId();\n                yield this.setCurrentVisitorId(id);\n            }\n            return this.visitorId;\n        });\n    }\n    setCurrentVisitorId(visitorId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.visitorId = visitorId;\n            yield this.storage.setItem('visitorId', visitorId);\n        });\n    }\n    setClientId(value, namespace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (validate(value)) {\n                this.setCurrentVisitorId(value.toLowerCase());\n            }\n            else {\n                if (!namespace) {\n                    throw Error('Cannot generate uuid client id without a specific namespace string.');\n                }\n                this.setCurrentVisitorId(uuidv5(value, uuidv5(namespace, COVEO_NAMESPACE)));\n            }\n        });\n    }\n    getParameters(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.resolveParameters(eventType, ...payload);\n        });\n    }\n    getPayload(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parametersToSend = yield this.resolveParameters(eventType, ...payload);\n            return yield this.resolvePayloadForParameters(eventType, parametersToSend);\n        });\n    }\n    get currentVisitorId() {\n        const visitorId = this.visitorId || this.storage.getItem('visitorId');\n        if (typeof visitorId !== 'string') {\n            this.setCurrentVisitorId(v4());\n        }\n        return this.visitorId;\n    }\n    set currentVisitorId(visitorId) {\n        this.visitorId = visitorId;\n        this.storage.setItem('visitorId', visitorId);\n    }\n    extractClientIdFromLink(urlString) {\n        if (doNotTrack()) {\n            return null;\n        }\n        try {\n            const linkParam = new URL(urlString).searchParams.get(CoveoLinkParam.cvo_cid);\n            if (linkParam == null) {\n                return null;\n            }\n            const linker = CoveoLinkParam.fromString(linkParam);\n            if (!linker || !hasDocument() || !linker.validate(document.referrer, this.acceptedLinkReferrers)) {\n                return null;\n            }\n            return linker.clientId;\n        }\n        catch (error) {\n        }\n        return null;\n    }\n    resolveParameters(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { variableLengthArgumentsNames = [], addVisitorIdParameter = false, usesMeasurementProtocol = false, addClientIdParameter = false, } = this.eventTypeMapping[eventType] || {};\n            const processVariableArgumentNamesStep = (currentPayload) => variableLengthArgumentsNames.length > 0\n                ? this.parseVariableArgumentsPayload(variableLengthArgumentsNames, currentPayload)\n                : currentPayload[0];\n            const addVisitorIdStep = (currentPayload) => __awaiter(this, void 0, void 0, function* () {\n                return (Object.assign(Object.assign({}, currentPayload), { visitorId: addVisitorIdParameter ? yield this.getCurrentVisitorId() : '' }));\n            });\n            const addClientIdStep = (currentPayload) => __awaiter(this, void 0, void 0, function* () {\n                if (addClientIdParameter) {\n                    return Object.assign(Object.assign({}, currentPayload), { clientId: yield this.getCurrentVisitorId() });\n                }\n                return currentPayload;\n            });\n            const setAnonymousUserStep = (currentPayload) => usesMeasurementProtocol ? this.ensureAnonymousUserWhenUsingApiKey(currentPayload) : currentPayload;\n            const processBeforeSendHooksStep = (currentPayload) => this.beforeSendHooks.reduce((promisePayload, current) => __awaiter(this, void 0, void 0, function* () {\n                const payload = yield promisePayload;\n                return yield current(eventType, payload);\n            }), currentPayload);\n            const parametersToSend = yield [\n                processVariableArgumentNamesStep,\n                addVisitorIdStep,\n                addClientIdStep,\n                setAnonymousUserStep,\n                processBeforeSendHooksStep,\n            ].reduce((payloadPromise, step) => __awaiter(this, void 0, void 0, function* () {\n                const payload = yield payloadPromise;\n                return yield step(payload);\n            }), Promise.resolve(payload));\n            return parametersToSend;\n        });\n    }\n    resolvePayloadForParameters(eventType, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { usesMeasurementProtocol = false } = this.eventTypeMapping[eventType] || {};\n            const addTrackingIdStep = (currentPayload) => this.setTrackingIdIfTrackingIdNotPresent(currentPayload);\n            const cleanPayloadStep = (currentPayload) => this.removeEmptyPayloadValues(currentPayload, eventType);\n            const validateParams = (currentPayload) => this.validateParams(currentPayload, eventType);\n            const processMeasurementProtocolConversionStep = (currentPayload) => usesMeasurementProtocol ? convertKeysToMeasurementProtocol(currentPayload) : currentPayload;\n            const removeUnknownParameters = (currentPayload) => usesMeasurementProtocol ? this.removeUnknownParameters(currentPayload) : currentPayload;\n            const processCustomParameters = (currentPayload) => usesMeasurementProtocol\n                ? this.processCustomParameters(currentPayload)\n                : this.mapCustomParametersToCustomData(currentPayload);\n            const payloadToSend = yield [\n                addTrackingIdStep,\n                cleanPayloadStep,\n                validateParams,\n                processMeasurementProtocolConversionStep,\n                removeUnknownParameters,\n                processCustomParameters,\n            ].reduce((payloadPromise, step) => __awaiter(this, void 0, void 0, function* () {\n                const payload = yield payloadPromise;\n                return yield step(payload);\n            }), Promise.resolve(parameters));\n            return payloadToSend;\n        });\n    }\n    makeEvent(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { newEventType: eventTypeToSend = eventType } = this.eventTypeMapping[eventType] || {};\n            const parametersToSend = yield this.resolveParameters(eventType, ...payload);\n            const payloadToSend = yield this.resolvePayloadForParameters(eventType, parametersToSend);\n            return {\n                eventType: eventTypeToSend,\n                payload: payloadToSend,\n                log: (remainingPayload) => __awaiter(this, void 0, void 0, function* () {\n                    this.bufferedRequests.push({\n                        eventType: eventTypeToSend,\n                        payload: Object.assign(Object.assign({}, payloadToSend), remainingPayload),\n                    });\n                    yield Promise.all(this.afterSendHooks.map((hook) => hook(eventType, Object.assign(Object.assign({}, parametersToSend), remainingPayload))));\n                    yield this.deferExecution();\n                    return (yield this.sendFromBuffer());\n                }),\n            };\n        });\n    }\n    sendEvent(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeEvent(eventType, ...payload)).log({});\n        });\n    }\n    deferExecution() {\n        return new Promise((resolve) => setTimeout(resolve, 0));\n    }\n    sendFromBuffer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const popped = this.bufferedRequests.shift();\n            if (popped) {\n                const { eventType, payload } = popped;\n                return this.runtime.getClientDependingOnEventType(eventType).sendEvent(eventType, payload);\n            }\n        });\n    }\n    clear() {\n        this.storage.removeItem('visitorId');\n        const store = new HistoryStore();\n        store.clear();\n    }\n    deleteHttpOnlyVisitorId() {\n        this.runtime.client.deleteHttpCookieVisitorId();\n    }\n    makeSearchEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.search, request);\n        });\n    }\n    sendSearchEvent(_a) {\n        var { searchQueryUid } = _a, preparedRequest = __rest(_a, [\"searchQueryUid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchEvent(preparedRequest)).log({ searchQueryUid });\n        });\n    }\n    makeClickEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.click, request);\n        });\n    }\n    sendClickEvent(_a) {\n        var { searchQueryUid } = _a, preparedRequest = __rest(_a, [\"searchQueryUid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClickEvent(preparedRequest)).log({ searchQueryUid });\n        });\n    }\n    makeCustomEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.custom, request);\n        });\n    }\n    sendCustomEvent(_a) {\n        var { lastSearchQueryUid } = _a, preparedRequest = __rest(_a, [\"lastSearchQueryUid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCustomEvent(preparedRequest)).log({ lastSearchQueryUid });\n        });\n    }\n    makeViewEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.view, request);\n        });\n    }\n    sendViewEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeViewEvent(request)).log({});\n        });\n    }\n    getVisit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(`${this.baseUrl}/analytics/visit`);\n            const visit = (yield response.json());\n            this.visitorId = visit.visitorId;\n            return visit;\n        });\n    }\n    getHealth() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(`${this.baseUrl}/analytics/monitoring/health`);\n            return (yield response.json());\n        });\n    }\n    registerBeforeSendEventHook(hook) {\n        this.beforeSendHooks.push(hook);\n    }\n    registerAfterSendEventHook(hook) {\n        this.afterSendHooks.push(hook);\n    }\n    addEventTypeMapping(eventType, eventConfig) {\n        this.eventTypeMapping[eventType] = eventConfig;\n    }\n    setAcceptedLinkReferrers(hosts) {\n        if (Array.isArray(hosts) && hosts.every((host) => typeof host == 'string'))\n            this.acceptedLinkReferrers = hosts;\n        else\n            throw Error('Parameter should be an array of domain strings');\n    }\n    parseVariableArgumentsPayload(fieldsOrder, payload) {\n        const parsedArguments = {};\n        for (let i = 0, length = payload.length; i < length; i++) {\n            const currentArgument = payload[i];\n            if (typeof currentArgument === 'string') {\n                parsedArguments[fieldsOrder[i]] = currentArgument;\n            }\n            else if (typeof currentArgument === 'object') {\n                return Object.assign(Object.assign({}, parsedArguments), currentArgument);\n            }\n        }\n        return parsedArguments;\n    }\n    isKeyAllowedEmpty(evtType, key) {\n        const keysThatCanBeEmpty = {\n            [EventType.search]: ['queryText'],\n        };\n        const match = keysThatCanBeEmpty[evtType] || [];\n        return match.indexOf(key) !== -1;\n    }\n    removeEmptyPayloadValues(payload, eventType) {\n        const isNotEmptyValue = (value) => typeof value !== 'undefined' && value !== null && value !== '';\n        return Object.keys(payload)\n            .filter((key) => this.isKeyAllowedEmpty(eventType, key) || isNotEmptyValue(payload[key]))\n            .reduce((newPayload, key) => (Object.assign(Object.assign({}, newPayload), { [key]: payload[key] })), {});\n    }\n    removeUnknownParameters(payload) {\n        const newPayload = Object.keys(payload)\n            .filter((key) => {\n            if (isMeasurementProtocolKey(key)) {\n                return true;\n            }\n            else {\n                console.log(key, 'is not processed by coveoua');\n            }\n        })\n            .reduce((newPayload, key) => (Object.assign(Object.assign({}, newPayload), { [key]: payload[key] })), {});\n        return newPayload;\n    }\n    processCustomParameters(payload) {\n        const { custom } = payload, rest = __rest(payload, [\"custom\"]);\n        let lowercasedCustom = {};\n        if (custom && isObject(custom)) {\n            lowercasedCustom = this.lowercaseKeys(custom);\n        }\n        const newPayload = convertCustomMeasurementProtocolKeys(rest);\n        return Object.assign(Object.assign({}, lowercasedCustom), newPayload);\n    }\n    mapCustomParametersToCustomData(payload) {\n        const { custom } = payload, rest = __rest(payload, [\"custom\"]);\n        if (custom && isObject(custom)) {\n            const lowercasedCustom = this.lowercaseKeys(custom);\n            return Object.assign(Object.assign({}, rest), { customData: Object.assign(Object.assign({}, lowercasedCustom), payload.customData) });\n        }\n        else {\n            return payload;\n        }\n    }\n    lowercaseKeys(custom) {\n        const keys = Object.keys(custom);\n        let result = {};\n        keys.forEach((key) => {\n            result[key.toLowerCase()] = custom[key];\n        });\n        return result;\n    }\n    validateParams(payload, eventType) {\n        const { anonymizeIp } = payload, rest = __rest(payload, [\"anonymizeIp\"]);\n        if (anonymizeIp !== undefined) {\n            if (['0', 'false', 'undefined', 'null', '{}', '[]', ''].indexOf(`${anonymizeIp}`.toLowerCase()) == -1) {\n                rest.anonymizeIp = 1;\n            }\n        }\n        if (eventType == EventType.view ||\n            eventType == EventType.click ||\n            eventType == EventType.search ||\n            eventType == EventType.custom) {\n            rest.originLevel3 = this.limit(rest.originLevel3, 1024);\n        }\n        if (eventType == EventType.view) {\n            rest.location = this.limit(rest.location, 1024);\n        }\n        if (eventType == 'pageview' || eventType == 'event') {\n            rest.referrer = this.limit(rest.referrer, 2048);\n            rest.location = this.limit(rest.location, 2048);\n            rest.page = this.limit(rest.page, 2048);\n        }\n        return rest;\n    }\n    ensureAnonymousUserWhenUsingApiKey(payload) {\n        const { userId } = payload, rest = __rest(payload, [\"userId\"]);\n        if (isApiKey(this.options.token) && !userId) {\n            rest['userId'] = 'anonymous';\n            return rest;\n        }\n        else {\n            return payload;\n        }\n    }\n    setTrackingIdIfTrackingIdNotPresent(payload) {\n        const { trackingId } = payload, rest = __rest(payload, [\"trackingId\"]);\n        if (trackingId) {\n            return payload;\n        }\n        if (rest.hasOwnProperty('custom') && isObject(rest.custom)) {\n            if (rest.custom.hasOwnProperty('context_website') || rest.custom.hasOwnProperty('siteName')) {\n                rest['trackingId'] = rest.custom.context_website || rest.custom.siteName;\n            }\n        }\n        if (rest.hasOwnProperty('customData') && isObject(rest.customData)) {\n            if (rest.customData.hasOwnProperty('context_website') || rest.customData.hasOwnProperty('siteName')) {\n                rest['trackingId'] = rest.customData.context_website || rest.customData.siteName;\n            }\n        }\n        return rest;\n    }\n    limit(input, length) {\n        return typeof input === 'string' ? truncateUrl(input, length) : input;\n    }\n    get baseUrl() {\n        return buildBaseUrl(this.options.endpoint, this.options.version, this.options.isCustomEndpoint);\n    }\n}\n\nvar InsightEvents;\n(function (InsightEvents) {\n    InsightEvents[\"contextChanged\"] = \"contextChanged\";\n    InsightEvents[\"expandToFullUI\"] = \"expandToFullUI\";\n    InsightEvents[\"openUserActions\"] = \"openUserActions\";\n    InsightEvents[\"showPrecedingSessions\"] = \"showPrecedingSessions\";\n    InsightEvents[\"showFollowingSessions\"] = \"showFollowingSessions\";\n    InsightEvents[\"clickViewedDocument\"] = \"clickViewedDocument\";\n    InsightEvents[\"clickPageView\"] = \"clickPageView\";\n    InsightEvents[\"createArticle\"] = \"createArticle\";\n})(InsightEvents || (InsightEvents = {}));\n\nvar SearchPageEvents;\n(function (SearchPageEvents) {\n    SearchPageEvents[\"interfaceLoad\"] = \"interfaceLoad\";\n    SearchPageEvents[\"interfaceChange\"] = \"interfaceChange\";\n    SearchPageEvents[\"didyoumeanAutomatic\"] = \"didyoumeanAutomatic\";\n    SearchPageEvents[\"didyoumeanClick\"] = \"didyoumeanClick\";\n    SearchPageEvents[\"resultsSort\"] = \"resultsSort\";\n    SearchPageEvents[\"searchboxSubmit\"] = \"searchboxSubmit\";\n    SearchPageEvents[\"searchboxClear\"] = \"searchboxClear\";\n    SearchPageEvents[\"searchboxAsYouType\"] = \"searchboxAsYouType\";\n    SearchPageEvents[\"breadcrumbFacet\"] = \"breadcrumbFacet\";\n    SearchPageEvents[\"breadcrumbResetAll\"] = \"breadcrumbResetAll\";\n    SearchPageEvents[\"documentQuickview\"] = \"documentQuickview\";\n    SearchPageEvents[\"documentOpen\"] = \"documentOpen\";\n    SearchPageEvents[\"omniboxAnalytics\"] = \"omniboxAnalytics\";\n    SearchPageEvents[\"omniboxFromLink\"] = \"omniboxFromLink\";\n    SearchPageEvents[\"searchFromLink\"] = \"searchFromLink\";\n    SearchPageEvents[\"triggerNotify\"] = \"notify\";\n    SearchPageEvents[\"triggerExecute\"] = \"execute\";\n    SearchPageEvents[\"triggerQuery\"] = \"query\";\n    SearchPageEvents[\"undoTriggerQuery\"] = \"undoQuery\";\n    SearchPageEvents[\"triggerRedirect\"] = \"redirect\";\n    SearchPageEvents[\"pagerResize\"] = \"pagerResize\";\n    SearchPageEvents[\"pagerNumber\"] = \"pagerNumber\";\n    SearchPageEvents[\"pagerNext\"] = \"pagerNext\";\n    SearchPageEvents[\"pagerPrevious\"] = \"pagerPrevious\";\n    SearchPageEvents[\"pagerScrolling\"] = \"pagerScrolling\";\n    SearchPageEvents[\"staticFilterClearAll\"] = \"staticFilterClearAll\";\n    SearchPageEvents[\"staticFilterSelect\"] = \"staticFilterSelect\";\n    SearchPageEvents[\"staticFilterDeselect\"] = \"staticFilterDeselect\";\n    SearchPageEvents[\"facetClearAll\"] = \"facetClearAll\";\n    SearchPageEvents[\"facetSearch\"] = \"facetSearch\";\n    SearchPageEvents[\"facetSelect\"] = \"facetSelect\";\n    SearchPageEvents[\"facetSelectAll\"] = \"facetSelectAll\";\n    SearchPageEvents[\"facetDeselect\"] = \"facetDeselect\";\n    SearchPageEvents[\"facetExclude\"] = \"facetExclude\";\n    SearchPageEvents[\"facetUnexclude\"] = \"facetUnexclude\";\n    SearchPageEvents[\"facetUpdateSort\"] = \"facetUpdateSort\";\n    SearchPageEvents[\"facetShowMore\"] = \"showMoreFacetResults\";\n    SearchPageEvents[\"facetShowLess\"] = \"showLessFacetResults\";\n    SearchPageEvents[\"queryError\"] = \"query\";\n    SearchPageEvents[\"queryErrorBack\"] = \"errorBack\";\n    SearchPageEvents[\"queryErrorClear\"] = \"errorClearQuery\";\n    SearchPageEvents[\"queryErrorRetry\"] = \"errorRetry\";\n    SearchPageEvents[\"recommendation\"] = \"recommendation\";\n    SearchPageEvents[\"recommendationInterfaceLoad\"] = \"recommendationInterfaceLoad\";\n    SearchPageEvents[\"recommendationOpen\"] = \"recommendationOpen\";\n    SearchPageEvents[\"likeSmartSnippet\"] = \"likeSmartSnippet\";\n    SearchPageEvents[\"dislikeSmartSnippet\"] = \"dislikeSmartSnippet\";\n    SearchPageEvents[\"expandSmartSnippet\"] = \"expandSmartSnippet\";\n    SearchPageEvents[\"collapseSmartSnippet\"] = \"collapseSmartSnippet\";\n    SearchPageEvents[\"openSmartSnippetFeedbackModal\"] = \"openSmartSnippetFeedbackModal\";\n    SearchPageEvents[\"closeSmartSnippetFeedbackModal\"] = \"closeSmartSnippetFeedbackModal\";\n    SearchPageEvents[\"sendSmartSnippetReason\"] = \"sendSmartSnippetReason\";\n    SearchPageEvents[\"expandSmartSnippetSuggestion\"] = \"expandSmartSnippetSuggestion\";\n    SearchPageEvents[\"collapseSmartSnippetSuggestion\"] = \"collapseSmartSnippetSuggestion\";\n    SearchPageEvents[\"showMoreSmartSnippetSuggestion\"] = \"showMoreSmartSnippetSuggestion\";\n    SearchPageEvents[\"showLessSmartSnippetSuggestion\"] = \"showLessSmartSnippetSuggestion\";\n    SearchPageEvents[\"openSmartSnippetSource\"] = \"openSmartSnippetSource\";\n    SearchPageEvents[\"openSmartSnippetSuggestionSource\"] = \"openSmartSnippetSuggestionSource\";\n    SearchPageEvents[\"openSmartSnippetInlineLink\"] = \"openSmartSnippetInlineLink\";\n    SearchPageEvents[\"openSmartSnippetSuggestionInlineLink\"] = \"openSmartSnippetSuggestionInlineLink\";\n    SearchPageEvents[\"recentQueryClick\"] = \"recentQueriesClick\";\n    SearchPageEvents[\"clearRecentQueries\"] = \"clearRecentQueries\";\n    SearchPageEvents[\"recentResultClick\"] = \"recentResultClick\";\n    SearchPageEvents[\"clearRecentResults\"] = \"clearRecentResults\";\n    SearchPageEvents[\"noResultsBack\"] = \"noResultsBack\";\n    SearchPageEvents[\"showMoreFoldedResults\"] = \"showMoreFoldedResults\";\n    SearchPageEvents[\"showLessFoldedResults\"] = \"showLessFoldedResults\";\n    SearchPageEvents[\"copyToClipboard\"] = \"copyToClipboard\";\n    SearchPageEvents[\"caseSendEmail\"] = \"Case.SendEmail\";\n    SearchPageEvents[\"feedItemTextPost\"] = \"FeedItem.TextPost\";\n    SearchPageEvents[\"caseAttach\"] = \"caseAttach\";\n    SearchPageEvents[\"caseDetach\"] = \"caseDetach\";\n    SearchPageEvents[\"retryGeneratedAnswer\"] = \"retryGeneratedAnswer\";\n    SearchPageEvents[\"likeGeneratedAnswer\"] = \"likeGeneratedAnswer\";\n    SearchPageEvents[\"dislikeGeneratedAnswer\"] = \"dislikeGeneratedAnswer\";\n    SearchPageEvents[\"openGeneratedAnswerSource\"] = \"openGeneratedAnswerSource\";\n    SearchPageEvents[\"generatedAnswerStreamEnd\"] = \"generatedAnswerStreamEnd\";\n    SearchPageEvents[\"generatedAnswerSourceHover\"] = \"generatedAnswerSourceHover\";\n    SearchPageEvents[\"generatedAnswerCopyToClipboard\"] = \"generatedAnswerCopyToClipboard\";\n    SearchPageEvents[\"generatedAnswerHideAnswers\"] = \"generatedAnswerHideAnswers\";\n    SearchPageEvents[\"generatedAnswerShowAnswers\"] = \"generatedAnswerShowAnswers\";\n    SearchPageEvents[\"generatedAnswerExpand\"] = \"generatedAnswerExpand\";\n    SearchPageEvents[\"generatedAnswerCollapse\"] = \"generatedAnswerCollapse\";\n    SearchPageEvents[\"generatedAnswerFeedbackSubmit\"] = \"generatedAnswerFeedbackSubmit\";\n    SearchPageEvents[\"rephraseGeneratedAnswer\"] = \"rephraseGeneratedAnswer\";\n    SearchPageEvents[\"generatedAnswerFeedbackSubmitV2\"] = \"generatedAnswerFeedbackSubmitV2\";\n    SearchPageEvents[\"generatedAnswerCitationClick\"] = \"generatedAnswerCitationClick\";\n})(SearchPageEvents || (SearchPageEvents = {}));\nconst CustomEventsTypes = {\n    [SearchPageEvents.triggerNotify]: 'queryPipelineTriggers',\n    [SearchPageEvents.triggerExecute]: 'queryPipelineTriggers',\n    [SearchPageEvents.triggerQuery]: 'queryPipelineTriggers',\n    [SearchPageEvents.triggerRedirect]: 'queryPipelineTriggers',\n    [SearchPageEvents.queryError]: 'errors',\n    [SearchPageEvents.queryErrorBack]: 'errors',\n    [SearchPageEvents.queryErrorClear]: 'errors',\n    [SearchPageEvents.queryErrorRetry]: 'errors',\n    [SearchPageEvents.pagerNext]: 'getMoreResults',\n    [SearchPageEvents.pagerPrevious]: 'getMoreResults',\n    [SearchPageEvents.pagerNumber]: 'getMoreResults',\n    [SearchPageEvents.pagerResize]: 'getMoreResults',\n    [SearchPageEvents.pagerScrolling]: 'getMoreResults',\n    [SearchPageEvents.facetSearch]: 'facet',\n    [SearchPageEvents.facetShowLess]: 'facet',\n    [SearchPageEvents.facetShowMore]: 'facet',\n    [SearchPageEvents.recommendation]: 'recommendation',\n    [SearchPageEvents.likeSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.dislikeSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.expandSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.collapseSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.openSmartSnippetFeedbackModal]: 'smartSnippet',\n    [SearchPageEvents.closeSmartSnippetFeedbackModal]: 'smartSnippet',\n    [SearchPageEvents.sendSmartSnippetReason]: 'smartSnippet',\n    [SearchPageEvents.expandSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.collapseSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.showMoreSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.showLessSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.clearRecentQueries]: 'recentQueries',\n    [SearchPageEvents.recentResultClick]: 'recentlyClickedDocuments',\n    [SearchPageEvents.clearRecentResults]: 'recentlyClickedDocuments',\n    [SearchPageEvents.showLessFoldedResults]: 'folding',\n    [SearchPageEvents.caseDetach]: 'case',\n    [SearchPageEvents.likeGeneratedAnswer]: 'generatedAnswer',\n    [SearchPageEvents.dislikeGeneratedAnswer]: 'generatedAnswer',\n    [SearchPageEvents.openGeneratedAnswerSource]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerStreamEnd]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerSourceHover]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerCopyToClipboard]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerHideAnswers]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerShowAnswers]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerExpand]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerCollapse]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerFeedbackSubmit]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerFeedbackSubmitV2]: 'generatedAnswer',\n    [InsightEvents.expandToFullUI]: 'interface',\n    [InsightEvents.openUserActions]: 'User Actions',\n    [InsightEvents.showPrecedingSessions]: 'User Actions',\n    [InsightEvents.showFollowingSessions]: 'User Actions',\n    [InsightEvents.clickViewedDocument]: 'User Actions',\n    [InsightEvents.clickPageView]: 'User Actions',\n    [InsightEvents.createArticle]: 'createArticle',\n};\n\nclass NoopAnalytics {\n    constructor() {\n        this.runtime = new NoopRuntime();\n        this.currentVisitorId = '';\n    }\n    getPayload() {\n        return Promise.resolve();\n    }\n    getParameters() {\n        return Promise.resolve();\n    }\n    makeEvent(eventType) {\n        return Promise.resolve({ eventType: eventType, payload: null, log: () => Promise.resolve() });\n    }\n    sendEvent() {\n        return Promise.resolve();\n    }\n    makeSearchEvent() {\n        return this.makeEvent(EventType.search);\n    }\n    sendSearchEvent() {\n        return Promise.resolve();\n    }\n    makeClickEvent() {\n        return this.makeEvent(EventType.click);\n    }\n    sendClickEvent() {\n        return Promise.resolve();\n    }\n    makeCustomEvent() {\n        return this.makeEvent(EventType.custom);\n    }\n    sendCustomEvent() {\n        return Promise.resolve();\n    }\n    makeViewEvent() {\n        return this.makeEvent(EventType.view);\n    }\n    sendViewEvent() {\n        return Promise.resolve();\n    }\n    getVisit() {\n        return Promise.resolve({ id: '', visitorId: '' });\n    }\n    getHealth() {\n        return Promise.resolve({ status: '' });\n    }\n    registerBeforeSendEventHook() { }\n    registerAfterSendEventHook() { }\n    addEventTypeMapping() { }\n    get version() {\n        return libVersion;\n    }\n}\n\nfunction filterConsecutiveRepeatedValues(rawData) {\n    let prev = '';\n    return rawData.filter((value) => {\n        const isDifferent = value !== prev;\n        prev = value;\n        return isDifferent;\n    });\n}\nfunction removeSemicolons(rawData) {\n    return rawData.map((value) => {\n        return value.replace(/;/g, '');\n    });\n}\nfunction getDataString(data) {\n    const ANALYTICS_LENGTH_LIMIT = 256;\n    const formattedData = data.join(';');\n    if (formattedData.length <= ANALYTICS_LENGTH_LIMIT) {\n        return formattedData;\n    }\n    return getDataString(data.slice(1));\n}\nconst formatArrayForCoveoCustomData = (rawData) => {\n    const dataWithoutSemicolons = removeSemicolons(rawData);\n    const dataWithoutRepeatedValues = filterConsecutiveRepeatedValues(dataWithoutSemicolons);\n    return getDataString(dataWithoutRepeatedValues);\n};\n\nfunction formatOmniboxMetadata(meta) {\n    const partialQueries = typeof meta.partialQueries === 'string'\n        ? meta.partialQueries\n        : formatArrayForCoveoCustomData(meta.partialQueries);\n    const suggestions = typeof meta.suggestions === 'string' ? meta.suggestions : formatArrayForCoveoCustomData(meta.suggestions);\n    return Object.assign(Object.assign({}, meta), { partialQueries,\n        suggestions });\n}\n\nclass CoveoSearchPageClient {\n    constructor(opts, provider) {\n        this.opts = opts;\n        this.provider = provider;\n        const shouldDisableAnalytics = opts.enableAnalytics === false || doNotTrack();\n        this.coveoAnalyticsClient = shouldDisableAnalytics ? new NoopAnalytics() : new CoveoAnalyticsClient(opts);\n    }\n    disable() {\n        this.coveoAnalyticsClient = new NoopAnalytics();\n    }\n    enable() {\n        this.coveoAnalyticsClient = new CoveoAnalyticsClient(this.opts);\n    }\n    makeInterfaceLoad() {\n        return this.makeSearchEvent(SearchPageEvents.interfaceLoad);\n    }\n    logInterfaceLoad() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeInterfaceLoad()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecommendationInterfaceLoad() {\n        return this.makeSearchEvent(SearchPageEvents.recommendationInterfaceLoad);\n    }\n    logRecommendationInterfaceLoad() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecommendationInterfaceLoad()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecommendation() {\n        return this.makeCustomEvent(SearchPageEvents.recommendation);\n    }\n    logRecommendation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecommendation()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecommendationOpen(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.recommendationOpen, info, identifier);\n    }\n    logRecommendationOpen(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecommendationOpen(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeStaticFilterClearAll(meta) {\n        return this.makeSearchEvent(SearchPageEvents.staticFilterClearAll, meta);\n    }\n    logStaticFilterClearAll(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeStaticFilterClearAll(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeStaticFilterSelect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.staticFilterSelect, meta);\n    }\n    logStaticFilterSelect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeStaticFilterSelect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeStaticFilterDeselect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.staticFilterDeselect, meta);\n    }\n    logStaticFilterDeselect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeStaticFilterDeselect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFetchMoreResults() {\n        return this.makeCustomEvent(SearchPageEvents.pagerScrolling, { type: 'getMoreResults' });\n    }\n    logFetchMoreResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFetchMoreResults()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeInterfaceChange(metadata) {\n        return this.makeSearchEvent(SearchPageEvents.interfaceChange, metadata);\n    }\n    logInterfaceChange(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeInterfaceChange(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDidYouMeanAutomatic() {\n        return this.makeSearchEvent(SearchPageEvents.didyoumeanAutomatic);\n    }\n    logDidYouMeanAutomatic() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDidYouMeanAutomatic()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDidYouMeanClick() {\n        return this.makeSearchEvent(SearchPageEvents.didyoumeanClick);\n    }\n    logDidYouMeanClick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDidYouMeanClick()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeResultsSort(metadata) {\n        return this.makeSearchEvent(SearchPageEvents.resultsSort, metadata);\n    }\n    logResultsSort(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeResultsSort(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchboxSubmit() {\n        return this.makeSearchEvent(SearchPageEvents.searchboxSubmit);\n    }\n    logSearchboxSubmit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchboxSubmit()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchboxClear() {\n        return this.makeSearchEvent(SearchPageEvents.searchboxClear);\n    }\n    logSearchboxClear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchboxClear()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchboxAsYouType() {\n        return this.makeSearchEvent(SearchPageEvents.searchboxAsYouType);\n    }\n    logSearchboxAsYouType() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchboxAsYouType()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeBreadcrumbFacet(metadata) {\n        return this.makeSearchEvent(SearchPageEvents.breadcrumbFacet, metadata);\n    }\n    logBreadcrumbFacet(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeBreadcrumbFacet(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeBreadcrumbResetAll() {\n        return this.makeSearchEvent(SearchPageEvents.breadcrumbResetAll);\n    }\n    logBreadcrumbResetAll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeBreadcrumbResetAll()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDocumentQuickview(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.documentQuickview, info, identifier);\n    }\n    logDocumentQuickview(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDocumentQuickview(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDocumentOpen(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.documentOpen, info, identifier);\n    }\n    logDocumentOpen(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDocumentOpen(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOmniboxAnalytics(meta) {\n        return this.makeSearchEvent(SearchPageEvents.omniboxAnalytics, formatOmniboxMetadata(meta));\n    }\n    logOmniboxAnalytics(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOmniboxAnalytics(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOmniboxFromLink(meta) {\n        return this.makeSearchEvent(SearchPageEvents.omniboxFromLink, formatOmniboxMetadata(meta));\n    }\n    logOmniboxFromLink(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOmniboxFromLink(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchFromLink() {\n        return this.makeSearchEvent(SearchPageEvents.searchFromLink);\n    }\n    logSearchFromLink() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchFromLink()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerNotify(meta) {\n        return this.makeCustomEvent(SearchPageEvents.triggerNotify, meta);\n    }\n    logTriggerNotify(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerNotify(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerExecute(meta) {\n        return this.makeCustomEvent(SearchPageEvents.triggerExecute, meta);\n    }\n    logTriggerExecute(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerExecute(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerQuery() {\n        return this.makeCustomEvent(SearchPageEvents.triggerQuery, { query: this.provider.getSearchEventRequestPayload().queryText }, 'queryPipelineTriggers');\n    }\n    logTriggerQuery() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerQuery()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeUndoTriggerQuery(meta) {\n        return this.makeSearchEvent(SearchPageEvents.undoTriggerQuery, meta);\n    }\n    logUndoTriggerQuery(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeUndoTriggerQuery(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerRedirect(meta) {\n        return this.makeCustomEvent(SearchPageEvents.triggerRedirect, Object.assign(Object.assign({}, meta), { query: this.provider.getSearchEventRequestPayload().queryText }));\n    }\n    logTriggerRedirect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerRedirect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerResize(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerResize, meta);\n    }\n    logPagerResize(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerResize(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerNumber(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerNumber, meta);\n    }\n    logPagerNumber(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerNumber(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerNext(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerNext, meta);\n    }\n    logPagerNext(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerNext(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerPrevious(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerPrevious, meta);\n    }\n    logPagerPrevious(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerPrevious(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerScrolling() {\n        return this.makeCustomEvent(SearchPageEvents.pagerScrolling);\n    }\n    logPagerScrolling() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerScrolling()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetClearAll(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetClearAll, meta);\n    }\n    logFacetClearAll(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetClearAll(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetSearch(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetSearch, meta);\n    }\n    logFacetSearch(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetSearch(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetSelect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetSelect, meta);\n    }\n    logFacetSelect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetSelect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetDeselect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetDeselect, meta);\n    }\n    logFacetDeselect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetDeselect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetExclude(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetExclude, meta);\n    }\n    logFacetExclude(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetExclude(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetUnexclude(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetUnexclude, meta);\n    }\n    logFacetUnexclude(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetUnexclude(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetSelectAll(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetSelectAll, meta);\n    }\n    logFacetSelectAll(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetSelectAll(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetUpdateSort(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetUpdateSort, meta);\n    }\n    logFacetUpdateSort(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetUpdateSort(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetShowMore(meta) {\n        return this.makeCustomEvent(SearchPageEvents.facetShowMore, meta);\n    }\n    logFacetShowMore(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetShowMore(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetShowLess(meta) {\n        return this.makeCustomEvent(SearchPageEvents.facetShowLess, meta);\n    }\n    logFacetShowLess(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetShowLess(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryError(meta) {\n        return this.makeCustomEvent(SearchPageEvents.queryError, meta);\n    }\n    logQueryError(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryError(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryErrorBack() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customEventBuilder = yield this.makeCustomEvent(SearchPageEvents.queryErrorBack);\n            return {\n                description: customEventBuilder.description,\n                log: () => __awaiter(this, void 0, void 0, function* () {\n                    yield customEventBuilder.log({ searchUID: this.provider.getSearchUID() });\n                    return this.logSearchEvent(SearchPageEvents.queryErrorBack);\n                }),\n            };\n        });\n    }\n    logQueryErrorBack() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryErrorBack()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryErrorRetry() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customEventBuilder = yield this.makeCustomEvent(SearchPageEvents.queryErrorRetry);\n            return {\n                description: customEventBuilder.description,\n                log: () => __awaiter(this, void 0, void 0, function* () {\n                    yield customEventBuilder.log({ searchUID: this.provider.getSearchUID() });\n                    return this.logSearchEvent(SearchPageEvents.queryErrorRetry);\n                }),\n            };\n        });\n    }\n    logQueryErrorRetry() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryErrorRetry()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryErrorClear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customEventBuilder = yield this.makeCustomEvent(SearchPageEvents.queryErrorClear);\n            return {\n                description: customEventBuilder.description,\n                log: () => __awaiter(this, void 0, void 0, function* () {\n                    yield customEventBuilder.log({ searchUID: this.provider.getSearchUID() });\n                    return this.logSearchEvent(SearchPageEvents.queryErrorClear);\n                }),\n            };\n        });\n    }\n    logQueryErrorClear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryErrorClear()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeLikeSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.likeSmartSnippet);\n    }\n    logLikeSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeLikeSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDislikeSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.dislikeSmartSnippet);\n    }\n    logDislikeSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDislikeSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeExpandSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.expandSmartSnippet);\n    }\n    logExpandSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeExpandSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCollapseSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.collapseSmartSnippet);\n    }\n    logCollapseSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCollapseSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenSmartSnippetFeedbackModal() {\n        return this.makeCustomEvent(SearchPageEvents.openSmartSnippetFeedbackModal);\n    }\n    logOpenSmartSnippetFeedbackModal() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetFeedbackModal()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCloseSmartSnippetFeedbackModal() {\n        return this.makeCustomEvent(SearchPageEvents.closeSmartSnippetFeedbackModal);\n    }\n    logCloseSmartSnippetFeedbackModal() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCloseSmartSnippetFeedbackModal()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSmartSnippetFeedbackReason(reason, details) {\n        return this.makeCustomEvent(SearchPageEvents.sendSmartSnippetReason, { reason, details });\n    }\n    logSmartSnippetFeedbackReason(reason, details) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSmartSnippetFeedbackReason(reason, details)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeExpandSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.expandSmartSnippetSuggestion, 'documentId' in snippet ? snippet : { documentId: snippet });\n    }\n    logExpandSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeExpandSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCollapseSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.collapseSmartSnippetSuggestion, 'documentId' in snippet ? snippet : { documentId: snippet });\n    }\n    logCollapseSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCollapseSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowMoreSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.showMoreSmartSnippetSuggestion, snippet);\n    }\n    logShowMoreSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowMoreSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowLessSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.showLessSmartSnippetSuggestion, snippet);\n    }\n    logShowLessSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowLessSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenSmartSnippetSource(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetSource, info, identifier);\n    }\n    logOpenSmartSnippetSource(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetSource(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenSmartSnippetSuggestionSource(info, snippet) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetSuggestionSource, info, { contentIDKey: snippet.documentId.contentIdKey, contentIDValue: snippet.documentId.contentIdValue }, snippet);\n    }\n    makeCopyToClipboard(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.copyToClipboard, info, identifier);\n    }\n    logCopyToClipboard(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCopyToClipboard(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    logOpenSmartSnippetSuggestionSource(info, snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetSuggestionSource(info, snippet)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeOpenSmartSnippetInlineLink(info, identifierAndLink) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetInlineLink, info, { contentIDKey: identifierAndLink.contentIDKey, contentIDValue: identifierAndLink.contentIDValue }, identifierAndLink);\n    }\n    logOpenSmartSnippetInlineLink(info, identifierAndLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetInlineLink(info, identifierAndLink)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetSuggestionInlineLink, info, {\n            contentIDKey: snippetAndLink.documentId.contentIdKey,\n            contentIDValue: snippetAndLink.documentId.contentIdValue,\n        }, snippetAndLink);\n    }\n    logOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeRecentQueryClick() {\n        return this.makeSearchEvent(SearchPageEvents.recentQueryClick);\n    }\n    logRecentQueryClick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecentQueryClick()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeClearRecentQueries() {\n        return this.makeCustomEvent(SearchPageEvents.clearRecentQueries);\n    }\n    logClearRecentQueries() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClearRecentQueries()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecentResultClick(info, identifier) {\n        return this.makeCustomEvent(SearchPageEvents.recentResultClick, { info, identifier });\n    }\n    logRecentResultClick(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecentResultClick(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeClearRecentResults() {\n        return this.makeCustomEvent(SearchPageEvents.clearRecentResults);\n    }\n    logClearRecentResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClearRecentResults()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeNoResultsBack() {\n        return this.makeSearchEvent(SearchPageEvents.noResultsBack);\n    }\n    logNoResultsBack() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeNoResultsBack()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowMoreFoldedResults(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.showMoreFoldedResults, info, identifier);\n    }\n    logShowMoreFoldedResults(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowMoreFoldedResults(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowLessFoldedResults() {\n        return this.makeCustomEvent(SearchPageEvents.showLessFoldedResults);\n    }\n    logShowLessFoldedResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowLessFoldedResults()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeEventDescription(preparedEvent, actionCause) {\n        var _a;\n        return { actionCause, customData: (_a = preparedEvent.payload) === null || _a === void 0 ? void 0 : _a.customData };\n    }\n    makeCustomEvent(event, metadata, eventType = CustomEventsTypes[event]) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.coveoAnalyticsClient.getParameters;\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            const request = Object.assign(Object.assign({}, (yield this.getBaseEventRequest(customData))), { eventType, eventValue: event });\n            const preparedEvent = yield this.coveoAnalyticsClient.makeCustomEvent(request);\n            return {\n                description: this.makeEventDescription(preparedEvent, event),\n                log: ({ searchUID }) => preparedEvent.log({ lastSearchQueryUid: searchUID }),\n            };\n        });\n    }\n    logCustomEvent(event, metadata, eventType = CustomEventsTypes[event]) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCustomEvent(event, metadata, eventType)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCustomEventWithType(eventValue, eventType, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            const payload = Object.assign(Object.assign({}, (yield this.getBaseEventRequest(customData))), { eventType,\n                eventValue });\n            const preparedEvent = yield this.coveoAnalyticsClient.makeCustomEvent(payload);\n            return {\n                description: this.makeEventDescription(preparedEvent, eventValue),\n                log: ({ searchUID }) => preparedEvent.log({ lastSearchQueryUid: searchUID }),\n            };\n        });\n    }\n    logCustomEventWithType(eventValue, eventType, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCustomEventWithType(eventValue, eventType, metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    logSearchEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchEvent(event, metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = yield this.getBaseSearchEventRequest(event, metadata);\n            const preparedEvent = yield this.coveoAnalyticsClient.makeSearchEvent(request);\n            return {\n                description: this.makeEventDescription(preparedEvent, event),\n                log: ({ searchUID }) => preparedEvent.log({ searchQueryUid: searchUID }),\n            };\n        });\n    }\n    makeClickEvent(event, info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = Object.assign(Object.assign(Object.assign({}, info), (yield this.getBaseEventRequest(Object.assign(Object.assign({}, identifier), metadata)))), { queryPipeline: this.provider.getPipeline(), actionCause: event });\n            const preparedEvent = yield this.coveoAnalyticsClient.makeClickEvent(request);\n            return {\n                description: this.makeEventDescription(preparedEvent, event),\n                log: ({ searchUID }) => preparedEvent.log({ searchQueryUid: searchUID }),\n            };\n        });\n    }\n    logClickEvent(event, info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClickEvent(event, info, identifier, metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    getBaseSearchEventRequest(event, metadata) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            return Object.assign(Object.assign(Object.assign({}, (yield this.getBaseEventRequest(Object.assign(Object.assign({}, metadata), (_b = (_a = this.provider).getGeneratedAnswerMetadata) === null || _b === void 0 ? void 0 : _b.call(_a))))), this.provider.getSearchEventRequestPayload()), { queryPipeline: this.provider.getPipeline(), actionCause: event });\n        });\n    }\n    getBaseEventRequest(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            return Object.assign(Object.assign(Object.assign({}, this.getOrigins()), this.getSplitTestRun()), { customData, language: this.provider.getLanguage(), facetState: this.provider.getFacetState ? this.provider.getFacetState() : [], anonymous: this.provider.getIsAnonymous(), clientId: yield this.getClientId() });\n        });\n    }\n    getOrigins() {\n        var _a, _b;\n        return {\n            originContext: (_b = (_a = this.provider).getOriginContext) === null || _b === void 0 ? void 0 : _b.call(_a),\n            originLevel1: this.provider.getOriginLevel1(),\n            originLevel2: this.provider.getOriginLevel2(),\n            originLevel3: this.provider.getOriginLevel3(),\n        };\n    }\n    getClientId() {\n        return this.coveoAnalyticsClient instanceof CoveoAnalyticsClient\n            ? this.coveoAnalyticsClient.getCurrentVisitorId()\n            : undefined;\n    }\n    getSplitTestRun() {\n        const splitTestRunName = this.provider.getSplitTestRunName ? this.provider.getSplitTestRunName() : '';\n        const splitTestRunVersion = this.provider.getSplitTestRunVersion ? this.provider.getSplitTestRunVersion() : '';\n        return Object.assign(Object.assign({}, (splitTestRunName && { splitTestRunName })), (splitTestRunVersion && { splitTestRunVersion }));\n    }\n    makeLikeGeneratedAnswer(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.likeGeneratedAnswer, metadata);\n    }\n    logLikeGeneratedAnswer(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeLikeGeneratedAnswer(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDislikeGeneratedAnswer(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.dislikeGeneratedAnswer, metadata);\n    }\n    logDislikeGeneratedAnswer(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDislikeGeneratedAnswer(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenGeneratedAnswerSource(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.openGeneratedAnswerSource, metadata);\n    }\n    logOpenGeneratedAnswerSource(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenGeneratedAnswerSource(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerCitationClick(info, citation) {\n        return this.makeClickEvent(SearchPageEvents.generatedAnswerCitationClick, Object.assign(Object.assign({}, info), { documentPosition: 1 }), { contentIDKey: citation.documentId.contentIdKey, contentIDValue: citation.documentId.contentIdValue }, citation);\n    }\n    logGeneratedAnswerCitationClick(info, citation) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerCitationClick(info, citation)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerSourceHover(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerSourceHover, metadata);\n    }\n    logGeneratedAnswerSourceHover(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerSourceHover(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerCopyToClipboard(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerCopyToClipboard, metadata);\n    }\n    logGeneratedAnswerCopyToClipboard(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerCopyToClipboard(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerHideAnswers(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerHideAnswers, metadata);\n    }\n    logGeneratedAnswerHideAnswers(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerHideAnswers(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerShowAnswers(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerShowAnswers, metadata);\n    }\n    logGeneratedAnswerShowAnswers(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerShowAnswers(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerExpand(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerExpand, metadata);\n    }\n    logGeneratedAnswerExpand(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerExpand(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeGeneratedAnswerCollapse(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerCollapse, metadata);\n    }\n    logGeneratedAnswerCollapse(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerCollapse(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeGeneratedAnswerFeedbackSubmit(meta) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerFeedbackSubmit, meta);\n    }\n    logGeneratedAnswerFeedbackSubmit(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerFeedbackSubmit(meta)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerFeedbackSubmitV2(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerFeedbackSubmitV2, metadata);\n    }\n    logGeneratedAnswerFeedbackSubmitV2(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerFeedbackSubmitV2(meta)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeRephraseGeneratedAnswer(meta) {\n        return this.makeSearchEvent(SearchPageEvents.rephraseGeneratedAnswer, meta);\n    }\n    logRephraseGeneratedAnswer(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRephraseGeneratedAnswer(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRetryGeneratedAnswer() {\n        return this.makeSearchEvent(SearchPageEvents.retryGeneratedAnswer);\n    }\n    logRetryGeneratedAnswer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRetryGeneratedAnswer()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeGeneratedAnswerStreamEnd(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerStreamEnd, metadata);\n    }\n    logGeneratedAnswerStreamEnd(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerStreamEnd(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n}\n\nconst SVCPluginEventTypes = Object.assign({}, BasePluginEventTypes);\nconst allSVCEventTypes = Object.keys(SVCPluginEventTypes).map((key) => SVCPluginEventTypes[key]);\nclass SVCPlugin extends BasePlugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        super({ client, uuidGenerator });\n        this.ticket = {};\n    }\n    getApi(name) {\n        const superCall = super.getApi(name);\n        if (superCall !== null)\n            return superCall;\n        switch (name) {\n            case 'setTicket':\n                return this.setTicket;\n            default:\n                return null;\n        }\n    }\n    addHooks() {\n        this.addHooksForEvent();\n        this.addHooksForPageView();\n        this.addHooksForSVCEvents();\n    }\n    setTicket(ticket) {\n        this.ticket = ticket;\n    }\n    clearPluginData() {\n        this.ticket = {};\n    }\n    addHooksForSVCEvents() {\n        this.client.registerBeforeSendEventHook((eventType, ...[payload]) => {\n            return allSVCEventTypes.indexOf(eventType) !== -1 ? this.addSVCDataToPayload(eventType, payload) : payload;\n        });\n        this.client.registerAfterSendEventHook((eventType, ...[payload]) => {\n            if (allSVCEventTypes.indexOf(eventType) !== -1) {\n                this.updateLocationInformation(eventType, payload);\n            }\n            return payload;\n        });\n    }\n    addHooksForPageView() {\n        this.client.addEventTypeMapping(SVCPluginEventTypes.pageview, {\n            newEventType: EventType.collect,\n            variableLengthArgumentsNames: ['page'],\n            addVisitorIdParameter: true,\n            usesMeasurementProtocol: true,\n        });\n    }\n    addHooksForEvent() {\n        this.client.addEventTypeMapping(SVCPluginEventTypes.event, {\n            newEventType: EventType.collect,\n            variableLengthArgumentsNames: ['eventCategory', 'eventAction', 'eventLabel', 'eventValue'],\n            addVisitorIdParameter: true,\n            usesMeasurementProtocol: true,\n        });\n    }\n    addSVCDataToPayload(eventType, payload) {\n        var _a;\n        const svcPayload = Object.assign(Object.assign(Object.assign(Object.assign({}, this.getLocationInformation(eventType, payload)), this.getDefaultContextInformation(eventType)), (this.action ? { svcAction: this.action } : {})), (Object.keys((_a = this.actionData) !== null && _a !== void 0 ? _a : {}).length > 0 ? { svcActionData: this.actionData } : {}));\n        const ticketPayload = this.getTicketPayload();\n        this.clearData();\n        return Object.assign(Object.assign(Object.assign({}, ticketPayload), svcPayload), payload);\n    }\n    getTicketPayload() {\n        return convertTicketToMeasurementProtocol(this.ticket);\n    }\n}\nSVCPlugin.Id = 'svc';\n\nvar CaseAssistEvents;\n(function (CaseAssistEvents) {\n    CaseAssistEvents[\"click\"] = \"click\";\n    CaseAssistEvents[\"flowStart\"] = \"flowStart\";\n})(CaseAssistEvents || (CaseAssistEvents = {}));\nvar CaseAssistActions;\n(function (CaseAssistActions) {\n    CaseAssistActions[\"enterInterface\"] = \"ticket_create_start\";\n    CaseAssistActions[\"fieldUpdate\"] = \"ticket_field_update\";\n    CaseAssistActions[\"fieldSuggestionClick\"] = \"ticket_classification_click\";\n    CaseAssistActions[\"suggestionClick\"] = \"suggestion_click\";\n    CaseAssistActions[\"suggestionRate\"] = \"suggestion_rate\";\n    CaseAssistActions[\"nextCaseStep\"] = \"ticket_next_stage\";\n    CaseAssistActions[\"caseCancelled\"] = \"ticket_cancel\";\n    CaseAssistActions[\"caseSolved\"] = \"ticket_cancel\";\n    CaseAssistActions[\"caseCreated\"] = \"ticket_create\";\n})(CaseAssistActions || (CaseAssistActions = {}));\nvar CaseCancelledReasons;\n(function (CaseCancelledReasons) {\n    CaseCancelledReasons[\"quit\"] = \"Quit\";\n    CaseCancelledReasons[\"solved\"] = \"Solved\";\n})(CaseCancelledReasons || (CaseCancelledReasons = {}));\n\nclass CaseAssistClient {\n    constructor(options, provider) {\n        var _a;\n        this.options = options;\n        this.provider = provider;\n        const analyticsEnabled = ((_a = options.enableAnalytics) !== null && _a !== void 0 ? _a : true) && !doNotTrack();\n        this.coveoAnalyticsClient = analyticsEnabled ? new CoveoAnalyticsClient(options) : new NoopAnalytics();\n        this.svc = new SVCPlugin({ client: this.coveoAnalyticsClient });\n    }\n    disable() {\n        this.coveoAnalyticsClient = new NoopAnalytics();\n        this.svc = new SVCPlugin({ client: this.coveoAnalyticsClient });\n    }\n    enable() {\n        this.coveoAnalyticsClient = new CoveoAnalyticsClient(this.options);\n        this.svc = new SVCPlugin({ client: this.coveoAnalyticsClient });\n    }\n    logEnterInterface(meta) {\n        this.svc.setAction(CaseAssistActions.enterInterface);\n        this.svc.setTicket(meta.ticket);\n        return this.sendFlowStartEvent();\n    }\n    logUpdateCaseField(meta) {\n        this.svc.setAction(CaseAssistActions.fieldUpdate, {\n            fieldName: meta.fieldName,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logSelectFieldSuggestion(meta) {\n        this.svc.setAction(CaseAssistActions.fieldSuggestionClick, meta.suggestion);\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logSelectDocumentSuggestion(meta) {\n        this.svc.setAction(CaseAssistActions.suggestionClick, meta.suggestion);\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logRateDocumentSuggestion(meta) {\n        this.svc.setAction(CaseAssistActions.suggestionRate, Object.assign({ rate: meta.rating }, meta.suggestion));\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logMoveToNextCaseStep(meta) {\n        this.svc.setAction(CaseAssistActions.nextCaseStep, {\n            stage: meta === null || meta === void 0 ? void 0 : meta.stage,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logCaseCancelled(meta) {\n        this.svc.setAction(CaseAssistActions.caseCancelled, {\n            reason: CaseCancelledReasons.quit,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logCaseSolved(meta) {\n        this.svc.setAction(CaseAssistActions.caseSolved, {\n            reason: CaseCancelledReasons.solved,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logCaseCreated(meta) {\n        this.svc.setAction(CaseAssistActions.caseCreated);\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    sendFlowStartEvent() {\n        return this.coveoAnalyticsClient.sendEvent('event', 'svc', CaseAssistEvents.flowStart, this.provider\n            ? {\n                searchHub: this.provider.getOriginLevel1(),\n            }\n            : null);\n    }\n    sendClickEvent() {\n        return this.coveoAnalyticsClient.sendEvent('event', 'svc', CaseAssistEvents.click, this.provider\n            ? {\n                searchHub: this.provider.getOriginLevel1(),\n            }\n            : null);\n    }\n}\n\nconst extractContextFromMetadata = (meta) => {\n    const context = {};\n    if (meta.caseContext) {\n        Object.keys(meta.caseContext).forEach((contextKey) => {\n            var _a;\n            const value = (_a = meta.caseContext) === null || _a === void 0 ? void 0 : _a[contextKey];\n            if (value) {\n                const keyToBeSent = `context_${contextKey}`;\n                context[keyToBeSent] = value;\n            }\n        });\n    }\n    return context;\n};\nconst generateMetadataToSend = (metadata, includeContext = true) => {\n    const { caseContext, caseId, caseNumber } = metadata, metadataWithoutContext = __rest(metadata, [\"caseContext\", \"caseId\", \"caseNumber\"]);\n    const context = extractContextFromMetadata(metadata);\n    return Object.assign(Object.assign(Object.assign({ CaseId: caseId, CaseNumber: caseNumber }, metadataWithoutContext), (!!context.context_Case_Subject && { CaseSubject: context.context_Case_Subject })), (includeContext && context));\n};\nclass CoveoInsightClient {\n    constructor(opts, provider) {\n        this.opts = opts;\n        this.provider = provider;\n        const shouldDisableAnalytics = opts.enableAnalytics === false || doNotTrack();\n        this.coveoAnalyticsClient = shouldDisableAnalytics ? new NoopAnalytics() : new CoveoAnalyticsClient(opts);\n    }\n    disable() {\n        this.coveoAnalyticsClient = new NoopAnalytics();\n    }\n    enable() {\n        this.coveoAnalyticsClient = new CoveoAnalyticsClient(this.opts);\n    }\n    logInterfaceLoad(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.interfaceLoad, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.interfaceLoad);\n    }\n    logInterfaceChange(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.interfaceChange, metadataToSend);\n    }\n    logStaticFilterDeselect(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.staticFilterDeselect, metadataToSend);\n    }\n    logFetchMoreResults(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logCustomEvent(SearchPageEvents.pagerScrolling, Object.assign(Object.assign({}, metadataToSend), { type: 'getMoreResults' }));\n        }\n        return this.logCustomEvent(SearchPageEvents.pagerScrolling, { type: 'getMoreResults' });\n    }\n    logBreadcrumbFacet(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.breadcrumbFacet, metadataToSend);\n    }\n    logBreadcrumbResetAll(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.breadcrumbResetAll, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.breadcrumbResetAll);\n    }\n    logFacetSelect(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetSelect, metadataToSend);\n    }\n    logFacetExclude(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetExclude, metadataToSend);\n    }\n    logFacetDeselect(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetDeselect, metadataToSend);\n    }\n    logFacetUpdateSort(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetUpdateSort, metadataToSend);\n    }\n    logFacetClearAll(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetClearAll, metadataToSend);\n    }\n    logFacetShowMore(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.facetShowMore, metadataToSend);\n    }\n    logFacetShowLess(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.facetShowLess, metadataToSend);\n    }\n    logQueryError(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.queryError, metadataToSend);\n    }\n    logPagerNumber(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.pagerNumber, metadataToSend);\n    }\n    logPagerNext(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.pagerNext, metadataToSend);\n    }\n    logPagerPrevious(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.pagerPrevious, metadataToSend);\n    }\n    logDidYouMeanAutomatic(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.didyoumeanAutomatic, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.didyoumeanAutomatic);\n    }\n    logDidYouMeanClick(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.didyoumeanClick, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.didyoumeanClick);\n    }\n    logResultsSort(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.resultsSort, metadataToSend);\n    }\n    logSearchboxSubmit(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.searchboxSubmit, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.searchboxSubmit);\n    }\n    logContextChanged(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(InsightEvents.contextChanged, metadataToSend);\n    }\n    logExpandToFullUI(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logCustomEvent(InsightEvents.expandToFullUI, metadataToSend);\n    }\n    logOpenUserActions(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(InsightEvents.openUserActions, metadataToSend);\n    }\n    logShowPrecedingSessions(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(InsightEvents.showPrecedingSessions, metadataToSend);\n    }\n    logShowFollowingSessions(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(InsightEvents.showFollowingSessions, metadataToSend);\n    }\n    logViewedDocumentClick(document, metadata) {\n        return this.logCustomEvent(InsightEvents.clickViewedDocument, Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { document }));\n    }\n    logPageViewClick(pageView, metadata) {\n        return this.logCustomEvent(InsightEvents.clickPageView, Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { pageView }));\n    }\n    logCreateArticle(createArticleMetadata, metadata) {\n        return this.logCustomEvent(InsightEvents.createArticle, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), createArticleMetadata) : createArticleMetadata);\n    }\n    logDocumentOpen(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.documentOpen, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCopyToClipboard(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.copyToClipboard, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCaseSendEmail(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.caseSendEmail, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logFeedItemTextPost(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.feedItemTextPost, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logDocumentQuickview(info, identifier, caseMetadata) {\n        const metadata = {\n            documentTitle: info.documentTitle,\n            documentURL: info.documentUrl,\n        };\n        return this.logClickEvent(SearchPageEvents.documentQuickview, info, identifier, caseMetadata ? Object.assign(Object.assign({}, generateMetadataToSend(caseMetadata, false)), metadata) : metadata);\n    }\n    logCaseAttach(info, identifier, caseMetadata) {\n        const metadata = {\n            documentTitle: info.documentTitle,\n            documentURL: info.documentUrl,\n            resultUriHash: info.documentUriHash,\n        };\n        return this.logClickEvent(SearchPageEvents.caseAttach, info, identifier, caseMetadata ? Object.assign(Object.assign({}, generateMetadataToSend(caseMetadata, false)), metadata) : metadata);\n    }\n    logCaseDetach(resultUriHash, metadata) {\n        return this.logCustomEvent(SearchPageEvents.caseDetach, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { resultUriHash }) : { resultUriHash });\n    }\n    logLikeSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.likeSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logDislikeSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.dislikeSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logExpandSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.expandSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCollapseSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.collapseSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logOpenSmartSnippetFeedbackModal(metadata) {\n        return this.logCustomEvent(SearchPageEvents.openSmartSnippetFeedbackModal, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCloseSmartSnippetFeedbackModal(metadata) {\n        return this.logCustomEvent(SearchPageEvents.closeSmartSnippetFeedbackModal, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logSmartSnippetFeedbackReason(reason, details, metadata) {\n        return this.logCustomEvent(SearchPageEvents.sendSmartSnippetReason, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { reason, details }) : { reason, details });\n    }\n    logExpandSmartSnippetSuggestion(snippet, metadata) {\n        const snippetMetadata = 'documentId' in snippet ? snippet : { documentId: snippet };\n        return this.logCustomEvent(SearchPageEvents.expandSmartSnippetSuggestion, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippetMetadata) : snippetMetadata);\n    }\n    logCollapseSmartSnippetSuggestion(snippet, metadata) {\n        const snippetMetadata = 'documentId' in snippet ? snippet : { documentId: snippet };\n        return this.logCustomEvent(SearchPageEvents.collapseSmartSnippetSuggestion, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippetMetadata) : snippetMetadata);\n    }\n    logOpenSmartSnippetSource(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetSource, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logOpenSmartSnippetSuggestionSource(info, snippet, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetSuggestionSource, info, { contentIDKey: snippet.documentId.contentIdKey, contentIDValue: snippet.documentId.contentIdValue }, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippet) : snippet);\n    }\n    logOpenSmartSnippetInlineLink(info, identifierAndLink, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetInlineLink, info, { contentIDKey: identifierAndLink.contentIDKey, contentIDValue: identifierAndLink.contentIDValue }, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), identifierAndLink) : identifierAndLink);\n    }\n    logOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetSuggestionInlineLink, info, {\n            contentIDKey: snippetAndLink.documentId.contentIdKey,\n            contentIDValue: snippetAndLink.documentId.contentIdValue,\n        }, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippetAndLink) : snippetAndLink);\n    }\n    logLikeGeneratedAnswer(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.likeGeneratedAnswer, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logDislikeGeneratedAnswer(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.dislikeGeneratedAnswer, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logOpenGeneratedAnswerSource(generatedAnswerSourceMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.openGeneratedAnswerSource, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerSourceMetadata) : generatedAnswerSourceMetadata);\n    }\n    logGeneratedAnswerCitationClick(info, citation, metadata) {\n        return this.logClickEvent(SearchPageEvents.generatedAnswerCitationClick, Object.assign(Object.assign({}, info), { documentPosition: 1 }), { contentIDKey: citation.documentId.contentIdKey, contentIDValue: citation.documentId.contentIdValue }, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), citation) : citation);\n    }\n    logGeneratedAnswerSourceHover(generatedAnswerSourceMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerSourceHover, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerSourceMetadata) : generatedAnswerSourceMetadata);\n    }\n    logGeneratedAnswerCopyToClipboard(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerCopyToClipboard, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerHideAnswers(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerHideAnswers, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerShowAnswers(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerShowAnswers, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerExpand(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerExpand, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerCollapse(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerCollapse, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerFeedbackSubmit(generatedAnswerFeedbackMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerFeedbackSubmit, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerFeedbackMetadata) : generatedAnswerFeedbackMetadata);\n    }\n    logGeneratedAnswerFeedbackSubmitV2(generatedAnswerFeedbackMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerFeedbackSubmitV2, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerFeedbackMetadata) : generatedAnswerFeedbackMetadata);\n    }\n    logRephraseGeneratedAnswer(generatedAnswerRephraseMetadata, metadata) {\n        return this.logSearchEvent(SearchPageEvents.rephraseGeneratedAnswer, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerRephraseMetadata) : generatedAnswerRephraseMetadata);\n    }\n    logRetryGeneratedAnswer(metadata) {\n        return this.logSearchEvent(SearchPageEvents.retryGeneratedAnswer, metadata ? Object.assign({}, generateMetadataToSend(metadata, false)) : {});\n    }\n    logGeneratedAnswerStreamEnd(generatedAnswerStreamEndMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerStreamEnd, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerStreamEndMetadata) : generatedAnswerStreamEndMetadata);\n    }\n    logCustomEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            const payload = Object.assign(Object.assign({}, (yield this.getBaseCustomEventRequest(customData))), { eventType: CustomEventsTypes[event], eventValue: event });\n            return this.coveoAnalyticsClient.sendCustomEvent(payload);\n        });\n    }\n    logSearchEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.coveoAnalyticsClient.sendSearchEvent(yield this.getBaseSearchEventRequest(event, metadata));\n        });\n    }\n    logClickEvent(event, info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = Object.assign(Object.assign(Object.assign({}, info), (yield this.getBaseEventRequest(Object.assign(Object.assign({}, identifier), metadata)))), { searchQueryUid: this.provider.getSearchUID(), queryPipeline: this.provider.getPipeline(), actionCause: event });\n            return this.coveoAnalyticsClient.sendClickEvent(payload);\n        });\n    }\n    logShowMoreFoldedResults(info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.logClickEvent(SearchPageEvents.showMoreFoldedResults, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n        });\n    }\n    logShowLessFoldedResults(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.logCustomEvent(SearchPageEvents.showLessFoldedResults, metadata ? generateMetadataToSend(metadata, false) : undefined);\n        });\n    }\n    logTriggerNotify(triggerNotifyMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.triggerNotify, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), triggerNotifyMetadata) : triggerNotifyMetadata);\n    }\n    getBaseCustomEventRequest(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Object.assign(Object.assign({}, (yield this.getBaseEventRequest(metadata))), { lastSearchQueryUid: this.provider.getSearchUID() });\n        });\n    }\n    getBaseSearchEventRequest(event, metadata) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            return Object.assign(Object.assign(Object.assign({}, (yield this.getBaseEventRequest(Object.assign(Object.assign({}, metadata), (_b = (_a = this.provider).getGeneratedAnswerMetadata) === null || _b === void 0 ? void 0 : _b.call(_a))))), this.provider.getSearchEventRequestPayload()), { searchQueryUid: this.provider.getSearchUID(), queryPipeline: this.provider.getPipeline(), actionCause: event });\n        });\n    }\n    getBaseEventRequest(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            return Object.assign(Object.assign({}, this.getOrigins()), { customData, language: this.provider.getLanguage(), facetState: this.provider.getFacetState ? this.provider.getFacetState() : [], anonymous: this.provider.getIsAnonymous(), clientId: yield this.getClientId() });\n        });\n    }\n    getOrigins() {\n        var _a, _b;\n        return {\n            originContext: (_b = (_a = this.provider).getOriginContext) === null || _b === void 0 ? void 0 : _b.call(_a),\n            originLevel1: this.provider.getOriginLevel1(),\n            originLevel2: this.provider.getOriginLevel2(),\n            originLevel3: this.provider.getOriginLevel3(),\n        };\n    }\n    getClientId() {\n        return this.coveoAnalyticsClient instanceof CoveoAnalyticsClient\n            ? this.coveoAnalyticsClient.getCurrentVisitorId()\n            : undefined;\n    }\n}\n\nexport { CaseAssistClient, CoveoAnalyticsClient, CoveoInsightClient, CoveoSearchPageClient, history };\n", "import {\n  isNullOrUndefined,\n  RecordValue,\n  Schema,\n  StringValue,\n} from '@coveo/bueno';\nimport {type createRelay} from '@coveo/relay';\nimport {ItemMetaData} from '@coveo/relay-event-types';\nimport {\n  AsyncThunk,\n  AsyncThunkPayloadCreator,\n  createAsyncThunk,\n} from '@reduxjs/toolkit';\nimport type {\n  CoveoSearchPageClient,\n  SearchPageClientProvider,\n  CaseAssistClient,\n  CoveoInsightClient,\n  EventBuilder,\n  EventDescription,\n  AnalyticsClientSendEventHook,\n} from 'coveo.analytics';\nimport {AnalyticsClient} from 'coveo.analytics/dist/definitions/client/analytics.js';\nimport {SearchEventResponse} from 'coveo.analytics/dist/definitions/events.js';\nimport {\n  PartialDocumentInformation,\n  DocumentIdentifier,\n} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents.js';\nimport {Logger} from 'pino';\nimport {getRelayInstanceFromState} from '../../api/analytics/analytics-relay-client.js';\nimport {\n  CaseAssistAnalyticsProvider,\n  configureCaseAssistAnalytics,\n  StateNeededByCaseAssistAnalytics,\n} from '../../api/analytics/case-assist-analytics.js';\nimport {\n  configureInsightAnalytics,\n  InsightAnalyticsProvider,\n  StateNeededByInsightAnalyticsProvider,\n} from '../../api/analytics/insight-analytics.js';\nimport {StateNeededByInstantResultsAnalyticsProvider} from '../../api/analytics/instant-result-analytics.js';\nimport {\n  configureLegacyAnalytics,\n  SearchAnalyticsProvider,\n  StateNeededBySearchAnalyticsProvider,\n} from '../../api/analytics/search-analytics.js';\nimport {GeneratedAnswerCitation} from '../../api/generated-answer/generated-answer-event-payload.js';\nimport {PreprocessRequest} from '../../api/preprocess-request.js';\nimport {Raw} from '../../api/search/search/raw.js';\nimport {Result} from '../../api/search/search/result.js';\nimport {ThunkExtraArguments} from '../../app/thunk-extra-arguments.js';\nimport {RecommendationAppState} from '../../state/recommendation-app-state.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {\n  ConfigurationSection,\n  PipelineSection,\n} from '../../state/state-sections.js';\nimport {requiredNonEmptyString} from '../../utils/validate-payload.js';\nimport {ResultWithFolding} from '../folding/folding-slice.js';\nimport {getAllIncludedResultsFrom} from '../folding/folding-utils.js';\nimport {getPipelineInitialState} from '../pipeline/pipeline-state.js';\n\nexport interface PreparableAnalyticsActionOptions<\n  StateNeeded extends ConfigurationSection,\n> {\n  analyticsClientMiddleware: AnalyticsClientSendEventHook;\n  preprocessRequest: PreprocessRequest | undefined;\n  logger: Logger;\n  getState(): StateNeeded;\n}\n\nexport type AnalyticsAsyncThunk<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> = AsyncThunk<void, void, AsyncThunkAnalyticsOptions<StateNeeded>>;\n\nexport function makeBasicNewSearchAnalyticsAction(\n  actionCause: string,\n  getState: () => StateNeededBySearchAnalyticsProvider\n) {\n  return {\n    ...new SearchAnalyticsProvider(getState).getBaseMetadata(),\n    actionCause,\n    type: actionCause,\n  };\n}\n\nexport interface PreparedAnalyticsAction<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> {\n  description?: EventDescription;\n  action: AnalyticsAsyncThunk<StateNeeded>;\n}\n\ntype PrepareAnalyticsFunction<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> = (\n  options: PreparableAnalyticsActionOptions<StateNeeded>\n) => Promise<PreparedAnalyticsAction<StateNeeded>>;\n\nexport interface PreparableAnalyticsAction<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> extends AnalyticsAsyncThunk<StateNeeded> {\n  prepare: PrepareAnalyticsFunction<StateNeeded>;\n}\n\nexport type LegacySearchAction =\n  PreparableAnalyticsAction<StateNeededBySearchAnalyticsProvider>;\n\nexport type CustomAction =\n  PreparableAnalyticsAction<StateNeededBySearchAnalyticsProvider>;\n\nexport type ClickAction =\n  PreparableAnalyticsAction<StateNeededBySearchAnalyticsProvider>;\n\nexport type InstantResultsSearchAction =\n  PreparableAnalyticsAction<StateNeededByInstantResultsAnalyticsProvider>;\n\nexport type InstantResultsClickAction =\n  PreparableAnalyticsAction<StateNeededByInstantResultsAnalyticsProvider>;\n\nexport type InsightAction =\n  PreparableAnalyticsAction<StateNeededByInsightAnalyticsProvider>;\n\nexport type CaseAssistAction =\n  PreparableAnalyticsAction<StateNeededByCaseAssistAnalytics>;\n\nexport interface AsyncThunkAnalyticsOptions<\n  T extends StateNeededBySearchAnalyticsProvider,\n> {\n  state: T;\n  extra: ThunkExtraArguments;\n}\n\nexport interface AsyncThunkInsightAnalyticsOptions<\n  T extends Partial<StateNeededByInsightAnalyticsProvider>,\n> {\n  state: T;\n  extra: ThunkExtraArguments;\n}\n\nfunction makeInstantlyCallable<T extends object>(action: T) {\n  return Object.assign(action, {instantlyCallable: true}) as T;\n}\n\nfunction makePreparableAnalyticsAction<\n  EventType extends void,\n  StateNeeded extends ConfigurationSection,\n>(\n  prefix: string,\n  buildEvent: (\n    options: PreparableAnalyticsActionOptions<StateNeeded>\n  ) => Promise<{\n    log: (\n      options: AsyncThunkAnalyticsOptions<StateNeeded>\n    ) => Promise<EventType>;\n    description?: EventDescription;\n  }>\n): PreparableAnalyticsAction<StateNeeded> {\n  const createAnalyticsAction = (\n    body: AsyncThunkPayloadCreator<\n      EventType,\n      void,\n      AsyncThunkAnalyticsOptions<StateNeeded>\n    >\n  ) =>\n    makeInstantlyCallable(\n      createAsyncThunk<\n        EventType,\n        void,\n        AsyncThunkAnalyticsOptions<StateNeeded>\n      >(prefix, body) as unknown as AnalyticsAsyncThunk<StateNeeded>\n    );\n\n  const rootAction = createAnalyticsAction(async (_, {getState, extra}) => {\n    const {analyticsClientMiddleware, preprocessRequest, logger} = extra;\n    return await (\n      await buildEvent({\n        getState,\n        analyticsClientMiddleware,\n        preprocessRequest,\n        logger,\n      })\n    ).log({state: getState(), extra});\n  });\n\n  const prepare: PrepareAnalyticsFunction<StateNeeded> = async ({\n    getState,\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  }) => {\n    const {description, log} = await buildEvent({\n      getState,\n      analyticsClientMiddleware,\n      preprocessRequest,\n      logger,\n    });\n    return {\n      description,\n      action: createAnalyticsAction(\n        async (_, {getState: getNewState, extra: newExtra}) => {\n          return await log({state: getNewState(), extra: newExtra});\n        }\n      ),\n    };\n  };\n\n  Object.assign(rootAction, {\n    prepare,\n  });\n\n  return rootAction as PreparableAnalyticsAction<StateNeeded>;\n}\n\nexport type AnalyticsActionOptions<\n  LegacyStateNeeded extends StateNeededBySearchAnalyticsProvider,\n  StateNeeded extends StateNeededBySearchAnalyticsProvider,\n  LegacyGetBuilderType,\n  LegacyProvider,\n  Client,\n  PayloadType,\n> = Omit<\n  LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider>,\n  '__legacy__getBuilder'\n> &\n  Partial<NextAnalyticsOptions<StateNeeded, PayloadType>> & {\n    __legacy__getBuilder: LegacyGetBuilderType;\n  };\n\nexport interface NextAnalyticsOptions<\n  StateNeeded extends InternalLegacyStateNeeded,\n  PayloadType,\n> {\n  analyticsType: string;\n  analyticsPayloadBuilder: (state: StateNeeded) => PayloadType;\n}\nexport interface LegacyAnalyticsOptions<\n  StateNeeded extends InternalLegacyStateNeeded,\n  Client,\n  Provider,\n> {\n  prefix: string;\n  __legacy__getBuilder: (\n    client: Client,\n    state: StateNeeded\n  ) => Promise<EventBuilder | null> | null;\n  __legacy__provider?: (getState: () => StateNeeded) => Provider;\n}\n\ninterface ProviderClass<StateNeeded, LegacyProvider> {\n  new (param: () => StateNeeded): LegacyProvider;\n}\n\nconst makeAnalyticsActionFactory = <\n  LegacyStateNeededByProvider extends InternalLegacyStateNeeded,\n  StateNeededByProvider extends InternalLegacyStateNeeded,\n  Client extends CommonClient,\n  LegacyProvider extends LegacyProviderCommon,\n  LegacyGetBuilderType = LegacyAnalyticsOptions<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  >['__legacy__getBuilder'],\n  Configurator extends AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  > = AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  >,\n>(\n  configurator: Configurator,\n  legacyGetBuilderConverter: (\n    original: LegacyGetBuilderType\n  ) => LegacyAnalyticsOptions<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  >['__legacy__getBuilder'],\n  providerClass: ProviderClass<LegacyStateNeededByProvider, LegacyProvider>\n) => {\n  function makeAnalyticsAction<\n    LegacyStateNeeded extends\n      LegacyStateNeededByProvider = LegacyStateNeededByProvider,\n    ComputedLegacyAnalyticsOptions extends LegacyAnalyticsOptions<\n      LegacyStateNeeded,\n      Client,\n      LegacyProvider\n    > = LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider>,\n  >(\n    prefix: string,\n    __legacy__getBuilder: LegacyGetBuilderType,\n    __legacy__provider?: ComputedLegacyAnalyticsOptions['__legacy__provider']\n  ): PreparableAnalyticsAction<LegacyStateNeeded>;\n  function makeAnalyticsAction<\n    LegacyStateNeeded extends\n      LegacyStateNeededByProvider = LegacyStateNeededByProvider,\n    StateNeeded extends StateNeededByProvider = StateNeededByProvider,\n    PayloadType = {},\n  >({\n    prefix,\n    __legacy__getBuilder,\n    __legacy__provider,\n    analyticsPayloadBuilder,\n    analyticsType,\n  }: AnalyticsActionOptions<\n    LegacyStateNeeded,\n    StateNeeded,\n    LegacyGetBuilderType,\n    LegacyProvider,\n    Client,\n    PayloadType\n  >): PreparableAnalyticsAction<StateNeeded>;\n  function makeAnalyticsAction<\n    LegacyStateNeeded extends\n      LegacyStateNeededByProvider = LegacyStateNeededByProvider,\n    ComputedLegacyAnalyticsOptions extends LegacyAnalyticsOptions<\n      LegacyStateNeeded,\n      Client,\n      LegacyProvider\n    > = LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider>,\n    StateNeeded extends StateNeededByProvider = StateNeededByProvider,\n    PayloadType = {},\n  >(\n    ...params:\n      | [\n          ComputedLegacyAnalyticsOptions['prefix'],\n          LegacyGetBuilderType,\n          ComputedLegacyAnalyticsOptions['__legacy__provider']?,\n        ]\n      | [\n          AnalyticsActionOptions<\n            LegacyStateNeeded,\n            StateNeeded,\n            LegacyGetBuilderType,\n            LegacyProvider,\n            Client,\n            PayloadType\n          >,\n        ]\n  ): PreparableAnalyticsAction<LegacyStateNeeded & StateNeeded> {\n    const options =\n      params.length === 1\n        ? {\n            ...params[0],\n            __legacy__getBuilder: legacyGetBuilderConverter(\n              params[0].__legacy__getBuilder\n            ),\n            analyticsConfigurator: configurator,\n            providerClass: providerClass,\n          }\n        : {\n            prefix: params[0],\n            __legacy__getBuilder: legacyGetBuilderConverter(params[1]),\n            __legacy__provider: params[2],\n            analyticsConfigurator: configurator,\n            providerClass: providerClass,\n          };\n    return internalMakeAnalyticsAction(options);\n  }\n  return makeAnalyticsAction;\n};\n\nconst shouldSendLegacyEvent = (state: ConfigurationSection) =>\n  state.configuration.analytics.analyticsMode === 'legacy';\nconst shouldSendNextEvent = (state: ConfigurationSection) =>\n  state.configuration.analytics.analyticsMode === 'next';\n\ntype CommonClient = {coveoAnalyticsClient: AnalyticsClient};\n\ntype AnalyticsConfiguratorFromStateNeeded<\n  StateNeeded extends InternalLegacyStateNeeded,\n  ReturnType extends CommonClient,\n  LegacyProvider,\n> = (\n  options: AnalyticsConfiguratorOptions<StateNeeded, LegacyProvider>\n) => ReturnType;\ninterface AnalyticsConfiguratorOptions<\n  StateNeeded extends InternalLegacyStateNeeded,\n  LegacyProvider,\n> {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: LegacyProvider;\n  getState(): StateNeeded;\n}\n\ntype InternalMakeAnalyticsActionOptions<\n  LegacyStateNeeded extends InternalLegacyStateNeeded,\n  StateNeeded extends InternalLegacyStateNeeded,\n  PayloadType,\n  AnalyticsConfigurator extends AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeeded,\n    Client,\n    LegacyProvider\n  >,\n  Client extends CommonClient,\n  LegacyProvider,\n> = LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider> &\n  Partial<NextAnalyticsOptions<StateNeeded, PayloadType>> & {\n    analyticsConfigurator: AnalyticsConfigurator;\n  } & {\n    providerClass: ProviderClass<LegacyStateNeeded, LegacyProvider>;\n  };\n\ntype InternalLegacyStateNeeded =\n  | StateNeededBySearchAnalyticsProvider\n  | StateNeededByCaseAssistAnalytics;\n\ninterface LegacyProviderCommon {\n  getSearchUID: () => string;\n}\n\nconst internalMakeAnalyticsAction = <\n  LegacyStateNeeded extends InternalLegacyStateNeeded,\n  StateNeeded extends InternalLegacyStateNeeded,\n  PayloadType,\n  Client extends CommonClient,\n  LegacyProvider extends LegacyProviderCommon,\n>({\n  prefix,\n  __legacy__getBuilder,\n  __legacy__provider,\n  analyticsPayloadBuilder,\n  analyticsType,\n  analyticsConfigurator,\n  providerClass,\n}: InternalMakeAnalyticsActionOptions<\n  LegacyStateNeeded,\n  StateNeeded,\n  PayloadType,\n  AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeeded,\n    Client,\n    LegacyProvider\n  >,\n  Client,\n  LegacyProvider\n>): PreparableAnalyticsAction<LegacyStateNeeded & StateNeeded> => {\n  __legacy__provider ??= (getState) => new providerClass(getState);\n  return makePreparableAnalyticsAction(\n    prefix,\n    async ({\n      getState,\n      analyticsClientMiddleware,\n      preprocessRequest,\n      logger,\n    }) => {\n      const loggers: ((\n        state: LegacyStateNeeded & StateNeeded\n      ) => Promise<void>)[] = [];\n      const analyticsAction: {\n        log: (\n          options: AsyncThunkAnalyticsOptions<LegacyStateNeeded & StateNeeded>\n        ) => Promise<void>;\n        description?: EventDescription;\n      } = {\n        log: async ({state}) => {\n          for (const log of loggers) {\n            await log(state);\n          }\n        },\n      };\n      const state = getState();\n      const client = analyticsConfigurator({\n        getState,\n        logger,\n        analyticsClientMiddleware,\n        preprocessRequest,\n        provider: __legacy__provider!(getState),\n      });\n      const builder = await __legacy__getBuilder(client, getState());\n      analyticsAction.description = builder?.description;\n      loggers.push(async (state: LegacyStateNeeded & StateNeeded) => {\n        if (shouldSendLegacyEvent(state)) {\n          await logLegacyEvent<LegacyStateNeeded, LegacyProvider>(\n            builder,\n            __legacy__provider!,\n            state,\n            logger,\n            client.coveoAnalyticsClient\n          );\n        }\n      });\n      const {emit} = getRelayInstanceFromState(state);\n      loggers.push(async (state: LegacyStateNeeded & StateNeeded) => {\n        if (\n          shouldSendNextEvent(state) &&\n          analyticsType &&\n          analyticsPayloadBuilder\n        ) {\n          const payload = analyticsPayloadBuilder(state);\n          await logNextEvent(emit, analyticsType, payload);\n        }\n      });\n      return analyticsAction;\n    }\n  );\n};\n\nasync function logLegacyEvent<\n  StateNeeded extends InternalLegacyStateNeeded,\n  Provider extends LegacyProviderCommon,\n>(\n  builder: EventBuilder | null,\n  __legacy__provider: (getState: () => StateNeeded) => Provider,\n  state: StateNeeded,\n  logger: Logger,\n  client: AnalyticsClient\n) {\n  __legacy__provider(() => state);\n  const response = await builder?.log({\n    searchUID: __legacy__provider!(() => state).getSearchUID(),\n  });\n  logger.info({client, response}, 'Analytics response');\n}\n\ntype LogFunction<Client, StateNeeded> = (\n  client: Client,\n  state: StateNeeded\n) => Promise<void | SearchEventResponse> | void | null;\n\nconst fromLogToLegacyBuilderFactory = (actionCause: string) => {\n  const fromLogToLegacyBuilder = <Client extends CommonClient, StateNeeded>(\n    log: (\n      client: Client,\n      state: StateNeeded\n    ) => Promise<void | SearchEventResponse> | void | null\n  ): ((client: Client, state: StateNeeded) => Promise<EventBuilder>) => {\n    return (client, state) =>\n      Promise.resolve({\n        description: {actionCause: actionCause},\n        log: async (_metadata: {searchUID: string}) => {\n          log(client, state);\n        },\n      });\n  };\n  return fromLogToLegacyBuilder;\n};\n\nexport const makeAnalyticsAction = makeAnalyticsActionFactory<\n  StateNeededBySearchAnalyticsProvider,\n  StateNeededBySearchAnalyticsProvider,\n  CoveoSearchPageClient,\n  SearchPageClientProvider\n>(configureLegacyAnalytics, (original) => original, SearchAnalyticsProvider);\n\nexport const makeCaseAssistAnalyticsAction = makeAnalyticsActionFactory<\n  StateNeededByCaseAssistAnalytics,\n  StateNeededByCaseAssistAnalytics,\n  CaseAssistClient,\n  CaseAssistAnalyticsProvider,\n  LogFunction<CaseAssistClient, StateNeededByCaseAssistAnalytics>\n>(\n  configureCaseAssistAnalytics,\n  fromLogToLegacyBuilderFactory('caseAssist'),\n  CaseAssistAnalyticsProvider\n);\n\nexport const makeInsightAnalyticsActionFactory = (actionCause: string) => {\n  const makeInsightAnalyticsAction = makeAnalyticsActionFactory<\n    StateNeededByInsightAnalyticsProvider,\n    StateNeededByInsightAnalyticsProvider,\n    CoveoInsightClient,\n    InsightAnalyticsProvider,\n    LogFunction<CoveoInsightClient, StateNeededByInsightAnalyticsProvider>\n  >(\n    configureInsightAnalytics,\n    fromLogToLegacyBuilderFactory(actionCause),\n    InsightAnalyticsProvider\n  );\n  return makeInsightAnalyticsAction;\n};\n\nexport const makeNoopAnalyticsAction = () =>\n  makeAnalyticsAction('analytics/noop', () => null);\n\nexport const noopSearchAnalyticsAction = (): LegacySearchAction =>\n  makeNoopAnalyticsAction();\n\nexport const partialDocumentInformation = (\n  result: Result,\n  state: Partial<SearchAppState>\n): PartialDocumentInformation => {\n  const paginationBasedIndex = (index: number) =>\n    index + (state.pagination?.firstResult ?? 0);\n\n  let resultIndex = -1;\n\n  const parentResults = state.search?.results as ResultWithFolding[];\n  resultIndex = findPositionWithUniqueId(result, parentResults);\n\n  if (resultIndex < 0) {\n    resultIndex = findPositionInChildResults(result, parentResults);\n  }\n\n  if (resultIndex < 0) {\n    // \u00AF\\_(\u30C4)_/\u00AF\n    resultIndex = 0;\n  }\n\n  return buildPartialDocumentInformation(\n    result,\n    paginationBasedIndex(resultIndex),\n    state\n  );\n};\n\nexport const partialRecommendationInformation = (\n  result: Result,\n  state: Partial<RecommendationAppState>\n): PartialDocumentInformation => {\n  const resultIndex =\n    state.recommendation?.recommendations.findIndex(\n      ({uniqueId}) => result.uniqueId === uniqueId\n    ) || 0;\n\n  return buildPartialDocumentInformation(result, resultIndex, state);\n};\n\nexport const partialCitationInformation = (\n  citation: GeneratedAnswerCitation,\n  state: Partial<SearchAppState>\n): PartialDocumentInformation => {\n  return {\n    sourceName: getCitationSourceName(citation),\n    documentPosition: 1,\n    documentTitle: citation.title,\n    documentUri: citation.uri,\n    documentUrl: citation.clickUri,\n    queryPipeline: state.pipeline || getPipelineInitialState(),\n  };\n};\n\nfunction getCitationSourceName(citation: GeneratedAnswerCitation) {\n  const source = citation.source;\n  if (isNullOrUndefined(source)) {\n    return 'unknown';\n  }\n  return source;\n}\n\nexport const citationDocumentIdentifier = (\n  citation: GeneratedAnswerCitation\n) => {\n  return {\n    contentIdKey: 'permanentid',\n    contentIdValue: citation.permanentid || '',\n  };\n};\n\nfunction buildPartialDocumentInformation(\n  result: Result,\n  resultIndex: number,\n  state: Partial<PipelineSection>\n): PartialDocumentInformation {\n  const collection = result.raw.collection;\n  const collectionName =\n    typeof collection === 'string' ? collection : 'default';\n\n  return {\n    collectionName,\n    documentAuthor: getDocumentAuthor(result),\n    documentPosition: resultIndex + 1,\n    documentTitle: result.title,\n    documentUri: result.uri,\n    documentUriHash: result.raw.urihash,\n    documentUrl: result.clickUri,\n    rankingModifier: result.rankingModifier || '',\n    sourceName: getSourceName(result),\n    queryPipeline: state.pipeline || getPipelineInitialState(),\n  };\n}\n\nexport const documentIdentifier = (result: Result): DocumentIdentifier => {\n  if (!result.raw.permanentid) {\n    console.warn(\n      'Missing field permanentid on result. This might cause many issues with your Coveo deployment. See https://docs.coveo.com/en/1913 and https://docs.coveo.com/en/1640 for more information.',\n      result\n    );\n  }\n  return {\n    contentIDKey: 'permanentid',\n    contentIDValue: result.raw.permanentid || '',\n  };\n};\n\nconst rawPartialDefinition = {\n  urihash: new StringValue(),\n  sourcetype: new StringValue(),\n  permanentid: new StringValue(),\n};\n\nexport const resultPartialDefinition = {\n  uniqueId: requiredNonEmptyString,\n  raw: new RecordValue({values: rawPartialDefinition}),\n  title: requiredNonEmptyString,\n  uri: requiredNonEmptyString,\n  clickUri: requiredNonEmptyString,\n  rankingModifier: new StringValue({required: false, emptyAllowed: true}),\n};\n\nfunction partialRawPayload(raw: Raw): Partial<Raw> {\n  return Object.assign(\n    {},\n    ...Object.keys(rawPartialDefinition).map((key) => ({[key]: raw[key]}))\n  );\n}\n\nfunction partialResultPayload(result: Result): Partial<Result> {\n  return Object.assign(\n    {},\n    ...Object.keys(resultPartialDefinition).map((key) => ({\n      [key]: result[key as keyof typeof resultPartialDefinition],\n    })),\n    {raw: partialRawPayload(result.raw)}\n  );\n}\n\nfunction getDocumentAuthor(result: Result) {\n  const author = result.raw['author'];\n  if (isNullOrUndefined(author)) {\n    return 'unknown';\n  }\n\n  return Array.isArray(author) ? author.join(';') : `${author}`;\n}\n\nfunction getSourceName(result: Result) {\n  const source = result.raw['source'];\n  if (isNullOrUndefined(source)) {\n    return 'unknown';\n  }\n  return source;\n}\n\nexport const validateResultPayload = (result: Result) =>\n  new Schema(resultPartialDefinition).validate(partialResultPayload(result));\n\nfunction findPositionInChildResults(\n  targetResult: Result,\n  parentResults: ResultWithFolding[]\n) {\n  for (const [i, parent] of parentResults.entries()) {\n    const children = getAllIncludedResultsFrom(parent);\n    const childIndex = findPositionWithUniqueId(targetResult, children);\n    if (childIndex !== -1) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction findPositionWithUniqueId(\n  targetResult: Result,\n  results: ResultWithFolding[] | Result[] = []\n) {\n  return results.findIndex(({uniqueId}) => uniqueId === targetResult.uniqueId);\n}\n\nasync function logNextEvent<PayloadType>(\n  emitEvent: ReturnType<typeof createRelay>['emit'],\n  type: string,\n  payload: PayloadType\n): Promise<void> {\n  //@ts-expect-error will be fixed when relay updates\n  await emitEvent(type, payload);\n  return;\n}\n\nexport const analyticsEventItemMetadata = (\n  result: Result,\n  state: Partial<SearchAppState>\n): ItemMetaData => {\n  const identifier = documentIdentifier(result);\n  const information = partialDocumentInformation(result, state);\n  return {\n    uniqueFieldName: identifier.contentIDKey,\n    uniqueFieldValue: identifier.contentIDValue,\n    title: information.documentTitle,\n    author: information.documentAuthor,\n    url: information.documentUri,\n  };\n};\n", "import {createRelay} from '@coveo/relay';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommerceConfigurationSection,\n  ConfigurationSection,\n} from '../../state/state-sections.js';\nimport {getAnalyticsNextApiBaseUrl} from '../platform-client.js';\nimport {getAnalyticsSource} from './analytics-selectors.js';\n\ntype StateNeededByRelay = ConfigurationSection | CommerceConfigurationSection;\n\nexport const getRelayInstanceFromState = createSelector(\n  (state: StateNeededByRelay) => state.configuration.organizationId,\n  (state: StateNeededByRelay) => state.configuration.environment,\n  (state: StateNeededByRelay) => state.configuration.accessToken,\n  (state: StateNeededByRelay) => state.configuration.analytics,\n  (state: StateNeededByRelay) =>\n    getAnalyticsSource(state.configuration.analytics),\n  (\n    organizationId,\n    environment,\n    token,\n    {trackingId, apiBaseUrl, enabled},\n    source\n  ) =>\n    createRelay({\n      mode: enabled ? 'emit' : 'disabled',\n      url:\n        apiBaseUrl ?? getAnalyticsNextApiBaseUrl(organizationId, environment),\n      token,\n      trackingId,\n      source: source,\n    })\n);\n", "function emit({ config, environment, event, listenerManager, }) {\n    const { url, token, mode } = config;\n    const isEnabled = mode !== \"disabled\";\n    if (isEnabled) {\n        listenerManager.call(event);\n        environment.send(url, token, event);\n    }\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nfunction createClientIdManager(environmentManager) {\n    return {\n        getClientId: () => {\n            const key = \"visitorId\";\n            const environment = environmentManager.get();\n            const storage = environment.storage;\n            const existingClientId = storage.getItem(key);\n            const clientId = existingClientId && validate(existingClientId)\n                ? existingClientId\n                : environment.generateUUID();\n            storage.setItem(key, clientId);\n            return clientId;\n        },\n    };\n}\n\nconst version = \"0.7.10\";\n\nfunction getEventConfig(config) {\n    const { trackingId } = config;\n    return { trackingId };\n}\nfunction getSource(config) {\n    return (config.source || []).concat([`relay@${version}`]);\n}\nfunction createMeta(type, config, environment, clientIdManager) {\n    const { getReferrer, getLocation, getUserAgent } = environment;\n    const eventConfig = getEventConfig(config);\n    const clientId = clientIdManager.getClientId();\n    return Object.freeze({\n        type,\n        config: eventConfig,\n        ts: Date.now(),\n        source: getSource(config),\n        clientId,\n        userAgent: getUserAgent(),\n        referrer: getReferrer(),\n        location: getLocation(),\n    });\n}\n\nfunction createRelayEvent(type, payload, config, environment, clientIdManager) {\n    return {\n        ...payload,\n        meta: createMeta(type, config, environment, clientIdManager),\n    };\n}\n\nconst ANY_EVENT_TYPE = \"*\";\nfunction createListenerManager() {\n    const listeners = [];\n    function getListenerIndex({ type, callback }) {\n        return listeners.findIndex((listener) => listener.type === type && listener.callback === callback);\n    }\n    function isMatchesType(listener, type) {\n        return listener.type === \"*\" || type === listener.type;\n    }\n    function add(listener) {\n        if (getListenerIndex(listener) < 0) {\n            listeners.push(listener);\n        }\n        return () => remove(listener.type, listener.callback);\n    }\n    function call(event) {\n        listeners.forEach((listener) => {\n            if (isMatchesType(listener, event.meta.type)) {\n                try {\n                    listener.callback(event);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            }\n        });\n    }\n    function removeMultiple(type) {\n        if (type === ANY_EVENT_TYPE) {\n            listeners.length = 0;\n        }\n        else {\n            for (let i = listeners.length - 1; i >= 0; i--) {\n                if (listeners[i].type === type) {\n                    listeners.splice(i, 1);\n                }\n            }\n        }\n    }\n    function removeOne(listener) {\n        const index = getListenerIndex(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    function remove(type, callback) {\n        callback ? removeOne({ type, callback }) : removeMultiple(type);\n    }\n    return {\n        add,\n        call,\n        remove,\n    };\n}\n\nfunction pick({ url, token, trackingId, ...rest }) {\n    return Object.freeze({\n        url,\n        token,\n        trackingId,\n        ...(!!rest.mode && { mode: rest.mode }),\n        ...(!!rest.source && { source: rest.source }),\n    });\n}\nfunction createConfigManager(initialConfig) {\n    let _config = pick(initialConfig);\n    return {\n        get: () => _config,\n        update: (updatedConfig) => {\n            _config = pick({ ..._config, ...updatedConfig });\n        },\n    };\n}\n\nfunction createExplorerMessenger() {\n  const isBrowser = typeof window !== \"undefined\";\n  return {\n    sendMessage(message) {\n      isBrowser && window.postMessage(message, \"*\");\n    }\n  };\n}\n\nconst cookieManager = createCookieManager();\nfunction createCookieManager() {\n    const prefix = \"coveo_\";\n    const getDomain = (host) => {\n        const parts = host.split(\".\").slice(-2);\n        return parts.length == 2 ? parts.join(\".\") : \"\";\n    };\n    return {\n        getItem(key) {\n            const cookiePrefix = `${prefix}${key}=`;\n            const cookieArray = document.cookie.split(\";\");\n            for (const cookie of cookieArray) {\n                const prettifyCookie = cookie.replace(/^\\s+/, \"\");\n                if (prettifyCookie.lastIndexOf(cookiePrefix, 0) === 0) {\n                    return prettifyCookie.substring(cookiePrefix.length, prettifyCookie.length);\n                }\n            }\n            return null;\n        },\n        setItem(key, data, expire) {\n            const domain = getDomain(window.location.hostname);\n            const expireSection = `;expires=${new Date(new Date().getTime() + expire).toUTCString()}`;\n            const domainSection = domain ? `;domain=${domain}` : \"\";\n            document.cookie = `${prefix}${key}=${data}${expireSection}${domainSection};path=/;SameSite=Lax`;\n        },\n        removeItem(key) {\n            this.setItem(key, \"\", -1);\n        },\n    };\n}\n\nfunction createBrowserStorage() {\n    return {\n        getItem(key) {\n            return cookieManager.getItem(key) || localStorage.getItem(key);\n        },\n        removeItem(key) {\n            cookieManager.removeItem(key);\n            localStorage.removeItem(key);\n        },\n        setItem(key, data) {\n            const oneYear = 31556952000;\n            localStorage.setItem(key, data);\n            cookieManager.setItem(key, data, oneYear);\n        },\n    };\n}\n\nfunction getReferrer() {\n    const referrer = document.referrer;\n    return referrer === \"\" ? null : referrer;\n}\nfunction buildBrowserEnvironment() {\n    return {\n        runtime: \"browser\",\n        send: (url, token, event) => {\n            const response = navigator.sendBeacon(`${url}?access_token=${token}`, new Blob([JSON.stringify([event])], {\n                type: \"application/json\",\n            }));\n            const messenger = createExplorerMessenger();\n            messenger.sendMessage({ kind: \"EVENT_PROTOCOL\", event, url, token });\n            if (!response) {\n                throw new Error(`Failed to send the event(s) because the payload size exceeded the maximum allowed size (32 KB). Please contact support if the problem persists.`);\n            }\n        },\n        getReferrer: () => getReferrer(),\n        getLocation: () => window.location.href,\n        getUserAgent: () => navigator.userAgent,\n        generateUUID: () => crypto.randomUUID(),\n        storage: createBrowserStorage(),\n    };\n}\n\n// From: https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#feature-detecting_localstorage\nfunction localStorageAvailable() {\n    try {\n        const x = \"__storage_test__\";\n        localStorage.setItem(x, x);\n        localStorage.removeItem(x);\n        return true;\n    }\n    catch (e) {\n        return (e instanceof DOMException &&\n            e.name === \"QuotaExceededError\" &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            localStorage &&\n            localStorage.length !== 0);\n    }\n}\n\nfunction createNullStorage() {\n    return {\n        getItem() {\n            return null;\n        },\n        removeItem() {\n            return;\n        },\n        setItem() {\n            return;\n        },\n    };\n}\n\nfunction buildNullEnvironment() {\n    return {\n        runtime: \"null\",\n        send: () => undefined,\n        getReferrer: () => null,\n        getLocation: () => null,\n        getUserAgent: () => null,\n        generateUUID: () => \"\",\n        storage: createNullStorage(),\n    };\n}\n\nfunction buildEnvironment(configManager) {\n    const active = configManager.get().mode !== \"disabled\";\n    if (active && isBrowser() && localStorageAvailable()) {\n        return buildBrowserEnvironment();\n    }\n    return buildNullEnvironment();\n}\nfunction isBrowser() {\n    try {\n        return typeof window === \"object\";\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction createEnvironmentManager(configManager) {\n    return {\n        get: () => Object.freeze(buildEnvironment(configManager)),\n    };\n}\n\n/**\n * Initializes the Relay library object.\n * @param {RelayConfig} initialConfig\n * @returns {Relay}\n */\nfunction createRelay(initialConfig) {\n    const configManager = createConfigManager(initialConfig);\n    const listenerManager = createListenerManager();\n    const environmentManager = createEnvironmentManager(configManager);\n    const clientIdManager = createClientIdManager(environmentManager);\n    return {\n        emit: (type, payload) => {\n            const config = configManager.get();\n            const environment = environmentManager.get();\n            const event = createRelayEvent(type, payload, config, environment, clientIdManager);\n            return emit({\n                config,\n                environment,\n                event,\n                listenerManager,\n            });\n        },\n        getMeta: (type) => createMeta(type, configManager.get(), environmentManager.get(), clientIdManager),\n        on: (type, callback) => listenerManager.add({ type, callback }),\n        off: (type, callback) => listenerManager.remove(type, callback),\n        updateConfig: (config) => configManager.update(config),\n        version,\n    };\n}\n\nexport { createRelay };\n", "import {\n  AnalyticsClientSendEventHook,\n  CaseAssistClient,\n  CaseAssistClientProvider,\n} from 'coveo.analytics';\nimport {Logger} from 'pino';\nimport {getSearchHubInitialState} from '../../features/search-hub/search-hub-state.js';\nimport {\n  CaseAssistConfigurationSection,\n  CaseFieldSection,\n  CaseInputSection,\n  ConfigurationSection,\n  DocumentSuggestionSection,\n  SearchHubSection,\n} from '../../state/state-sections.js';\nimport {getOrganizationEndpoint} from '../platform-client.js';\nimport {PreprocessRequest} from '../preprocess-request.js';\nimport {\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils.js';\n\nexport type StateNeededByCaseAssistAnalytics = ConfigurationSection &\n  Partial<CaseAssistConfigurationSection> &\n  Partial<SearchHubSection> &\n  Partial<CaseFieldSection> &\n  Partial<CaseInputSection> &\n  Partial<DocumentSuggestionSection>;\n\nexport class CaseAssistAnalyticsProvider implements CaseAssistClientProvider {\n  private state: StateNeededByCaseAssistAnalytics;\n  constructor(getState: () => StateNeededByCaseAssistAnalytics) {\n    this.state = getState();\n  }\n\n  public getSearchUID() {\n    return null as unknown as string;\n  }\n\n  public getOriginLevel1() {\n    return this.state.searchHub || getSearchHubInitialState();\n  }\n}\n\ninterface ConfigureCaseAssistAnalyticsOptions {\n  getState: () => StateNeededByCaseAssistAnalytics;\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: CaseAssistClientProvider;\n}\n\nexport const configureCaseAssistAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new CaseAssistAnalyticsProvider(getState),\n}: ConfigureCaseAssistAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const endpoint =\n    state.configuration.analytics.apiBaseUrl ??\n    getOrganizationEndpoint(\n      state.configuration.organizationId,\n      state.configuration.environment,\n      'analytics'\n    );\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enableAnalytics = state.configuration.analytics.enabled;\n  const client = new CaseAssistClient(\n    {\n      enableAnalytics,\n      token,\n      endpoint,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enableAnalytics) {\n    client.disable();\n  }\n  return client;\n};\n", "export const getSearchHubInitialState = () => 'default';\n", "import {\n  AnalyticsClientSendEventHook,\n  InsightClientProvider,\n  CoveoInsightClient,\n} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events.js';\nimport {Logger} from 'pino';\nimport {\n  buildFacetStateMetadata,\n  getStateNeededForFacetMetadata,\n  SectionNeededForFacetMetadata,\n} from '../../features/facets/facet-set/facet-set-analytics-actions-utils.js';\nimport {getQueryInitialState} from '../../features/query/query-state.js';\nimport {getSearchInitialState} from '../../features/search/search-state.js';\nimport {InsightAppState} from '../../state/insight-app-state.js';\nimport {\n  ConfigurationSection,\n  GeneratedAnswerSection,\n  PipelineSection,\n  QuerySection,\n  SearchHubSection,\n  SearchSection,\n  TriggerSection,\n} from '../../state/state-sections.js';\nimport {getOrganizationEndpoint} from '../platform-client.js';\nimport {PreprocessRequest} from '../preprocess-request.js';\nimport {BaseAnalyticsProvider} from './base-analytics.js';\nimport {\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils.js';\n\nexport type StateNeededByInsightAnalyticsProvider = ConfigurationSection &\n  Partial<InsightAppState> &\n  Partial<\n    SearchHubSection &\n      SearchSection &\n      PipelineSection &\n      QuerySection &\n      TriggerSection &\n      SectionNeededForFacetMetadata &\n      GeneratedAnswerSection\n  >;\n\nexport class InsightAnalyticsProvider\n  extends BaseAnalyticsProvider<StateNeededByInsightAnalyticsProvider>\n  implements InsightClientProvider\n{\n  public getSearchUID(): string {\n    const newState = this.getState();\n    return (\n      newState.search?.searchResponseId ||\n      newState.search?.response.searchUid ||\n      getSearchInitialState().response.searchUid\n    );\n  }\n  public getPipeline(): string {\n    return (\n      this.state.pipeline || this.state.search?.response.pipeline || 'default'\n    );\n  }\n  public getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  > {\n    return {\n      queryText: this.queryText,\n      responseTime: this.responseTime,\n      results: this.mapResultsToAnalyticsDocument(),\n      numberOfResults: this.numberOfResults,\n    };\n  }\n\n  public getFacetState() {\n    return buildFacetStateMetadata(getStateNeededForFacetMetadata(this.state));\n  }\n\n  public getBaseMetadata() {\n    const state = this.getState();\n    const baseObject = super.getBaseMetadata();\n\n    const generativeQuestionAnsweringId =\n      state.search?.response?.extendedResults?.generativeQuestionAnsweringId;\n\n    if (generativeQuestionAnsweringId) {\n      baseObject['generativeQuestionAnsweringId'] =\n        generativeQuestionAnsweringId;\n    }\n\n    return baseObject;\n  }\n\n  public getGeneratedAnswerMetadata() {\n    const state = this.getState();\n    return {\n      ...(state.generatedAnswer?.isVisible !== undefined && {\n        showGeneratedAnswer: state.generatedAnswer.isVisible,\n      }),\n    };\n  }\n\n  private get queryText() {\n    return this.state.query?.q || getQueryInitialState().q;\n  }\n\n  private get responseTime() {\n    return this.state.search?.duration || getSearchInitialState().duration;\n  }\n\n  private mapResultsToAnalyticsDocument() {\n    return this.state.search?.response.results.map((r) => ({\n      documentUri: r.uri,\n      documentUriHash: r.raw.urihash,\n    }));\n  }\n\n  private get numberOfResults() {\n    return (\n      this.state.search?.response.results.length ||\n      getSearchInitialState().response.results.length\n    );\n  }\n}\n\ninterface ConfigureInsightAnalyticsOptions {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: InsightClientProvider;\n  getState(): StateNeededByInsightAnalyticsProvider;\n}\n\nexport const configureInsightAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new InsightAnalyticsProvider(getState),\n}: ConfigureInsightAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const apiBaseUrl =\n    state.configuration.analytics.apiBaseUrl ??\n    getOrganizationEndpoint(\n      state.configuration.organizationId,\n      state.configuration.environment,\n      'analytics'\n    );\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enabled = state.configuration.analytics.enabled;\n\n  const client = new CoveoInsightClient(\n    {\n      enableAnalytics: enabled,\n      token,\n      endpoint: apiBaseUrl,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint: apiBaseUrl,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enabled) {\n    client.disable();\n  }\n\n  return client;\n};\n", "import {FacetStateMetadata} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents.js';\nimport {\n  AutomaticFacetSection,\n  CategoryFacetSection,\n  DateFacetSection,\n  FacetSection,\n  NumericFacetSection,\n} from '../../../state/state-sections.js';\nimport {getAutomaticFacetSetInitialState} from '../automatic-facet-set/automatic-facet-set-state.js';\nimport {AutomaticFacetResponse} from '../automatic-facet-set/interfaces/response.js';\nimport {categoryFacetRequestSelectedValuesSelector} from '../category-facet-set/category-facet-set-selectors.js';\nimport {getCategoryFacetSetInitialState} from '../category-facet-set/category-facet-set-state.js';\nimport {CategoryFacetRequest} from '../category-facet-set/interfaces/request.js';\nimport {FacetType} from '../facet-api/request.js';\nimport {\n  AnyFacetRequest,\n  AnyFacetValueRequest,\n} from '../generic/interfaces/generic-facet-request.js';\nimport {getDateFacetSetInitialState} from '../range-facets/date-facet-set/date-facet-set-state.js';\nimport {\n  DateFacetRequest,\n  DateRangeRequest,\n} from '../range-facets/date-facet-set/interfaces/request.js';\nimport {\n  NumericFacetRequest,\n  NumericRangeRequest,\n} from '../range-facets/numeric-facet-set/interfaces/request.js';\nimport {getNumericFacetSetInitialState} from '../range-facets/numeric-facet-set/numeric-facet-set-state.js';\nimport {getFacetSetInitialState} from './facet-set-state.js';\nimport {FacetRequest, FacetValueRequest} from './interfaces/request.js';\n\nexport type SectionNeededForFacetMetadata = FacetSection &\n  CategoryFacetSection &\n  DateFacetSection &\n  NumericFacetSection &\n  AutomaticFacetSection;\n\nexport type FacetSelectionChangeMetadata = {\n  facetId: string;\n  facetValue: string;\n};\n\nexport const buildFacetBaseMetadata = (\n  facetId: string,\n  state: SectionNeededForFacetMetadata\n) => {\n  const facet = getFacetRequest(state, facetId);\n\n  const facetField = facet ? facet.field : '';\n  const facetTitle = getFacetTitle(facetField, facetId);\n\n  return {facetId, facetField, facetTitle};\n};\n\nexport function buildFacetSelectionChangeMetadata(\n  payload: FacetSelectionChangeMetadata,\n  state: SectionNeededForFacetMetadata\n) {\n  const {facetId, facetValue} = payload;\n  const base = buildFacetBaseMetadata(facetId, state);\n  const facetType = getFacetType(state, facetId);\n  return {\n    ...base,\n    facetValue:\n      facetType === 'hierarchical'\n        ? getCategoryFacetSelectedValue(state, facetId)\n        : facetValue,\n  };\n}\n\nexport function getStateNeededForFacetMetadata(\n  s: Partial<SectionNeededForFacetMetadata>\n): SectionNeededForFacetMetadata {\n  return {\n    facetSet: s.facetSet ?? getFacetSetInitialState(),\n    categoryFacetSet: s.categoryFacetSet ?? getCategoryFacetSetInitialState(),\n    dateFacetSet: s.dateFacetSet ?? getDateFacetSetInitialState(),\n    numericFacetSet: s.numericFacetSet ?? getNumericFacetSetInitialState(),\n    automaticFacetSet:\n      s.automaticFacetSet ?? getAutomaticFacetSetInitialState(),\n  };\n}\n\nexport const buildFacetStateMetadata = (\n  state: SectionNeededForFacetMetadata\n) => {\n  const facetState: FacetStateMetadata[] = [];\n\n  getFacetRequests(state).forEach((facetRequest, facetIndex) => {\n    const facetType = getFacetType(state, facetRequest.facetId);\n    const facetRequestAnalytics = mapFacetRequestToAnalytics(\n      facetRequest,\n      facetIndex + 1\n    );\n\n    if (isCategoryFacetRequest(facetRequest)) {\n      const hasSelectedValue = !!categoryFacetRequestSelectedValuesSelector(\n        state,\n        facetRequest.facetId\n      ).length;\n\n      if (!hasSelectedValue) {\n        return;\n      }\n\n      facetState.push({\n        ...facetRequestAnalytics,\n        ...mapCategoryFacetValueToAnalytics(state, facetRequest.facetId),\n        facetType,\n        state: 'selected',\n      });\n\n      return;\n    }\n\n    facetRequest.currentValues.forEach((facetValue, facetValueIndex) => {\n      if (facetValue.state === 'idle') {\n        return;\n      }\n\n      const facetValueAnalytics = mapFacetValueToAnalytics(\n        facetValue,\n        facetValueIndex + 1,\n        facetType\n      );\n\n      const facetDisplayValueAnalytics = isSpecificFacetRequest(facetRequest)\n        ? mapFacetDisplayValueToAnalytics(facetValue as FacetValueRequest)\n        : mapRangeDisplayFacetValueToAnalytics(\n            facetValue as NumericRangeRequest | DateRangeRequest\n          );\n\n      facetState.push({\n        ...facetRequestAnalytics,\n        ...facetValueAnalytics,\n        ...facetDisplayValueAnalytics,\n      });\n    });\n  });\n\n  getAutomaticFacets(state).forEach((facet, facetIndex) => {\n    const facetAnalytics = mapAutomaticFacetToAnalytics(facet, facetIndex + 1);\n\n    facet.values.forEach((facetValue, facetValueIndex) => {\n      if (facetValue.state === 'idle') {\n        return;\n      }\n\n      const facetValueAnalytics = mapFacetValueToAnalytics(\n        facetValue,\n        facetValueIndex + 1,\n        'specific'\n      );\n\n      const facetDisplayValueAnalytics =\n        mapFacetDisplayValueToAnalytics(facetValue);\n\n      facetState.push({\n        ...facetAnalytics,\n        ...facetValueAnalytics,\n        ...facetDisplayValueAnalytics,\n      });\n    });\n  });\n\n  return facetState;\n};\n\nconst isSpecificFacetRequest = (\n  request: AnyFacetRequest\n): request is FacetRequest => request.type === 'specific';\n\nconst isCategoryFacetRequest = (\n  request: AnyFacetRequest\n): request is CategoryFacetRequest => request.type === 'hierarchical';\n\nconst getFacetRequests = (state: SectionNeededForFacetMetadata) => {\n  return [\n    ...Object.values(state.facetSet),\n    ...Object.values(state.categoryFacetSet),\n    ...Object.values(state.dateFacetSet),\n    ...Object.values(state.numericFacetSet),\n  ].map((facet) => facet.request);\n};\n\nconst getAutomaticFacets = (\n  state: SectionNeededForFacetMetadata\n): AutomaticFacetResponse[] => {\n  return [...Object.values(state.automaticFacetSet.set)].map(\n    (facet) => facet.response\n  );\n};\n\nconst mapFacetValueToAnalytics = (\n  facetValue: AnyFacetValueRequest,\n  valuePosition: number,\n  facetType: FacetType\n) => {\n  return {\n    state: facetValue.state,\n    valuePosition,\n    facetType,\n  };\n};\n\nconst mapRangeDisplayFacetValueToAnalytics = (\n  facetValue: NumericRangeRequest | DateRangeRequest\n) => {\n  return {\n    displayValue: `${facetValue.start}..${facetValue.end}`,\n    value: `${facetValue.start}..${facetValue.end}`,\n    start: facetValue.start,\n    end: facetValue.end,\n    endInclusive: facetValue.endInclusive,\n  };\n};\n\nconst mapFacetDisplayValueToAnalytics = (facetValue: FacetValueRequest) => {\n  return {\n    displayValue: facetValue.value,\n    value: facetValue.value,\n  };\n};\n\nconst getCategoryFacetSelectedValue = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n) => {\n  const selectedCategoryFacetValues =\n    categoryFacetRequestSelectedValuesSelector(state, facetId);\n  return selectedCategoryFacetValues\n    .map((selectedCategoryFacetValue) => selectedCategoryFacetValue.value)\n    .join(';');\n};\n\nconst mapCategoryFacetValueToAnalytics = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n) => {\n  const valuePosition = 1;\n  const value = getCategoryFacetSelectedValue(state, facetId);\n  return {\n    value,\n    valuePosition,\n    displayValue: value,\n  };\n};\n\nconst mapAutomaticFacetToAnalytics = (\n  facet: AutomaticFacetResponse,\n  facetPosition: number\n) => {\n  return {\n    title: getFacetTitle(facet.field, facet.field),\n    field: facet.field,\n    id: facet.field,\n    facetPosition,\n  };\n};\n\nconst mapFacetRequestToAnalytics = (\n  request: AnyFacetRequest,\n  facetPosition: number\n) => {\n  return {\n    title: getFacetTitle(request.field, request.facetId),\n    field: request.field,\n    id: request.facetId,\n    facetPosition,\n  };\n};\n\nconst getFacetTitle = (field: string, facetId: string) => {\n  return `${field}_${facetId}`;\n};\n\nconst getFacetRequest = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n):\n  | FacetRequest\n  | CategoryFacetRequest\n  | DateFacetRequest\n  | NumericFacetRequest\n  | undefined => {\n  return (\n    state.facetSet[facetId]?.request ||\n    state.categoryFacetSet[facetId]?.request ||\n    state.dateFacetSet[facetId]?.request ||\n    state.numericFacetSet[facetId]?.request ||\n    state.automaticFacetSet.set[facetId]?.response\n  );\n};\n\nconst getFacetType = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n) => {\n  const facet = getFacetRequest(state, facetId);\n  return facet ? facet.type : 'specific';\n};\n", "import {\n  DESIRED_COUNT_DEFAULT,\n  NUMBER_OF_VALUE_DEFAULT,\n} from './automatic-facet-set-constants.js';\nimport {AutomaticFacetResponse} from './interfaces/response.js';\n\nexport type AutomaticFacetSlice = {\n  response: AutomaticFacetResponse;\n};\n\nexport type AutomaticFacetSetState = {\n  /**\n   * The desired count of facets.\n   *\n   * Minimum: `1`\n   * Maximum: `20`\n   * @defaultValue `5`\n   */\n  desiredCount: number;\n  /**\n   * The desired number of automatically generated facet values.\n   *\n   * Minimum: `1`\n   * @defaultValue `8`\n   */\n  numberOfValues: number;\n  /**\n   * A map of automatic facet field to an automatic facet slice containing the response.\n   */\n  set: Record<string, AutomaticFacetSlice>;\n};\n\nexport function getAutomaticFacetSetInitialState(): AutomaticFacetSetState {\n  return {\n    desiredCount: DESIRED_COUNT_DEFAULT,\n    numberOfValues: NUMBER_OF_VALUE_DEFAULT,\n    set: {},\n  };\n}\n", "export const DESIRED_COUNT_MINIMUM = 1;\nexport const DESIRED_COUNT_MAXIMUM = 20;\nexport const DESIRED_COUNT_DEFAULT = 5;\n\nexport const NUMBER_OF_VALUE_MINIMUM = 1;\nexport const NUMBER_OF_VALUE_DEFAULT = 8;\n", "import {\n  CategoryFacetSection,\n  SearchSection,\n} from '../../../state/state-sections.js';\nimport {baseFacetResponseSelector} from '../facet-set/facet-set-selectors.js';\nimport {AnyFacetResponse} from '../generic/interfaces/generic-facet-response.js';\nimport {findActiveValueAncestry} from './category-facet-utils.js';\nimport {CategoryFacetResponse} from './interfaces/response.js';\n\nfunction isCategoryFacetResponse(\n  state: CategoryFacetSection,\n  response: AnyFacetResponse | undefined\n): response is CategoryFacetResponse {\n  return !!response && response.facetId in state.categoryFacetSet;\n}\n\nexport const categoryFacetResponseSelector = (\n  state: CategoryFacetSection & Partial<SearchSection>,\n  facetId: string\n) => {\n  const response = baseFacetResponseSelector(state, facetId);\n  if (isCategoryFacetResponse(state, response)) {\n    return response;\n  }\n\n  return undefined;\n};\n\nexport const categoryFacetRequestSelector = (\n  state: CategoryFacetSection,\n  id: string\n) => {\n  return state.categoryFacetSet[id]?.request;\n};\n\nexport const categoryFacetResponseSelectedValuesSelector = (\n  state: CategoryFacetSection & Partial<SearchSection>,\n  facetId: string\n) => {\n  const facetResponse = categoryFacetResponseSelector(state, facetId);\n  return findActiveValueAncestry(facetResponse?.values ?? []);\n};\n\nexport const categoryFacetRequestSelectedValuesSelector = (\n  state: CategoryFacetSection,\n  facetId: string\n) => {\n  const facetRequest = categoryFacetRequestSelector(state, facetId);\n  return findActiveValueAncestry(facetRequest?.currentValues ?? []);\n};\n", "import {SearchSection} from '../../../state/state-sections.js';\nimport {FacetSection} from '../../../state/state-sections.js';\nimport {AnyFacetResponse} from '../generic/interfaces/generic-facet-response.js';\nimport {FacetResponse, FacetValue} from './interfaces/response.js';\n\nfunction isFacetResponse(\n  state: FacetSection,\n  response: AnyFacetResponse | undefined\n): response is FacetResponse {\n  return !!response && response.facetId in state.facetSet;\n}\n\nexport const baseFacetResponseSelector = (\n  state: Partial<SearchSection>,\n  id: string\n) => state.search?.response.facets.find((response) => response.facetId === id);\n\nexport const facetRequestSelector = (state: FacetSection, id: string) =>\n  state.facetSet[id]?.request;\n\nexport const facetResponseSelector = (\n  state: SearchSection & FacetSection,\n  facetId: string\n) => {\n  const response = baseFacetResponseSelector(state, facetId);\n  return isFacetResponse(state, response) ? response : undefined;\n};\n\nexport const facetResponseSelectedValuesSelector = (\n  state: SearchSection & FacetSection,\n  facetId: string\n) =>\n  facetResponseSelector(state, facetId)?.values.filter(\n    (value) => value.state === 'selected'\n  ) || [];\n\nexport const facetResponseActiveValuesSelector = (\n  state: SearchSection & FacetSection,\n  facetId: string\n): FacetValue[] =>\n  facetResponseSelector(state, facetId)?.values.filter(\n    (value) => value.state !== 'idle'\n  ) || [];\n\nexport const isFacetLoadingResponseSelector = (state: SearchSection) =>\n  state.search.isLoading;\n", "import {CategoryFacetRequest} from './interfaces/request.js';\n\nexport type CategoryFacetSlice = {\n  request: CategoryFacetRequest;\n  initialNumberOfValues: number;\n};\n\nexport type CategoryFacetSetState = Record<string, CategoryFacetSlice>;\n\nexport function getCategoryFacetSetInitialState(): CategoryFacetSetState {\n  return {};\n}\n", "import {DateFacetRequest} from './interfaces/request.js';\n\nexport type DateFacetSlice = {\n  request: DateFacetRequest;\n};\n\nexport type DateFacetSetState = Record<string, DateFacetSlice>;\n\nexport function getDateFacetSetSliceInitialState(\n  request: DateFacetRequest\n): DateFacetSlice {\n  return {request};\n}\n\nexport function getDateFacetSetInitialState(): DateFacetSetState {\n  return {};\n}\n", "import {NumericFacetRequest} from './interfaces/request.js';\n\nexport type NumericFacetSlice = {\n  request: NumericFacetRequest;\n};\n\nexport type NumericFacetSetState = Record<string, NumericFacetSlice>;\n\nexport function getNumericFacetSetSliceInitialState(\n  request: NumericFacetRequest\n): NumericFacetSlice {\n  return {request};\n}\n\nexport function getNumericFacetSetInitialState(): NumericFacetSetState {\n  return {};\n}\n", "import {FacetRequest} from './interfaces/request.js';\n\nexport type FacetSlice = {\n  request: FacetRequest;\n  hasBreadcrumbs: boolean;\n};\n\n/**\n * A map of specific facet identifier (typically, the facet field) to a facet request\n */\nexport type FacetSetState = Record<string, FacetSlice>;\n\nexport function getFacetSetSliceInitialState(\n  request: FacetRequest\n): FacetSlice {\n  return {request, hasBreadcrumbs: true};\n}\n\nexport function getFacetSetInitialState(): FacetSetState {\n  return {};\n}\n", "export interface QueryState {\n  /**\n   * The basic query expression (e.g., `acme tornado seeds`).\n   */\n  q: string;\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   */\n  enableQuerySyntax: boolean;\n}\n\nexport const getQueryInitialState: () => QueryState = () => ({\n  q: '',\n  enableQuerySyntax: false,\n});\n", "import {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response.js';\nimport {ExtendedResults} from '../../api/search/search/extended-results.js';\nimport {QuestionsAnswers} from '../../api/search/search/question-answering.js';\nimport {Result} from '../../api/search/search/result.js';\nimport {SearchResponseSuccess} from '../../api/search/search/search-response.js';\n\nexport interface SearchState {\n  /** The search response. For a full description, refer to {@link https://docs.coveo.com/en/13/cloud-v2-api-reference/search-api#operation/searchUsingPost}*/\n  response: SearchResponseSuccess;\n  /**\n   * The time it took to execute the request against the Coveo platform.\n   */\n  duration: number;\n  /**\n   * The query (searchbox content) that was executed against the Coveo platform.\n   */\n  queryExecuted: string;\n  /**\n   * The error returned by the Coveo platform while executing the search request, if any. `null` otherwise.\n   */\n  error: SearchAPIErrorWithStatusCode | null;\n  /**\n   * Specifies if the query was automatically corrected by Headless.\n   * This happens when there is no result returned by the API for a particular misspelling.\n   */\n  automaticallyCorrected: boolean;\n  /**\n   * `true` if the search request is currently being executed against the Coveo platform, `false` otherwise.\n   */\n  isLoading: boolean;\n  /**\n   * The list of results.\n   */\n  results: Result[];\n  /**\n   * The unique ID of the response, taken from the response's `searchUid`. This value will not change when loading more results or fetching new facet values.\n   */\n  searchResponseId: string;\n  /**\n   * The unique ID of the latest request, generated by Headless each time a search is executed. This value is not to be confused with `searchResponseId` or `searchUid`, which are generated by the Coveo platform.\n   */\n  requestId: string;\n  /**\n   * The question and answers related to the smart snippet.\n   */\n  questionAnswer: QuestionsAnswers;\n  /**\n   * The extended results.\n   */\n  extendedResults: ExtendedResults;\n}\n\nexport function emptyQuestionAnswer() {\n  return {\n    answerSnippet: '',\n    documentId: {\n      contentIdKey: '',\n      contentIdValue: '',\n    },\n    question: '',\n    relatedQuestions: [],\n    score: 0,\n  };\n}\n\nexport function getSearchInitialState(): SearchState {\n  return {\n    response: {\n      results: [],\n      searchUid: '',\n      totalCountFiltered: 0,\n      facets: [],\n      generateAutomaticFacets: {facets: []},\n      queryCorrections: [],\n      triggers: [],\n      questionAnswer: emptyQuestionAnswer(),\n      pipeline: '',\n      splitTestRun: '',\n      termsToHighlight: {},\n      phrasesToHighlight: {},\n      extendedResults: {},\n    },\n    duration: 0,\n    queryExecuted: '',\n    error: null,\n    automaticallyCorrected: false,\n    isLoading: false,\n    results: [],\n    searchResponseId: '',\n    requestId: '',\n    questionAnswer: emptyQuestionAnswer(),\n    extendedResults: {},\n  };\n}\n", "import {SearchPageClientProvider} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events.js';\nimport {getSearchHubInitialState} from '../../features/search-hub/search-hub-state.js';\nimport {\n  ConfigurationSection,\n  ContextSection,\n  PipelineSection,\n  QuerySection,\n  SearchHubSection,\n} from '../../state/state-sections.js';\nimport {VERSION} from '../../utils/version.js';\n\nexport const getLanguage = (state: ConfigurationSection) => {\n  const langKey = state.configuration.search.locale.split('-')[0];\n  if (!langKey || langKey.length !== 2) {\n    return 'en';\n  }\n  return langKey;\n};\n\nexport type StateNeededByBaseAnalyticsProvider = ConfigurationSection &\n  Partial<SearchHubSection & PipelineSection & QuerySection & ContextSection>;\n\nexport abstract class BaseAnalyticsProvider<\n  T extends StateNeededByBaseAnalyticsProvider,\n> implements SearchPageClientProvider\n{\n  protected readonly state: T;\n  constructor(protected getState: () => T) {\n    this.state = getState();\n  }\n\n  public abstract getSearchUID(): string;\n  public abstract getPipeline(): string;\n  public abstract getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  >;\n\n  public getLanguage() {\n    return getLanguage(this.state);\n  }\n\n  public getBaseMetadata() {\n    const {context, configuration} = this.state;\n    const contextValues = context?.contextValues || {};\n    const formattedObject: Record<string, string | string[]> = {};\n    for (const [key, value] of Object.entries(contextValues)) {\n      const formattedKey = `context_${key}`;\n      formattedObject[formattedKey] = value;\n    }\n    if (configuration.analytics.analyticsMode === 'legacy') {\n      formattedObject['coveoHeadlessVersion'] = VERSION;\n    }\n    return formattedObject;\n  }\n\n  public getOriginContext() {\n    return this.state.configuration.analytics.originContext;\n  }\n\n  public getOriginLevel1() {\n    return this.state.searchHub || getSearchHubInitialState();\n  }\n\n  public getOriginLevel2() {\n    return this.state.configuration.analytics.originLevel2;\n  }\n\n  public getOriginLevel3() {\n    return this.state.configuration.analytics.originLevel3;\n  }\n\n  public getIsAnonymous() {\n    return this.state.configuration.analytics.anonymous;\n  }\n}\n", "import {\n  CoveoSearchPageClient,\n  SearchPageClientProvider,\n  AnalyticsClientSendEventHook,\n} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events.js';\nimport {Logger} from 'pino';\nimport {\n  buildFacetStateMetadata,\n  getStateNeededForFacetMetadata,\n} from '../../features/facets/facet-set/facet-set-analytics-actions-utils.js';\nimport {FacetSortCriterion} from '../../features/facets/facet-set/interfaces/request.js';\nimport {DateFacetValue} from '../../features/facets/range-facets/date-facet-set/interfaces/response.js';\nimport {RangeFacetSortCriterion} from '../../features/facets/range-facets/generic/interfaces/request.js';\nimport {NumericFacetValue} from '../../features/facets/range-facets/numeric-facet-set/interfaces/response.js';\nimport {OmniboxSuggestionMetadata} from '../../features/query-suggest/query-suggest-analytics-actions.js';\nimport {getQueryInitialState} from '../../features/query/query-state.js';\nimport {getSearchInitialState} from '../../features/search/search-state.js';\nimport {getSortCriteriaInitialState} from '../../features/sort-criteria/sort-criteria-state.js';\nimport {StaticFilterValueMetadata} from '../../features/static-filter-set/static-filter-set-actions.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {ConfigurationSection} from '../../state/state-sections.js';\nimport {getOrganizationEndpoint} from '../platform-client.js';\nimport {PreprocessRequest} from '../preprocess-request.js';\nimport {BaseAnalyticsProvider} from './base-analytics.js';\nimport {\n  historyStore,\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils.js';\n\nexport type StateNeededBySearchAnalyticsProvider = ConfigurationSection &\n  Partial<Omit<SearchAppState, 'configuration'>>;\n\nexport class SearchAnalyticsProvider\n  extends BaseAnalyticsProvider<StateNeededBySearchAnalyticsProvider>\n  implements SearchPageClientProvider\n{\n  private static fallbackPipelineName = 'default';\n\n  public getFacetState() {\n    return buildFacetStateMetadata(\n      getStateNeededForFacetMetadata(this.getState())\n    );\n  }\n\n  public getPipeline() {\n    return (\n      this.state.pipeline ||\n      this.state.search?.response.pipeline ||\n      SearchAnalyticsProvider.fallbackPipelineName\n    );\n  }\n\n  public getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  > {\n    return {\n      queryText: this.queryText,\n      responseTime: this.responseTime,\n      results: this.resultURIs,\n      numberOfResults: this.numberOfResults,\n    };\n  }\n\n  public getSearchUID(): string {\n    const newState = this.getState();\n    return (\n      newState.search?.searchResponseId ||\n      newState.search?.response.searchUid ||\n      getSearchInitialState().response.searchUid\n    );\n  }\n\n  public getSplitTestRunName(): string | undefined {\n    return this.state.search?.response.splitTestRun;\n  }\n\n  public getSplitTestRunVersion(): string | undefined {\n    const hasSplitTestRun = !!this.getSplitTestRunName();\n    const effectivePipelineWithSplitTestRun =\n      this.state.search?.response.pipeline ||\n      this.state.pipeline ||\n      SearchAnalyticsProvider.fallbackPipelineName;\n\n    return hasSplitTestRun ? effectivePipelineWithSplitTestRun : undefined;\n  }\n\n  public getBaseMetadata() {\n    const state = this.getState();\n    const baseObject = super.getBaseMetadata();\n\n    const generativeQuestionAnsweringId =\n      state.search?.response?.extendedResults?.generativeQuestionAnsweringId;\n\n    if (generativeQuestionAnsweringId) {\n      baseObject['generativeQuestionAnsweringId'] =\n        generativeQuestionAnsweringId;\n    }\n\n    return baseObject;\n  }\n\n  public getFacetMetadata(facetId: string, facetValue: string) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      facetValue,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  public getFacetClearAllMetadata(facetId: string) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  public getFacetUpdateSortMetadata(\n    facetId: string,\n    criteria: FacetSortCriterion | RangeFacetSortCriterion\n  ) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      criteria,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  public getRangeBreadcrumbFacetMetadata(\n    facetId: string,\n    facetValue: DateFacetValue | NumericFacetValue\n  ) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      facetRangeEnd: facetValue.end,\n      facetRangeEndInclusive: facetValue.endInclusive,\n      facetRangeStart: facetValue.start,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  private getFacetRequest = (id: string) => {\n    return (\n      this.state.facetSet?.[id]?.request ||\n      this.state.categoryFacetSet?.[id]?.request ||\n      this.state.dateFacetSet?.[id]?.request ||\n      this.state.numericFacetSet?.[id]?.request ||\n      this.state.automaticFacetSet?.set[id]?.response\n    );\n  };\n\n  public getResultSortMetadata() {\n    return {\n      ...this.getBaseMetadata(),\n      resultsSortBy: this.state.sortCriteria ?? getSortCriteriaInitialState(),\n    };\n  }\n\n  public getStaticFilterToggleMetadata(\n    staticFilterId: string,\n    staticFilterValue: StaticFilterValueMetadata\n  ) {\n    return {\n      ...this.getBaseMetadata(),\n      staticFilterId,\n      staticFilterValue,\n    };\n  }\n\n  public getStaticFilterClearAllMetadata(staticFilterId: string) {\n    return {\n      ...this.getBaseMetadata(),\n      staticFilterId,\n    };\n  }\n\n  public getUndoTriggerQueryMetadata(undoneQuery: string) {\n    return {\n      ...this.getBaseMetadata(),\n      undoneQuery,\n    };\n  }\n\n  public getCategoryBreadcrumbFacetMetadata(\n    categoryFacetId: string,\n    categoryFacetPath: string[]\n  ) {\n    const facetRequest = this.getFacetRequest(categoryFacetId);\n    const categoryFacetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      categoryFacetId,\n      categoryFacetField,\n      categoryFacetPath,\n      categoryFacetTitle: `${categoryFacetField}_${categoryFacetId}`,\n    };\n  }\n\n  public getOmniboxAnalyticsMetadata(id: string, suggestion: string) {\n    const querySuggest = this.state.querySuggest && this.state.querySuggest[id];\n    const suggestions = querySuggest!.completions.map(\n      (completion) => completion.expression\n    );\n\n    const lastIndex = querySuggest!.partialQueries.length - 1;\n    const partialQuery = querySuggest!.partialQueries[lastIndex] || '';\n    const querySuggestResponseId = querySuggest!.responseId;\n    return {\n      ...this.getBaseMetadata(),\n      suggestionRanking: suggestions.indexOf(suggestion),\n      partialQuery,\n      partialQueries:\n        querySuggest!.partialQueries.length > 0\n          ? querySuggest!.partialQueries\n          : '',\n      suggestions: suggestions.length > 0 ? suggestions : '',\n      querySuggestResponseId,\n    };\n  }\n\n  public getInterfaceChangeMetadata() {\n    return {\n      ...this.getBaseMetadata(),\n      interfaceChangeTo: this.state.configuration.analytics.originLevel2,\n    };\n  }\n\n  public getOmniboxFromLinkMetadata(metadata: OmniboxSuggestionMetadata) {\n    return {\n      ...this.getBaseMetadata(),\n      ...metadata,\n    };\n  }\n\n  public getGeneratedAnswerMetadata() {\n    const state = this.getState();\n    const formattedObject: Record<string, string | boolean> = {};\n    if (state.generatedAnswer?.isVisible !== undefined) {\n      formattedObject['showGeneratedAnswer'] = state.generatedAnswer.isVisible;\n    }\n    return formattedObject;\n  }\n\n  private get resultURIs() {\n    return this.results?.map((r) => ({\n      documentUri: r.uri,\n      documentUriHash: r.raw.urihash,\n    }));\n  }\n\n  protected get results() {\n    return this.state.search?.response.results;\n  }\n\n  protected get queryText() {\n    return this.state.query?.q || getQueryInitialState().q;\n  }\n\n  protected get responseTime() {\n    return this.state.search?.duration || getSearchInitialState().duration;\n  }\n\n  protected get numberOfResults() {\n    return (\n      this.state.search?.response.totalCountFiltered ||\n      getSearchInitialState().response.totalCountFiltered\n    );\n  }\n}\n\ninterface LegacyConfigureAnalyticsOptions {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: SearchPageClientProvider;\n  getState(): StateNeededBySearchAnalyticsProvider;\n}\n\n//TODO: KIT-2859\nexport const configureLegacyAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new SearchAnalyticsProvider(getState),\n}: LegacyConfigureAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const endpoint =\n    state.configuration.analytics.apiBaseUrl ??\n    getOrganizationEndpoint(\n      state.configuration.organizationId,\n      state.configuration.environment,\n      'analytics'\n    );\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enableAnalytics = state.configuration.analytics.enabled;\n  const client = new CoveoSearchPageClient(\n    {\n      token,\n      endpoint,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enableAnalytics) {\n    client.disable();\n  }\n  return client;\n};\n\nexport const getPageID = () => {\n  const actions = historyStore.getHistory();\n  const lastPageView = actions.reverse().find((action) => {\n    return action.name === 'PageView' && action.value;\n  });\n\n  if (!lastPageView) {\n    return '';\n  }\n\n  return lastPageView.value!;\n};\n", "import {\n  buildCriterionExpression,\n  buildRelevanceSortCriterion,\n} from './criteria.js';\n\nexport type SortCriteriaState = string;\n\nexport function getSortCriteriaInitialState(): SortCriteriaState {\n  return buildCriterionExpression(buildRelevanceSortCriterion());\n}\n", "import {EnumValue, isArray, RecordValue, StringValue} from '@coveo/bueno';\n\n/**\n * The available sort orders.\n */\nexport enum SortOrder {\n  Ascending = 'ascending',\n  Descending = 'descending',\n}\n\n/**\n * The available criteria that can be used to sort query results.\n */\nexport enum SortBy {\n  /**\n   * Uses standard index ranking factors (adjacency, TDIDF) and custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n   */\n  Relevancy = 'relevancy',\n  /**\n   * Uses only custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n   */\n  QRE = 'qre',\n  /**\n   * Uses the date field to sort the query results. This field typically contains the last modification date of each item. May be in ascending or descending order.\n   */\n  Date = 'date',\n  /**\n   * Uses the value of a specific sortable field to sort the query results. May be in ascending or descending order.\n   */\n  Field = 'field',\n  /**\n   * Does not sort the query results; the index will return result items in an essentially random order.\n   */\n  NoSort = 'nosort',\n}\n\n/**\n * Uses standard index ranking factors (adjacency, TDIDF) and custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n */\nexport type SortByRelevancy = {by: SortBy.Relevancy};\n/**\n * Uses only custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n */\nexport type SortByQRE = {by: SortBy.QRE};\n/**\n * Uses the date field to sort the query results. This field typically contains the last modification date of each item. May be in ascending or descending order.\n */\nexport type SortByDate = {by: SortBy.Date; order: SortOrder};\n/**\n * Uses the value of a specific sortable field to sort the query results. May be in ascending or descending order.\n */\nexport type SortByField = {by: SortBy.Field; field: string; order: SortOrder};\n/**\n * Does not sort the query results; the index will return result items in an essentially random order.\n */\nexport type SortByNoSort = {by: SortBy.NoSort};\n\n/** Represents a criterion that can be used to sort query results. */\nexport type SortCriterion =\n  | SortByRelevancy\n  | SortByQRE\n  | SortByDate\n  | SortByField\n  | SortByNoSort;\n\n/**\n * Builds a sort expression that can be understood and executed by the Coveo Platform.\n * @param criterion The criterion to translate to a valid sort query expression.\n */\nexport const buildCriterionExpression = (\n  criterion: SortCriterion | SortCriterion[]\n): string => {\n  if (isArray(criterion)) {\n    return criterion.map((c) => buildCriterionExpression(c)).join(',');\n  }\n\n  switch (criterion.by) {\n    case SortBy.Relevancy:\n    case SortBy.QRE:\n    case SortBy.NoSort:\n      return criterion.by;\n    case SortBy.Date:\n      return `date ${criterion.order}`;\n    case SortBy.Field:\n      return `@${criterion.field} ${criterion.order}`;\n    default:\n      return '';\n  }\n};\n\n/**\n * Utility function that builds a valid `SortByRelevancy` criterion.\n * @returns A `SortByRelevancy` criterion.\n */\nexport const buildRelevanceSortCriterion = (): SortByRelevancy => ({\n  by: SortBy.Relevancy,\n});\n\n/**\n * Utility function that builds a valid `SortByDate` criterion.\n * @param order The order (ascending/descending) on which to sort.\n * @returns A `SortByDate` criterion.\n */\nexport const buildDateSortCriterion = (order: SortOrder): SortByDate => ({\n  by: SortBy.Date,\n  order,\n});\n\n/**\n * Utility function that builds a valid `SortByField` criterion.\n * @param field The sortable field on which to sort.\n * @param order The order (ascending/descending) on which to sort.\n * @returns A `SortByField` criterion.\n */\nexport const buildFieldSortCriterion = (\n  field: string,\n  order: SortOrder\n): SortByField => ({\n  by: SortBy.Field,\n  order,\n  field,\n});\n\n/**\n * Utility function that builds a valid `SortByQRE` criterion.\n * @returns A `SortByQRE` criterion.\n */\nexport const buildQueryRankingExpressionSortCriterion = (): SortByQRE => ({\n  by: SortBy.QRE,\n});\n\n/**\n * Utility function that builds a valid `SortByNoSort` criterion.\n * @returns A `SortByNoSort` criterion.\n */\nexport const buildNoSortCriterion = (): SortByNoSort => ({by: SortBy.NoSort});\n\nexport const criterionDefinition = new RecordValue({\n  values: {\n    by: new EnumValue({enum: SortBy, required: true}),\n    order: new EnumValue({enum: SortOrder}),\n    field: new StringValue(),\n  },\n});\n", "import {removeDuplicates} from '../../utils/utils.js';\nimport {ResultWithFolding} from './folding-slice.js';\n\nexport function getAllIncludedResultsFrom(relevantResult: ResultWithFolding) {\n  const foldedResults = getChildResultsRecursively(relevantResult);\n\n  const parentResults = [relevantResult, ...foldedResults]\n    .filter((result) => result.parentResult)\n    .map((result) => result.parentResult!);\n\n  const resultsInCollection = removeDuplicates(\n    [relevantResult, ...foldedResults, ...parentResults],\n    (result) => result.uniqueId\n  );\n\n  return resultsInCollection;\n}\n\nfunction getChildResultsRecursively(\n  result: ResultWithFolding\n): ResultWithFolding[] {\n  if (!result.childResults) {\n    return [];\n  }\n  return result.childResults.flatMap((childResult) => [\n    childResult,\n    ...getChildResultsRecursively(childResult),\n  ]);\n}\n", "export const getPipelineInitialState = () => '';\n", "export enum SearchPageEvents {\n  /**\n   * Identifies the search event that gets logged when the initial query is performed as a result of loading a search interface.\n   */\n  interfaceLoad = 'interfaceLoad',\n  /**\n   * Identifies the search event that gets logged when a new tab is selected in the search interface.\n   */\n  interfaceChange = 'interfaceChange',\n  /**\n   * Identifies the search event that gets logged when `enableAutoCorrection: true` and the query is automatically corrected.\n   */\n  didYouMeanAutomatic = 'didYouMeanAutomatic',\n  /**\n   * Identifies the search event that gets logged when the query suggestion with the corrected term is selected and successfully updates the query.\n   */\n  didYouMeanClick = 'didYouMeanClick',\n  /**\n   * Identifies the search event that gets logged when a sorting method is selected.\n   */\n  resultsSort = 'resultsSort',\n  /**\n   * Identifies the search event that gets logged when a submit button is selected on a search box.\n   */\n  searchboxSubmit = 'searchboxSubmit',\n  /**\n   * Identifies the search event that gets logged when a clear button is selected on a search box.\n   */\n  searchboxClear = 'searchboxClear',\n  /**\n   * The search-as-you-type event that gets logged when a query is automatically generated, and results are displayed while a user is entering text in the search box before they voluntarily submit the query.\n   */\n  searchboxAsYouType = 'searchboxAsYouType',\n  /**\n   * The event that gets logged when a breadcrumb facet is selected and the query is updated.\n   */\n  breadcrumbFacet = 'breadcrumbFacet',\n  /**\n   * Identifies the search event that gets logged when the event to clear the current breadcrumbs is triggered.\n   */\n  breadcrumbResetAll = 'breadcrumbResetAll',\n  /**\n   * Identifies the click event that gets logged when the Quick View element is selected and a Quick View modal of the document is displayed.\n   */\n  documentQuickview = 'documentQuickview',\n  /**\n   * Identifies the click event that gets logged when a user clicks on a search result to open an item.\n   */\n  documentOpen = 'documentOpen',\n  /**\n   * Identifies the search event that gets logged when a user clicks a query suggestion based on the usage analytics recorded queries.\n   */\n  omniboxAnalytics = 'omniboxAnalytics',\n  /**\n   * Identifies the search event that gets logged when a suggested search query is selected from a standalone searchbox.\n   */\n  omniboxFromLink = 'omniboxFromLink',\n  /**\n   * Identifies the search event that gets logged when the search page loads with a query, such as when a user clicks a link pointing to a search results page with a query or enters a query in a standalone search box that points to a search page.\n   */\n  searchFromLink = 'searchFromLink',\n  /**\n   * Identifies the custom event that gets logged when a user action triggers a notification set in the effective query pipeline on the search page.\n   */\n  triggerNotify = 'notify',\n  /**\n   * Identifies the custom event that gets logged when a user action executes a JavaScript function set in the effective query pipeline on the search page.\n   */\n  triggerExecute = 'execute',\n  /**\n   * Identifies the custom event that gets logged when a user action triggers a new query set in the effective query pipeline on the search page.\n   */\n  triggerQuery = 'query',\n  /**\n   * Identifies the custom event that gets logged when a user undoes a query set in the effective query pipeline on the search page.\n   */\n  undoTriggerQuery = 'undoQuery',\n  /**\n   * Identifies the custom event that gets logged when a user action redirects them to a URL set in the effective query pipeline on the search page.\n   */\n  triggerRedirect = 'redirect',\n  /**\n   * Identifies the search cause that gets logged for pagination and other user navigation that do not express a new search intent.\n   */\n  browseResults = 'browseResults',\n  /**\n   * Identifies the search event that gets logged when the clearing all selected values of a static filter.\n   */\n  staticFilterClearAll = 'staticFilterClearAll',\n  /**\n   * Identifies the search event that gets logged when a static filter check box is selected and the query is updated.\n   */\n  staticFilterSelect = 'staticFilterSelect',\n  /**\n   * Identifies the search event that gets logged when a static filter check box is deselected and the query is updated.\n   */\n  staticFilterDeselect = 'staticFilterDeselect',\n  /**\n   * Identifies the search event that gets logged when the Clear Facet button is selected.\n   */\n  facetClearAll = 'facetClearAll',\n  /**\n   * Identifies the custom event that gets logged when a query is being typed into the facet search box.\n   */\n  facetSearch = 'facetSearch',\n  /**\n   * Identifies the search event that gets logged when a facet check box is selected and the query is updated.\n   */\n  facetSelect = 'facetSelect',\n  /**\n   * Identifies the search event that gets logged when all filters on a facet are selected.\n   */\n  facetSelectAll = 'facetSelectAll',\n  /**\n   * Identifies the search event that gets logged when a facet check box is deselected and the query is updated.\n   */\n  facetDeselect = 'facetDeselect',\n  /**\n   * Identifies the search event that gets logged when a user clicks a facet value to filter out results containing the facet value.\n   */\n  facetExclude = 'facetExclude',\n  /**\n   * Identifies the search event that gets logged when a user clicks a facet value to not filter out results containing the facet value.\n   */\n  facetUnexclude = 'facetUnexclude',\n  /**\n   * Identifies the search event that gets logged when the sort criteria on a facet is updated.\n   */\n  facetUpdateSort = 'facetUpdateSort',\n  /**\n   * The custom event that gets logged when an end-user expands a facet to see additional values.\n   */\n  facetShowMore = 'showMoreFacetResults',\n  /**\n   * The custom event that gets logged when an end-user collapses a facet to see less values.\n   */\n  facetShowLess = 'showLessFacetResults',\n  /**\n   * Identifies the custom event that gets logged when a user query encounters an error during execution.\n   */\n  //eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  queryError = 'query',\n  /**\n   * Identifies the search and custom event that gets logged when a user clicks the Go Back link after an error page.\n   */\n  queryErrorBack = 'errorBack',\n  /**\n   * Identifies the search and custom event that gets logged when a user clears the query box after an error page.\n   */\n  queryErrorClear = 'errorClearQuery',\n  /**\n   * Identifies the search and custom event that gets logged when a user clicks the Retry link after an error page.\n   */\n  queryErrorRetry = 'errorRetry',\n  /**\n   * Identifies the custom event that gets logged when a user performs a query that returns recommendations in the Recommendations panel.\n   */\n  recommendation = 'recommendation',\n  /**\n   * Identifies the search event that gets logged when a user action (that is not a query) reloads the Recommendations panel with new recommendations.\n   */\n  recommendationInterfaceLoad = 'recommendationInterfaceLoad',\n  /**\n   * Identifies the click event that gets logged when a user clicks a recommendation in the Recommendations panel.\n   */\n  recommendationOpen = 'recommendationOpen',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a smart snippet answer as relevant.\n   */\n  likeSmartSnippet = 'likeSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a smart snippet answer as irrelevant.\n   */\n  dislikeSmartSnippet = 'dislikeSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user expand a smart snippet answer.\n   */\n  expandSmartSnippet = 'expandSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user collapse a smart snippet answer.\n   */\n  collapseSmartSnippet = 'collapseSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user open a smart snippet explanation modal for feedback.\n   */\n  openSmartSnippetFeedbackModal = 'openSmartSnippetFeedbackModal',\n  /**\n   * Identifies the custom event that gets logged when a user close a smart snippet explanation modal for feedback.\n   */\n  closeSmartSnippetFeedbackModal = 'closeSmartSnippetFeedbackModal',\n  /**\n   * Identifies the custom event that gets logged when a user sends an explanation for a smart snippet irrelevant answer.\n   */\n  sendSmartSnippetReason = 'sendSmartSnippetReason',\n  /**\n   * Identifies the custom event that gets logged when a snippet suggestion for a related question is expanded.\n   */\n  expandSmartSnippetSuggestion = 'expandSmartSnippetSuggestion',\n  /**\n   * Identifies the custom event that gets logged when a snippet suggestion for a related question is collapsed.\n   */\n  collapseSmartSnippetSuggestion = 'collapseSmartSnippetSuggestion',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on the source of an answer in a smart snippet.\n   */\n  openSmartSnippetSource = 'openSmartSnippetSource',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on the source of a snippet suggestion for a related question.\n   */\n  openSmartSnippetSuggestionSource = 'openSmartSnippetSuggestionSource',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on a link in the answer of a smart snippet.\n   */\n  openSmartSnippetInlineLink = 'openSmartSnippetInlineLink',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on a link in the snippet suggestion for a related question.\n   */\n  openSmartSnippetSuggestionInlineLink = 'openSmartSnippetSuggestionInlineLink',\n  /**\n   * Identifies the search event that gets logged when a recent queries list item gets clicked.\n   */\n  recentQueryClick = 'recentQueriesClick',\n  /**\n   * Identifies the custom event that gets logged when a recent queries list gets cleared.\n   */\n  clearRecentQueries = 'clearRecentQueries',\n  /**\n   * Identifies the custom event that gets logged when a recently clicked results list item gets clicked.\n   */\n  recentResultClick = 'recentResultClick',\n  /**\n   * Identifies the custom event that gets logged when a recently clicked results list gets cleared.\n   */\n  clearRecentResults = 'clearRecentResults',\n  /**\n   * Identifies the search event that gets logged when a user clicks the Cancel last action link when no results are returned following their last action.\n   */\n  noResultsBack = 'noResultsBack',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Show More link under a search result that support the folding component.\n   */\n  showMoreFoldedResults = 'showMoreFoldedResults',\n  /**\n   * Identifies the custom event that gets logged when a user clicks the Show Less link under a search result that support the folding component.\n   */\n  showLessFoldedResults = 'showLessFoldedResults',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Copy To Clipboard result action.\n   */\n  copyToClipboard = 'copyToClipboard',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Send As Email result action.\n   */\n  caseSendEmail = 'Case.SendEmail',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Post To Feed result action.\n   */\n  feedItemTextPost = 'FeedItem.TextPost',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Attach To Case result action.\n   */\n  caseAttach = 'caseAttach',\n  /**\n   * Identifies the custom event that gets logged when a user clicks the Detach From Case result action.\n   */\n  caseDetach = 'caseDetach',\n  /**\n   * Identifies the cause of a search request being retried in order to regenerate an answer stream that failed.\n   */\n  retryGeneratedAnswer = 'retryGeneratedAnswer',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a generated answer as relevant.\n   */\n  likeGeneratedAnswer = 'likeGeneratedAnswer',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a generated answer as irrelevant.\n   */\n  dislikeGeneratedAnswer = 'dislikeGeneratedAnswer',\n  /**\n   * Identifies the custom event that gets logged when a user opens a generated answer citation.\n   */\n  openGeneratedAnswerSource = 'openGeneratedAnswerSource',\n  /**\n   * Identified the custom event that gets logged when a generated answer stream is completed.\n   */\n  generatedAnswerStreamEnd = 'generatedAnswerStreamEnd',\n\n  historyForward = 'historyForward',\n\n  historyBackward = 'historyBackward',\n  /**\n   * Identifies the search event that gets logged when the query context is updated as a result of updating one of the case context fields.\n   */\n  contextChanged = 'contextChanged',\n  /**\n   * Identifies the custom event that gets logged when a user hovers over a generated answer citation.\n   */\n  generatedAnswerSourceHover = 'generatedAnswerSourceHover',\n  /**\n   * Identifies the custom event that gets logged when a user submits feedback on a generated answer.\n   */\n  generatedAnswerFeedbackSubmit = 'generatedAnswerFeedbackSubmit',\n  /**\n   * Identifies the custom event that gets logged when a user deactivates the RGA feature.\n   */\n  generatedAnswerHideAnswers = 'generatedAnswerHideAnswers',\n  /**\n   * Identifies the custom event that gets logged when a user activates the RGA feature.\n   */\n  generatedAnswerShowAnswers = 'generatedAnswerShowAnswers',\n  /**\n   * Identifies the custom event that gets logged when a user expands a generated answer.\n   */\n  generatedAnswerExpand = 'generatedAnswerExpand',\n  /**\n   * Identifies the custom event that gets logged when a user collapses a generated answer.\n   */\n  generatedAnswerCollapse = 'generatedAnswerCollapse',\n  /**\n   * Identifies the custom event that gets logged when a user clicks the copy to clipboard button of a generated answer.\n   */\n  generatedAnswerCopyToClipboard = 'generatedAnswerCopyToClipboard',\n  /**\n   * Identifies the custom event that gets logged when the user opens the full search page from the insight panel.\n   */\n  expandToFullUI = 'expandToFullUI',\n  /**\n   * Identifies the custom event that gets logged when the user clicks the create article button.\n   */\n  createArticle = 'createArticle',\n}\n", "import {BooleanValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload.js';\n\nexport interface UpdateFacetAutoSelectionActionCreatorPayload {\n  /**\n   * Whether to allow or prevent automatic selection in all facets.\n   */\n  allow: boolean;\n}\n\nexport const updateFacetAutoSelection = createAction(\n  'facet/updateFacetAutoSelection',\n  (payload: UpdateFacetAutoSelectionActionCreatorPayload) =>\n    validatePayload(payload, {\n      allow: new BooleanValue({required: true}),\n    })\n);\n", "import {ItemClick} from '@coveo/relay-event-types';\nimport {\n  InstantResultsAnalyticsProvider,\n  StateNeededByInstantResultsAnalyticsProvider,\n} from '../../api/analytics/instant-result-analytics.js';\nimport {Result} from '../../api/search/search/result.js';\nimport {\n  partialDocumentInformation,\n  documentIdentifier,\n  validateResultPayload,\n  makeAnalyticsAction,\n  InstantResultsSearchAction,\n  InstantResultsClickAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {SearchAction} from '../search/search-actions.js';\n\nexport const logInstantResultOpen = (\n  result: Result\n): InstantResultsClickAction =>\n  makeAnalyticsAction({\n    prefix: 'analytics/instantResult/open',\n    __legacy__getBuilder: (client, state) => {\n      validateResultPayload(result);\n      return client.makeDocumentOpen(\n        partialDocumentInformation(result, state),\n        documentIdentifier(result)\n      );\n    },\n    __legacy__provider: (\n      getState: () => StateNeededByInstantResultsAnalyticsProvider\n    ) => new InstantResultsAnalyticsProvider(getState),\n\n    analyticsType: 'itemClick',\n    analyticsPayloadBuilder: (state): ItemClick => {\n      const docInfo = partialDocumentInformation(result, state);\n      const docId = documentIdentifier(result);\n      return {\n        searchUid: result.searchUid ?? '',\n        position: docInfo.documentPosition,\n        itemMetadata: {\n          uniqueFieldName: docId.contentIDKey,\n          uniqueFieldValue: docId.contentIDValue,\n          title: docInfo.documentTitle,\n          author: docInfo.documentAuthor,\n          url: docInfo.documentUrl,\n        },\n      };\n    },\n  });\n\n//TODO: KIT-2859\nexport const logInstantResultsSearch = (): InstantResultsSearchAction =>\n  makeAnalyticsAction(\n    'analytics/instantResult/searchboxAsYouType',\n    (client) => client.makeSearchboxAsYouType(),\n    (getState) => new InstantResultsAnalyticsProvider(getState)\n  );\n\nexport const searchboxAsYouType = (): SearchAction => ({\n  actionCause: SearchPageEvents.searchboxAsYouType,\n});\n", "import {getQueryInitialState} from '../../features/query/query-state.js';\nimport {getSearchInitialState} from '../../features/search/search-state.js';\nimport {InstantResultSection} from '../../state/state-sections.js';\nimport {\n  SearchAnalyticsProvider,\n  StateNeededBySearchAnalyticsProvider,\n} from './search-analytics.js';\n\nexport type StateNeededByInstantResultsAnalyticsProvider =\n  StateNeededBySearchAnalyticsProvider & InstantResultSection;\n\nexport class InstantResultsAnalyticsProvider extends SearchAnalyticsProvider {\n  constructor(\n    protected getState: () => StateNeededByInstantResultsAnalyticsProvider\n  ) {\n    super(getState);\n  }\n\n  private get activeInstantResultQuery() {\n    const state = this.getState().instantResults;\n    for (const id in state) {\n      for (const query in state[id].cache) {\n        if (state[id].cache[query].isActive) {\n          return state[id].q;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  private get activeInstantResultCache() {\n    const state = this.getState().instantResults;\n    for (const id in state) {\n      for (const query in state[id].cache) {\n        if (state[id].cache[query].isActive) {\n          return state[id].cache[query];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  protected get results() {\n    return this.activeInstantResultCache?.results;\n  }\n\n  protected get queryText() {\n    return this.activeInstantResultQuery ?? getQueryInitialState().q;\n  }\n\n  protected get responseTime() {\n    return (\n      this.activeInstantResultCache?.duration ??\n      getSearchInitialState().duration\n    );\n  }\n\n  protected get numberOfResults() {\n    return (\n      this.activeInstantResultCache?.totalCountFiltered ??\n      getSearchInitialState().response.totalCountFiltered\n    );\n  }\n\n  public getSearchUID(): string {\n    const searchUid = this.activeInstantResultCache?.searchUid;\n    return searchUid || super.getSearchUID();\n  }\n}\n", "import {createAction} from '@reduxjs/toolkit';\nimport {Result} from '../../api/search/search/result.js';\nimport {InstantResultSection} from '../../state/state-sections.js';\nimport {\n  validatePayload,\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload.js';\nimport {StateNeededByExecuteSearch} from '../search/search-actions-thunk-processor.js';\n\nexport interface RegisterInstantResultActionCreatorPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n}\n\nexport interface UpdateInstantResultQueryActionCreatorPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n  /**\n   * The initial basic query expression for instant results.\n   */\n  q: string;\n}\n\nexport interface ClearExpiredInstantResultsActionCreatorPayload {\n  /**\n   * The search box id.\n   */\n  id: string;\n}\n\nconst instantResultsRegisterDefinition = {\n  id: requiredNonEmptyString,\n};\n\nconst instantResultsQueryDefinition = {\n  ...instantResultsRegisterDefinition,\n  q: requiredEmptyAllowedString,\n};\n\nexport const registerInstantResults = createAction(\n  'instantResults/register',\n  (payload: RegisterInstantResultActionCreatorPayload) =>\n    validatePayload(payload, instantResultsRegisterDefinition)\n);\n\nexport const updateInstantResultsQuery = createAction(\n  'instantResults/updateQuery',\n  (payload: UpdateInstantResultQueryActionCreatorPayload) =>\n    validatePayload(payload, instantResultsQueryDefinition)\n);\n\nexport const clearExpiredResults = createAction(\n  'instantResults/clearExpired',\n  (payload: ClearExpiredInstantResultsActionCreatorPayload) =>\n    validatePayload(payload, instantResultsRegisterDefinition)\n);\n\nexport interface FetchInstantResultsActionCreatorPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n  /**\n   * The query for which instant results are retrieved.\n   */\n  q: string;\n  /**\n   * The maximum items to be stored in the instant result list for each query.\n   */\n  maxResultsPerQuery: number;\n  /**\n   * Number in milliseconds that cached results will be valid for. Set to 0 so that results never expire.\n   */\n  cacheTimeout?: number;\n}\n\nexport interface FetchInstantResultsThunkReturn {\n  results: Result[];\n  searchUid: string;\n  totalCountFiltered: number;\n  duration: number;\n}\n\nexport type StateNeededByInstantResults = StateNeededByExecuteSearch &\n  InstantResultSection;\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload.js';\n\nconst numberValue = new NumberValue({required: true, min: 0});\n\nexport const registerNumberOfResults = createAction(\n  'pagination/registerNumberOfResults',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const updateNumberOfResults = createAction(\n  'pagination/updateNumberOfResults',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const registerPage = createAction(\n  'pagination/registerPage',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const updatePage = createAction(\n  'pagination/updatePage',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const nextPage = createAction('pagination/nextPage');\n\nexport const previousPage = createAction('pagination/previousPage');\n", "import {BooleanValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload.js';\n\nexport interface UpdateQueryActionCreatorPayload {\n  /**\n   * The basic query expression (e.g., `acme tornado seeds`).\n   */\n  q?: string;\n\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   */\n  enableQuerySyntax?: boolean;\n}\n\nexport const updateQuery = createAction(\n  'query/updateQuery',\n  (payload: UpdateQueryActionCreatorPayload) =>\n    validatePayload(payload, {\n      q: new StringValue(),\n      enableQuerySyntax: new BooleanValue(),\n    })\n);\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {EventDescription} from 'coveo.analytics';\nimport {getSearchApiBaseUrl} from '../../api/platform-client.js';\nimport {SearchRequest} from '../../api/search/search/search-request.js';\nimport {NavigatorContext} from '../../app/navigatorContextProvider.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {ConfigurationSection} from '../../state/state-sections.js';\nimport {fromAnalyticsStateToAnalyticsParams} from '../configuration/analytics-params.js';\n\ntype StateNeededByExecuteSearchAndFolding = ConfigurationSection &\n  Partial<SearchAppState>;\n\nexport const buildSearchAndFoldingLoadCollectionRequest = (\n  state: StateNeededByExecuteSearchAndFolding,\n  navigatorContext: NavigatorContext,\n  eventDescription?: EventDescription\n): SearchRequest => {\n  return {\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    url:\n      state.configuration.search.apiBaseUrl ??\n      getSearchApiBaseUrl(\n        state.configuration.organizationId,\n        state.configuration.environment\n      ),\n    locale: state.configuration.search.locale,\n    debug: state.debug,\n    tab: state.configuration.analytics.originLevel2,\n    referrer: navigatorContext.referrer,\n    timezone: state.configuration.search.timezone,\n    ...(state.advancedSearchQueries?.aq && {\n      aq: state.advancedSearchQueries.aq,\n    }),\n    ...(state.advancedSearchQueries?.cq && {\n      cq: state.advancedSearchQueries.cq,\n    }),\n    ...(state.advancedSearchQueries?.lq && {\n      lq: state.advancedSearchQueries.lq,\n    }),\n    ...(state.advancedSearchQueries?.dq && {\n      dq: state.advancedSearchQueries.dq,\n    }),\n    ...(state.context && {\n      context: state.context.contextValues,\n    }),\n    ...(state.fields &&\n      !state.fields.fetchAllFields && {\n        fieldsToInclude: state.fields.fieldsToInclude,\n      }),\n    ...(state.dictionaryFieldContext && {\n      dictionaryFieldContext: state.dictionaryFieldContext.contextValues,\n    }),\n    ...(state.pipeline && {\n      pipeline: state.pipeline,\n    }),\n    ...(state.query && {\n      q: state.query.q,\n      enableQuerySyntax: state.query.enableQuerySyntax,\n    }),\n    ...(state.searchHub && {\n      searchHub: state.searchHub,\n    }),\n    ...(state.sortCriteria && {\n      sortCriteria: state.sortCriteria,\n    }),\n    ...(state.configuration.analytics.enabled &&\n      fromAnalyticsStateToAnalyticsParams(\n        state.configuration.analytics,\n        navigatorContext,\n        eventDescription\n      )),\n    ...(state.excerptLength &&\n      !isNullOrUndefined(state.excerptLength.length) && {\n        excerptLength: state.excerptLength.length,\n      }),\n    ...(state.configuration.search.authenticationProviders.length && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n  };\n};\n", "import {EventDescription} from 'coveo.analytics';\nimport {getAnalyticsSource} from '../../api/analytics/analytics-selectors.js';\nimport {AnalyticsParam} from '../../api/search/search-api-params.js';\nimport {NavigatorContext} from '../../app/navigatorContextProvider.js';\nimport {AnalyticsState} from './configuration-state.js';\n\nexport const fromAnalyticsStateToAnalyticsParams = (\n  s: AnalyticsState,\n  navigatorContext: NavigatorContext,\n  eventDescription?: EventDescription\n): AnalyticsParam => {\n  return {\n    analytics: {\n      clientId: navigatorContext.clientId,\n      clientTimestamp: new Date().toISOString(),\n      documentReferrer: navigatorContext.referrer,\n      documentLocation: navigatorContext.location,\n      originContext: s.originContext,\n      ...(eventDescription && {\n        actionCause: eventDescription.actionCause,\n      }),\n      ...(eventDescription && {\n        customData: eventDescription.customData,\n      }),\n      ...(s.userDisplayName && {userDisplayName: s.userDisplayName}),\n      ...(s.deviceId && {deviceId: s.deviceId}),\n      ...(s.trackingId && {trackingId: s.trackingId}),\n      ...{capture: true},\n      ...{source: getAnalyticsSource(s)},\n    },\n  };\n};\n", "import {BooleanValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {EventDescription} from 'coveo.analytics';\nimport {historyStore} from '../../../api/analytics/coveo-analytics-utils.js';\nimport {AsyncThunkSearchOptions} from '../../../api/search/search-api-client.js';\nimport {SearchResponseSuccess} from '../../../api/search/search/search-response.js';\nimport {AsyncThunkOptions} from '../../../app/async-thunk-options.js';\nimport {InstantResultSection} from '../../../state/state-sections.js';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload.js';\nimport {\n  AnalyticsAsyncThunk,\n  LegacySearchAction,\n} from '../../analytics/analytics-utils.js';\nimport {\n  deselectAllBreadcrumbs,\n  deselectAllNonBreadcrumbs,\n} from '../../breadcrumb/breadcrumb-actions.js';\nimport {updateFacetAutoSelection} from '../../facets/generic/facet-actions.js';\nimport {logInstantResultsSearch} from '../../instant-results/instant-result-analytics-actions.js';\nimport {\n  FetchInstantResultsActionCreatorPayload,\n  FetchInstantResultsThunkReturn,\n  updateInstantResultsQuery,\n} from '../../instant-results/instant-results-actions.js';\nimport {updatePage} from '../../pagination/pagination-actions.js';\nimport {\n  updateQuery,\n  UpdateQueryActionCreatorPayload,\n} from '../../query/query-actions.js';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../../search-and-folding/legacy/search-and-folding-request.js';\nimport {logFetchMoreResults} from '../search-analytics-actions.js';\nimport {MappedSearchRequest, mapSearchRequest} from '../search-mappings.js';\nimport {\n  AsyncSearchThunkProcessor,\n  StateNeededByExecuteSearch,\n} from './search-actions-thunk-processor.js';\nimport {buildSearchRequest} from './search-request.js';\n\nexport type {StateNeededByExecuteSearch} from './search-actions-thunk-processor.js';\n\nexport interface ExecuteSearchThunkReturn {\n  /** The successful search response. */\n  response: SearchResponseSuccess;\n  /** The number of milliseconds it took to receive the response. */\n  duration: number;\n  /** The query that was executed. */\n  queryExecuted: string;\n  /** Whether the query was automatically corrected. */\n  automaticallyCorrected: boolean;\n  /** The original query that was performed when an automatic correction is executed.*/\n  originalQuery: string;\n  /** The analytics action to log after the query. */\n  analyticsAction: AnalyticsAsyncThunk;\n}\n\ninterface PrepareForSearchWithQueryOptions {\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the search box.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters: boolean;\n}\n\nexport const prepareForSearchWithQuery = createAsyncThunk<\n  void,\n  UpdateQueryActionCreatorPayload & PrepareForSearchWithQueryOptions,\n  AsyncThunkOptions<StateNeededByExecuteSearch>\n>('search/prepareForSearchWithQuery', (payload, thunk) => {\n  const {dispatch} = thunk;\n  validatePayload(payload, {\n    q: new StringValue(),\n    enableQuerySyntax: new BooleanValue(),\n    clearFilters: new BooleanValue(),\n  });\n\n  if (payload.clearFilters) {\n    dispatch(deselectAllBreadcrumbs());\n    dispatch(deselectAllNonBreadcrumbs());\n  }\n\n  dispatch(updateFacetAutoSelection({allow: true}));\n  dispatch(\n    updateQuery({q: payload.q, enableQuerySyntax: payload.enableQuerySyntax})\n  );\n  dispatch(updatePage(1));\n});\n\nexport const executeSearch = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  LegacySearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/executeSearch', async (searchAction: LegacySearchAction, config) => {\n  const state = config.getState();\n  return await legacyExecuteSearch(state, config, searchAction);\n});\n\nexport const fetchPage = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  LegacySearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchPage', async (searchAction: LegacySearchAction, config) => {\n  const state = config.getState();\n  return await legacyFetchPage(state, config, searchAction);\n});\n\nexport const fetchMoreResults = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  void,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchMoreResults', async (_, config) => {\n  const state = config.getState();\n\n  return await legacyFetchMoreResults(config, state);\n});\n\nexport const fetchFacetValues = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  LegacySearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>(\n  'search/fetchFacetValues',\n  async (searchAction: LegacySearchAction, config) => {\n    const state = config.getState();\n\n    return await legacyFetchFacetValues(config, searchAction, state);\n  }\n);\n\nexport const fetchInstantResults = createAsyncThunk<\n  FetchInstantResultsThunkReturn,\n  FetchInstantResultsActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch & InstantResultSection>\n>(\n  'search/fetchInstantResults',\n  async (payload: FetchInstantResultsActionCreatorPayload, config) => {\n    return legacyFetchInstantResults(payload, config);\n  }\n);\n\nconst buildFetchMoreRequest = async (\n  state: StateNeededByExecuteSearch,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(state, eventDescription);\n  mappedRequest.request = {\n    ...mappedRequest.request,\n    firstResult:\n      (state.pagination?.firstResult ?? 0) +\n      (state.search?.results.length ?? 0),\n  };\n  return mappedRequest;\n};\n\nexport const buildInstantResultSearchRequest = async (\n  state: StateNeededByExecuteSearch,\n  q: string,\n  numberOfResults: number\n) => {\n  const sharedWithFoldingRequest =\n    await buildSearchAndFoldingLoadCollectionRequest(state);\n\n  return mapSearchRequest({\n    ...sharedWithFoldingRequest,\n    ...(state.didYouMean && {\n      enableDidYouMean: state.didYouMean.enableDidYouMean,\n    }),\n    numberOfResults,\n    q,\n  });\n};\n\nconst buildFetchFacetValuesRequest = async (\n  state: StateNeededByExecuteSearch,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(state, eventDescription);\n  // Specifying a numberOfResults of 0 will not log the query as a full fledged query in the API\n  // it will also alleviate the load on the index\n  mappedRequest.request.numberOfResults = 0;\n  return mappedRequest;\n};\n\nconst addEntryInActionsHistory = (state: StateNeededByExecuteSearch) => {\n  if (state.configuration.analytics.enabled) {\n    historyStore.addElement({\n      name: 'Query',\n      ...(state.query?.q && {\n        value: state.query.q,\n      }),\n      time: JSON.stringify(new Date()),\n    });\n  }\n};\n\nexport async function legacyFetchInstantResults(\n  payload: FetchInstantResultsActionCreatorPayload,\n  config: any //eslint-disable-line @typescript-eslint/no-explicit-any\n) {\n  validatePayload(payload, {\n    id: requiredNonEmptyString,\n    q: requiredNonEmptyString,\n    maxResultsPerQuery: new NumberValue({\n      required: true,\n      min: 1,\n    }),\n    cacheTimeout: new NumberValue(),\n  });\n  const {q, maxResultsPerQuery} = payload;\n  const state = config.getState();\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({...config, analyticsAction: logInstantResultsSearch()}, (modification) => {\n    config.dispatch(\n      updateInstantResultsQuery({q: modification, id: payload.id})\n    );\n  });\n\n  const request = await buildInstantResultSearchRequest(\n    state,\n    q,\n    maxResultsPerQuery\n  );\n\n  const fetched = await processor.fetchFromAPI(request, {\n    origin: 'instantResults',\n    disableAbortWarning: true,\n  });\n  const processed = await processor.process(fetched);\n  if ('response' in processed) {\n    return {\n      results: processed.response.results,\n      searchUid: processed.response.searchUid,\n      analyticsAction: processed.analyticsAction,\n      totalCountFiltered: processed.response.totalCountFiltered,\n      duration: processed.duration,\n    };\n  }\n  return processed as ReturnType<typeof config.rejectWithValue>;\n}\n\nexport async function legacyFetchPage(\n  state: StateNeededByExecuteSearch,\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  searchAction: LegacySearchAction\n) {\n  addEntryInActionsHistory(state);\n\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await searchAction.prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction: searchAction,\n  });\n\n  const request = await buildSearchRequest(state, eventDescription);\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n}\n\nexport async function legacyFetchMoreResults(\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  state: StateNeededByExecuteSearch\n) {\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await logFetchMoreResults().prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction: logFetchMoreResults(),\n  });\n\n  const request = await buildFetchMoreRequest(state, eventDescription);\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n}\n\nexport async function legacyFetchFacetValues(\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  searchAction: LegacySearchAction,\n  state: StateNeededByExecuteSearch\n) {\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await searchAction.prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({...config, analyticsAction: searchAction});\n\n  const request = await buildFetchFacetValuesRequest(state, eventDescription);\n  const fetched = await processor.fetchFromAPI(request, {\n    origin: 'facetValues',\n  });\n\n  return await processor.process(fetched);\n}\n\nexport async function legacyExecuteSearch(\n  state: StateNeededByExecuteSearch,\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  searchAction: LegacySearchAction\n) {\n  addEntryInActionsHistory(state);\n\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await searchAction.prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const request = await buildSearchRequest(state, eventDescription);\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({...config, analyticsAction: searchAction});\n\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n}\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {EventDescription} from 'coveo.analytics';\nimport {historyStore} from '../../../api/analytics/coveo-analytics-utils.js';\nimport {getSearchApiBaseUrl} from '../../../api/platform-client.js';\nimport {SearchRequest} from '../../../api/search/search/search-request.js';\nimport {SearchAppState} from '../../../state/search-app-state.js';\nimport {ConfigurationSection} from '../../../state/state-sections.js';\nimport {fromAnalyticsStateToAnalyticsParams} from '../../configuration/legacy-analytics-params.js';\n\ntype StateNeededByExecuteSearchAndFolding = ConfigurationSection &\n  Partial<SearchAppState>;\n\nexport const buildSearchAndFoldingLoadCollectionRequest = async (\n  state: StateNeededByExecuteSearchAndFolding,\n  eventDescription?: EventDescription\n): Promise<SearchRequest> => {\n  return {\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    url:\n      state.configuration.search.apiBaseUrl ??\n      getSearchApiBaseUrl(\n        state.configuration.organizationId,\n        state.configuration.environment\n      ),\n    locale: state.configuration.search.locale,\n    debug: state.debug,\n    tab: state.configuration.analytics.originLevel2,\n    referrer: state.configuration.analytics.originLevel3,\n    timezone: state.configuration.search.timezone,\n    ...(state.configuration.analytics.enabled && {\n      actionsHistory: historyStore.getHistory(),\n    }),\n    ...(state.advancedSearchQueries?.aq && {\n      aq: state.advancedSearchQueries.aq,\n    }),\n    ...(state.advancedSearchQueries?.cq && {\n      cq: state.advancedSearchQueries.cq,\n    }),\n    ...(state.advancedSearchQueries?.lq && {\n      lq: state.advancedSearchQueries.lq,\n    }),\n    ...(state.advancedSearchQueries?.dq && {\n      dq: state.advancedSearchQueries.dq,\n    }),\n    ...(state.context && {\n      context: state.context.contextValues,\n    }),\n    ...(state.fields &&\n      !state.fields.fetchAllFields && {\n        fieldsToInclude: state.fields.fieldsToInclude,\n      }),\n    ...(state.dictionaryFieldContext && {\n      dictionaryFieldContext: state.dictionaryFieldContext.contextValues,\n    }),\n    ...(state.pipeline && {\n      pipeline: state.pipeline,\n    }),\n    ...(state.query && {\n      q: state.query.q,\n      enableQuerySyntax: state.query.enableQuerySyntax,\n    }),\n    ...(state.searchHub && {\n      searchHub: state.searchHub,\n    }),\n    ...(state.sortCriteria && {\n      sortCriteria: state.sortCriteria,\n    }),\n    ...(state.configuration.analytics.enabled &&\n      (await fromAnalyticsStateToAnalyticsParams(\n        state.configuration.analytics,\n        eventDescription\n      ))),\n    ...(state.excerptLength &&\n      !isNullOrUndefined(state.excerptLength.length) && {\n        excerptLength: state.excerptLength.length,\n      }),\n    ...(state.configuration.search.authenticationProviders.length && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n  };\n};\n", "import {EventDescription} from 'coveo.analytics';\nimport {getAnalyticsSource} from '../../api/analytics/analytics-selectors.js';\nimport {getVisitorID} from '../../api/analytics/coveo-analytics-utils.js';\nimport {getPageID} from '../../api/analytics/search-analytics.js';\nimport {AnalyticsParam} from '../../api/search/search-api-params.js';\nimport {AnalyticsState} from './configuration-state.js';\n\nexport const fromAnalyticsStateToAnalyticsParams = async (\n  s: AnalyticsState,\n  eventDescription?: EventDescription\n): Promise<AnalyticsParam> => {\n  const isNextAnalytics = s.analyticsMode === 'next';\n  return {\n    analytics: {\n      clientId: await getVisitorID(s),\n      clientTimestamp: new Date().toISOString(),\n      documentReferrer: s.originLevel3,\n      originContext: s.originContext,\n      ...(eventDescription && {\n        actionCause: eventDescription.actionCause,\n        customData: eventDescription.customData,\n      }),\n      ...(eventDescription &&\n        !isNextAnalytics && {\n          customData: eventDescription.customData,\n        }),\n      ...(s.userDisplayName && {userDisplayName: s.userDisplayName}),\n      ...(s.documentLocation && {documentLocation: s.documentLocation}),\n      ...(s.deviceId && {deviceId: s.deviceId}),\n      ...(getPageID() && {pageId: getPageID()}),\n      ...(isNextAnalytics && s.trackingId && {trackingId: s.trackingId}),\n      ...{capture: isNextAnalytics},\n      ...(isNextAnalytics && {source: getAnalyticsSource(s)}),\n    },\n  };\n};\n", "import {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response.js';\nimport {getAdvancedSearchQueriesInitialState} from '../advanced-search-queries/advanced-search-queries-state.js';\nimport {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../analytics/analytics-utils.js';\nimport {getQueryInitialState} from '../query/query-state.js';\n\nexport const logFetchMoreResults = (): LegacySearchAction =>\n  makeAnalyticsAction('search/logFetchMoreResults', (client) =>\n    client.makeFetchMoreResults()\n  );\n\nexport const logQueryError = (\n  error: SearchAPIErrorWithStatusCode\n): LegacySearchAction =>\n  makeAnalyticsAction('search/queryError', (client, state) =>\n    client.makeQueryError({\n      query: state.query?.q || getQueryInitialState().q,\n      aq:\n        state.advancedSearchQueries?.aq ||\n        getAdvancedSearchQueriesInitialState().aq,\n      cq:\n        state.advancedSearchQueries?.cq ||\n        getAdvancedSearchQueriesInitialState().cq,\n      dq:\n        state.advancedSearchQueries?.dq ||\n        getAdvancedSearchQueriesInitialState().dq,\n      errorType: error.type,\n      errorMessage: error.message,\n    })\n  );\n", "export interface AdvancedSearchQueriesDefaultFiltersState {\n  /**\n   * The initial cq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  cq: string;\n\n  /**\n   * The initial aq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  aq: string;\n\n  /**\n   * The initial lq filter, or large query expression filter\n   */\n  lq: string;\n\n  /**\n   * The initial dq filter, or disjunction query expression filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  dq: string;\n}\n\nexport interface AdvancedSearchQueriesState {\n  /**\n   * The cq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  cq: string;\n\n  /**\n   * Whether the cq filter was manually set.\n   *\n   * If the cq was manually set and the cq is registered, the cq will not be overridden by the default filter.\n   */\n  cqWasSet: boolean;\n\n  /**\n   * The aq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  aq: string;\n\n  /**\n   * Whether the aq filter was manually set.\n   *\n   * If the aq was manually set and the aq is registered, the aq will not be overridden by the default filter.\n   */\n  aqWasSet: boolean;\n\n  /**\n   * The lq filter, or large query expression filter.\n   *\n   * The large query expression (lq) is a part of the combined query expression which typically contains a case\n   * description, a long textual query, or any other form of text that can help refine a query.\n   */\n  lq: string;\n\n  /**\n   * Whether the lq filter was manually set.\n   *\n   * If the lq was manually set and the lq is registered, the lq will not be overridden by the default filter.\n   */\n  lqWasSet: boolean;\n\n  /**\n   * The dq filter, or disjunction query expression.\n   *\n   * This is the disjunctive part of the query expression that is merged with the other expression parts using an OR boolean operator (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  dq: string;\n  /**\n   * Whether the dq filter was manually set.\n   *\n   * If the dq was manually set and the dq is registered, the dq will not be overridden by the default filter.\n   */\n  dqWasSet: boolean;\n\n  /**\n   * The initial filters meant to be used as default values for the cq filter and aq filter.\n   */\n  defaultFilters: AdvancedSearchQueriesDefaultFiltersState;\n}\n\nexport const getAdvancedSearchQueriesInitialState: () => AdvancedSearchQueriesState =\n  () => ({\n    cq: '',\n    cqWasSet: false,\n    aq: '',\n    aqWasSet: false,\n    lq: '',\n    lqWasSet: false,\n    dq: '',\n    dqWasSet: false,\n    defaultFilters: {\n      cq: '',\n      aq: '',\n      lq: '',\n      dq: '',\n    },\n  });\n", "import {\n  formatRelativeDateForSearchApi,\n  isRelativeDateFormat,\n} from '../../api/search/date/relative-date.js';\nimport {SearchAPIClientResponse} from '../../api/search/search-api-client.js';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response.js';\nimport {FacetsParam} from '../../api/search/search-api-params.js';\nimport {SearchRequest} from '../../api/search/search/search-request.js';\nimport {SearchResponseSuccess} from '../../api/search/search/search-response.js';\nimport {AnyFacetRequest} from '../facets/generic/interfaces/generic-facet-request.js';\nimport {AnyFacetResponse} from '../facets/generic/interfaces/generic-facet-response.js';\nimport {\n  DateRangeRequest,\n  isDateFacetRequest,\n} from '../facets/range-facets/date-facet-set/interfaces/request.js';\nimport {\n  DateFacetResponse,\n  DateFacetValue,\n} from '../facets/range-facets/date-facet-set/interfaces/response.js';\n\nfunction formatStartFacetValue(value: string) {\n  return `start${value}`;\n}\n\nfunction formatEndFacetValue(value: string) {\n  return `end${value}`;\n}\n\nexport interface SearchMappings {\n  dateFacetValueMap: Record<string, Record<string, string>>;\n}\n\nexport const initialSearchMappings: () => SearchMappings = () => ({\n  dateFacetValueMap: {},\n});\n\nfunction mapDateRangeRequest(\n  value: DateRangeRequest,\n  facetId: string,\n  mappings: SearchMappings\n) {\n  let start = value.start;\n  let end = value.end;\n  if (isRelativeDateFormat(start)) {\n    start = formatRelativeDateForSearchApi(start);\n    mappings.dateFacetValueMap[facetId][formatStartFacetValue(start)] =\n      value.start;\n  }\n  if (isRelativeDateFormat(end)) {\n    end = formatRelativeDateForSearchApi(end);\n    mappings.dateFacetValueMap[facetId][formatEndFacetValue(end)] = value.end;\n  }\n\n  return {...value, start, end};\n}\n\nexport function mapFacetRequest(\n  facetRequest: AnyFacetRequest,\n  mappings: SearchMappings\n) {\n  if (isDateFacetRequest(facetRequest)) {\n    const {facetId, currentValues} = facetRequest;\n    mappings.dateFacetValueMap[facetId] = {};\n    return {\n      ...facetRequest,\n      currentValues: currentValues.map((value) =>\n        mapDateRangeRequest(value, facetId, mappings)\n      ),\n    };\n  }\n\n  return facetRequest;\n}\n\nexport interface MappedSearchRequest<T extends FacetsParam = SearchRequest> {\n  request: T;\n  mappings: SearchMappings;\n}\n\nexport function mapSearchRequest<T extends FacetsParam = SearchRequest>(\n  searchRequest: T\n): MappedSearchRequest<T> {\n  const mappings = initialSearchMappings();\n  const request: T = {\n    ...searchRequest,\n    facets: searchRequest.facets?.map((facetRequest) =>\n      mapFacetRequest(facetRequest, mappings)\n    ),\n  };\n  return {request, mappings};\n}\n\nfunction mapDateRangeResponse(\n  value: DateFacetValue,\n  facetId: string,\n  mappings: SearchMappings\n) {\n  return {\n    ...value,\n    start:\n      mappings.dateFacetValueMap[facetId][formatStartFacetValue(value.start)] ||\n      value.start,\n    end:\n      mappings.dateFacetValueMap[facetId][formatEndFacetValue(value.end)] ||\n      value.end,\n  };\n}\n\nfunction isDateFacetResponse(\n  facetResponse: AnyFacetResponse,\n  mappings: SearchMappings\n): facetResponse is DateFacetResponse {\n  return facetResponse.facetId in mappings.dateFacetValueMap;\n}\n\nfunction mapFacetResponse(\n  facetResponse: AnyFacetResponse,\n  mappings: SearchMappings\n) {\n  if (isDateFacetResponse(facetResponse, mappings)) {\n    return {\n      ...facetResponse,\n      values: facetResponse.values.map((value) =>\n        mapDateRangeResponse(value, facetResponse.facetId, mappings)\n      ),\n    };\n  }\n  return facetResponse;\n}\n\nexport type ErrorResponse = {\n  error: SearchAPIErrorWithStatusCode;\n};\nexport type SuccessResponse = {\n  success: SearchResponseSuccess;\n};\n\nexport function mapSearchResponse<\n  ResponseSuccess extends SearchAPIClientResponse<SearchResponseSuccess>,\n>(\n  response: ResponseSuccess,\n  mappings: SearchMappings\n): SuccessResponse | ErrorResponse {\n  if ('success' in response) {\n    const success: SearchResponseSuccess = {\n      ...response.success,\n      facets: response.success.facets?.map((facetResponse) =>\n        mapFacetResponse(facetResponse, mappings)\n      ),\n    };\n    return {success};\n  }\n\n  return response;\n}\n", "import {NumberValue, Schema, StringValue} from '@coveo/bueno';\nimport dayjs, {QUnitType} from 'dayjs';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear.js';\nimport {\n  assertDateAboveAPIMinimum,\n  formatDateForSearchApi,\n} from './date-format.js';\n\ndayjs.extend(quarterOfYear);\n\n/**\n * The period to set the date relative to.\n */\nexport type RelativeDatePeriod = 'past' | 'now' | 'next';\nconst validRelativeDatePeriods = ['past', 'now', 'next'];\n\n/**\n * The unit of time in which the date is set relative to.\n */\nexport type RelativeDateUnit =\n  | 'minute'\n  | 'hour'\n  | 'day'\n  | 'week'\n  | 'month'\n  | 'quarter'\n  | 'year';\nconst validRelativeDateUnits = [\n  'minute',\n  'hour',\n  'day',\n  'week',\n  'month',\n  'quarter',\n  'year',\n];\n\n/**\n * Defines a date relative to the current moment.\n */\nexport interface RelativeDate {\n  /**\n   * The relative period of time.\n   */\n  period: RelativeDatePeriod;\n  /**\n   * The unit of time in which the date is set relative to. When `period` is set as `now`, the `unit` does not have to be defined.\n   */\n  unit?: RelativeDateUnit;\n  /**\n   * The amount of the `unit` of time. When `period` is set as `now`, the `amount` does not have to be defined.\n   */\n  amount?: number;\n}\n\nconst buildRelativeDateDefinition = (period: RelativeDatePeriod) => {\n  const isNow = period === 'now';\n  return {\n    amount: new NumberValue({required: !isNow, min: 1}),\n    unit: new StringValue({\n      required: !isNow,\n      constrainTo: validRelativeDateUnits,\n    }),\n    period: new StringValue({\n      required: true,\n      constrainTo: validRelativeDatePeriods,\n    }),\n  };\n};\n\n/**\n * Validates a relative date and throws if it's invalid.\n * @param date The relative date, in `RelativeDate` or string format\n */\nexport function validateRelativeDate(date: RelativeDate | string) {\n  if (typeof date === 'string' && !isRelativeDateFormat(date)) {\n    throw new Error(\n      `The value \"${date}\" is not respecting the relative date format \"period-amount-unit\"`\n    );\n  }\n\n  const relativeDate =\n    typeof date === 'string' ? parseRelativeDate(date) : date;\n\n  new Schema(buildRelativeDateDefinition(relativeDate.period)).validate(\n    relativeDate\n  );\n\n  const dayJsDate = relativeToAbsoluteDate(relativeDate);\n  const stringifiedDate = JSON.stringify(relativeDate);\n  if (!dayJsDate.isValid()) {\n    throw new Error(`Date is invalid: ${stringifiedDate}`);\n  }\n\n  assertDateAboveAPIMinimum(dayJsDate);\n}\n\nexport function serializeRelativeDate(relativeDate: RelativeDate) {\n  const {period, amount, unit} = relativeDate;\n\n  switch (period) {\n    case 'past':\n    case 'next':\n      return `${period}-${amount}-${unit}`;\n    case 'now':\n      return period;\n  }\n}\n\nfunction relativeToAbsoluteDate(relativeDate: RelativeDate) {\n  const {period, amount, unit} = relativeDate;\n  switch (period) {\n    case 'past':\n      return dayjs().subtract(amount!, unit as QUnitType);\n    case 'next':\n      return dayjs().add(amount!, unit as QUnitType);\n    case 'now':\n      return dayjs();\n  }\n}\n\nexport function formatRelativeDateForSearchApi(relativeDate: string) {\n  return formatDateForSearchApi(\n    relativeToAbsoluteDate(parseRelativeDate(relativeDate))\n  );\n}\n\nfunction splitDate(date: string) {\n  return date.toLocaleLowerCase().split('-');\n}\n\nexport function isRelativeDateFormat(date: string) {\n  const [period, amount, unit] = splitDate(date);\n  if (period === 'now') {\n    return true;\n  }\n\n  if (!validRelativeDatePeriods.includes(period)) {\n    return false;\n  }\n\n  if (!validRelativeDateUnits.includes(unit)) {\n    return false;\n  }\n\n  const intAmount = parseInt(amount);\n  if (isNaN(intAmount) || intAmount <= 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isRelativeDate(date: unknown): date is RelativeDate {\n  return !!date && typeof date === 'object' && 'period' in date!;\n}\n\nfunction parseRelativeDate(date: string): RelativeDate {\n  const [period, amount, unit] = splitDate(date);\n  if (period === 'now') {\n    return {\n      period: 'now',\n    };\n  }\n\n  return {\n    period: period as RelativeDatePeriod,\n    amount: amount ? parseInt(amount) : undefined,\n    unit: unit ? (unit as RelativeDateUnit) : undefined,\n  };\n}\n\n/**\n * Deserializes a relative date string value into a valid `RelativeDate` object.\n * Throws an error if the date is invalid.\n * @param date The string serialized with the format \"period-amount-unit\"\n * @returns The parsed `RelativeDate` object.\n */\nexport function deserializeRelativeDate(date: string) {\n  validateRelativeDate(date);\n  return parseRelativeDate(date);\n}\n", "import dayjs, {ConfigType} from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\n\ndayjs.extend(customParseFormat);\n\n/**\n * The date format supported by the Search API.\n */\nexport const API_DATE_FORMAT = 'YYYY/MM/DD@HH:mm:ss';\nconst API_DATE_MINIMUM = '1401-01-01';\n\nexport type AbsoluteDate = string | number | Date;\n\nexport function parseDate(date: ConfigType, format?: string) {\n  const parsedDate = dayjs(date, format);\n  if (!parsedDate.isValid() && !format) {\n    return dayjs(date, API_DATE_FORMAT);\n  }\n  return parsedDate;\n}\n\nexport function formatDateForSearchApi(date: dayjs.Dayjs) {\n  return date.format(API_DATE_FORMAT);\n}\n\nexport function isSearchApiDate(date: string) {\n  return formatDateForSearchApi(parseDate(date)) === date;\n}\n\nexport function validateAbsoluteDate(date: AbsoluteDate, dateFormat?: string) {\n  const dayJSDate = parseDate(date, dateFormat);\n\n  if (!dayJSDate.isValid()) {\n    const provideFormat =\n      '. Please provide a date format string in the configuration options. See https://day.js.org/docs/en/parse/string-format for more information.';\n    const withFormat = ` with the format \"${dateFormat}\"`;\n    throw new Error(\n      `Could not parse the provided date \"${date}\"${\n        dateFormat ? withFormat : provideFormat\n      }`\n    );\n  }\n\n  assertDateAboveAPIMinimum(dayJSDate);\n}\n\nexport function assertDateAboveAPIMinimum(date: dayjs.Dayjs) {\n  if (date.isBefore(API_DATE_MINIMUM)) {\n    throw new Error(\n      `Date is before year 1401, which is unsupported by the API: ${date}`\n    );\n  }\n}\n", "import {CurrentValues, Type} from '../../../facet-api/request.js';\nimport {FacetValueState} from '../../../facet-api/value.js';\nimport {AnyFacetRequest} from '../../../generic/interfaces/generic-facet-request.js';\nimport {BaseRangeFacetRequest} from '../../generic/interfaces/request.js';\n\n/**\n * The options defining a value to display in a `DateFacet`.\n */\nexport interface DateRangeRequest {\n  /**\n   * The starting value for the date range, formatted as `YYYY/MM/DD@HH:mm:ss` or the [Relative Date](https://docs.coveo.com/en/headless/latest/reference/search/controllers/date-facet/relative-date-format/) format \"period-amount-unit\".\n   */\n  start: string;\n\n  /**\n   * The ending value for the date range, formatted as `YYYY/MM/DD@HH:mm:ss` or the [Relative Date](https://docs.coveo.com/en/headless/latest/reference/search/controllers/date-facet/relative-date-format/) format \"period-amount-unit\".\n   */\n  end: string;\n\n  /**\n   * Whether to include the `end` value in the range.\n   */\n  endInclusive: boolean;\n\n  /**\n   * The current facet value state.\n   */\n  state: FacetValueState;\n}\n\nexport function isDateFacetRequest(\n  request: AnyFacetRequest\n): request is DateFacetRequest {\n  return request.type === 'dateRange';\n}\n\nexport interface DateFacetRequest\n  extends BaseRangeFacetRequest,\n    CurrentValues<DateRangeRequest>,\n    Type<'dateRange'> {}\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {AnyAction} from '@reduxjs/toolkit';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {StateNeededBySearchAnalyticsProvider} from '../../../api/analytics/search-analytics.js';\nimport {\n  isErrorResponse,\n  isSuccessResponse,\n  SearchAPIClient,\n} from '../../../api/search/search-api-client.js';\nimport {SearchAPIErrorWithStatusCode} from '../../../api/search/search-api-error-response.js';\nimport {SearchOrigin} from '../../../api/search/search-metadata.js';\nimport {SearchRequest} from '../../../api/search/search/search-request.js';\nimport {SearchResponseSuccess} from '../../../api/search/search/search-response.js';\nimport {ClientThunkExtraArguments} from '../../../app/thunk-extra-arguments.js';\nimport {\n  AdvancedSearchQueriesSection,\n  CategoryFacetSection,\n  ConfigurationSection,\n  ContextSection,\n  DateFacetSection,\n  DebugSection,\n  DidYouMeanSection,\n  FacetOptionsSection,\n  FacetOrderSection,\n  FacetSection,\n  FieldsSection,\n  FoldingSection,\n  NumericFacetSection,\n  PaginationSection,\n  PipelineSection,\n  QuerySection,\n  QuerySetSection,\n  SearchHubSection,\n  SearchSection,\n  SortSection,\n  TriggerSection,\n} from '../../../state/state-sections.js';\nimport {AnalyticsAsyncThunk} from '../../analytics/analytics-utils.js';\nimport {applyDidYouMeanCorrection} from '../../did-you-mean/did-you-mean-actions.js';\nimport {logDidYouMeanAutomatic} from '../../did-you-mean/did-you-mean-analytics-actions.js';\nimport {snapshot} from '../../history/history-actions.js';\nimport {extractHistory} from '../../history/history-state.js';\nimport {updateQuery} from '../../query/query-actions.js';\nimport {getQueryInitialState} from '../../query/query-state.js';\nimport {logTriggerQuery} from '../../triggers/trigger-analytics-actions.js';\nimport {\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from '../../triggers/triggers-actions.js';\nimport {logQueryError} from '../search-analytics-actions.js';\nimport {\n  ErrorResponse,\n  MappedSearchRequest,\n  mapSearchResponse,\n  SuccessResponse,\n} from '../search-mappings.js';\nimport {getSearchInitialState} from '../search-state.js';\nimport {ExecuteSearchThunkReturn} from './search-actions.js';\nimport {buildSearchRequest} from './search-request.js';\n\nexport type StateNeededByExecuteSearch = ConfigurationSection &\n  Partial<\n    QuerySection &\n      AdvancedSearchQueriesSection &\n      PaginationSection &\n      SortSection &\n      FacetSection &\n      NumericFacetSection &\n      CategoryFacetSection &\n      DateFacetSection &\n      ContextSection &\n      DidYouMeanSection &\n      FieldsSection &\n      PipelineSection &\n      SearchHubSection &\n      QuerySetSection &\n      FacetOptionsSection &\n      FacetOrderSection &\n      DebugSection &\n      SearchSection &\n      FoldingSection &\n      TriggerSection\n  >;\n\ninterface FetchedResponse {\n  response: SuccessResponse | ErrorResponse;\n  duration: number;\n  queryExecuted: string;\n  requestExecuted: SearchRequest;\n}\n\ntype ValidReturnTypeFromProcessingStep<RejectionType> =\n  | ExecuteSearchThunkReturn\n  | RejectionType;\n\nexport interface AsyncThunkConfig {\n  getState: () => StateNeededByExecuteSearch;\n  dispatch: ThunkDispatch<\n    StateNeededByExecuteSearch,\n    ClientThunkExtraArguments<SearchAPIClient> & {\n      searchAPIClient?: SearchAPIClient | undefined;\n    },\n    AnyAction\n  >;\n\n  rejectWithValue: (err: SearchAPIErrorWithStatusCode) => unknown;\n  analyticsAction: AnalyticsAsyncThunk | null;\n  extra: ClientThunkExtraArguments<SearchAPIClient>;\n}\n\ntype QueryCorrectionCallback = (modification: string) => void;\n\nexport interface FetchFromAPIOptions {\n  origin: SearchOrigin;\n  disableAbortWarning?: boolean;\n}\n\nexport class AsyncSearchThunkProcessor<RejectionType> {\n  constructor(\n    private config: AsyncThunkConfig,\n    private onUpdateQueryForCorrection: QueryCorrectionCallback = (\n      modification\n    ) => {\n      this.dispatch(updateQuery({q: modification}));\n    }\n  ) {}\n\n  public async fetchFromAPI(\n    {mappings, request}: MappedSearchRequest,\n    options: FetchFromAPIOptions\n  ) {\n    const startedAt = new Date().getTime();\n    const response = mapSearchResponse(\n      await this.extra.apiClient.search(request, options),\n      mappings\n    );\n    const duration = new Date().getTime() - startedAt;\n    const queryExecuted = this.getState().query?.q || '';\n    return {response, duration, queryExecuted, requestExecuted: request};\n  }\n\n  public async process(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType>> {\n    return (\n      this.processQueryErrorOrContinue(fetched) ??\n      (await this.processQueryCorrectionsOrContinue(fetched)) ??\n      (await this.processQueryTriggersOrContinue(fetched)) ??\n      this.processSuccessResponse(fetched)\n    );\n  }\n\n  private processQueryErrorOrContinue(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> | null {\n    if (isErrorResponse(fetched.response)) {\n      this.dispatch(logQueryError(fetched.response.error));\n      return this.rejectWithValue(fetched.response.error) as RejectionType;\n    }\n\n    return null;\n  }\n\n  private async processQueryCorrectionsOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const state = this.getState();\n    const successResponse = this.getSuccessResponse(fetched);\n\n    if (!successResponse || !state.didYouMean) {\n      return null;\n    }\n\n    const {enableDidYouMean, automaticallyCorrectQuery} = state.didYouMean;\n    const {results, queryCorrections, queryCorrection} = successResponse;\n\n    if (!enableDidYouMean || !automaticallyCorrectQuery) {\n      return null;\n    }\n\n    const shouldExecuteClassicDidYouMeanAutoCorrection =\n      results.length === 0 && queryCorrections && queryCorrections.length !== 0;\n\n    const shouldExecuteModernDidYouMeanAutoCorrection =\n      !isNullOrUndefined(queryCorrection) &&\n      !isNullOrUndefined(queryCorrection.correctedQuery);\n\n    const shouldExitWithNoAutoCorrection =\n      !shouldExecuteClassicDidYouMeanAutoCorrection &&\n      !shouldExecuteModernDidYouMeanAutoCorrection;\n\n    if (shouldExitWithNoAutoCorrection) {\n      return null;\n    }\n\n    const ret = shouldExecuteClassicDidYouMeanAutoCorrection\n      ? await this.processLegacyDidYouMeanAutoCorrection(fetched)\n      : this.processModernDidYouMeanAutoCorrection(fetched);\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n\n    return ret;\n  }\n\n  private async processLegacyDidYouMeanAutoCorrection(\n    originalFetchedResponse: FetchedResponse\n  ): Promise<ExecuteSearchThunkReturn | RejectionType | null> {\n    const originalQuery = this.getCurrentQuery();\n    const originalSearchSuccessResponse = this.getSuccessResponse(\n      originalFetchedResponse\n    )!;\n    if (!originalSearchSuccessResponse.queryCorrections) {\n      return null;\n    }\n\n    const {correctedQuery} = originalSearchSuccessResponse.queryCorrections[0];\n\n    const retried =\n      await this.automaticallyRetryQueryWithCorrection(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.logOriginalAnalyticsQueryBeforeAutoCorrection(originalFetchedResponse);\n    this.dispatch(snapshot(extractHistory(this.getState())));\n\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n        queryCorrections: originalSearchSuccessResponse.queryCorrections,\n      },\n      automaticallyCorrected: true,\n      originalQuery,\n      analyticsAction: logDidYouMeanAutomatic(),\n    };\n  }\n\n  private processModernDidYouMeanAutoCorrection(\n    originalFetchedResponse: FetchedResponse\n  ): ExecuteSearchThunkReturn {\n    const successResponse = this.getSuccessResponse(originalFetchedResponse)!;\n    const {correctedQuery, originalQuery} = successResponse.queryCorrection!;\n\n    this.onUpdateQueryForCorrection(correctedQuery);\n\n    return {\n      ...originalFetchedResponse,\n      response: {\n        ...successResponse,\n      },\n      queryExecuted: correctedQuery,\n      automaticallyCorrected: true,\n      originalQuery,\n      analyticsAction: logDidYouMeanAutomatic(),\n    };\n  }\n\n  private logOriginalAnalyticsQueryBeforeAutoCorrection(\n    originalFetchedResponse: FetchedResponse\n  ) {\n    const state = this.getState();\n    const successResponse = this.getSuccessResponse(originalFetchedResponse)!;\n    this.analyticsAction &&\n      this.analyticsAction()(\n        this.dispatch,\n        () =>\n          this.getStateAfterResponse(\n            originalFetchedResponse.queryExecuted,\n            originalFetchedResponse.duration,\n            state,\n            successResponse\n          ),\n        this.extra\n      );\n  }\n\n  private async processQueryTriggersOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const successResponse = this.getSuccessResponse(fetched);\n    if (!successResponse) {\n      return null;\n    }\n    const correctedQuery =\n      (successResponse.triggers.find((trigger) => trigger.type === 'query')\n        ?.content as string) || '';\n\n    if (!correctedQuery) {\n      return null;\n    }\n\n    const ignored = this.getState().triggers?.queryModification.queryToIgnore;\n\n    if (ignored === correctedQuery) {\n      this.dispatch(updateIgnoreQueryTrigger(''));\n      return null;\n    }\n\n    if (this.analyticsAction) {\n      await this.dispatch(this.analyticsAction);\n    }\n\n    const originalQuery = this.getCurrentQuery();\n    const retried =\n      await this.automaticallyRetryQueryWithTriggerModification(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n      },\n      automaticallyCorrected: false,\n      originalQuery,\n      analyticsAction: logTriggerQuery(),\n    };\n  }\n\n  private getStateAfterResponse(\n    query: string,\n    duration: number,\n    previousState: StateNeededByExecuteSearch,\n    response: SearchResponseSuccess\n  ): StateNeededBySearchAnalyticsProvider {\n    return {\n      ...previousState,\n      query: {\n        q: query,\n        enableQuerySyntax:\n          previousState.query?.enableQuerySyntax ??\n          getQueryInitialState().enableQuerySyntax,\n      },\n      search: {\n        ...getSearchInitialState(),\n        duration,\n        response,\n        results: response.results,\n      },\n    };\n  }\n\n  private processSuccessResponse(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> {\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...fetched,\n      response: this.getSuccessResponse(fetched)!,\n      automaticallyCorrected: false,\n      originalQuery: this.getCurrentQuery(),\n      analyticsAction: this.analyticsAction!,\n    };\n  }\n\n  private getSuccessResponse(fetched: FetchedResponse) {\n    if (isSuccessResponse(fetched.response)) {\n      return fetched.response.success;\n    }\n    return null;\n  }\n\n  private async automaticallyRetryQueryWithCorrection(correction: string) {\n    this.onUpdateQueryForCorrection(correction);\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(this.getState()),\n      {origin: 'mainSearch'}\n    );\n    this.dispatch(applyDidYouMeanCorrection(correction));\n    return fetched;\n  }\n\n  private async automaticallyRetryQueryWithTriggerModification(\n    modified: string\n  ) {\n    this.dispatch(\n      applyQueryTriggerModification({\n        newQuery: modified,\n        originalQuery: this.getCurrentQuery(),\n      })\n    );\n    this.onUpdateQueryForCorrection(modified);\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(this.getState()),\n      {origin: 'mainSearch'}\n    );\n\n    return fetched;\n  }\n\n  private getCurrentQuery() {\n    const state = this.getState();\n    return state.query?.q !== undefined ? state.query.q : '';\n  }\n\n  private get extra() {\n    return this.config.extra;\n  }\n\n  private getState() {\n    return this.config.getState();\n  }\n\n  private get dispatch() {\n    return this.config.dispatch;\n  }\n\n  private get analyticsAction() {\n    return this.config.analyticsAction;\n  }\n\n  private get rejectWithValue() {\n    return this.config.rejectWithValue;\n  }\n}\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {AsyncThunkOptions} from '../../app/async-thunk-options.js';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments.js';\nimport {emptyQuestionAnswer} from '../../features/search/search-state.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {pickNonBaseParams, unwrapError} from '../api-client-utils.js';\nimport {PlatformClient} from '../platform-client.js';\nimport {BaseParam} from '../platform-service-params.js';\nimport {APICallsQueue} from './api-calls-queue.js';\nimport {FacetSearchRequest} from './facet-search/facet-search-request.js';\nimport {FacetSearchResponse} from './facet-search/facet-search-response.js';\nimport {\n  FieldDescription,\n  FieldDescriptionsResponseSuccess,\n} from './fields/fields-response.js';\nimport {getHtml, HtmlAPIClientOptions} from './html/html-api-client.js';\nimport {HtmlRequest} from './html/html-request.js';\nimport {PlanRequest} from './plan/plan-request.js';\nimport {PlanResponseSuccess, Plan} from './plan/plan-response.js';\nimport {QuerySuggestRequest} from './query-suggest/query-suggest-request.js';\nimport {\n  QuerySuggestSuccessResponse,\n  QuerySuggest,\n} from './query-suggest/query-suggest-response.js';\nimport {RecommendationRequest} from './recommendation/recommendation-request.js';\nimport {\n  PostprocessFacetSearchResponseMiddleware,\n  PostprocessQuerySuggestResponseMiddleware,\n  PostprocessSearchResponseMiddleware,\n} from './search-api-client-middleware.js';\nimport {\n  SearchAPIErrorWithStatusCode,\n  buildAPIResponseFromErrorOrThrow,\n} from './search-api-error-response.js';\nimport {baseSearchRequest} from './search-api-params.js';\nimport {SearchOrigin} from './search-metadata.js';\nimport {SearchRequest} from './search/search-request.js';\nimport {Search, SearchResponseSuccess} from './search/search-response.js';\n\nexport interface FacetSearchAPIClient {\n  facetSearch(req: FacetSearchRequest): Promise<FacetSearchResponse>;\n}\n\nexport interface SearchOptions {\n  disableAbortWarning?: boolean;\n  origin: SearchOrigin;\n}\n\nexport type AllSearchAPIResponse =\n  | Plan\n  | Search\n  | QuerySuggest\n  | FieldDescription;\n\nexport interface AsyncThunkSearchOptions<T extends Partial<SearchAppState>>\n  extends AsyncThunkOptions<T, ClientThunkExtraArguments<SearchAPIClient>> {\n  rejectValue: SearchAPIErrorWithStatusCode;\n}\n\nexport interface SearchAPIClientOptions extends HtmlAPIClientOptions {\n  postprocessSearchResponseMiddleware: PostprocessSearchResponseMiddleware;\n  postprocessQuerySuggestResponseMiddleware: PostprocessQuerySuggestResponseMiddleware;\n  postprocessFacetSearchResponseMiddleware: PostprocessFacetSearchResponseMiddleware;\n}\n\nexport type SearchAPIClientResponse<T> =\n  | {success: T}\n  | {error: SearchAPIErrorWithStatusCode};\n\nexport class SearchAPIClient implements FacetSearchAPIClient {\n  constructor(private options: SearchAPIClientOptions) {}\n\n  async plan(\n    req: PlanRequest\n  ): Promise<SearchAPIClientResponse<PlanResponseSuccess>> {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', '/plan'),\n      requestParams: pickNonBaseParams(req),\n      requestMetadata: {method: 'plan'},\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      return buildAPIResponseFromErrorOrThrow(response);\n    }\n\n    const body = await response.json();\n\n    if (isSuccessPlanResponse(body)) {\n      return {success: body};\n    }\n\n    return {\n      error: unwrapError({response, body}),\n    };\n  }\n\n  async querySuggest(\n    req: QuerySuggestRequest\n  ): Promise<SearchAPIClientResponse<QuerySuggestSuccessResponse>> {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', '/querySuggest'),\n      requestMetadata: {method: 'querySuggest'},\n      requestParams: pickNonBaseParams(req),\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      return buildAPIResponseFromErrorOrThrow(response);\n    }\n\n    const body = await response.json();\n    const payload = {response, body};\n\n    if (isSuccessQuerySuggestionsResponse(body)) {\n      const processedResponse =\n        await this.options.postprocessQuerySuggestResponseMiddleware(payload);\n      return {\n        success: processedResponse.body,\n      };\n    }\n    return {\n      error: unwrapError(payload),\n    };\n  }\n\n  private apiCallsQueues: Record<SearchOrigin | 'unknown', APICallsQueue> = {\n    unknown: new APICallsQueue(),\n    mainSearch: new APICallsQueue(),\n    facetValues: new APICallsQueue(),\n    foldingCollection: new APICallsQueue(),\n    instantResults: new APICallsQueue(),\n  };\n\n  async search(\n    req: SearchRequest,\n    options?: SearchOptions\n  ): Promise<SearchAPIClientResponse<SearchResponseSuccess>> {\n    const origin = options?.origin ?? 'unknown';\n\n    const response = await this.apiCallsQueues[origin].enqueue(\n      (signal) =>\n        PlatformClient.call({\n          ...baseSearchRequest(req, 'POST', 'application/json', ''),\n          requestParams: pickNonBaseParams(req),\n          requestMetadata: {method: 'search', origin: options?.origin},\n          ...this.options,\n          signal: signal ?? undefined,\n        }),\n      {logger: this.options.logger, warnOnAbort: !options?.disableAbortWarning}\n    );\n\n    if (response instanceof Error) {\n      return buildAPIResponseFromErrorOrThrow(\n        response,\n        options?.disableAbortWarning\n      );\n    }\n\n    const body = await response.json();\n    const payload = {response, body};\n\n    if (isSuccessSearchResponse(body)) {\n      payload.body = shimResponse(body);\n      const processedResponse =\n        await this.options.postprocessSearchResponseMiddleware(payload);\n      return {\n        success: processedResponse.body,\n      };\n    }\n\n    return {\n      error: unwrapError(payload),\n    };\n  }\n\n  async facetSearch(req: FacetSearchRequest) {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', '/facet'),\n      requestParams: pickNonBaseParams(req),\n      requestMetadata: {method: 'facetSearch'},\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      throw response;\n    }\n\n    const body = await response.json();\n    const payload = {response, body};\n\n    const processedResponse =\n      await this.options.postprocessFacetSearchResponseMiddleware(payload);\n\n    return processedResponse.body;\n  }\n\n  async recommendations(req: RecommendationRequest) {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', ''),\n      requestParams: pickNonBaseParams(req),\n      requestMetadata: {method: 'recommendations'},\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      throw response;\n    }\n\n    const body = await response.json();\n\n    if (isSuccessSearchResponse(body)) {\n      const payload = {response, body};\n      payload.body = shimResponse(body);\n      const processedResponse =\n        await this.options.postprocessSearchResponseMiddleware(payload);\n      return {\n        success: processedResponse.body,\n      };\n    }\n\n    return {\n      error: unwrapError({response, body}),\n    };\n  }\n\n  async html(req: HtmlRequest) {\n    return getHtml(req, {...this.options});\n  }\n\n  async fieldDescriptions(req: BaseParam) {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'GET', 'application/json', '/fields'),\n      requestParams: {},\n      requestMetadata: {method: 'fieldDescriptions'},\n      ...this.options,\n    });\n    if (response instanceof Error) {\n      throw response;\n    }\n    const body = await response.json();\n\n    if (isSuccessFieldsDescriptionResponse(body)) {\n      return {success: body};\n    }\n\n    return {\n      error: unwrapError({response, body}),\n    };\n  }\n}\n\nexport const isSuccessResponse = <T>(\n  r: SearchAPIClientResponse<T>\n): r is {success: T} => {\n  return (r as {success: T}).success !== undefined;\n};\n\nexport const isErrorResponse = <T>(\n  r: SearchAPIClientResponse<T>\n): r is {error: SearchAPIErrorWithStatusCode} => {\n  return (r as {error: SearchAPIErrorWithStatusCode}).error !== undefined;\n};\n\nexport function isSuccessSearchResponse(\n  body: unknown\n): body is SearchResponseSuccess {\n  return (body as SearchResponseSuccess).results !== undefined;\n}\n\nexport function shimResponse(response: SearchResponseSuccess) {\n  const empty = emptyQuestionAnswer();\n  if (isNullOrUndefined(response.questionAnswer)) {\n    response.questionAnswer = empty;\n    return response;\n  }\n\n  response.questionAnswer = {...empty, ...response.questionAnswer};\n  return response;\n}\n\nfunction isSuccessQuerySuggestionsResponse(\n  body: unknown\n): body is QuerySuggestSuccessResponse {\n  return (body as QuerySuggestSuccessResponse).completions !== undefined;\n}\n\nfunction isSuccessPlanResponse(body: unknown): body is PlanResponseSuccess {\n  return (body as PlanResponseSuccess).preprocessingOutput !== undefined;\n}\n\nfunction isSuccessFieldsDescriptionResponse(\n  body: unknown\n): body is FieldDescriptionsResponseSuccess {\n  return (body as FieldDescriptionsResponseSuccess).fields !== undefined;\n}\n", "import {PlatformResponse} from './platform-client.js';\nimport {BaseParam} from './platform-service-params.js';\nimport {AllSearchAPIResponse} from './search/search-api-client.js';\nimport {\n  SearchAPIErrorWithStatusCode,\n  SearchAPIErrorWithExceptionInBody,\n} from './search/search-api-error-response.js';\nimport {AuthenticationParam} from './search/search-api-params.js';\n\nexport function pickNonBaseParams<\n  Params extends BaseParam & AuthenticationParam,\n>(req: Params) {\n  // cheap version of _.omit\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {url, accessToken, organizationId, authentication, ...nonBase} = req;\n  return nonBase;\n}\n\nexport const unwrapError = (\n  payload: PlatformResponse<AllSearchAPIResponse>\n): SearchAPIErrorWithStatusCode => {\n  const {response} = payload;\n\n  if (response.body) {\n    return unwrapSearchApiError(payload);\n  }\n\n  return unwrapClientError(response);\n};\n\nconst unwrapSearchApiError = (\n  payload: PlatformResponse<AllSearchAPIResponse>\n) => {\n  if (isSearchAPIException(payload)) {\n    return unwrapErrorByException(payload);\n  }\n\n  if (isSearchAPIErrorWithStatusCode(payload)) {\n    return payload.body;\n  }\n\n  return {message: 'unknown', statusCode: 0, type: 'unknown'};\n};\n\nconst unwrapClientError = (response: Response) => {\n  // Transform an error to an object https://stackoverflow.com/a/26199752\n  const body = JSON.parse(\n    JSON.stringify(response, Object.getOwnPropertyNames(response))\n  ) as Error;\n\n  return {\n    ...body,\n    message: `Client side error: ${body.message || ''}`,\n    statusCode: 400,\n    type: 'ClientError',\n  };\n};\n\nfunction isSearchAPIErrorWithStatusCode(\n  r: PlatformResponse<AllSearchAPIResponse>\n): r is PlatformResponse<SearchAPIErrorWithStatusCode> {\n  return (\n    (r as PlatformResponse<SearchAPIErrorWithStatusCode>).body.statusCode !==\n    undefined\n  );\n}\n\nfunction isSearchAPIException(\n  r: PlatformResponse<AllSearchAPIResponse>\n): r is PlatformResponse<SearchAPIErrorWithExceptionInBody> {\n  return (\n    (r as PlatformResponse<SearchAPIErrorWithExceptionInBody>).body\n      .exception !== undefined\n  );\n}\n\nconst unwrapErrorByException = (\n  res: PlatformResponse<SearchAPIErrorWithExceptionInBody>\n): SearchAPIErrorWithStatusCode => ({\n  message: res.body.exception.code,\n  statusCode: res.response.status,\n  type: res.body.exception.code,\n});\n", "import {Logger} from 'pino';\n\nexport class APICallsQueue {\n  private currentAbortController: AbortController | null = null;\n\n  /**\n   * Enqueue an API call so that it can get cancelled if another call is enqueued before it finishes.\n   */\n  public async enqueue<T>(\n    call: (signal: AbortSignal | null) => Promise<T>,\n    options: {logger: Logger; warnOnAbort: boolean}\n  ) {\n    const lastAbortController = this.currentAbortController;\n    const abortController = (this.currentAbortController =\n      new AbortController());\n    if (lastAbortController) {\n      if (options.warnOnAbort) {\n        options.logger.warn('Cancelling current pending search query');\n      }\n      lastAbortController.abort();\n    }\n    try {\n      return await call(abortController?.signal ?? null);\n    } finally {\n      if (this.currentAbortController === abortController) {\n        this.currentAbortController = null;\n      }\n    }\n  }\n}\n", "import {Logger} from 'pino';\nimport {URLPath} from '../../../utils/url-utils.js';\nimport {pickNonBaseParams, unwrapError} from '../../api-client-utils.js';\nimport {PlatformClient} from '../../platform-client.js';\nimport {PreprocessRequest, RequestMetadata} from '../../preprocess-request.js';\nimport {findEncoding} from '../encoding-finder.js';\nimport {SearchAPIErrorWithStatusCode} from '../search-api-error-response.js';\nimport {baseSearchRequest} from '../search-api-params.js';\nimport {HtmlRequest} from './html-request.js';\n\nexport interface HtmlApiClient {\n  html: (req: HtmlRequest) => Promise<\n    | {\n        success: string;\n        error?: undefined;\n      }\n    | {\n        error: SearchAPIErrorWithStatusCode;\n        success?: undefined;\n      }\n  >;\n}\n\nexport interface HtmlAPIClientOptions {\n  logger: Logger;\n  preprocessRequest: PreprocessRequest;\n  requestMetadata?: RequestMetadata;\n}\n\nexport const buildContentURL = (req: HtmlRequest, path: string) => {\n  const url = new URLPath(`${req.url}${path}`);\n  url.addParam('access_token', req.accessToken);\n  url.addParam('organizationId', req.organizationId);\n  url.addParam('uniqueId', req.uniqueId);\n  if (req.q !== undefined) {\n    url.addParam('q', req.q);\n  }\n  if (req.enableNavigation !== undefined) {\n    url.addParam('enableNavigation', `${req.enableNavigation}`);\n  }\n  if (req.requestedOutputSize !== undefined) {\n    url.addParam('requestedOutputSize', `${req.requestedOutputSize}`);\n  }\n  return url.href;\n};\n\nexport const getHtml = async (\n  req: HtmlRequest,\n  options: HtmlAPIClientOptions\n) => {\n  const response = await PlatformClient.call({\n    ...baseSearchRequest(\n      req,\n      'POST',\n      'application/x-www-form-urlencoded',\n      '/html'\n    ),\n    requestParams: pickNonBaseParams(req),\n    requestMetadata: {method: 'html'},\n    ...options,\n  });\n\n  if (response instanceof Error) {\n    throw response;\n  }\n\n  const encoding = findEncoding(response);\n  const buffer = await response.arrayBuffer();\n  const decoder = new TextDecoder(encoding);\n  const body = decoder.decode(buffer);\n\n  if (isSuccessHtmlResponse(body)) {\n    return {success: body};\n  }\n\n  return {error: unwrapError({response, body})};\n};\n\nfunction isSuccessHtmlResponse(body: unknown): body is string {\n  return typeof body === 'string';\n}\n", "export class URLPath {\n  private _basePath: string;\n  private _params: Record<string, string> = {};\n\n  constructor(basePath: string) {\n    this._basePath = basePath;\n  }\n\n  public addParam(name: string, value: string) {\n    this._params = {\n      ...this.params,\n      [name]: value,\n    };\n  }\n\n  get basePath() {\n    return this._basePath;\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  get hasParams() {\n    return Object.entries(this._params).length;\n  }\n\n  get href() {\n    return this.hasParams\n      ? `${this.basePath}?${Object.entries(this.params)\n          .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n          .join('&')}`\n      : this.basePath;\n  }\n}\n\nexport type PlatformCombination =\n  | {env: 'dev'; region: 'us' | 'eu'}\n  | {env: 'stg'; region: 'us'}\n  | {env: 'hipaa'; region: 'us'}\n  | {env: 'prod'; region: 'us' | 'eu' | 'au'};\n\nexport type PlatformEnvironment = PlatformCombination['env'];\n", "export function findEncoding(response: Response) {\n  const contentType = response.headers.get('content-type') || '';\n  const charset =\n    contentType.split(';').find((part) => part.indexOf('charset=') !== -1) ||\n    '';\n\n  return charset.split('=')[1] || 'UTF-8';\n}\n", "import {history} from 'coveo.analytics';\nimport {FacetOptions} from '../../features/facet-options/facet-options.js';\nimport {AutomaticFacetRequest} from '../../features/facets/automatic-facet-set/interfaces/request.js';\nimport {AnyFacetRequest} from '../../features/facets/generic/interfaces/generic-facet-request.js';\nimport {GeneratedContentFormat} from '../../features/generated-answer/generated-response-format.js';\nimport {URLPath} from '../../utils/url-utils.js';\nimport {\n  HTTPContentType,\n  HttpMethods,\n  PlatformClientCallOptions,\n} from '../platform-client.js';\nimport {BaseParam} from '../platform-service-params.js';\n\nexport interface QueryParam {\n  q?: string;\n}\n\nexport interface PipelineParam {\n  pipeline?: string;\n}\n\nexport interface SearchHubParam {\n  searchHub?: string;\n}\n\nexport interface AdvancedQueryParam {\n  aq?: string;\n}\n\nexport interface ConstantQueryParam {\n  cq?: string;\n}\n\nexport interface LargeQueryParam {\n  lq?: string;\n}\n\nexport interface DisjunctionQueryParam {\n  dq?: string;\n}\n\nexport interface SortCriteriaParam {\n  sortCriteria?: string;\n}\n\nexport interface FirstResultParam {\n  firstResult?: number;\n}\n\nexport interface FacetsParam {\n  facets?: AnyFacetRequest[];\n}\n\nexport interface EnableDidYouMeanParam {\n  enableDidYouMean?: boolean;\n}\n\nexport interface QueryCorrectionParam {\n  queryCorrection?: {\n    enabled?: boolean;\n    options?: {automaticallyCorrect?: 'never' | 'whenNoResults'};\n  };\n}\n\nexport interface EnableQuerySyntaxParam {\n  enableQuerySyntax?: boolean;\n}\n\nexport interface FieldsToIncludeParam {\n  fieldsToInclude?: string[];\n}\n\nexport interface FacetOptionsParam {\n  facetOptions?: FacetOptions;\n}\n\nexport interface TabParam {\n  tab: string;\n}\n\nexport interface ReferrerParam {\n  referrer: string | null;\n}\n\nexport interface RecommendationParam {\n  recommendation: string;\n}\n\nexport interface MachineLearningParam {\n  mlParameters: MachineLearningECommerceParameters;\n}\n\nexport interface MachineLearningECommerceParameters {\n  itemIds?: string[];\n  categoryFilter?: string;\n  brandFilter?: string;\n  itemIdsToFilterOut?: string[];\n  removeRecentlySeen?: boolean;\n  recentlySeenConsideredMinutes?: number;\n}\n\nexport interface MaximumAgeParam {\n  maximumAge: number;\n}\n\nexport interface ActionsHistoryParam {\n  actionsHistory?: history.HistoryElement[];\n}\n\nexport interface TimezoneParam {\n  timezone: string;\n}\n\nexport interface AnalyticsParam {\n  analytics?: {\n    actionCause?: string;\n    customData?: object;\n    clientId: string;\n    deviceId?: string;\n    pageId?: string;\n    clientTimestamp: string;\n    documentReferrer: string | null;\n    originContext: string;\n    userDisplayName?: string;\n    documentLocation?: string | null;\n    trackingId?: string;\n    capture?: boolean;\n    source?: string[];\n  };\n}\n\nexport interface ExcerptLength {\n  excerptLength?: number;\n}\n\nexport interface AuthenticationParam {\n  authentication?: string;\n}\nexport interface AutomaticFacetsParams {\n  generateAutomaticFacets?: {\n    desiredCount: number;\n    numberOfValues?: number;\n    currentFacets?: AutomaticFacetRequest[];\n  };\n}\n\nexport interface PipelineRuleParams {\n  pipelineRuleParameters?: PipelineRuleParameters;\n}\n\nexport interface PipelineRuleParameters {\n  mlGenerativeQuestionAnswering?: GenQAParameters;\n}\n\nexport interface GenQAParameters {\n  responseFormat: ResponseFormatParameters;\n  citationsFieldToInclude: string[];\n}\n\nexport interface ResponseFormatParameters {\n  contentFormat?: GeneratedContentFormat[];\n}\n\nexport const baseSearchRequest = (\n  req: BaseParam & AuthenticationParam,\n  method: HttpMethods,\n  contentType: HTTPContentType,\n  path: string\n): Pick<\n  PlatformClientCallOptions,\n  'accessToken' | 'method' | 'contentType' | 'url' | 'origin'\n> => {\n  const url = new URLPath(`${req.url}${path}`);\n\n  url.addParam('organizationId', req.organizationId);\n\n  if (req.authentication) {\n    url.addParam('authentication', req.authentication);\n  }\n  return {\n    accessToken: req.accessToken,\n    method,\n    contentType,\n    url: url.href,\n    origin: 'searchApiFetch',\n  };\n};\n\nexport const getOrganizationIdQueryParam = (req: BaseParam) =>\n  `organizationId=${req.organizationId}`;\n\nexport const getAuthenticationQueryParam = (req: AuthenticationParam) =>\n  `authentication=${encodeURIComponent(req.authentication!)}`;\n", "import {StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload.js';\nimport {CorrectionMode} from './did-you-mean-state.js';\n\nexport const enableDidYouMean = createAction('didYouMean/enable');\n\nexport const disableDidYouMean = createAction('didYouMean/disable');\n\nexport const disableAutomaticQueryCorrection = createAction(\n  'didYouMean/automaticCorrections/disable'\n);\n\nexport const enableAutomaticQueryCorrection = createAction(\n  'didYouMean/automaticCorrections/enable'\n);\n\nexport const applyDidYouMeanCorrection = createAction(\n  'didYouMean/correction',\n  (payload: string) => validatePayload(payload, requiredNonEmptyString)\n);\n\nexport const setCorrectionMode = createAction(\n  'didYouMean/automaticCorrections/mode',\n  (payload: CorrectionMode) =>\n    validatePayload(\n      payload,\n      new StringValue<CorrectionMode>({\n        constrainTo: ['next', 'legacy'],\n        emptyAllowed: false,\n        required: true,\n      })\n    )\n);\n", "import {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {SearchAction} from '../search/search-actions.js';\n\n//TODO: KIT-2859\nexport const logDidYouMeanClick = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/didyoumean/click', (client) =>\n    client.makeDidYouMeanClick()\n  );\n\n//TODO: KIT-2859\nexport const logDidYouMeanAutomatic = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/didyoumean/automatic', (client) =>\n    client.makeDidYouMeanAutomatic()\n  );\n\nexport const didYouMeanClick = (): SearchAction => ({\n  actionCause: SearchPageEvents.didYouMeanClick,\n});\n\nexport const didYouMeanAutomatic = (): SearchAction => ({\n  actionCause: SearchPageEvents.didYouMeanAutomatic,\n});\n", "import {SearchParametersState} from '../../state/search-app-state.js';\nimport {getAdvancedSearchQueriesInitialState} from '../advanced-search-queries/advanced-search-queries-state.js';\nimport {getContextInitialState} from '../context/context-state.js';\nimport {getDebugInitialState} from '../debug/debug-state.js';\nimport {getDictionaryFieldContextInitialState} from '../dictionary-field-context/dictionary-field-context-state.js';\nimport {getFacetOptionsInitialState} from '../facet-options/facet-options-state.js';\nimport {getAutomaticFacetSetInitialState} from '../facets/automatic-facet-set/automatic-facet-set-state.js';\nimport {getCategoryFacetSetInitialState} from '../facets/category-facet-set/category-facet-set-state.js';\nimport {getFacetOrderInitialState} from '../facets/facet-order/facet-order-state.js';\nimport {getFacetSetInitialState} from '../facets/facet-set/facet-set-state.js';\nimport {getDateFacetSetInitialState} from '../facets/range-facets/date-facet-set/date-facet-set-state.js';\nimport {getNumericFacetSetInitialState} from '../facets/range-facets/numeric-facet-set/numeric-facet-set-state.js';\nimport {getPaginationInitialState} from '../pagination/pagination-state.js';\nimport {getPipelineInitialState} from '../pipeline/pipeline-state.js';\nimport {getQuerySetInitialState} from '../query-set/query-set-state.js';\nimport {getQueryInitialState} from '../query/query-state.js';\nimport {getSearchHubInitialState} from '../search-hub/search-hub-state.js';\nimport {getSortCriteriaInitialState} from '../sort-criteria/sort-criteria-state.js';\nimport {getStaticFilterSetInitialState} from '../static-filter-set/static-filter-set-state.js';\nimport {getTabSetInitialState} from '../tab-set/tab-set-state.js';\n\nexport interface HistoryState extends SearchParametersState {\n  facetOrder: string[];\n}\n\nexport function getHistoryInitialState(): HistoryState {\n  return extractHistory({});\n}\n\nexport function extractHistory(state: Partial<HistoryState>): HistoryState {\n  return {\n    context: state.context || getContextInitialState(),\n    dictionaryFieldContext:\n      state.dictionaryFieldContext || getDictionaryFieldContextInitialState(),\n    facetSet: state.facetSet || getFacetSetInitialState(),\n    numericFacetSet: state.numericFacetSet || getNumericFacetSetInitialState(),\n    dateFacetSet: state.dateFacetSet || getDateFacetSetInitialState(),\n    categoryFacetSet:\n      state.categoryFacetSet || getCategoryFacetSetInitialState(),\n    automaticFacetSet:\n      state.automaticFacetSet ?? getAutomaticFacetSetInitialState(),\n    pagination: state.pagination || getPaginationInitialState(),\n    query: state.query || getQueryInitialState(),\n    tabSet: state.tabSet || getTabSetInitialState(),\n    advancedSearchQueries:\n      state.advancedSearchQueries || getAdvancedSearchQueriesInitialState(),\n    staticFilterSet: state.staticFilterSet || getStaticFilterSetInitialState(),\n    querySet: state.querySet || getQuerySetInitialState(),\n    sortCriteria: state.sortCriteria || getSortCriteriaInitialState(),\n    pipeline: state.pipeline || getPipelineInitialState(),\n    searchHub: state.searchHub || getSearchHubInitialState(),\n    facetOptions: state.facetOptions || getFacetOptionsInitialState(),\n    facetOrder: state.facetOrder ?? getFacetOrderInitialState(),\n    debug: state.debug ?? getDebugInitialState(),\n  };\n}\n", "/**\n * Represents a contextual value, which can be a string or an array of string.\n */\nexport type ContextValue = string | string[];\n/**\n * Represents a key/value pair of contextual information.\n */\nexport type ContextPayload = Record<string, ContextValue>;\nexport type ContextState = {\n  /**\n   * Hold the contextual information that can be [leveraged by the Coveo platform to provide relevant results](https://docs.coveo.com/en/2081/coveo-machine-learning/understanding-custom-context).\n   */\n  contextValues: ContextPayload;\n};\n\nexport function getContextInitialState(): ContextState {\n  return {\n    contextValues: {},\n  };\n}\n", "export const getDebugInitialState = () => false;\n", "export type DictionaryFieldContextPayload = Record<string, string>;\nexport type DictionaryFieldContextState = {\n  /**\n   * Holds the [dictionary field context](https://docs.coveo.com/en/2036/index-content/about-fields#dictionary-fields) information.\n   */\n  contextValues: DictionaryFieldContextPayload;\n};\n\nexport function getDictionaryFieldContextInitialState(): DictionaryFieldContextState {\n  return {\n    contextValues: {},\n  };\n}\n", "export type FacetOptionsSlice = {\n  enabled: boolean;\n  tabs?: {included?: string[]; excluded?: string[]};\n};\n\nexport type FacetOptionsState = {\n  freezeFacetOrder: boolean;\n  facets: Record<string, FacetOptionsSlice>;\n};\n\nexport function getFacetOptionsSliceInitialState(): FacetOptionsSlice {\n  return {enabled: true, tabs: {}};\n}\n\nexport function getFacetOptionsInitialState(): FacetOptionsState {\n  return {\n    freezeFacetOrder: false,\n    facets: {},\n  };\n}\n", "export type FacetOrderState = string[];\n\nexport function getFacetOrderInitialState(): FacetOrderState {\n  return [];\n}\n", "export interface PaginationState {\n  firstResult: number;\n  defaultNumberOfResults: number;\n  numberOfResults: number;\n  totalCountFiltered: number;\n}\n\nexport function getPaginationInitialState(): PaginationState {\n  return {\n    firstResult: 0,\n    defaultNumberOfResults: 10,\n    numberOfResults: 10,\n    totalCountFiltered: 0,\n  };\n}\n", "export type QuerySetState = Record<string, string>;\n\nexport function getQuerySetInitialState(): QuerySetState {\n  return {};\n}\n", "import {FacetValueState} from '../facets/facet-api/value.js';\n\nexport type StaticFilterSetState = Record<string, StaticFilterSlice>;\n\nexport interface StaticFilterSlice {\n  id: string;\n  values: StaticFilterValue[];\n}\n\nexport interface StaticFilterValue {\n  /**\n   * A human-readable caption for the expression (e.g., `Youtube`).\n   */\n  caption: string;\n\n  /**\n   * The query filter expression to apply when the value is selected (e.g., `@filetype==\"youtubevideo\"`).\n   */\n  expression: string;\n\n  /**\n   * The state of the static filter value. The possible values are `idle`, `selected`, `excluded`.\n   */\n  state: StaticFilterValueState;\n}\n\nexport type StaticFilterValueState = FacetValueState;\n\nexport function getStaticFilterSetInitialState(): StaticFilterSetState {\n  return {};\n}\n", "export type TabSetState = Record<string, TabSlice>;\n\nexport type TabSlice = {\n  id: string;\n  expression: string;\n  isActive: boolean;\n};\n\nexport function getTabSetInitialState(): TabSetState {\n  return {};\n}\n", "import {RecordValue} from '@coveo/bueno';\nimport {\n  requiredEmptyAllowedString,\n  validatePayload,\n} from '../../utils/validate-payload.js';\nimport {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {SearchAction} from '../search/search-actions.js';\n\nexport interface LogUndoTriggerQueryActionCreatorPayload {\n  /**\n   * The query that was undone.\n   */\n  undoneQuery: string;\n}\n\nconst logUndoTriggerQueryPayloadDefinition = new RecordValue({\n  values: {\n    undoneQuery: requiredEmptyAllowedString,\n  },\n  options: {required: true},\n});\n\nexport const logTriggerQuery = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/trigger/query', (client, state) => {\n    if (state.triggers?.queryModification.newQuery) {\n      return client.makeTriggerQuery();\n    }\n    return null;\n  });\n\n//TODO: KIT-2859\nexport const logUndoTriggerQuery = (\n  payload: LogUndoTriggerQueryActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/trigger/query/undo', (client) => {\n    validatePayload(payload, logUndoTriggerQueryPayloadDefinition);\n    return client.makeUndoTriggerQuery(payload);\n  });\n\nexport const logNotifyTrigger = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/trigger/notify', (client, state) => {\n    if (!state.triggers?.notifications.length) {\n      return null;\n    }\n    return client.makeTriggerNotify({\n      notifications: state.triggers.notifications,\n    });\n  });\n\nexport const logTriggerRedirect = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/trigger/redirect', (client, state) => {\n    if (state.triggers?.redirectTo) {\n      return client.makeTriggerRedirect({\n        redirectedTo: state.triggers.redirectTo,\n      });\n    }\n    return null;\n  });\n\nexport const logTriggerExecute = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/trigger/execute', (client, state) => {\n    if (!state.triggers?.executions.length) {\n      return null;\n    }\n    return client.makeTriggerExecute({\n      executions: state.triggers.executions,\n    });\n  });\n\n// --------------------- KIT-2859 : Everything above this will get deleted ! :) ---------------------\nexport const undoTriggerQuery = (): SearchAction => ({\n  actionCause: SearchPageEvents.undoTriggerQuery,\n});\n", "import {RecordValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {nonEmptyString, validatePayload} from '../../utils/validate-payload.js';\n\nexport interface ApplyQueryTriggerModificationPayload {\n  originalQuery: string;\n  newQuery: string;\n}\n\nexport const updateIgnoreQueryTrigger = createAction(\n  'trigger/query/ignore',\n  (q: string) =>\n    validatePayload(q, new StringValue({emptyAllowed: true, required: true}))\n);\n\nexport const applyQueryTriggerModification = createAction(\n  'trigger/query/modification',\n  (payload: ApplyQueryTriggerModificationPayload) =>\n    validatePayload<ApplyQueryTriggerModificationPayload>(\n      payload,\n      new RecordValue({\n        values: {originalQuery: nonEmptyString, modification: nonEmptyString},\n      })\n    )\n);\n", "import {EventDescription} from 'coveo.analytics';\nimport {SearchAppState} from '../../../state/search-app-state.js';\nimport {ConfigurationSection} from '../../../state/state-sections.js';\nimport {getFacets} from '../../../utils/facet-utils.js';\nimport {AutomaticFacetRequest} from '../../facets/automatic-facet-set/interfaces/request.js';\nimport {AutomaticFacetResponse} from '../../facets/automatic-facet-set/interfaces/response.js';\nimport {maximumNumberOfResultsFromIndex} from '../../pagination/pagination-constants.js';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../../search-and-folding/legacy/search-and-folding-request.js';\nimport {mapSearchRequest} from '../search-mappings.js';\n\ntype StateNeededBySearchRequest = ConfigurationSection &\n  Partial<SearchAppState>;\n\nexport const buildSearchRequest = async (\n  state: StateNeededBySearchRequest,\n  eventDescription?: EventDescription\n) => {\n  const cq = buildConstantQuery(state);\n  const facets = getFacets(state);\n  const automaticFacets = getAutomaticFacets(state);\n  const sharedWithFoldingRequest =\n    await buildSearchAndFoldingLoadCollectionRequest(state, eventDescription);\n\n  // Corner case:\n  // If the number of results requested would go over the index limit (maximumNumberOfResultsFromIndex)\n  // we need to request fewer results in order to ensure we do not receive an exception from the index\n  const getNumberOfResultsWithinIndexLimit = () => {\n    if (!state.pagination) {\n      return undefined;\n    }\n\n    const isOverIndexLimit =\n      state.pagination.firstResult + state.pagination.numberOfResults >\n      maximumNumberOfResultsFromIndex;\n\n    if (isOverIndexLimit) {\n      return maximumNumberOfResultsFromIndex - state.pagination.firstResult;\n    }\n    return state.pagination.numberOfResults;\n  };\n\n  return mapSearchRequest({\n    ...sharedWithFoldingRequest,\n    ...(state.didYouMean && {\n      queryCorrection: {\n        enabled:\n          state.didYouMean.enableDidYouMean &&\n          state.didYouMean.queryCorrectionMode === 'next',\n        options: {\n          automaticallyCorrect: state.didYouMean.automaticallyCorrectQuery\n            ? ('whenNoResults' as const)\n            : ('never' as const),\n        },\n      },\n      enableDidYouMean:\n        state.didYouMean.enableDidYouMean &&\n        state.didYouMean.queryCorrectionMode === 'legacy',\n    }),\n    ...(cq && {cq}),\n    ...(facets.length && {facets}),\n    ...(state.pagination && {\n      numberOfResults: getNumberOfResultsWithinIndexLimit(),\n      firstResult: state.pagination.firstResult,\n    }),\n    ...(state.facetOptions && {\n      facetOptions: {freezeFacetOrder: state.facetOptions.freezeFacetOrder},\n    }),\n    ...(state.folding?.enabled && {\n      filterField: state.folding.fields.collection,\n      childField: state.folding.fields.parent,\n      parentField: state.folding.fields.child,\n      filterFieldRange: state.folding.filterFieldRange,\n    }),\n    ...(state.automaticFacetSet && {\n      generateAutomaticFacets: {\n        desiredCount: state.automaticFacetSet.desiredCount,\n        numberOfValues: state.automaticFacetSet.numberOfValues,\n        currentFacets: automaticFacets,\n      },\n    }),\n    ...(state.generatedAnswer && {\n      pipelineRuleParameters: {\n        mlGenerativeQuestionAnswering: {\n          responseFormat: state.generatedAnswer.responseFormat,\n          citationsFieldToInclude:\n            state.generatedAnswer.fieldsToIncludeInCitations,\n        },\n      },\n    }),\n  });\n};\n\nfunction getAutomaticFacets(state: StateNeededBySearchRequest) {\n  const facets = state.automaticFacetSet?.set;\n\n  return facets\n    ? Object.values(facets)\n        .map((facet) => facet.response)\n        .map(responseToAutomaticFacetRequest)\n        .filter((facetRequest) => facetRequest.currentValues.length > 0)\n    : undefined;\n}\nfunction responseToAutomaticFacetRequest(\n  response: AutomaticFacetResponse\n): AutomaticFacetRequest {\n  const {field, label, values} = response;\n\n  const selectedValues = values.filter((value) => value.state === 'selected');\n  return {\n    field,\n    label,\n    currentValues: selectedValues,\n  };\n}\n\nfunction buildConstantQuery(state: StateNeededBySearchRequest) {\n  const cq = state.advancedSearchQueries?.cq.trim() || '';\n  const activeTab = Object.values(state.tabSet || {}).find(\n    (tab) => tab.isActive\n  );\n  const tabExpression = activeTab?.expression.trim() || '';\n  const filterExpressions = getStaticFilterExpressions(state);\n\n  return [cq, tabExpression, ...filterExpressions]\n    .filter((expression) => !!expression)\n    .join(' AND ');\n}\n\nfunction getStaticFilterExpressions(state: StateNeededBySearchRequest) {\n  const filters = Object.values(state.staticFilterSet || {});\n  return filters.map((filter) => {\n    const selected = filter.values.filter(\n      (value) => value.state === 'selected' && !!value.expression.trim()\n    );\n\n    const expression = selected.map((value) => value.expression).join(' OR ');\n    return selected.length > 1 ? `(${expression})` : expression;\n  });\n}\n", "import {FacetSetState} from '../features/facets/facet-set/facet-set-state.js';\nimport {getFacetRequests} from '../features/facets/generic/interfaces/generic-facet-request.js';\nimport {AnyFacetValue} from '../features/facets/generic/interfaces/generic-facet-response.js';\nimport {RangeFacetSetState} from '../features/facets/range-facets/generic/interfaces/range-facet.js';\nimport {SearchAppState} from '../state/search-app-state.js';\nimport {ConfigurationSection} from '../state/state-sections.js';\n\ntype StateNeededBySearchRequest = ConfigurationSection &\n  Partial<SearchAppState>;\n\nexport function sortFacets<T extends {facetId: string}>(\n  facets: T[],\n  sortOrder: string[]\n) {\n  const payloadMap: Record<string, T> = {};\n  facets.forEach((f) => (payloadMap[f.facetId] = f));\n\n  const sortedFacets: T[] = [];\n  sortOrder.forEach((facetId) => {\n    if (facetId in payloadMap) {\n      sortedFacets.push(payloadMap[facetId]);\n      delete payloadMap[facetId];\n    }\n  });\n  const remainingFacets = Object.values(payloadMap);\n\n  return [...sortedFacets, ...remainingFacets];\n}\n\nfunction getRangeFacetRequests<T extends RangeFacetSetState>(state: T) {\n  return getFacetRequests(state).map((request) => {\n    const currentValues = request.currentValues as AnyFacetValue[];\n    const hasActiveValues = currentValues.some(({state}) => state !== 'idle');\n\n    if (request.generateAutomaticRanges && !hasActiveValues) {\n      return {...request, currentValues: []};\n    }\n\n    return request;\n  });\n}\n\nfunction getSpecificFacetRequests<T extends FacetSetState>(state: T) {\n  return getFacetRequests(state).map((request) => {\n    /* The Search API does not support 'alphanumericDescending' as a string value and instead relies on a new sort mechanism to specify sort order.\n    At the moment, this is only supported for alphanumeric sorting, but will likely transition to this pattern for other types in the future. */\n    if (request.sortCriteria === 'alphanumericDescending') {\n      return {\n        ...request,\n        sortCriteria: {\n          type: 'alphanumeric',\n          order: 'descending',\n        },\n      };\n    }\n\n    return request;\n  });\n}\n\nfunction getAllFacets(state: StateNeededBySearchRequest) {\n  return [\n    ...getSpecificFacetRequests(state.facetSet ?? {}),\n    ...getRangeFacetRequests(state.numericFacetSet ?? {}),\n    ...getRangeFacetRequests(state.dateFacetSet ?? {}),\n    ...getFacetRequests(state.categoryFacetSet ?? {}),\n  ];\n}\n\nfunction getAllEnabledFacets(state: StateNeededBySearchRequest) {\n  return getAllFacets(state).filter(\n    ({facetId}) => state.facetOptions?.facets[facetId]?.enabled ?? true\n  );\n}\n\nexport function getFacets(state: StateNeededBySearchRequest) {\n  return sortFacets(getAllEnabledFacets(state), state.facetOrder ?? []);\n}\n", "import {\n  CategoryFacetRequest,\n  CategoryFacetValueRequest,\n} from '../../category-facet-set/interfaces/request.js';\nimport {\n  FacetRequest,\n  FacetValueRequest,\n} from '../../facet-set/interfaces/request.js';\nimport {DateRangeRequest} from '../../range-facets/date-facet-set/interfaces/request.js';\nimport {RangeFacetRequest} from '../../range-facets/generic/interfaces/range-facet.js';\nimport {NumericRangeRequest} from '../../range-facets/numeric-facet-set/interfaces/request.js';\nimport {AnyFacetSetState} from './generic-facet-section.js';\n\nexport type AnyFacetRequest =\n  | FacetRequest\n  | RangeFacetRequest\n  | CategoryFacetRequest;\n\nexport type AnyFacetValueRequest =\n  | FacetValueRequest\n  | CategoryFacetValueRequest\n  | NumericRangeRequest\n  | DateRangeRequest;\n\ntype InferRequestFromFacetSetState<T extends AnyFacetSetState> =\n  T[string]['request'];\n\nexport function getFacetRequests<T extends AnyFacetSetState>(state: T) {\n  return Object.values(state).map(\n    (slice) => slice.request\n  ) as InferRequestFromFacetSetState<T>[];\n}\n", "export const minimumPage = 1;\nexport const maximumNumberOfResultsFromIndex = 5000;\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {AnyAction} from '@reduxjs/toolkit';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {\n  isErrorResponse,\n  isSuccessResponse,\n  SearchAPIClient,\n} from '../../api/search/search-api-client.js';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response.js';\nimport {SearchOrigin} from '../../api/search/search-metadata.js';\nimport {SearchRequest} from '../../api/search/search/search-request.js';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments.js';\nimport {\n  AdvancedSearchQueriesSection,\n  CategoryFacetSection,\n  ConfigurationSection,\n  ContextSection,\n  DateFacetSection,\n  DebugSection,\n  DidYouMeanSection,\n  FacetOptionsSection,\n  FacetOrderSection,\n  FacetSection,\n  FieldsSection,\n  FoldingSection,\n  NumericFacetSection,\n  PaginationSection,\n  PipelineSection,\n  QuerySection,\n  QuerySetSection,\n  SearchHubSection,\n  SearchSection,\n  SortSection,\n  TriggerSection,\n} from '../../state/state-sections.js';\nimport {applyDidYouMeanCorrection} from '../did-you-mean/did-you-mean-actions.js';\nimport {didYouMeanAutomatic} from '../did-you-mean/did-you-mean-analytics-actions.js';\nimport {snapshot} from '../history/history-actions.js';\nimport {extractHistory} from '../history/history-state.js';\nimport {updateQuery} from '../query/query-actions.js';\nimport {\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from '../triggers/triggers-actions.js';\nimport {ExecuteSearchThunkReturn} from './search-actions.js';\nimport {logQueryError} from './search-analytics-actions.js';\nimport {\n  ErrorResponse,\n  MappedSearchRequest,\n  mapSearchResponse,\n  SuccessResponse,\n} from './search-mappings.js';\nimport {buildSearchRequest} from './search-request.js';\n\nexport interface AnalyticsAction {\n  actionCause?: string;\n}\n\nexport type StateNeededByExecuteSearch = ConfigurationSection &\n  Partial<\n    QuerySection &\n      AdvancedSearchQueriesSection &\n      PaginationSection &\n      SortSection &\n      FacetSection &\n      NumericFacetSection &\n      CategoryFacetSection &\n      DateFacetSection &\n      ContextSection &\n      DidYouMeanSection &\n      FieldsSection &\n      PipelineSection &\n      SearchHubSection &\n      QuerySetSection &\n      FacetOptionsSection &\n      FacetOrderSection &\n      DebugSection &\n      SearchSection &\n      FoldingSection &\n      TriggerSection\n  >;\n\ninterface FetchedResponse {\n  response: SuccessResponse | ErrorResponse;\n  duration: number;\n  queryExecuted: string;\n  requestExecuted: SearchRequest;\n}\n\ntype ValidReturnTypeFromProcessingStep<RejectionType> =\n  | ExecuteSearchThunkReturn\n  | RejectionType;\n\nexport interface AsyncThunkConfig {\n  getState: () => StateNeededByExecuteSearch;\n  dispatch: ThunkDispatch<\n    StateNeededByExecuteSearch,\n    ClientThunkExtraArguments<SearchAPIClient> & {\n      searchAPIClient?: SearchAPIClient | undefined;\n    },\n    AnyAction\n  >;\n\n  rejectWithValue: (err: SearchAPIErrorWithStatusCode) => unknown;\n  analyticsAction: AnalyticsAction;\n  extra: ClientThunkExtraArguments<SearchAPIClient>;\n}\n\ntype QueryCorrectionCallback = (modification: string) => void;\n\nexport interface FetchFromAPIOptions {\n  origin: SearchOrigin;\n  disableAbortWarning?: boolean;\n}\n\nexport class AsyncSearchThunkProcessor<RejectionType> {\n  constructor(\n    private config: AsyncThunkConfig,\n    private onUpdateQueryForCorrection: QueryCorrectionCallback = (\n      modification\n    ) => {\n      this.dispatch(updateQuery({q: modification}));\n    }\n  ) {}\n\n  public async fetchFromAPI(\n    {mappings, request}: MappedSearchRequest,\n    options: FetchFromAPIOptions\n  ) {\n    const startedAt = new Date().getTime();\n    const response = mapSearchResponse(\n      await this.extra.apiClient.search(request, options),\n      mappings\n    );\n    const duration = new Date().getTime() - startedAt;\n    const queryExecuted = this.getState().query?.q || '';\n    return {response, duration, queryExecuted, requestExecuted: request};\n  }\n\n  public async process(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType>> {\n    return (\n      this.processQueryErrorOrContinue(fetched) ??\n      (await this.processQueryCorrectionsOrContinue(fetched)) ??\n      (await this.processQueryTriggersOrContinue(fetched)) ??\n      this.processSuccessResponse(fetched)\n    );\n  }\n\n  private processQueryErrorOrContinue(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> | null {\n    if (isErrorResponse(fetched.response)) {\n      this.dispatch(logQueryError(fetched.response.error));\n      return this.rejectWithValue(fetched.response.error) as RejectionType;\n    }\n\n    return null;\n  }\n\n  private async processQueryCorrectionsOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const state = this.getState();\n    const successResponse = this.getSuccessResponse(fetched);\n\n    if (!successResponse || !state.didYouMean) {\n      return null;\n    }\n\n    const {enableDidYouMean, automaticallyCorrectQuery} = state.didYouMean;\n    const {results, queryCorrections, queryCorrection} = successResponse;\n\n    if (!enableDidYouMean || !automaticallyCorrectQuery) {\n      return null;\n    }\n\n    const shouldExecuteClassicDidYouMeanAutoCorrection =\n      results.length === 0 && queryCorrections && queryCorrections.length !== 0;\n\n    const shouldExecuteModernDidYouMeanAutoCorrection =\n      !isNullOrUndefined(queryCorrection) &&\n      !isNullOrUndefined(queryCorrection.correctedQuery);\n\n    const shouldExitWithNoAutoCorrection =\n      !shouldExecuteClassicDidYouMeanAutoCorrection &&\n      !shouldExecuteModernDidYouMeanAutoCorrection;\n\n    if (shouldExitWithNoAutoCorrection) {\n      return null;\n    }\n\n    const ret = shouldExecuteClassicDidYouMeanAutoCorrection\n      ? await this.processLegacyDidYouMeanAutoCorrection(fetched)\n      : this.processModernDidYouMeanAutoCorrection(fetched);\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n\n    return ret;\n  }\n\n  private async processLegacyDidYouMeanAutoCorrection(\n    originalFetchedResponse: FetchedResponse\n  ): Promise<ExecuteSearchThunkReturn | RejectionType | null> {\n    const originalQuery = this.getCurrentQuery();\n    const originalSearchSuccessResponse = this.getSuccessResponse(\n      originalFetchedResponse\n    )!;\n    if (!originalSearchSuccessResponse.queryCorrections) {\n      return null;\n    }\n\n    const {correctedQuery} = originalSearchSuccessResponse.queryCorrections[0];\n\n    const retried =\n      await this.automaticallyRetryQueryWithCorrection(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n        queryCorrections: originalSearchSuccessResponse.queryCorrections,\n      },\n      automaticallyCorrected: true,\n      originalQuery,\n    };\n  }\n\n  private processModernDidYouMeanAutoCorrection(\n    originalFetchedResponse: FetchedResponse\n  ): ExecuteSearchThunkReturn {\n    const successResponse = this.getSuccessResponse(originalFetchedResponse)!;\n    const {correctedQuery, originalQuery} = successResponse.queryCorrection!;\n\n    this.onUpdateQueryForCorrection(correctedQuery);\n\n    return {\n      ...originalFetchedResponse,\n      response: {\n        ...successResponse,\n      },\n      queryExecuted: correctedQuery,\n      automaticallyCorrected: true,\n      originalQuery,\n    };\n  }\n\n  private async processQueryTriggersOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const successResponse = this.getSuccessResponse(fetched);\n    if (!successResponse) {\n      return null;\n    }\n    const correctedQuery =\n      (successResponse.triggers.find((trigger) => trigger.type === 'query')\n        ?.content as string) || '';\n\n    if (!correctedQuery) {\n      return null;\n    }\n\n    const ignored = this.getState().triggers?.queryModification.queryToIgnore;\n\n    if (ignored === correctedQuery) {\n      this.dispatch(updateIgnoreQueryTrigger(''));\n      return null;\n    }\n\n    const originalQuery = this.getCurrentQuery();\n    const retried =\n      await this.automaticallyRetryQueryWithTriggerModification(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n      },\n      automaticallyCorrected: false,\n      originalQuery,\n    };\n  }\n\n  private processSuccessResponse(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> {\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...fetched,\n      response: this.getSuccessResponse(fetched)!,\n      automaticallyCorrected: false,\n      originalQuery: this.getCurrentQuery(),\n    };\n  }\n\n  private getSuccessResponse(fetched: FetchedResponse) {\n    if (isSuccessResponse(fetched.response)) {\n      return fetched.response.success;\n    }\n    return null;\n  }\n\n  private async automaticallyRetryQueryWithCorrection(correction: string) {\n    this.onUpdateQueryForCorrection(correction);\n    const state = this.getState();\n    const {actionCause} = didYouMeanAutomatic();\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(state, this.extra.navigatorContext, {\n        actionCause,\n      }),\n      {origin: 'mainSearch'}\n    );\n    this.dispatch(applyDidYouMeanCorrection(correction));\n    return fetched;\n  }\n\n  private async automaticallyRetryQueryWithTriggerModification(\n    modified: string\n  ) {\n    this.dispatch(\n      applyQueryTriggerModification({\n        newQuery: modified,\n        originalQuery: this.getCurrentQuery(),\n      })\n    );\n    this.onUpdateQueryForCorrection(modified);\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(this.getState(), this.extra.navigatorContext),\n      {origin: 'mainSearch'}\n    );\n\n    return fetched;\n  }\n\n  private getCurrentQuery() {\n    const state = this.getState();\n    return state.query?.q !== undefined ? state.query.q : '';\n  }\n\n  private get extra() {\n    return this.config.extra;\n  }\n\n  private getState() {\n    return this.config.getState();\n  }\n\n  private get dispatch() {\n    return this.config.dispatch;\n  }\n\n  private get rejectWithValue() {\n    return this.config.rejectWithValue;\n  }\n}\n", "import {EventDescription} from 'coveo.analytics';\nimport {NavigatorContext} from '../../app/navigatorContextProvider.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {ConfigurationSection} from '../../state/state-sections.js';\nimport {sortFacets} from '../../utils/facet-utils.js';\nimport {AutomaticFacetRequest} from '../facets/automatic-facet-set/interfaces/request.js';\nimport {AutomaticFacetResponse} from '../facets/automatic-facet-set/interfaces/response.js';\nimport {FacetSetState} from '../facets/facet-set/facet-set-state.js';\nimport {getFacetRequests} from '../facets/generic/interfaces/generic-facet-request.js';\nimport {AnyFacetValue} from '../facets/generic/interfaces/generic-facet-response.js';\nimport {RangeFacetSetState} from '../facets/range-facets/generic/interfaces/range-facet.js';\nimport {maximumNumberOfResultsFromIndex} from '../pagination/pagination-constants.js';\nimport {buildSearchAndFoldingLoadCollectionRequest as legacyBuildSearchAndFoldingLoadCollectionRequest} from '../search-and-folding/legacy/search-and-folding-request.js';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../search-and-folding/search-and-folding-request.js';\nimport {mapSearchRequest} from './search-mappings.js';\n\ntype StateNeededBySearchRequest = ConfigurationSection &\n  Partial<SearchAppState>;\n\nexport const buildSearchRequest = async (\n  state: StateNeededBySearchRequest,\n  navigatorContext: NavigatorContext,\n  eventDescription?: EventDescription\n) => {\n  const cq = buildConstantQuery(state);\n  const facets = getFacets(state);\n  const automaticFacets = getAutomaticFacets(state);\n  const sharedWithFoldingRequest =\n    state.configuration.analytics.analyticsMode === 'legacy'\n      ? await legacyBuildSearchAndFoldingLoadCollectionRequest(\n          state,\n          eventDescription\n        )\n      : buildSearchAndFoldingLoadCollectionRequest(\n          state,\n          navigatorContext,\n          eventDescription\n        );\n\n  // Corner case:\n  // If the number of results requested would go over the index limit (maximumNumberOfResultsFromIndex)\n  // we need to request fewer results in order to ensure we do not receive an exception from the index\n  const getNumberOfResultsWithinIndexLimit = () => {\n    if (!state.pagination) {\n      return undefined;\n    }\n\n    const isOverIndexLimit =\n      state.pagination.firstResult + state.pagination.numberOfResults >\n      maximumNumberOfResultsFromIndex;\n\n    if (isOverIndexLimit) {\n      return maximumNumberOfResultsFromIndex - state.pagination.firstResult;\n    }\n    return state.pagination.numberOfResults;\n  };\n\n  return mapSearchRequest({\n    ...sharedWithFoldingRequest,\n    ...(state.didYouMean && {\n      queryCorrection: {\n        enabled:\n          state.didYouMean.enableDidYouMean &&\n          state.didYouMean.queryCorrectionMode === 'next',\n        options: {\n          automaticallyCorrect: state.didYouMean.automaticallyCorrectQuery\n            ? ('whenNoResults' as const)\n            : ('never' as const),\n        },\n      },\n      enableDidYouMean:\n        state.didYouMean.enableDidYouMean &&\n        state.didYouMean.queryCorrectionMode === 'legacy',\n    }),\n    ...(cq && {cq}),\n    ...(facets.length && {facets}),\n    ...(state.pagination && {\n      numberOfResults: getNumberOfResultsWithinIndexLimit(),\n      firstResult: state.pagination.firstResult,\n    }),\n    ...(state.facetOptions && {\n      facetOptions: {freezeFacetOrder: state.facetOptions.freezeFacetOrder},\n    }),\n    ...(state.folding?.enabled && {\n      filterField: state.folding.fields.collection,\n      childField: state.folding.fields.parent,\n      parentField: state.folding.fields.child,\n      filterFieldRange: state.folding.filterFieldRange,\n    }),\n    ...(state.automaticFacetSet && {\n      generateAutomaticFacets: {\n        desiredCount: state.automaticFacetSet.desiredCount,\n        numberOfValues: state.automaticFacetSet.numberOfValues,\n        currentFacets: automaticFacets,\n      },\n    }),\n    ...(state.generatedAnswer && {\n      pipelineRuleParameters: {\n        mlGenerativeQuestionAnswering: {\n          responseFormat: state.generatedAnswer.responseFormat,\n          citationsFieldToInclude:\n            state.generatedAnswer.fieldsToIncludeInCitations,\n        },\n      },\n    }),\n  });\n};\n\nfunction getFacets(state: StateNeededBySearchRequest) {\n  return sortFacets(getAllEnabledFacets(state), state.facetOrder ?? []);\n}\n\nfunction getAutomaticFacets(state: StateNeededBySearchRequest) {\n  const facets = state.automaticFacetSet?.set;\n\n  return facets\n    ? Object.values(facets)\n        .map((facet) => facet.response)\n        .map(responseToAutomaticFacetRequest)\n        .filter((facetRequest) => facetRequest.currentValues.length > 0)\n    : undefined;\n}\nfunction responseToAutomaticFacetRequest(\n  response: AutomaticFacetResponse\n): AutomaticFacetRequest {\n  const {field, label, values} = response;\n\n  const selectedValues = values.filter((value) => value.state === 'selected');\n  return {\n    field,\n    label,\n    currentValues: selectedValues,\n  };\n}\nfunction getAllEnabledFacets(state: StateNeededBySearchRequest) {\n  return getAllFacets(state).filter(\n    ({facetId}) => state.facetOptions?.facets[facetId]?.enabled ?? true\n  );\n}\n\nfunction getAllFacets(state: StateNeededBySearchRequest) {\n  return [\n    ...getSpecificFacetRequests(state.facetSet ?? {}),\n    ...getRangeFacetRequests(state.numericFacetSet ?? {}),\n    ...getRangeFacetRequests(state.dateFacetSet ?? {}),\n    ...getFacetRequests(state.categoryFacetSet ?? {}),\n  ];\n}\n\nfunction getSpecificFacetRequests<T extends FacetSetState>(state: T) {\n  return getFacetRequests(state).map((request) => {\n    /* The Search API does not support 'alphanumericDescending' as a string value and instead relies on a new sort mechanism to specify sort order.\n    At the moment, this is only supported for alphanumeric sorting, but will likely transition to this pattern for other types in the future. */\n    if (request.sortCriteria === 'alphanumericDescending') {\n      return {\n        ...request,\n        sortCriteria: {\n          type: 'alphanumeric',\n          order: 'descending',\n        },\n      };\n    }\n\n    return request;\n  });\n}\n\nfunction getRangeFacetRequests<T extends RangeFacetSetState>(state: T) {\n  return getFacetRequests(state).map((request) => {\n    const currentValues = request.currentValues as AnyFacetValue[];\n    const hasActiveValues = currentValues.some(({state}) => state !== 'idle');\n\n    if (request.generateAutomaticRanges && !hasActiveValues) {\n      return {...request, currentValues: []};\n    }\n\n    return request;\n  });\n}\n\nfunction buildConstantQuery(state: StateNeededBySearchRequest) {\n  const cq = state.advancedSearchQueries?.cq.trim() || '';\n  const activeTab = Object.values(state.tabSet || {}).find(\n    (tab) => tab.isActive\n  );\n  const tabExpression = activeTab?.expression.trim() || '';\n  const filterExpressions = getStaticFilterExpressions(state);\n\n  return [cq, tabExpression, ...filterExpressions]\n    .filter((expression) => !!expression)\n    .join(' AND ');\n}\n\nfunction getStaticFilterExpressions(state: StateNeededBySearchRequest) {\n  const filters = Object.values(state.staticFilterSet || {});\n  return filters.map((filter) => {\n    const selected = filter.values.filter(\n      (value) => value.state === 'selected' && !!value.expression.trim()\n    );\n\n    const expression = selected.map((value) => value.expression).join(' OR ');\n    return selected.length > 1 ? `(${expression})` : expression;\n  });\n}\n", "import {AnyFacetRequest as AnyCommerceFacetRequest} from '../../commerce/facets/facet-set/interfaces/request.js';\nimport {FacetRequest} from '../facet-set/interfaces/request.js';\nimport {AnyFacetRequest} from './interfaces/generic-facet-request.js';\nimport {AnyFacetSlice} from './interfaces/generic-facet-section.js';\n\nexport type SpecificFacetState<\n  SliceType extends AnyFacetSlice = AnyFacetSlice,\n> = Record<string, SliceType>;\n\nexport function handleFacetSortCriterionUpdate<T extends AnyFacetSlice>(\n  state: SpecificFacetState<T>,\n  payload: {facetId: string; criterion: T['request']['sortCriteria']}\n) {\n  const {facetId, criterion} = payload;\n  const facetRequest = state[facetId]?.request;\n\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.sortCriteria = criterion;\n}\n\nexport function handleFacetDeselectAll(facetRequest: FacetRequest) {\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.currentValues = facetRequest.currentValues.map((value) => ({\n    ...value,\n    state: 'idle',\n  }));\n  facetRequest.preventAutoSelect = true;\n}\n\nexport function handleFacetUpdateNumberOfValues<\n  T extends AnyFacetRequest | AnyCommerceFacetRequest,\n>(facetRequest: T | undefined, numberOfValues: number) {\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.numberOfValues = numberOfValues;\n}\n", "import {\n  StringValue,\n  NumberValue,\n  BooleanValue,\n  RecordValue,\n  Value,\n  ArrayValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  allowedValues,\n  customSort,\n} from '../../../controllers/core/facets/_common/facet-option-definitions.js';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {FacetResultsMustMatch} from '../facet-api/request.js';\nimport {facetIdDefinition} from '../generic/facet-actions-validation.js';\nimport {facetValueDefinition} from './facet-set-validate-payload.js';\nimport {FacetSortCriterion} from './interfaces/request.js';\nimport {FacetValue} from './interfaces/response.js';\n\nexport interface RegisterFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the facet.\n   * */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   * */\n  field: string;\n\n  /**\n   * The tabs on which the facet should be enabled or disabled.\n   */\n  tabs?: {included?: string[]; excluded?: string[]};\n\n  /**\n   * The currently active tab.\n   */\n  activeTab?: string;\n\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   * */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet. Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The criterion to use for sorting returned facet values.\n   *\n   * The `sortCriteria` option does not apply when making a facet search request. It is only used for sorting returned facet values during a regular Coveo search request.\n   *\n   * Learn more about `sortCriteria` values and the default behavior of specific facets in the [Search API documentation](https://docs.coveo.com/en/13#operation/searchUsingPost-facets-sortCriteria).\n   *\n   * @defaultValue `automatic`\n   */\n  sortCriteria?: FacetSortCriterion;\n\n  /**\n   * Specifies an explicit list of `allowedValues` in the Search API request.\n   *\n   * If you specify a list of values for this option, the facet uses only these values (if they are available in\n   * the current result set).\n   *\n   * The maximum amount of allowed values is 25.\n   *\n   * Default value is `undefined`, and the facet uses all available values for its `field` in the current result set.\n   */\n  allowedValues?: {\n    type: 'simple';\n    values: string[];\n  };\n  /**\n   * Identifies the facet values that must appear at the top, in this order.\n   * This parameter can be used in conjunction with the `sortCriteria` parameter.\n   *\n   * Facet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n   *\n   * The maximum amount of custom sort values is 25.\n   *\n   * The default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`.\n   */\n  customSort?: string[];\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch?: FacetResultsMustMatch;\n}\n\nconst facetRegistrationOptionsDefinition = {\n  facetId: facetIdDefinition,\n  field: new StringValue({required: true, emptyAllowed: true}),\n  tabs: new RecordValue({\n    options: {\n      required: false,\n    },\n    values: {\n      included: new ArrayValue({each: new StringValue()}),\n      excluded: new ArrayValue({each: new StringValue()}),\n    },\n  }),\n  activeTab: new StringValue({required: false}),\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<FacetSortCriterion>({required: false}),\n  resultsMustMatch: new Value<FacetResultsMustMatch>({required: false}),\n  allowedValues: allowedValues,\n  customSort: customSort,\n};\n\nexport const registerFacet = createAction(\n  'facet/register',\n  (payload: RegisterFacetActionCreatorPayload) =>\n    validatePayload(payload, facetRegistrationOptionsDefinition)\n);\n\nexport interface ToggleSelectFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target facet value.\n   */\n  selection: FacetValue;\n}\n\nexport const toggleSelectFacetValue = createAction(\n  'facet/toggleSelectValue',\n  (payload: ToggleSelectFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n\nexport const toggleExcludeFacetValue = createAction(\n  'facet/toggleExcludeValue',\n  (payload: ToggleSelectFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n\nexport const deselectAllFacetValues = createAction(\n  'facet/deselectAll',\n  (payload: string) => validatePayload(payload, facetIdDefinition)\n);\n\nexport interface UpdateFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The criterion by which to sort the facet.\n   */\n  criterion: FacetSortCriterion;\n}\n\nexport const updateFacetSortCriterion = createAction(\n  'facet/updateSortCriterion',\n  (payload: UpdateFacetSortCriterionActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      criterion: new Value<FacetSortCriterion>({required: true}),\n    })\n);\n\nexport interface UpdateFacetNumberOfValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The new number of facet values (e.g., `10`).\n   */\n  numberOfValues: number;\n}\n\nexport const updateFacetNumberOfValues = createAction(\n  'facet/updateNumberOfValues',\n  (payload: UpdateFacetNumberOfValuesActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      numberOfValues: new NumberValue({required: true, min: 1}),\n    })\n);\n\nexport interface UpdateFacetIsFieldExpandedActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * Whether to expand or shrink down the facet.\n   */\n  isFieldExpanded: boolean;\n}\n\nexport const updateFacetIsFieldExpanded = createAction(\n  'facet/updateIsFieldExpanded',\n  (payload: UpdateFacetIsFieldExpandedActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      isFieldExpanded: new BooleanValue({required: true}),\n    })\n);\n\nexport interface UpdateFreezeCurrentValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * Whether the values should be frozen in the next request.\n   */\n  freezeCurrentValues: boolean;\n}\n\nexport const updateFreezeCurrentValues = createAction(\n  'facet/updateFreezeCurrentValues',\n  (payload: UpdateFreezeCurrentValuesActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      freezeCurrentValues: new BooleanValue({required: true}),\n    })\n);\n", "import {\n  ArrayValue,\n  BooleanValue,\n  NumberValue,\n  RecordValue,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {FacetSearchRequestOptions} from '../../../../api/search/facet-search/base/base-facet-search-request.js';\n\nexport const facetId = new StringValue({\n  regex: /^[a-zA-Z0-9-_]+$/,\n});\nexport const field = new StringValue({required: true});\nexport const basePath = new ArrayValue({\n  each: new StringValue(),\n});\n\nexport const delimitingCharacter = new StringValue();\nexport const filterByBasePath = new BooleanValue();\nexport const filterFacetCount = new BooleanValue();\nexport const injectionDepth = new NumberValue({min: 0});\nexport const numberOfValues = new NumberValue({min: 1});\nexport const generateAutomaticRanges = new BooleanValue({\n  required: true,\n}) as never;\n\nexport const captions = new RecordValue();\nexport const query = new StringValue();\n\nconst facetSearchOptionDefinitions: SchemaDefinition<FacetSearchRequestOptions> =\n  {\n    captions,\n    numberOfValues,\n    query,\n  };\n\nexport const facetSearch = new RecordValue({\n  values: facetSearchOptionDefinitions,\n});\n\nexport const allowedValues = new RecordValue({\n  options: {required: false},\n  values: {\n    type: new StringValue({\n      constrainTo: ['simple'],\n      emptyAllowed: false,\n      required: true,\n    }),\n    values: new ArrayValue({\n      required: true,\n      max: 25,\n      each: new StringValue({emptyAllowed: false, required: true}),\n    }),\n  },\n});\n\nexport const hasBreadcrumbs = new BooleanValue();\n\nexport const customSort = new ArrayValue({\n  min: 1,\n  max: 25,\n  required: false,\n  each: new StringValue({emptyAllowed: false, required: true}),\n});\n", "import {NumberValue} from '@coveo/bueno';\nimport {requiredNonEmptyString} from '../../../utils/validate-payload.js';\n\nexport const facetValueDefinition = {\n  value: requiredNonEmptyString,\n  numberOfResults: new NumberValue({min: 0}),\n  state: requiredNonEmptyString,\n};\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../../../breadcrumb/breadcrumb-actions.js';\nimport {disableFacet} from '../../../facet-options/facet-options-actions.js';\nimport {change} from '../../../history/history-actions.js';\nimport {restoreSearchParameters} from '../../../search-parameters/search-parameter-actions.js';\nimport {executeSearch} from '../../../search/search-actions.js';\nimport {handleFacetSortCriterionUpdate} from '../../generic/facet-reducer-helpers.js';\nimport {\n  registerRangeFacet,\n  toggleSelectRangeValue,\n  onRangeFacetRequestFulfilled,\n  handleRangeFacetDeselectAll,\n  defaultRangeFacetOptions,\n  handleRangeFacetSearchParameterRestoration,\n  updateRangeValues,\n  toggleExcludeRangeValue,\n} from '../generic/range-facet-reducers.js';\nimport {\n  registerDateFacet,\n  toggleSelectDateFacetValue,\n  deselectAllDateFacetValues,\n  updateDateFacetSortCriterion,\n  RegisterDateFacetActionCreatorPayload,\n  updateDateFacetValues,\n  toggleExcludeDateFacetValue,\n} from './date-facet-actions.js';\nimport {\n  getDateFacetSetInitialState,\n  getDateFacetSetSliceInitialState,\n} from './date-facet-set-state.js';\nimport {DateFacetRequest, DateRangeRequest} from './interfaces/request.js';\nimport {DateFacetResponse, DateFacetValue} from './interfaces/response.js';\n\nexport const dateFacetSetReducer = createReducer(\n  getDateFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerDateFacet, (state, action) => {\n        const {payload} = action;\n        const request = buildDateFacetRequest(payload);\n        registerRangeFacet(state, getDateFacetSetSliceInitialState(request));\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.dateFacetSet ?? state\n      )\n      .addCase(restoreSearchParameters, (state, action) => {\n        const df = action.payload.df || {};\n        handleRangeFacetSearchParameterRestoration(state, df);\n      })\n      .addCase(toggleSelectDateFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleSelectRangeValue(state, facetId, selection);\n      })\n      .addCase(toggleExcludeDateFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleExcludeRangeValue(state, facetId, selection);\n      })\n      .addCase(updateDateFacetValues, (state, action) => {\n        const {facetId, values} = action.payload;\n        updateRangeValues(state, facetId, values);\n      })\n      .addCase(deselectAllDateFacetValues, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.keys(state).forEach((facetId) => {\n          handleRangeFacetDeselectAll(state, facetId);\n        });\n      })\n      .addCase(updateDateFacetSortCriterion, (state, action) => {\n        handleFacetSortCriterionUpdate(state, action.payload);\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets as DateFacetResponse[];\n        onRangeFacetRequestFulfilled(state, facets, convertToDateRangeRequests);\n      })\n      .addCase(disableFacet, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      });\n  }\n);\n\nfunction buildDateFacetRequest(\n  config: RegisterDateFacetActionCreatorPayload\n): DateFacetRequest {\n  return {\n    ...defaultRangeFacetOptions,\n    currentValues: [],\n    preventAutoSelect: false,\n    type: 'dateRange',\n    ...config,\n  };\n}\n\nexport function convertToDateRangeRequests(\n  values: DateFacetValue[]\n): DateRangeRequest[] {\n  return values.map((value) => {\n    const {numberOfResults, ...rest} = value;\n    return rest;\n  });\n}\n", "import {RangeFacetOptionalParameters} from './interfaces/options.js';\nimport {\n  RangeFacetRequest,\n  RangeFacetResponse,\n  RangeFacetValue,\n  RangeValueRequest,\n} from './interfaces/range-facet.js';\n\ntype RangeFacetSlice<\n  RequestType extends RangeFacetRequest = RangeFacetRequest,\n> = {\n  request: RequestType;\n};\n\ntype RangeFacetState<SliceType extends RangeFacetSlice<RangeFacetRequest>> =\n  Record<string, SliceType>;\n\nexport const defaultRangeFacetOptions: RangeFacetOptionalParameters = {\n  filterFacetCount: true,\n  injectionDepth: 1000,\n  numberOfValues: 8,\n  sortCriteria: 'ascending',\n  rangeAlgorithm: 'even',\n  resultsMustMatch: 'atLeastOneValue',\n};\n\nexport function registerRangeFacet<T extends RangeFacetSlice>(\n  state: RangeFacetState<T>,\n  slice: T\n) {\n  const {request} = slice;\n  const {facetId} = request;\n\n  if (facetId in state) {\n    return;\n  }\n\n  const numberOfValues = calculateNumberOfValues(request);\n  request.numberOfValues = numberOfValues;\n  state[facetId] = slice;\n}\n\nexport function updateRangeValues<T extends RangeFacetSlice>(\n  state: RangeFacetState<T>,\n  facetId: string,\n  values: T['request']['currentValues']\n) {\n  const request = state[facetId]?.request;\n\n  if (!request) {\n    return;\n  }\n\n  request.currentValues = values;\n  request.numberOfValues = calculateNumberOfValues(request);\n}\n\nexport function toggleSelectRangeValue<\n  T extends RangeFacetSlice,\n  U extends RangeFacetValue,\n>(state: RangeFacetState<T>, facetId: string, selection: U) {\n  const request = state[facetId]?.request;\n\n  if (!request) {\n    return;\n  }\n\n  const value = findRange(request.currentValues, selection);\n\n  if (!value) {\n    return;\n  }\n\n  const isSelected = value.state === 'selected';\n  value.state = isSelected ? 'idle' : 'selected';\n\n  request.preventAutoSelect = true;\n}\n\nexport function toggleExcludeRangeValue<\n  T extends RangeFacetSlice,\n  U extends RangeFacetValue,\n>(state: RangeFacetState<T>, facetId: string, selection: U) {\n  const request = state[facetId]?.request;\n\n  if (!request) {\n    return;\n  }\n\n  const value = findRange(request.currentValues, selection);\n\n  if (!value) {\n    return;\n  }\n\n  const isExcluded = value.state === 'excluded';\n  value.state = isExcluded ? 'idle' : 'excluded';\n\n  request.preventAutoSelect = true;\n}\n\nexport function handleRangeFacetDeselectAll<T extends RangeFacetSlice>(\n  state: RangeFacetState<T>,\n  facetId: string\n) {\n  const facetRequest = state[facetId]?.request;\n\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.currentValues.forEach((request) => (request.state = 'idle'));\n}\n\nexport function handleRangeFacetSearchParameterRestoration<\n  T extends RangeFacetSlice,\n>(\n  state: RangeFacetState<T>,\n  rangeFacets: Record<string, T['request']['currentValues']>\n) {\n  Object.entries(state).forEach(([facetId, {request}]) => {\n    type Range = T['request']['currentValues'][0];\n    const rangesToSelect: Range[] = rangeFacets[facetId] || [];\n\n    request.currentValues.forEach((range: Range) => {\n      const found = !!findRange(rangesToSelect, range);\n      range.state = found ? 'selected' : 'idle';\n      return range;\n    });\n\n    const missingRanges = rangesToSelect.filter(\n      (range) => !findRange(request.currentValues, range)\n    );\n    const currentValues: Range[] = request.currentValues;\n    currentValues.push(...missingRanges);\n\n    request.numberOfValues = Math.max(\n      request.numberOfValues,\n      currentValues.length\n    );\n  });\n}\n\nexport function onRangeFacetRequestFulfilled<\n  T extends RangeFacetSlice,\n  U extends RangeFacetResponse,\n>(\n  state: RangeFacetState<T>,\n  facets: U[],\n  convert: (values: U['values']) => T['request']['currentValues']\n) {\n  facets.forEach((facetResponse) => {\n    const id = facetResponse.facetId;\n    const facetRequest = state[id]?.request;\n\n    if (!facetRequest) {\n      return;\n    }\n\n    const values = convert(facetResponse.values);\n    facetRequest.currentValues = values;\n    facetRequest.preventAutoSelect = false;\n  });\n}\n\nfunction findRange(values: RangeValueRequest[], value: RangeValueRequest) {\n  const {start, end} = value;\n  return values.find((range) => range.start === start && range.end === end);\n}\n\nexport function findExactRangeValue(\n  values: RangeValueRequest[],\n  value: RangeValueRequest\n) {\n  const {start, end, endInclusive} = value;\n  return values.find(\n    (range) =>\n      range.start === start &&\n      range.end === end &&\n      range.endInclusive === endInclusive\n  );\n}\n\nfunction calculateNumberOfValues(request: RangeFacetRequest) {\n  const {generateAutomaticRanges, currentValues, numberOfValues} = request;\n  return generateAutomaticRanges\n    ? Math.max(numberOfValues, currentValues.length)\n    : currentValues.length;\n}\n", "import {\n  NumberValue,\n  BooleanValue,\n  RecordValue,\n  Value,\n  ArrayValue,\n  StringValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {parseDate} from '../../../../api/search/date/date-format.js';\nimport {\n  formatRelativeDateForSearchApi,\n  isRelativeDateFormat,\n} from '../../../../api/search/date/relative-date.js';\nimport {buildDateRange} from '../../../../controllers/core/facets/range-facet/date-facet/date-range.js';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  validatePayloadAndThrow,\n  serializeSchemaValidationError,\n} from '../../../../utils/validate-payload.js';\nimport {deselectAllFacetValues} from '../../facet-set/facet-set-actions.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {\n  RangeFacetSortCriterion,\n  RangeFacetRangeAlgorithm,\n} from '../generic/interfaces/request.js';\nimport {updateRangeFacetSortCriterion} from '../generic/range-facet-actions.js';\nimport {dateFacetValueDefinition} from '../generic/range-facet-validate-payload.js';\nimport {DateRangeRequest} from './interfaces/request.js';\nimport {DateFacetValue} from './interfaces/response.js';\n\nexport interface RegisterDateFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the facet.\n   */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * The tabs on which the facet should be enabled or disabled.\n   */\n  tabs?: {included?: string[]; excluded?: string[]};\n\n  /**\n   * The currently active tab.\n   */\n  activeTab?: string;\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: DateRangeRequest[];\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The range algorithm to apply to automatically generated ranges for the range facet.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst dateRangeRequestDefinition = {\n  start: requiredNonEmptyString,\n  end: requiredNonEmptyString,\n  endInclusive: new BooleanValue({required: true}),\n  state: requiredNonEmptyString,\n};\n\nconst dateFacetRegistrationOptionsDefinition = {\n  facetId: facetIdDefinition,\n  field: requiredNonEmptyString,\n  tabs: new RecordValue({\n    options: {\n      required: false,\n    },\n    values: {\n      included: new ArrayValue({each: new StringValue()}),\n      excluded: new ArrayValue({each: new StringValue()}),\n    },\n  }),\n  activeTab: new StringValue({required: false}),\n  currentValues: new ArrayValue({\n    required: false,\n    each: new RecordValue({values: dateRangeRequestDefinition}),\n  }),\n  generateAutomaticRanges: new BooleanValue({required: true}) as never,\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<RangeFacetSortCriterion>({required: false}),\n  rangeAlgorithm: new Value<RangeFacetRangeAlgorithm>({required: false}),\n};\n\nfunction getAbsoluteDate(date: string) {\n  return isRelativeDateFormat(date)\n    ? formatRelativeDateForSearchApi(date)\n    : date;\n}\n\nexport function validateManualDateRanges(\n  options: Pick<RegisterDateFacetActionCreatorPayload, 'currentValues'>\n) {\n  if (!options.currentValues) {\n    return;\n  }\n\n  options.currentValues.forEach((value) => {\n    const {start, end} = buildDateRange(value);\n    if (\n      parseDate(getAbsoluteDate(start)).isAfter(parseDate(getAbsoluteDate(end)))\n    ) {\n      throw new Error(\n        `The start value is greater than the end value for the date range ${value.start} to ${value.end}`\n      );\n    }\n  });\n}\n\nexport const registerDateFacet = createAction(\n  'dateFacet/register',\n  (payload: RegisterDateFacetActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload, dateFacetRegistrationOptionsDefinition);\n      validateManualDateRanges(payload);\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface ToggleSelectDateFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target date facet value.\n   */\n  selection: DateFacetValue;\n}\n\nexport const toggleSelectDateFacetValue = createAction(\n  'dateFacet/toggleSelectValue',\n  (payload: ToggleSelectDateFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: dateFacetValueDefinition}),\n    })\n);\n\nexport const toggleExcludeDateFacetValue = createAction(\n  'dateFacet/toggleExcludeValue',\n  (payload: ToggleSelectDateFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: dateFacetValueDefinition}),\n    })\n);\n\nexport interface UpdateDateFacetValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The date facet values.\n   */\n  values: DateFacetValue[];\n}\n\nexport const updateDateFacetValues = createAction(\n  'dateFacet/updateFacetValues',\n  (payload: UpdateDateFacetValuesActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload, {\n        facetId: facetIdDefinition,\n        values: new ArrayValue({\n          each: new RecordValue({values: dateFacetValueDefinition}),\n        }),\n      });\n      validateManualDateRanges({currentValues: payload.values});\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface UpdateDateFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target criterion.\n   */\n  criterion: RangeFacetSortCriterion;\n}\n\nexport const updateDateFacetSortCriterion = updateRangeFacetSortCriterion;\n\nexport const deselectAllDateFacetValues = deselectAllFacetValues;\n", "import {\n  formatDateForSearchApi,\n  AbsoluteDate,\n  validateAbsoluteDate,\n  parseDate,\n} from '../../../../../api/search/date/date-format.js';\nimport {\n  serializeRelativeDate,\n  isRelativeDate,\n  isRelativeDateFormat,\n  RelativeDate,\n  validateRelativeDate,\n} from '../../../../../api/search/date/relative-date.js';\nimport {FacetValueState} from '../../../../../features/facets/facet-api/value.js';\nimport {DateRangeRequest} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/request.js';\n\nexport type DateRangeInput = AbsoluteDate | RelativeDate;\n\nexport interface DateRangeOptions {\n  /**\n   * The starting value for the date range. A date range can be either absolute or [relative](https://docs.coveo.com/en/headless/latest/reference/search/controllers/date-facet/relative-date-format/).\n   */\n  start: DateRangeInput;\n\n  /**\n   * The ending value for the date range. A date range can be either absolute or [relative](https://docs.coveo.com/en/headless/latest/reference/search/controllers/date-facet/relative-date-format/).\n   */\n  end: DateRangeInput;\n\n  /**\n   * Whether to include the end value in the range.\n   *\n   * @defaultValue `false`\n   */\n  endInclusive?: boolean;\n\n  /**\n   * The current facet value state.\n   *\n   * @defaultValue `idle`\n   */\n  state?: FacetValueState;\n\n  /**\n   * Allows specifying a custom string date format. See [Day.js](https://day.js.org/docs/en/parse/string-format#list-of-all-available-parsing-tokens) for possible parsing tokens. Assumes [ISO 8601](https://day.js.org/docs/en/parse/string) format by default.\n   */\n  dateFormat?: string;\n}\n\n/**\n * Creates a `DateRangeRequest`.\n *\n * @param config - The options with which to create a `DateRangeRequest`.\n * @returns A new `DateRangeRequest`.\n */\nexport function buildDateRange(config: DateRangeOptions): DateRangeRequest {\n  const start = buildDate(config.start, config);\n  const end = buildDate(config.end, config);\n  const endInclusive = config.endInclusive ?? false;\n  const state = config.state ?? 'idle';\n\n  return {\n    start,\n    end,\n    endInclusive,\n    state,\n  };\n}\n\nfunction buildDate(rawDate: DateRangeInput, options: DateRangeOptions) {\n  const {dateFormat} = options;\n  if (isRelativeDate(rawDate)) {\n    validateRelativeDate(rawDate);\n    return serializeRelativeDate(rawDate);\n  }\n\n  if (typeof rawDate === 'string' && isRelativeDateFormat(rawDate)) {\n    validateRelativeDate(rawDate);\n    return rawDate;\n  }\n\n  validateAbsoluteDate(rawDate, dateFormat);\n  return formatDateForSearchApi(parseDate(rawDate, dateFormat));\n}\n", "import {Value} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../../utils/validate-payload.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {RangeFacetSortCriterion} from './interfaces/request.js';\n\nexport const updateRangeFacetSortCriterion = createAction(\n  'rangeFacet/updateSortCriterion',\n  (payload: {facetId: string; criterion: RangeFacetSortCriterion}) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      criterion: new Value<RangeFacetSortCriterion>({required: true}),\n    })\n);\n", "import {NumberValue, BooleanValue, RecordValue} from '@coveo/bueno';\nimport {requiredNonEmptyString} from '../../../../utils/validate-payload.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {RangeFacetValue} from './interfaces/range-facet.js';\n\nexport const numericFacetValueDefinition = {\n  state: requiredNonEmptyString,\n  start: new NumberValue({required: true}),\n  end: new NumberValue({required: true}),\n  endInclusive: new BooleanValue({required: true}),\n  numberOfResults: new NumberValue({required: true, min: 0}),\n};\n\nexport const dateFacetValueDefinition = {\n  start: requiredNonEmptyString,\n  end: requiredNonEmptyString,\n  endInclusive: new BooleanValue({required: true}),\n  state: requiredNonEmptyString,\n  numberOfResults: new NumberValue({required: true, min: 0}),\n};\n\nexport const rangeFacetSelectionPayloadDefinition = (\n  selection: RangeFacetValue\n) => ({\n  facetId: facetIdDefinition,\n  selection:\n    typeof selection.start === 'string'\n      ? new RecordValue({values: dateFacetValueDefinition})\n      : new RecordValue({values: numericFacetValueDefinition}),\n});\n\nexport interface RangeFacetSelectionPayload {\n  facetId: string;\n  selection: RangeFacetValue;\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../../../breadcrumb/breadcrumb-actions.js';\nimport {disableFacet} from '../../../facet-options/facet-options-actions.js';\nimport {change} from '../../../history/history-actions.js';\nimport {restoreSearchParameters} from '../../../search-parameters/search-parameter-actions.js';\nimport {executeSearch} from '../../../search/search-actions.js';\nimport {handleFacetSortCriterionUpdate} from '../../generic/facet-reducer-helpers.js';\nimport {\n  registerRangeFacet,\n  toggleSelectRangeValue,\n  onRangeFacetRequestFulfilled,\n  handleRangeFacetDeselectAll,\n  defaultRangeFacetOptions,\n  handleRangeFacetSearchParameterRestoration,\n  updateRangeValues,\n  toggleExcludeRangeValue,\n} from '../generic/range-facet-reducers.js';\nimport {\n  NumericFacetRequest,\n  NumericRangeRequest,\n} from './interfaces/request.js';\nimport {\n  NumericFacetResponse,\n  NumericFacetValue,\n} from './interfaces/response.js';\nimport {\n  registerNumericFacet,\n  toggleSelectNumericFacetValue,\n  deselectAllNumericFacetValues,\n  updateNumericFacetSortCriterion,\n  RegisterNumericFacetActionCreatorPayload,\n  updateNumericFacetValues,\n  toggleExcludeNumericFacetValue,\n} from './numeric-facet-actions.js';\nimport {\n  getNumericFacetSetInitialState,\n  getNumericFacetSetSliceInitialState,\n} from './numeric-facet-set-state.js';\n\nexport const numericFacetSetReducer = createReducer(\n  getNumericFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerNumericFacet, (state, action) => {\n        const {payload} = action;\n        const request = buildNumericFacetRequest(payload);\n        registerRangeFacet(state, getNumericFacetSetSliceInitialState(request));\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.numericFacetSet ?? state\n      )\n      .addCase(restoreSearchParameters, (state, action) => {\n        const nf = action.payload.nf || {};\n        handleRangeFacetSearchParameterRestoration(state, nf);\n      })\n      .addCase(toggleSelectNumericFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleSelectRangeValue(state, facetId, selection);\n      })\n      .addCase(toggleExcludeNumericFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleExcludeRangeValue(state, facetId, selection);\n      })\n      .addCase(updateNumericFacetValues, (state, action) => {\n        const {facetId, values} = action.payload;\n        updateRangeValues(state, facetId, values);\n      })\n      .addCase(deselectAllNumericFacetValues, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.keys(state).forEach((facetId) => {\n          handleRangeFacetDeselectAll(state, facetId);\n        });\n      })\n      .addCase(updateNumericFacetSortCriterion, (state, action) => {\n        handleFacetSortCriterionUpdate(state, action.payload);\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets as NumericFacetResponse[];\n        onRangeFacetRequestFulfilled(\n          state,\n          facets,\n          convertToNumericRangeRequests\n        );\n      })\n      .addCase(disableFacet, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      });\n  }\n);\n\nfunction buildNumericFacetRequest(\n  config: RegisterNumericFacetActionCreatorPayload\n): NumericFacetRequest {\n  return {\n    ...defaultRangeFacetOptions,\n    currentValues: [],\n    preventAutoSelect: false,\n    type: 'numericalRange',\n    ...config,\n  };\n}\n\nexport function convertToNumericRangeRequests(\n  values: NumericFacetValue[]\n): NumericRangeRequest[] {\n  return values.map((value) => {\n    const {numberOfResults, ...rest} = value;\n    return rest;\n  });\n}\n", "import {\n  RecordValue,\n  NumberValue,\n  BooleanValue,\n  Value,\n  ArrayValue,\n  StringValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  serializeSchemaValidationError,\n  validatePayloadAndThrow,\n} from '../../../../utils/validate-payload.js';\nimport {deselectAllFacetValues} from '../../facet-set/facet-set-actions.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {\n  RangeFacetRangeAlgorithm,\n  RangeFacetSortCriterion,\n} from '../generic/interfaces/request.js';\nimport {updateRangeFacetSortCriterion} from '../generic/range-facet-actions.js';\nimport {numericFacetValueDefinition} from '../generic/range-facet-validate-payload.js';\nimport {NumericRangeRequest} from './interfaces/request.js';\nimport {NumericFacetValue} from './interfaces/response.js';\n\nexport interface RegisterNumericFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the numeric facet.\n   */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * The tabs on which the facet should be enabled or disabled.\n   */\n  tabs?: {included?: string[]; excluded?: string[]};\n\n  /**\n   * The currently active tab.\n   */\n  activeTab?: string;\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: NumericRangeRequest[];\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The range algorithm to apply to automatically generated ranges for the range facet.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst numericFacetRequestDefinition = {\n  state: requiredNonEmptyString,\n  start: new NumberValue({required: true}),\n  end: new NumberValue({required: true}),\n  endInclusive: new BooleanValue({required: true}),\n};\n\nconst numericFacetRegistrationOptionsDefinition = {\n  facetId: facetIdDefinition,\n  field: requiredNonEmptyString,\n  tabs: new RecordValue({\n    options: {\n      required: false,\n    },\n    values: {\n      included: new ArrayValue({each: new StringValue()}),\n      excluded: new ArrayValue({each: new StringValue()}),\n    },\n  }),\n  activeTab: new StringValue({required: false}),\n  currentValues: new ArrayValue({\n    required: false,\n    each: new RecordValue({values: numericFacetRequestDefinition}),\n  }),\n  generateAutomaticRanges: new BooleanValue({required: true}) as never,\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<RangeFacetSortCriterion>({required: false}),\n  rangeAlgorithm: new Value<RangeFacetRangeAlgorithm>({required: false}),\n};\n\nexport function validateManualNumericRanges(\n  options: Pick<RegisterNumericFacetActionCreatorPayload, 'currentValues'>\n) {\n  if (!options.currentValues) {\n    return;\n  }\n\n  options.currentValues.forEach(({start, end}) => {\n    if (start > end) {\n      throw new Error(\n        `The start value is greater than the end value for the numeric range ${start} to ${end}`\n      );\n    }\n  });\n}\n\nexport const registerNumericFacet = createAction(\n  'numericFacet/register',\n  (payload: RegisterNumericFacetActionCreatorPayload) => {\n    try {\n      validatePayload(payload, numericFacetRegistrationOptionsDefinition);\n      validateManualNumericRanges(payload);\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface ToggleSelectNumericFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target numeric facet value.\n   */\n  selection: NumericFacetValue;\n}\n\nexport const toggleSelectNumericFacetValue = createAction(\n  'numericFacet/toggleSelectValue',\n  (payload: ToggleSelectNumericFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: numericFacetValueDefinition}),\n    })\n);\n\nexport const toggleExcludeNumericFacetValue = createAction(\n  'numericFacet/toggleExcludeValue',\n  (payload: ToggleSelectNumericFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: numericFacetValueDefinition}),\n    })\n);\n\nexport interface UpdateNumericFacetValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The numeric facet values.\n   */\n  values: NumericFacetValue[];\n}\n\nexport const updateNumericFacetValues = createAction(\n  'numericFacet/updateFacetValues',\n  (payload: UpdateNumericFacetValuesActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload, {\n        facetId: facetIdDefinition,\n        values: new ArrayValue({\n          each: new RecordValue({values: numericFacetValueDefinition}),\n        }),\n      });\n      validateManualNumericRanges({currentValues: payload.values});\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface UpdateNumericFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target criterion.\n   */\n  criterion: RangeFacetSortCriterion;\n}\n\nexport const updateNumericFacetSortCriterion = updateRangeFacetSortCriterion;\n\nexport const deselectAllNumericFacetValues = deselectAllFacetValues;\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {Parameters} from '../parameters/parameters-actions.js';\nimport {parametersDefinition} from '../parameters/parameters-schema.js';\n\nexport type ProductListingParameters = Parameters;\n\nexport type RestoreProductListingParametersPayload = ProductListingParameters;\n\nexport const restoreProductListingParameters = createAction(\n  'commerce/productListingParameters/restore',\n  (payload: RestoreProductListingParametersPayload) =>\n    validatePayload(payload, parametersDefinition)\n);\n", "import {NumberValue, RecordValue} from '@coveo/bueno';\n\nexport const parametersDefinition = {\n  f: new RecordValue(),\n  lf: new RecordValue(),\n  cf: new RecordValue(),\n  nf: new RecordValue(),\n  mnf: new RecordValue(),\n  df: new RecordValue(),\n  sortCriteria: new RecordValue(),\n  page: new NumberValue({min: 0}),\n  perPage: new NumberValue({min: 1}),\n};\n", "import {RecordValue, StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  AsyncThunkCommerceOptions,\n  isErrorResponse,\n} from '../../../api/commerce/commerce-api-client.js';\nimport {ChildProduct} from '../../../api/commerce/common/product.js';\nimport {ProductListingSection} from '../../../state/state-sections.js';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {\n  buildCommerceAPIRequest,\n  QueryCommerceAPIThunkReturn,\n  ListingAndSearchStateNeededByQueryCommerceAPI,\n} from '../common/actions.js';\nimport {perPagePrincipalSelector} from '../pagination/pagination-selectors.js';\nimport {\n  moreProductsAvailableSelector,\n  numberOfProductsSelector,\n} from './product-listing-selectors.js';\n\nexport type StateNeededByFetchProductListing =\n  ListingAndSearchStateNeededByQueryCommerceAPI & ProductListingSection;\n\nexport const fetchProductListing = createAsyncThunk<\n  QueryCommerceAPIThunkReturn,\n  void,\n  AsyncThunkCommerceOptions<StateNeededByFetchProductListing>\n>(\n  'commerce/productListing/fetch',\n  async (\n    _action,\n    {getState, rejectWithValue, extra: {apiClient, navigatorContext}}\n  ) => {\n    const state = getState();\n    const fetched = await apiClient.getProductListing(\n      buildCommerceAPIRequest(state, navigatorContext)\n    );\n\n    if (isErrorResponse(fetched)) {\n      return rejectWithValue(fetched.error);\n    }\n\n    return {\n      response: fetched.success,\n    };\n  }\n);\n\nexport const fetchMoreProducts = createAsyncThunk<\n  QueryCommerceAPIThunkReturn | null,\n  void,\n  AsyncThunkCommerceOptions<StateNeededByFetchProductListing>\n>(\n  'commerce/productListing/fetchMoreProducts',\n  async (\n    _action,\n    {getState, rejectWithValue, extra: {apiClient, navigatorContext}}\n  ) => {\n    const state = getState();\n    const moreProductsAvailable = moreProductsAvailableSelector(state);\n    if (!moreProductsAvailable) {\n      return null;\n    }\n    const perPage = perPagePrincipalSelector(state);\n    const numberOfProducts = numberOfProductsSelector(state);\n    const nextPageToRequest = numberOfProducts / perPage;\n\n    const fetched = await apiClient.getProductListing({\n      ...buildCommerceAPIRequest(state, navigatorContext),\n      page: nextPageToRequest,\n    });\n\n    if (isErrorResponse(fetched)) {\n      return rejectWithValue(fetched.error);\n    }\n\n    return {\n      response: fetched.success,\n    };\n  }\n);\n\nexport interface PromoteChildToParentPayload {\n  child: ChildProduct;\n}\n\nexport const promoteChildToParentDefinition = {\n  child: new RecordValue({\n    options: {required: true},\n    values: {\n      permanentid: new StringValue({required: true}),\n    },\n  }),\n};\n\nexport const promoteChildToParent = createAction(\n  'commerce/productListing/promoteChildToParent',\n  (payload: PromoteChildToParentPayload) =>\n    validatePayload(payload, promoteChildToParentDefinition)\n);\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getAnalyticsSource} from '../../../api/analytics/analytics-selectors.js';\nimport {\n  AsyncThunkCommerceOptions,\n  getCommerceApiBaseUrl,\n  isErrorResponse,\n} from '../../../api/commerce/commerce-api-client.js';\nimport {QuerySuggestRequest} from '../../../api/commerce/search/query-suggest/query-suggest-request.js';\nimport {QuerySuggestSuccessResponse} from '../../../api/commerce/search/query-suggest/query-suggest-response.js';\nimport {NavigatorContext} from '../../../app/navigatorContextProvider.js';\nimport {\n  CartSection,\n  CommerceContextSection,\n  CommerceQuerySection,\n  CommerceConfigurationSection,\n  QuerySetSection,\n  VersionSection,\n} from '../../../state/state-sections.js';\nimport {\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload.js';\nimport {\n  ClearQuerySuggestActionCreatorPayload,\n  FetchQuerySuggestionsActionCreatorPayload,\n  RegisterQuerySuggestActionCreatorPayload,\n  SelectQuerySuggestionActionCreatorPayload,\n} from '../../query-suggest/query-suggest-actions.js';\nimport {getProductsFromCartState} from '../context/cart/cart-state.js';\n\nexport type ClearQuerySuggestPayload = ClearQuerySuggestActionCreatorPayload;\n\nexport const clearQuerySuggest = createAction(\n  'commerce/querySuggest/clear',\n  (payload: ClearQuerySuggestPayload) =>\n    validatePayload(payload, {id: requiredNonEmptyString})\n);\n\nexport type FetchQuerySuggestionsPayload =\n  FetchQuerySuggestionsActionCreatorPayload;\n\nexport type StateNeededByQuerySuggest = CommerceConfigurationSection &\n  CommerceContextSection &\n  CartSection &\n  QuerySetSection &\n  CommerceQuerySection &\n  Partial<VersionSection>;\nexport interface FetchQuerySuggestionsThunkReturn\n  extends FetchQuerySuggestionsActionCreatorPayload,\n    QuerySuggestSuccessResponse {\n  /**\n   * The query for which query suggestions were retrieved.\n   */\n  query: string | undefined;\n}\n\nexport const fetchQuerySuggestions = createAsyncThunk<\n  FetchQuerySuggestionsThunkReturn,\n  FetchQuerySuggestionsPayload,\n  AsyncThunkCommerceOptions<StateNeededByQuerySuggest>\n>(\n  'commerce/querySuggest/fetch',\n  async (\n    payload: {id: string},\n    {\n      getState,\n      rejectWithValue,\n      extra: {apiClient, validatePayload, navigatorContext},\n    }\n  ) => {\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n    });\n    const state = getState();\n    const request = buildQuerySuggestRequest(\n      payload.id,\n      state,\n      navigatorContext\n    );\n    const response = await apiClient.querySuggest(request);\n\n    if (isErrorResponse(response)) {\n      return rejectWithValue(response.error);\n    }\n\n    return {\n      id: payload.id,\n      query: request.query,\n      ...response.success,\n    };\n  }\n);\n\nexport type RegisterQuerySuggestPayload =\n  RegisterQuerySuggestActionCreatorPayload;\n\nexport const registerQuerySuggest = createAction(\n  'commerce/querySuggest/register',\n  (payload: RegisterQuerySuggestPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      count: new NumberValue({min: 0}),\n    })\n);\n\nexport type SelectQuerySuggestionPayload =\n  SelectQuerySuggestionActionCreatorPayload;\n\nexport const selectQuerySuggestion = createAction(\n  'commerce/querySuggest/selectSuggestion',\n  (payload: SelectQuerySuggestionPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      expression: requiredEmptyAllowedString,\n    })\n);\n\nexport const buildQuerySuggestRequest = (\n  id: string,\n  state: StateNeededByQuerySuggest,\n  navigatorContext: NavigatorContext\n): QuerySuggestRequest => {\n  const {view, ...restOfContext} = state.commerceContext;\n  return {\n    accessToken: state.configuration.accessToken,\n    url:\n      state.configuration.commerce.apiBaseUrl ??\n      getCommerceApiBaseUrl(\n        state.configuration.organizationId,\n        state.configuration.environment\n      ),\n    organizationId: state.configuration.organizationId,\n    trackingId: state.configuration.analytics.trackingId,\n    query: state.querySet[id],\n    ...restOfContext,\n    ...(state.configuration.analytics.enabled\n      ? {clientId: navigatorContext.clientId}\n      : {}),\n    context: {\n      user: {\n        ...location,\n        ...(navigatorContext.userAgent\n          ? {userAgent: navigatorContext.userAgent}\n          : {}),\n      },\n      view: {\n        ...view,\n        ...(navigatorContext.referrer\n          ? {referrer: navigatorContext.referrer}\n          : {}),\n      },\n      capture: state.configuration.analytics.enabled,\n      cart: getProductsFromCartState(state.cart),\n      source: getAnalyticsSource(state.configuration.analytics),\n    },\n  };\n};\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {Parameters} from '../parameters/parameters-actions.js';\nimport {searchParametersDefinition} from './search-parameters-schema.js';\n\n/**\n * The parameters affecting the search response.\n */\nexport interface CommerceSearchParameters extends Parameters {\n  /**\n   * The query.\n   */\n  q?: string;\n}\n\nexport type RestoreSearchParametersPayload = CommerceSearchParameters;\n\nexport const restoreSearchParameters = createAction(\n  'commerce/searchParameters/restore',\n  (payload: RestoreSearchParametersPayload) =>\n    validatePayload(payload, searchParametersDefinition)\n);\n", "import {SchemaDefinition, StringValue} from '@coveo/bueno';\nimport {parametersDefinition} from '../parameters/parameters-schema.js';\nimport {CommerceSearchParameters} from './search-parameters-actions.js';\n\nexport const searchParametersDefinition: SchemaDefinition<\n  Required<CommerceSearchParameters>\n> = {\n  q: new StringValue(),\n  ...parametersDefinition,\n};\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredNonEmptyString,\n  serializeSchemaValidationError,\n  validatePayload,\n  validatePayloadAndThrow,\n} from '../../../../utils/validate-payload.js';\nimport {\n  ToggleSelectCategoryFacetValueActionCreatorPayload,\n  UpdateCategoryFacetNumberOfValuesActionCreatorPayload,\n} from '../../../facets/category-facet-set/category-facet-set-actions.js';\nimport {validateCategoryFacetValue} from '../../../facets/category-facet-set/category-facet-validate-payload.js';\n\nexport type UpdateCategoryFacetNumberOfValuesPayload =\n  UpdateCategoryFacetNumberOfValuesActionCreatorPayload;\n\nexport const updateCategoryFacetNumberOfValues = createAction(\n  'commerce/facets/categoryFacet/updateNumberOfValues',\n  (payload: UpdateCategoryFacetNumberOfValuesPayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      numberOfValues: new NumberValue({required: false, min: 1}),\n    })\n);\n\nexport type ToggleSelectCategoryFacetValuePayload =\n  ToggleSelectCategoryFacetValueActionCreatorPayload;\n\nexport const toggleSelectCategoryFacetValue = createAction(\n  'commerce/facets/categoryFacet/toggleSelectValue',\n  (payload: ToggleSelectCategoryFacetValuePayload) => {\n    try {\n      validatePayloadAndThrow(payload.facetId, requiredNonEmptyString);\n      validateCategoryFacetValue(payload.selection);\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n", "import {ArrayValue, RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredNonEmptyString,\n  serializeSchemaValidationError,\n  validatePayload,\n  validatePayloadAndThrow,\n} from '../../../../utils/validate-payload.js';\nimport {\n  ToggleSelectDateFacetValueActionCreatorPayload,\n  UpdateDateFacetValuesActionCreatorPayload,\n  validateManualDateRanges,\n} from '../../../facets/range-facets/date-facet-set/date-facet-actions.js';\nimport {dateFacetValueDefinition} from '../../../facets/range-facets/generic/range-facet-validate-payload.js';\n\nexport type ToggleSelectDateFacetValuePayload =\n  ToggleSelectDateFacetValueActionCreatorPayload;\n\nexport const toggleSelectDateFacetValue = createAction(\n  'commerce/facets/dateFacet/toggleSelectValue',\n  (payload: ToggleSelectDateFacetValuePayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      selection: new RecordValue({values: dateFacetValueDefinition}),\n    })\n);\n\nexport type ToggleExcludeDateFacetValuePayload =\n  ToggleSelectDateFacetValueActionCreatorPayload;\n\nexport const toggleExcludeDateFacetValue = createAction(\n  'commerce/facets/dateFacet/toggleExcludeValue',\n  (payload: ToggleExcludeDateFacetValuePayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      selection: new RecordValue({values: dateFacetValueDefinition}),\n    })\n);\n\nexport type UpdateDateFacetValuesPayload =\n  UpdateDateFacetValuesActionCreatorPayload;\n\nexport const updateDateFacetValues = createAction(\n  'commerce/facets/dateFacet/updateValues',\n  (payload: UpdateDateFacetValuesActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload, {\n        facetId: requiredNonEmptyString,\n        values: new ArrayValue({\n          each: new RecordValue({values: dateFacetValueDefinition}),\n        }),\n      });\n      validateManualDateRanges({currentValues: payload.values});\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n", "import {AsyncThunkPayloadCreator, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  CommerceAPIResponse,\n  CommerceFacetSearchAPIClient,\n} from '../../../../api/commerce/commerce-api-client.js';\nimport {FacetSearchType} from '../../../../api/commerce/facet-search/facet-search-request.js';\nimport {CategoryFacetSearchResponse} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-response.js';\nimport {SpecificFacetSearchResponse} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options.js';\nimport {ClientThunkExtraArguments} from '../../../../app/thunk-extra-arguments.js';\nimport {requiredNonEmptyString} from '../../../../utils/validate-payload.js';\nimport {FieldSuggestionsOrderState} from '../field-suggestions-order/field-suggestions-order-state.js';\nimport {buildCategoryFacetSearchRequest} from './category/commerce-category-facet-search-request-builder.js';\nimport {StateNeededForAnyFacetSearch} from './commerce-facet-search-state.js';\nimport {buildFacetSearchRequest} from './regular/commerce-regular-facet-search-request-builder.js';\nimport {StateNeededForRegularFacetSearch} from './regular/commerce-regular-facet-search-state.js';\n\ntype ExecuteCommerceFacetSearchThunkReturn = {\n  facetId: string;\n  response: CommerceAPIResponse<\n    SpecificFacetSearchResponse | CategoryFacetSearchResponse\n  >;\n};\n\ninterface ExecuteCommerceFacetSearchThunkArg {\n  facetId: string;\n  facetSearchType: FacetSearchType;\n}\n\ntype ExecuteCommerceFacetSearchThunkApiConfig = AsyncThunkOptions<\n  StateNeededForAnyFacetSearch,\n  ClientThunkExtraArguments<CommerceFacetSearchAPIClient>\n>;\n\nconst getExecuteFacetSearchThunkPayloadCreator =\n  (\n    isFieldSuggestionsRequest: boolean\n  ): AsyncThunkPayloadCreator<\n    ExecuteCommerceFacetSearchThunkReturn,\n    ExecuteCommerceFacetSearchThunkArg,\n    ExecuteCommerceFacetSearchThunkApiConfig\n  > =>\n  async (\n    {facetId, facetSearchType},\n    {getState, extra: {validatePayload, navigatorContext, apiClient}}\n  ) => {\n    const state = getState();\n    validatePayload(facetId, requiredNonEmptyString);\n    const req =\n      isRegularFacetSearchState(state, facetId) ||\n      isRegularFieldSuggestionsState(state, facetId)\n        ? buildFacetSearchRequest(\n            facetId,\n            state,\n            isFieldSuggestionsRequest,\n            navigatorContext\n          )\n        : buildCategoryFacetSearchRequest(\n            facetId,\n            state,\n            isFieldSuggestionsRequest,\n            navigatorContext\n          );\n\n    const response = await apiClient.facetSearch(req, facetSearchType);\n\n    return {facetId, response};\n  };\n\nexport const executeCommerceFacetSearch = createAsyncThunk<\n  ExecuteCommerceFacetSearchThunkReturn,\n  ExecuteCommerceFacetSearchThunkArg,\n  AsyncThunkOptions<\n    StateNeededForAnyFacetSearch,\n    ClientThunkExtraArguments<CommerceFacetSearchAPIClient>\n  >\n>(\n  'commerce/facetSearch/executeSearch',\n  getExecuteFacetSearchThunkPayloadCreator(false)\n);\n\nexport const executeCommerceFieldSuggest = createAsyncThunk<\n  ExecuteCommerceFacetSearchThunkReturn,\n  ExecuteCommerceFacetSearchThunkArg,\n  AsyncThunkOptions<\n    StateNeededForAnyFacetSearch,\n    ClientThunkExtraArguments<CommerceFacetSearchAPIClient>\n  >\n>(\n  'commerce/facetSearch/facetFieldSuggest',\n  getExecuteFacetSearchThunkPayloadCreator(true)\n);\n\nexport const isRegularFacetSearchState = (\n  s: StateNeededForAnyFacetSearch,\n  facetId: string\n): s is StateNeededForRegularFacetSearch => {\n  return (\n    'facetSearchSet' in s &&\n    s.facetSearchSet[facetId] !== undefined &&\n    s.commerceFacetSet[facetId] !== undefined\n  );\n};\n\nexport const isRegularFieldSuggestionsState = (\n  s: StateNeededForAnyFacetSearch,\n  facetId: string\n): s is StateNeededForRegularFacetSearch => {\n  if (!('fieldSuggestionsOrder' in s)) {\n    return false;\n  }\n\n  return (s.fieldSuggestionsOrder as FieldSuggestionsOrderState).some(\n    (facet) => facet.facetId === facetId && facet.type === 'regular'\n  );\n};\n\nconst commerceFieldSuggestionNamespace = 'field_suggestion:';\n\nexport function getFacetIdWithoutCommerceFieldSuggestionNamespace(\n  facetId: string\n) {\n  return facetId.startsWith(commerceFieldSuggestionNamespace)\n    ? facetId.slice(commerceFieldSuggestionNamespace.length)\n    : facetId;\n}\n\nexport function getFacetIdWithCommerceFieldSuggestionNamespace(\n  facetId: string\n): string {\n  return facetId.startsWith(commerceFieldSuggestionNamespace)\n    ? facetId\n    : `${commerceFieldSuggestionNamespace}${facetId}`;\n}\n", "import {CategoryFacetSearchRequest} from '../../../../../api/commerce/facet-search/facet-search-request.js';\nimport {NavigatorContext} from '../../../../../app/navigatorContextProvider.js';\nimport {buildCommerceAPIRequest} from '../../../common/actions.js';\nimport {\n  AnyFacetRequest,\n  CategoryFacetRequest,\n} from '../../facet-set/interfaces/request.js';\nimport {getFacetIdWithoutCommerceFieldSuggestionNamespace} from '../commerce-facet-search-actions.js';\nimport {StateNeededForCategoryFacetSearch} from './commerce-category-facet-search-state.js';\n\nexport const buildCategoryFacetSearchRequest = (\n  facetId: string,\n  state: StateNeededForCategoryFacetSearch,\n  isFieldSuggestionsRequest: boolean,\n  navigatorContext: NavigatorContext\n): CategoryFacetSearchRequest => {\n  const baseFacetQuery = state.categoryFacetSearchSet[facetId]!.options.query;\n  const facetQuery = `*${baseFacetQuery}*`;\n  const categoryFacet =\n    state.commerceFacetSet[\n      getFacetIdWithoutCommerceFieldSuggestionNamespace(facetId)\n    ]?.request;\n  const path =\n    categoryFacet && isCategoryFacetRequest(categoryFacet)\n      ? categoryFacet && getPathToSelectedCategoryFacetItem(categoryFacet)\n      : [];\n  const ignorePaths = path.length ? [path] : [];\n  const query = state.commerceQuery?.query;\n\n  const {\n    url,\n    accessToken,\n    organizationId,\n    trackingId,\n    language,\n    country,\n    currency,\n    clientId,\n    context,\n    ...restOfCommerceAPIRequest\n  } = buildCommerceAPIRequest(state, navigatorContext);\n\n  return {\n    url,\n    accessToken,\n    organizationId,\n    facetId: getFacetIdWithoutCommerceFieldSuggestionNamespace(facetId),\n    facetQuery,\n    ignorePaths,\n    trackingId,\n    language,\n    country,\n    currency,\n    clientId,\n    context,\n    query,\n    ...(!isFieldSuggestionsRequest && {...restOfCommerceAPIRequest, query: ''}),\n  };\n};\n\nfunction isCategoryFacetRequest(\n  request: AnyFacetRequest\n): request is CategoryFacetRequest {\n  return request.type === 'hierarchical';\n}\n\nconst getPathToSelectedCategoryFacetItem = (\n  categoryFacet: CategoryFacetRequest\n): string[] => {\n  const path = [];\n  let selectedValue = categoryFacet.values[0];\n  while (selectedValue) {\n    path.push(selectedValue.value);\n    selectedValue = selectedValue.children[0];\n  }\n  return path;\n};\n", "import {CommerceFacetSearchRequest} from '../../../../../api/commerce/facet-search/facet-search-request.js';\nimport {NavigatorContext} from '../../../../../app/navigatorContextProvider.js';\nimport {buildCommerceAPIRequest} from '../../../common/actions.js';\nimport {getFacetIdWithoutCommerceFieldSuggestionNamespace} from '../commerce-facet-search-actions.js';\nimport {StateNeededForRegularFacetSearch} from './commerce-regular-facet-search-state.js';\n\nexport const buildFacetSearchRequest = (\n  facetId: string,\n  state: StateNeededForRegularFacetSearch,\n  isFieldSuggestionsRequest: boolean,\n  navigatorContext: NavigatorContext\n): CommerceFacetSearchRequest => {\n  const baseFacetQuery = state.facetSearchSet[facetId]!.options.query;\n  const facetQuery = `*${baseFacetQuery}*`;\n  const query = state.commerceQuery?.query;\n\n  const {\n    url,\n    accessToken,\n    organizationId,\n    trackingId,\n    language,\n    country,\n    currency,\n    clientId,\n    context,\n    ...restOfCommerceAPIRequest\n  } = buildCommerceAPIRequest(state, navigatorContext);\n\n  return {\n    url,\n    accessToken,\n    organizationId,\n    facetId: getFacetIdWithoutCommerceFieldSuggestionNamespace(facetId),\n    facetQuery,\n    trackingId,\n    language,\n    country,\n    currency,\n    clientId,\n    context,\n    query,\n    ...(!isFieldSuggestionsRequest && {...restOfCommerceAPIRequest, query: ''}),\n  };\n};\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../../utils/validate-payload.js';\nimport {facetValueDefinition} from '../../../facets/facet-set/facet-set-validate-payload.js';\nimport {LocationFacetValue} from '../facet-set/interfaces/response.js';\n\nexport interface ToggleSelectLocationFacetValuePayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target location facet value.\n   */\n  selection: LocationFacetValue;\n}\n\nexport const toggleSelectLocationFacetValue = createAction(\n  'commerce/facets/locationFacet/toggleSelectValue',\n  (payload: ToggleSelectLocationFacetValuePayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n", "import {\n  ArrayValue,\n  RecordValue,\n  NumberValue,\n  StringValue,\n  BooleanValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredNonEmptyString,\n  serializeSchemaValidationError,\n  validatePayload,\n  validatePayloadAndThrow,\n} from '../../../../utils/validate-payload.js';\nimport {NumericRangeRequest} from '../../../facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {validateManualNumericRanges} from '../../../facets/range-facets/numeric-facet-set/numeric-facet-actions.js';\n\nexport interface ToggleSelectNumericFacetValuePayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n  /**\n   * The target numeric facet value.\n   */\n  selection: NumericRangeRequest;\n}\n\nexport const toggleSelectNumericFacetValue = createAction(\n  'commerce/facets/numericFacet/toggleSelectValue',\n  (payload: ToggleSelectNumericFacetValuePayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      selection: new RecordValue({\n        values: numericFacetValueDefinition,\n      }),\n    })\n);\n\nexport type ToggleExcludeNumericFacetValuePayload =\n  ToggleSelectNumericFacetValuePayload;\n\nexport const toggleExcludeNumericFacetValue = createAction(\n  'commerce/facets/numericFacet/toggleExcludeValue',\n  (payload: ToggleExcludeNumericFacetValuePayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      selection: new RecordValue({\n        values: numericFacetValueDefinition,\n      }),\n    })\n);\n\nexport interface UpdateNumericFacetValuesPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n  /**\n   * The numeric facet values.\n   */\n  values: NumericRangeRequest[];\n}\n\nexport const updateNumericFacetValues = createAction(\n  'commerce/facets/numericFacet/updateValues',\n  (payload: UpdateNumericFacetValuesPayload) => {\n    try {\n      validatePayloadAndThrow(payload, {\n        facetId: requiredNonEmptyString,\n        values: new ArrayValue({\n          each: new RecordValue({values: numericFacetValueDefinition}),\n        }),\n      });\n      validateManualNumericRanges({currentValues: payload.values});\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport type UpdateManualNumericFacetRangePayload = {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n} & NumericRangeRequest;\n\nexport const updateManualNumericFacetRange = createAction(\n  'commerce/facets/numericFacet/updateManualRange',\n  (payload: UpdateManualNumericFacetRangePayload) =>\n    validatePayloadAndThrow(payload, {\n      facetId: requiredNonEmptyString,\n      ...numericFacetValueDefinition,\n    })\n);\n\nconst numericFacetValueDefinition = {\n  state: new StringValue<'idle' | 'selected' | 'excluded'>({\n    required: true,\n    constrainTo: ['idle', 'selected', 'excluded'],\n  }),\n  start: new NumberValue({required: true}),\n  end: new NumberValue({required: true}),\n  endInclusive: new BooleanValue({required: true}),\n};\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../../utils/validate-payload.js';\nimport {ToggleSelectFacetValueActionCreatorPayload} from '../../../facets/facet-set/facet-set-actions.js';\nimport {facetValueDefinition} from '../../../facets/facet-set/facet-set-validate-payload.js';\n\nexport type ToggleExcludeFacetValuePayload =\n  ToggleSelectFacetValueActionCreatorPayload;\n\nexport const toggleExcludeFacetValue = createAction(\n  'commerce/facets/regularFacet/toggleExcludeValue',\n  (payload: ToggleExcludeFacetValuePayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n\nexport type ToggleSelectFacetValuePayload =\n  ToggleSelectFacetValueActionCreatorPayload;\n\nexport const toggleSelectFacetValue = createAction(\n  'commerce/facets/regularFacet/toggleSelectValue',\n  (payload: ToggleSelectFacetValuePayload) =>\n    validatePayload(payload, {\n      facetId: requiredNonEmptyString,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n", "import {CommerceFacetSetState} from './facet-set-state.js';\nimport {CategoryFacetValueRequest} from './interfaces/request.js';\n\nexport function handleCategoryFacetNestedNumberOfValuesUpdate(\n  state: CommerceFacetSetState,\n  payload: {facetId: string; numberOfValues: number}\n) {\n  const {facetId, numberOfValues} = payload;\n  let selectedValue = state[facetId]?.request\n    .values[0] as CategoryFacetValueRequest;\n  if (!selectedValue) {\n    return;\n  }\n\n  while (selectedValue.children.length && selectedValue?.state !== 'selected') {\n    selectedValue = selectedValue.children[0];\n  }\n  selectedValue.retrieveCount = numberOfValues;\n}\n", "import {FacetValueState} from '../../../facets/facet-api/value.js';\nimport {FacetValueRequest} from '../../../facets/facet-set/interfaces/request.js';\nimport {DateRangeRequest} from '../../../facets/range-facets/date-facet-set/interfaces/request.js';\nimport {NumericRangeRequest} from '../../../facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {Parameters} from '../../parameters/parameters-actions.js';\nimport {CommerceFacetSetState} from './facet-set-state.js';\nimport {\n  CategoryFacetRequest,\n  CategoryFacetValueRequest,\n  DateFacetRequest,\n  LocationFacetValueRequest,\n  NumericFacetRequest,\n} from './interfaces/request.js';\n\nexport function restoreFromParameters(\n  state: CommerceFacetSetState,\n  action: {payload: Parameters}\n) {\n  for (const facetId of Object.keys(state)) {\n    delete state[facetId];\n  }\n\n  if (action.payload.f) {\n    restoreFacets(state, action.payload.f, 'regular');\n  }\n  if (action.payload.lf) {\n    restoreFacets(state, action.payload.lf, 'location');\n  }\n  if (action.payload.nf) {\n    restoreRangeFacets(state, action.payload.nf, 'numericalRange');\n  }\n  if (action.payload.mnf) {\n    restoreRangeFacets(state, action.payload.mnf, 'numericalRange');\n  }\n  if (action.payload.df) {\n    restoreRangeFacets(state, action.payload.df, 'dateRange');\n  }\n  if (action.payload.cf) {\n    restoreCategoryFacets(state, action.payload.cf);\n  }\n}\n\nfunction restoreFacets(\n  state: CommerceFacetSetState,\n  parameterFacets: Record<string, string[]>,\n  type: 'regular' | 'location'\n) {\n  const entries = Object.entries(parameterFacets);\n  for (const [facetId, values] of entries) {\n    state[facetId] = {\n      request: {\n        ...restoreFacet(facetId),\n        type,\n        values: values.map((value) => {\n          const facetValue = {\n            ...restoreFacetValue(),\n            value,\n          };\n          switch (type) {\n            case 'regular':\n              return facetValue as FacetValueRequest;\n            case 'location':\n              return facetValue as LocationFacetValueRequest;\n          }\n        }),\n      },\n    };\n  }\n}\n\nfunction restoreRangeFacets<T extends NumericFacetRequest | DateFacetRequest>(\n  state: CommerceFacetSetState,\n  parameterFacets: Record<string, T['values']>,\n  type: 'dateRange' | 'numericalRange'\n) {\n  const entries = Object.entries(parameterFacets);\n  for (const [facetId, values] of entries) {\n    state[facetId] = {\n      request: {\n        ...restoreFacet(facetId),\n        type,\n        values: values.map((value) => {\n          const rangeValue = {\n            start: value.start,\n            end: value.end,\n            endInclusive: value.endInclusive,\n            ...restoreFacetValue(),\n          };\n          switch (type) {\n            case 'dateRange':\n              return rangeValue as DateRangeRequest;\n            case 'numericalRange':\n              return rangeValue as NumericRangeRequest;\n          }\n        }),\n      },\n    };\n  }\n}\n\nfunction restoreCategoryFacets(\n  state: CommerceFacetSetState,\n  parameterFacets: Record<string, string[]>\n) {\n  const entries = Object.entries(parameterFacets);\n  for (const [facetId, path] of entries) {\n    state[facetId] = {\n      request: {\n        ...restoreFacet(facetId),\n        type: 'hierarchical',\n        values: [],\n        // eslint-disable-next-line @cspell/spellchecker\n        // TODO CAPI-966: Remove delimitingCharacter\n        delimitingCharacter: '|',\n      } as CategoryFacetRequest,\n    };\n    selectPath(state[facetId].request as CategoryFacetRequest, path, 10);\n  }\n}\n\nfunction restoreFacet(facetId: string) {\n  // eslint-disable-next-line @cspell/spellchecker\n  // TODO CAPI-966: Only set facet field\n  return {\n    facetId,\n    field: facetId,\n    isFieldExpanded: false,\n    preventAutoSelect: false,\n    initialNumberOfValues: 10,\n  };\n}\n\nfunction restoreFacetValue() {\n  // eslint-disable-next-line @cspell/spellchecker\n  // TODO CAPI-966: Only set facet value state\n  return {\n    state: 'selected' as FacetValueState,\n    isAutoSelected: false,\n    isSuggested: false,\n    numberOfResults: 10,\n    moreValuesAvailable: true,\n  };\n}\n\nexport function buildSelectedFacetValueRequest(rawValue: string) {\n  return {state: 'selected', value: rawValue};\n}\n\nexport function selectPath(\n  request: CategoryFacetRequest,\n  path: string[],\n  initialNumberOfValues: number\n) {\n  request.values = buildCurrentValuesFromPath(path, initialNumberOfValues);\n  request.numberOfValues = path.length ? 1 : initialNumberOfValues;\n  request.preventAutoSelect = true;\n}\n\nexport function buildCurrentValuesFromPath(\n  path: string[],\n  retrieveCount: number\n) {\n  if (!path.length) {\n    return [];\n  }\n\n  const root = buildCategoryFacetValueRequest(path[0], retrieveCount);\n  let curr = root;\n\n  for (const segment of path.splice(1)) {\n    const next = buildCategoryFacetValueRequest(segment, retrieveCount);\n    curr.children.push(next);\n    curr = next;\n  }\n\n  curr.state = 'selected';\n\n  return [root];\n}\n\nexport function buildCategoryFacetValueRequest(\n  value: string,\n  retrieveCount: number\n): CategoryFacetValueRequest {\n  return {\n    children: [],\n    state: 'idle',\n    value,\n    retrieveCount,\n  };\n}\n", "import {AnyFacetRequest} from './interfaces/request.js';\n\nexport type CommerceFacetSlice = {\n  request: AnyFacetRequest;\n};\n\n/**\n * An object in which each key is a facet identifier, and each value is the corresponding facet request.\n */\nexport type CommerceFacetSetState = Record<string, CommerceFacetSlice>;\n\nexport function getCommerceFacetSetInitialState(): CommerceFacetSetState {\n  return {};\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {fetchQuerySuggestions} from '../../query-suggest/query-suggest-actions.js';\nimport {getFieldSuggestionsOrderInitialState} from './field-suggestions-order-state.js';\n\nexport const fieldSuggestionsOrderReducer = createReducer(\n  getFieldSuggestionsOrderInitialState(),\n  (builder) => {\n    builder.addCase(fetchQuerySuggestions.fulfilled, (_, action) => {\n      return action.payload.fieldSuggestionsFacets ?? [];\n    });\n  }\n);\n", "import {FieldSuggestionsFacet} from '../../../../api/commerce/search/query-suggest/query-suggest-response.js';\n\nexport type {FieldSuggestionsFacet};\nexport type FieldSuggestionsOrderState = FieldSuggestionsFacet[];\n\nexport function getFieldSuggestionsOrderInitialState(): FieldSuggestionsOrderState {\n  return [];\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {NumericRangeRequest} from '../../../facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {restoreProductListingParameters} from '../../product-listing-parameters/product-listing-parameters-actions.js';\nimport {restoreSearchParameters} from '../../search-parameters/search-parameters-actions.js';\nimport {\n  clearAllCoreFacets,\n  deselectAllValuesInCoreFacet,\n} from '../core-facet/core-facet-actions.js';\nimport {\n  getManualNumericFacetInitialState,\n  ManualNumericFacetSetState,\n} from './manual-numeric-facet-state.js';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n  updateManualNumericFacetRange,\n} from './numeric-facet-actions.js';\n\nexport const manualNumericFacetReducer = createReducer(\n  getManualNumericFacetInitialState(),\n  (builder) =>\n    builder\n      .addCase(updateManualNumericFacetRange, (state, action) => {\n        const {facetId, ...manualRange} = action.payload;\n        state[facetId] = {manualRange};\n      })\n      .addCase(toggleExcludeNumericFacetValue, (state, action) => {\n        clearManualRange(state, action.payload.facetId);\n      })\n      .addCase(toggleSelectNumericFacetValue, (state, action) => {\n        clearManualRange(state, action.payload.facetId);\n      })\n      .addCase(deselectAllValuesInCoreFacet, (state, action) => {\n        clearManualRange(state, action.payload.facetId);\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        restoreParameters(state, action.payload.mnf);\n      })\n      .addCase(restoreProductListingParameters, (state, action) => {\n        restoreParameters(state, action.payload.mnf);\n      })\n      .addCase(clearAllCoreFacets, (state) => {\n        for (const facetId of Object.keys(state)) {\n          clearManualRange(state, facetId);\n        }\n      })\n);\n\nconst clearManualRange = (\n  state: ManualNumericFacetSetState,\n  facetId: string\n) => {\n  if (state[facetId]) {\n    state[facetId] = {manualRange: undefined};\n  }\n};\n\nconst restoreParameters = (\n  state: ManualNumericFacetSetState,\n  payload?: Record<string, NumericRangeRequest[]>\n) => {\n  for (const facetId of Object.keys(state)) {\n    delete state[facetId];\n  }\n  if (payload) {\n    Object.entries(payload).forEach(([facetId, manualRange]) => {\n      const range = manualRange[0];\n      state[facetId] = {manualRange: range};\n    });\n  }\n};\n", "import {NumericRangeRequest} from '../../../facets/range-facets/numeric-facet-set/interfaces/request.js';\n\nexport interface ManualNumericFacetSetSlice {\n  manualRange: NumericRangeRequest | undefined;\n}\n\nexport type ManualNumericFacetSetState = Record<\n  string,\n  ManualNumericFacetSetSlice\n>;\n\nexport function getManualNumericFacetInitialState(): ManualNumericFacetSetState {\n  return {};\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {setContext, setView} from '../context/context-actions.js';\nimport {toggleSelectCategoryFacetValue} from '../facets/category-facet/category-facet-actions.js';\nimport {\n  clearAllCoreFacets,\n  deselectAllValuesInCoreFacet,\n} from '../facets/core-facet/core-facet-actions.js';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n} from '../facets/date-facet/date-facet-actions.js';\nimport {toggleSelectLocationFacetValue} from '../facets/location-facet/location-facet-actions.js';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n} from '../facets/numeric-facet/numeric-facet-actions.js';\nimport {\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n} from '../facets/regular-facet/regular-facet-actions.js';\nimport {Parameters} from '../parameters/parameters-actions.js';\nimport {restoreProductListingParameters} from '../product-listing-parameters/product-listing-parameters-actions.js';\nimport {fetchProductListing} from '../product-listing/product-listing-actions.js';\nimport {fetchRecommendations} from '../recommendations/recommendations-actions.js';\nimport {restoreSearchParameters} from '../search-parameters/search-parameters-actions.js';\nimport {executeSearch} from '../search/search-actions.js';\nimport {applySort} from '../sort/sort-actions.js';\nimport {\n  nextPage,\n  previousPage,\n  registerRecommendationsSlotPagination,\n  selectPage,\n  setPageSize,\n} from './pagination-actions.js';\nimport {\n  CommercePaginationState,\n  getCommercePaginationInitialSlice,\n  getCommercePaginationInitialState,\n} from './pagination-state.js';\n\nexport const paginationReducer = createReducer(\n  getCommercePaginationInitialState(),\n  (builder) => {\n    builder\n      .addCase(nextPage, (state, action) => {\n        const slice = getEffectiveSlice(state, action.payload?.slotId);\n\n        if (!slice) {\n          return;\n        }\n\n        if (slice.page < slice.totalPages - 1) {\n          ++slice.page;\n        }\n      })\n      .addCase(previousPage, (state, action) => {\n        const slice = getEffectiveSlice(state, action.payload?.slotId);\n\n        if (!slice) {\n          return;\n        }\n\n        if (slice.page > 0) {\n          --slice.page;\n        }\n      })\n      .addCase(selectPage, (state, action) => {\n        const slice = getEffectiveSlice(state, action.payload.slotId);\n\n        if (!slice) {\n          return;\n        }\n\n        if (\n          action.payload.page >= 0 &&\n          action.payload.page < slice.totalPages\n        ) {\n          slice.page = action.payload.page;\n        }\n      })\n      .addCase(setPageSize, (state, action) => {\n        const slice = getEffectiveSlice(state, action.payload.slotId);\n\n        if (!slice) {\n          return;\n        }\n\n        slice.perPage = action.payload.pageSize;\n      })\n      .addCase(fetchProductListing.fulfilled, (state, action) => {\n        state.principal = action.payload.response.pagination;\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        state.principal = action.payload.response.pagination;\n      })\n      .addCase(fetchRecommendations.fulfilled, (state, action) => {\n        state.recommendations[action.meta.arg.slotId] =\n          action.payload.response.pagination;\n      })\n      .addCase(registerRecommendationsSlotPagination, (state, action) => {\n        const slotId = action.payload.slotId;\n\n        if (slotId in state.recommendations) {\n          return;\n        }\n\n        state.recommendations[slotId] = getCommercePaginationInitialSlice();\n      })\n      .addCase(clearAllCoreFacets, handlePaginationReset)\n      .addCase(deselectAllValuesInCoreFacet, handlePaginationReset)\n      .addCase(toggleSelectFacetValue, handlePaginationReset)\n      .addCase(toggleExcludeFacetValue, handlePaginationReset)\n      .addCase(toggleSelectLocationFacetValue, handlePaginationReset)\n      .addCase(toggleSelectNumericFacetValue, handlePaginationReset)\n      .addCase(toggleExcludeNumericFacetValue, handlePaginationReset)\n      .addCase(toggleSelectDateFacetValue, handlePaginationReset)\n      .addCase(toggleExcludeDateFacetValue, handlePaginationReset)\n      .addCase(toggleSelectCategoryFacetValue, handlePaginationReset)\n      .addCase(applySort, handlePaginationReset)\n      .addCase(setContext, handlePaginationReset)\n      .addCase(setView, handlePaginationReset)\n      .addCase(restoreSearchParameters, handleRestoreParameters)\n      .addCase(restoreProductListingParameters, handleRestoreParameters);\n  }\n);\n\nfunction getEffectiveSlice(\n  state: CommercePaginationState,\n  solutionTypeId: string | undefined\n) {\n  return solutionTypeId\n    ? state.recommendations[solutionTypeId]\n    : state.principal;\n}\n\nfunction handlePaginationReset(state: CommercePaginationState) {\n  state.principal.page = getCommercePaginationInitialSlice().page;\n}\n\nfunction handleRestoreParameters(\n  state: CommercePaginationState,\n  action: {payload: Parameters}\n) {\n  if (action.payload.page) {\n    state.principal.page = action.payload.page;\n  }\n\n  if (action.payload.perPage) {\n    state.principal.perPage = action.payload.perPage;\n  }\n}\n", "import {RecordValue, StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  AsyncThunkCommerceOptions,\n  isErrorResponse,\n} from '../../../api/commerce/commerce-api-client.js';\nimport {ChildProduct} from '../../../api/commerce/common/product.js';\nimport {CommerceRecommendationsRequest} from '../../../api/commerce/recommendations/recommendations-request.js';\nimport {RecommendationsCommerceSuccessResponse} from '../../../api/commerce/recommendations/recommendations-response.js';\nimport {NavigatorContext} from '../../../app/navigatorContextProvider.js';\nimport {RecommendationsSection} from '../../../state/state-sections.js';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {\n  StateNeededByQueryCommerceAPI,\n  buildBaseCommerceAPIRequest,\n} from '../common/actions.js';\nimport {getProductsFromCartPurchasedState} from '../context/cart/cart-state.js';\nimport {perPageRecommendationSelector} from '../pagination/pagination-selectors.js';\nimport {\n  moreRecommendationsAvailableSelector,\n  numberOfRecommendationsSelector,\n} from './recommendations-selectors.js';\nimport {recommendationsSlotDefinition} from './recommendations.js';\n\nexport interface QueryRecommendationsCommerceAPIThunkReturn {\n  /** The successful recommendations response. */\n  response: RecommendationsCommerceSuccessResponse;\n}\n\nexport type StateNeededByFetchRecommendations = StateNeededByQueryCommerceAPI &\n  RecommendationsSection;\n\nconst buildRecommendationCommerceAPIRequest = (\n  slotId: string,\n  state: StateNeededByFetchRecommendations,\n  navigatorContext: NavigatorContext,\n  productId?: string\n): CommerceRecommendationsRequest => {\n  const commerceAPIRequest = buildBaseCommerceAPIRequest(\n    state,\n    navigatorContext,\n    slotId\n  );\n  return {\n    ...commerceAPIRequest,\n    context: {\n      ...commerceAPIRequest.context,\n      ...(productId ? {product: {productId}} : {}),\n      purchased: getProductsFromCartPurchasedState(state.cart),\n    },\n    slotId,\n  };\n};\n\nexport interface FetchRecommendationsPayload {\n  /**\n   * The unique identifier of the recommendations slot (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  slotId: string;\n  productId?: string;\n}\n\nexport const fetchRecommendations = createAsyncThunk<\n  QueryRecommendationsCommerceAPIThunkReturn,\n  FetchRecommendationsPayload,\n  AsyncThunkCommerceOptions<StateNeededByFetchRecommendations>\n>(\n  'commerce/recommendations/fetch',\n  async (\n    payload,\n    {getState, rejectWithValue, extra: {apiClient, navigatorContext}}\n  ) => {\n    const {slotId, productId} = payload;\n    const request = buildRecommendationCommerceAPIRequest(\n      slotId,\n      getState(),\n      navigatorContext,\n      productId\n    );\n    const fetched = await apiClient.getRecommendations(request);\n\n    if (isErrorResponse(fetched)) {\n      return rejectWithValue(fetched.error);\n    }\n\n    return {\n      response: fetched.success,\n    };\n  }\n);\n\nexport type FetchMoreRecommendationsPayload = FetchRecommendationsPayload;\n\nexport const fetchMoreRecommendations = createAsyncThunk<\n  QueryRecommendationsCommerceAPIThunkReturn | null,\n  FetchMoreRecommendationsPayload,\n  AsyncThunkCommerceOptions<StateNeededByFetchRecommendations>\n>(\n  'commerce/recommendations/fetchMore',\n  async (\n    payload,\n    {getState, rejectWithValue, extra: {apiClient, navigatorContext}}\n  ) => {\n    const slotId = payload.slotId;\n    const state = getState();\n    const moreRecommendationsAvailable = moreRecommendationsAvailableSelector(\n      state,\n      slotId\n    );\n    if (!moreRecommendationsAvailable === false) {\n      return null;\n    }\n\n    const perPage = perPageRecommendationSelector(state, slotId);\n    const numberOfProducts = numberOfRecommendationsSelector(state, slotId);\n    const nextPageToRequest = numberOfProducts / perPage;\n\n    const request = {\n      ...buildRecommendationCommerceAPIRequest(slotId, state, navigatorContext),\n      page: nextPageToRequest,\n    };\n    const fetched = await apiClient.getRecommendations(request);\n\n    if (isErrorResponse(fetched)) {\n      return rejectWithValue(fetched.error);\n    }\n\n    return {\n      response: fetched.success,\n    };\n  }\n);\n\nexport interface SlotIdPayload {\n  slotId: string;\n}\n\nexport type RegisterRecommendationsSlotPayload = SlotIdPayload;\n\nexport const registerRecommendationsSlot = createAction(\n  'commerce/recommendations/registerSlot',\n  (payload: RegisterRecommendationsSlotPayload) =>\n    validatePayload(payload, recommendationsSlotDefinition)\n);\n\nexport interface PromoteChildToParentPayload extends SlotIdPayload {\n  child: ChildProduct;\n}\n\nexport const promoteChildToParentDefinition = {\n  child: new RecordValue({\n    options: {required: true},\n    values: {\n      permanentid: new StringValue({required: true}),\n    },\n  }),\n  ...recommendationsSlotDefinition,\n};\n\nexport const promoteChildToParent = createAction(\n  'commerce/recommendations/promoteChildToParent',\n  (payload: PromoteChildToParentPayload) =>\n    validatePayload(payload, promoteChildToParentDefinition)\n);\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommercePaginationSection,\n  RecommendationsSection,\n} from '../../../state/state-sections.js';\nimport {totalEntriesRecommendationSelector} from '../pagination/pagination-selectors.js';\n\nexport const numberOfRecommendationsSelector = createSelector(\n  (state: Partial<RecommendationsSection>, slotId: string) =>\n    state.recommendations\n      ? state.recommendations[slotId]?.products.length || 0\n      : 0,\n  (len) => len\n);\n\nexport const moreRecommendationsAvailableSelector = createSelector(\n  (\n    state: Partial<CommercePaginationSection & RecommendationsSection>,\n    slotId: string\n  ) => ({\n    total: totalEntriesRecommendationSelector(state, slotId),\n    current: numberOfRecommendationsSelector(state, slotId),\n  }),\n  ({current, total}) => current < total\n);\n\nexport const isLoadingSelector = createSelector(\n  (state: Partial<RecommendationsSection>, slotId: string) =>\n    state.recommendations ? state.recommendations[slotId]?.isLoading : false,\n  (isLoading) => (isNullOrUndefined(isLoading) ? false : isLoading)\n);\n", "import {Schema} from '@coveo/bueno';\nimport {StringValue} from '@coveo/bueno';\nimport {RecommendationsOptions} from '../../../controllers/commerce/recommendations/headless-recommendations.js';\nimport {requiredNonEmptyString} from '../../../utils/validate-payload.js';\n\nexport const recommendationsSlotDefinition = {\n  slotId: requiredNonEmptyString,\n  productId: new StringValue({required: false, emptyAllowed: false}),\n};\n\nexport const recommendationsOptionsSchema = new Schema<RecommendationsOptions>(\n  recommendationsSlotDefinition\n);\n", "import {EnumValue, SchemaDefinition} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {SortBy, SortCriterion} from './sort.js';\n\nexport type ApplySortPayload = SortCriterion;\n\nexport const applySort = createAction(\n  'commerce/sort/apply',\n  (payload: ApplySortPayload) =>\n    validatePayload(payload, {\n      by: new EnumValue<SortBy>({\n        enum: SortBy,\n        required: true,\n      }),\n    } as SchemaDefinition<ApplySortPayload>)\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {\n  Product,\n  BaseProduct,\n  ChildProduct,\n} from '../../../api/commerce/common/product.js';\nimport {CommerceSuccessResponse} from '../../../api/commerce/common/response.js';\nimport {QueryCommerceAPIThunkReturn} from '../common/actions.js';\nimport {setContext, setView} from '../context/context-actions.js';\nimport {\n  fetchMoreProducts,\n  fetchProductListing,\n  promoteChildToParent,\n} from './product-listing-actions.js';\nimport {\n  ProductListingState,\n  getProductListingInitialState,\n} from './product-listing-state.js';\n\nexport const productListingReducer = createReducer(\n  getProductListingInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(fetchProductListing.rejected, (state, action) => {\n        handleError(state, action.payload);\n      })\n      .addCase(fetchMoreProducts.rejected, (state, action) => {\n        handleError(state, action.payload);\n      })\n      .addCase(fetchProductListing.fulfilled, (state, action) => {\n        const paginationOffset = getPaginationOffset(action.payload);\n        handleFullfilled(state, action.payload.response);\n        state.products = action.payload.response.products.map(\n          (product, index) =>\n            preprocessProduct(product, paginationOffset + index + 1)\n        );\n      })\n      .addCase(fetchMoreProducts.fulfilled, (state, action) => {\n        if (!action.payload) {\n          return;\n        }\n        const paginationOffset = getPaginationOffset(action.payload);\n        handleFullfilled(state, action.payload.response);\n        state.products = state.products.concat(\n          action.payload.response.products.map((product, index) =>\n            preprocessProduct(product, paginationOffset + index + 1)\n          )\n        );\n      })\n      .addCase(fetchProductListing.pending, (state, action) => {\n        handlePending(state, action.meta.requestId);\n      })\n      .addCase(fetchMoreProducts.pending, (state, action) => {\n        handlePending(state, action.meta.requestId);\n      })\n      .addCase(promoteChildToParent, (state, action) => {\n        const {products} = state;\n        let childToPromote;\n        const currentParentIndex = products.findIndex((product) => {\n          childToPromote = product.children.find(\n            (child) => child.permanentid === action.payload.child.permanentid\n          );\n          return !!childToPromote;\n        });\n\n        if (currentParentIndex === -1 || childToPromote === undefined) {\n          return;\n        }\n\n        const position = products[currentParentIndex].position;\n        const {children, totalNumberOfChildren} = products[currentParentIndex];\n\n        const newParent: Product = {\n          ...(childToPromote as ChildProduct),\n          children,\n          totalNumberOfChildren,\n          position,\n        };\n\n        products.splice(currentParentIndex, 1, newParent);\n      })\n      .addCase(setView, () => getProductListingInitialState())\n      .addCase(setContext, () => getProductListingInitialState());\n  }\n);\n\nfunction handleError(\n  state: ProductListingState,\n  error?: CommerceAPIErrorStatusResponse\n) {\n  state.error = error || null;\n  state.isLoading = false;\n}\n\nfunction handleFullfilled(\n  state: ProductListingState,\n  response: CommerceSuccessResponse\n) {\n  state.error = null;\n  state.facets = response.facets;\n  state.responseId = response.responseId;\n  state.isLoading = false;\n}\n\nfunction handlePending(state: ProductListingState, requestId: string) {\n  state.isLoading = true;\n  state.requestId = requestId;\n}\n\nfunction getPaginationOffset(payload: QueryCommerceAPIThunkReturn): number {\n  const pagination = payload.response.pagination;\n  return pagination.page * pagination.perPage;\n}\n\nfunction preprocessProduct(product: BaseProduct, position: number): Product {\n  const isParentAlreadyInChildren = product.children.some(\n    (child) => child.permanentid === product.permanentid\n  );\n  if (product.children.length === 0 || isParentAlreadyInChildren) {\n    return {...product, position};\n  }\n\n  const {children, totalNumberOfChildren, ...restOfProduct} = product;\n\n  return {\n    ...product,\n    children: [restOfProduct, ...children],\n    position,\n  };\n}\n", "import {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {Product} from '../../../api/commerce/common/product.js';\nimport {AnyFacetResponse} from '../facets/facet-set/interfaces/response.js';\n\nexport interface ProductListingState {\n  error: CommerceAPIErrorStatusResponse | null;\n  isLoading: boolean;\n  requestId: string;\n  responseId: string;\n  facets: AnyFacetResponse[];\n  products: Product[];\n}\n\nexport const getProductListingInitialState = (): ProductListingState => ({\n  error: null,\n  isLoading: false,\n  requestId: '',\n  responseId: '',\n  facets: [],\n  products: [],\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {selectQuerySuggestion} from '../query-suggest/query-suggest-actions.js';\nimport {restoreSearchParameters} from '../search-parameters/search-parameters-actions.js';\nimport {updateQuery} from './query-actions.js';\nimport {getCommerceQueryInitialState} from './query-state.js';\n\nexport const queryReducer = createReducer(\n  getCommerceQueryInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(updateQuery, (state, action) => ({\n        ...state,\n        ...action.payload,\n      }))\n      .addCase(restoreSearchParameters, (state, action) => {\n        state.query = action.payload.q ?? '';\n      })\n      .addCase(selectQuerySuggestion, (state, action) => {\n        state.query = action.payload.expression;\n      });\n  }\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {\n  BaseProduct,\n  ChildProduct,\n  Product,\n} from '../../../api/commerce/common/product.js';\nimport {RecommendationsCommerceSuccessResponse} from '../../../api/commerce/recommendations/recommendations-response.js';\nimport {\n  fetchRecommendations,\n  registerRecommendationsSlot,\n  fetchMoreRecommendations,\n  promoteChildToParent,\n  QueryRecommendationsCommerceAPIThunkReturn,\n} from './recommendations-actions.js';\nimport {\n  getRecommendationsInitialState,\n  getRecommendationsSliceInitialState,\n  RecommendationsSlice,\n  RecommendationsState,\n} from './recommendations-state.js';\n\nexport const recommendationsReducer = createReducer(\n  getRecommendationsInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(registerRecommendationsSlot, (state, action) => {\n        const slotId = action.payload.slotId;\n\n        if (slotId in state) {\n          return;\n        }\n\n        state[slotId] = buildRecommendationsSlice();\n      })\n      .addCase(fetchRecommendations.rejected, (state, action) => {\n        handleError(state, action.meta.arg.slotId, action.payload);\n      })\n      .addCase(fetchMoreRecommendations.rejected, (state, action) => {\n        handleError(state, action.meta.arg.slotId, action.payload);\n      })\n      .addCase(fetchRecommendations.fulfilled, (state, action) => {\n        const slotId = action.meta.arg.slotId;\n        const response = action.payload.response;\n\n        handleFulfilled(state, slotId, response);\n        const recommendations = state[slotId];\n\n        if (!recommendations) {\n          return;\n        }\n        const paginationOffset = getPaginationOffset(action.payload);\n\n        recommendations.products = response.products.map((product, index) =>\n          preprocessProduct(product, paginationOffset + index + 1)\n        );\n      })\n      .addCase(fetchMoreRecommendations.fulfilled, (state, action) => {\n        if (!action.payload) {\n          return;\n        }\n        const slotId = action.meta.arg.slotId;\n        const response = action.payload.response;\n\n        handleFulfilled(state, slotId, response);\n        const recommendations = state[slotId];\n\n        if (!recommendations) {\n          return;\n        }\n\n        const paginationOffset = getPaginationOffset(action.payload);\n\n        recommendations.products = recommendations.products.concat(\n          response.products.map((product, index) =>\n            preprocessProduct(product, paginationOffset + index + 1)\n          )\n        );\n      })\n      .addCase(fetchRecommendations.pending, (state, action) => {\n        handlePending(state, action.meta.arg.slotId);\n      })\n      .addCase(fetchMoreRecommendations.pending, (state, action) => {\n        handlePending(state, action.meta.arg.slotId);\n      })\n      .addCase(promoteChildToParent, (state, action) => {\n        const recommendations = state[action.payload.slotId];\n\n        if (!recommendations) {\n          return;\n        }\n\n        const {products} = recommendations;\n        let childToPromote;\n        const currentParentIndex = products.findIndex((product) => {\n          childToPromote = product.children.find(\n            (child) => child.permanentid === action.payload.child.permanentid\n          );\n          return !!childToPromote;\n        });\n\n        if (currentParentIndex === -1 || childToPromote === undefined) {\n          return;\n        }\n\n        const position = products[currentParentIndex].position;\n        const {children, totalNumberOfChildren} = products[currentParentIndex];\n\n        const newParent: Product = {\n          ...(childToPromote as ChildProduct),\n          children,\n          totalNumberOfChildren,\n          position,\n        };\n\n        products.splice(currentParentIndex, 1, newParent);\n      });\n  }\n);\n\nfunction buildRecommendationsSlice(\n  config?: Partial<RecommendationsSlice>\n): RecommendationsSlice {\n  return {\n    ...getRecommendationsSliceInitialState(),\n    ...config,\n  };\n}\n\nfunction handleError(\n  state: RecommendationsState,\n  slotId: string,\n  error?: CommerceAPIErrorStatusResponse\n) {\n  const recommendations = state[slotId];\n\n  if (!recommendations) {\n    return;\n  }\n\n  recommendations.error = error ?? null;\n  recommendations.isLoading = false;\n}\n\nfunction handleFulfilled(\n  state: RecommendationsState,\n  slotId: string,\n  response: RecommendationsCommerceSuccessResponse\n) {\n  const recommendations = state[slotId];\n\n  if (!recommendations) {\n    return;\n  }\n\n  recommendations.error = null;\n  recommendations.headline = response.headline;\n  recommendations.responseId = response.responseId;\n  recommendations.isLoading = false;\n}\n\nfunction handlePending(state: RecommendationsState, slotId: string) {\n  const recommendations = state[slotId];\n\n  if (!recommendations) {\n    return;\n  }\n  recommendations.isLoading = true;\n}\n\nfunction getPaginationOffset(\n  actionPayload: QueryRecommendationsCommerceAPIThunkReturn\n): number {\n  const pagination = actionPayload.response.pagination;\n  return pagination.page * pagination.perPage;\n}\n\nfunction preprocessProduct(product: BaseProduct, position: number): Product {\n  const isParentAlreadyInChildren = product.children.some(\n    (child) => child.permanentid === product.permanentid\n  );\n  if (product.children.length === 0 || isParentAlreadyInChildren) {\n    return {...product, position};\n  }\n\n  const {children, totalNumberOfChildren, ...restOfProduct} = product;\n\n  return {\n    ...product,\n    children: [restOfProduct, ...children],\n    position,\n  };\n}\n", "import {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {Product} from '../../../api/commerce/common/product.js';\n\nexport interface RecommendationsSlice {\n  headline: string;\n  error: CommerceAPIErrorStatusResponse | null;\n  isLoading: boolean;\n  responseId: string;\n  products: Product[];\n}\n\n/**\n * An object in which each key is a slot identifier, and each value is the corresponding recommendations slice.\n */\nexport type RecommendationsState = Record<\n  string,\n  RecommendationsSlice | undefined\n>;\n\nexport const getRecommendationsInitialState = (): RecommendationsState => ({});\nexport const getRecommendationsSliceInitialState =\n  (): RecommendationsSlice => ({\n    headline: '',\n    error: null,\n    isLoading: false,\n    responseId: '',\n    products: [],\n  });\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {\n  Product,\n  BaseProduct,\n  ChildProduct,\n} from '../../../api/commerce/common/product.js';\nimport {CommerceSuccessResponse} from '../../../api/commerce/common/response.js';\nimport {setContext, setView} from '../context/context-actions.js';\nimport {\n  QuerySearchCommerceAPIThunkReturn,\n  executeSearch,\n  fetchMoreProducts,\n  promoteChildToParent,\n} from './search-actions.js';\nimport {\n  CommerceSearchState,\n  getCommerceSearchInitialState,\n} from './search-state.js';\n\nexport const commerceSearchReducer = createReducer(\n  getCommerceSearchInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(executeSearch.rejected, (state, action) => {\n        handleError(state, action.payload);\n      })\n      .addCase(fetchMoreProducts.rejected, (state, action) => {\n        handleError(state, action.payload);\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const paginationOffset = getPaginationOffset(action.payload);\n        handleFulfilled(\n          state,\n          action.payload.response,\n          action.payload.queryExecuted\n        );\n        state.products = action.payload.response.products.map(\n          (product, index) =>\n            preprocessProduct(product, paginationOffset + index + 1)\n        );\n      })\n      .addCase(fetchMoreProducts.fulfilled, (state, action) => {\n        if (!action.payload) {\n          return;\n        }\n        const paginationOffset = getPaginationOffset(action.payload);\n        handleFulfilled(\n          state,\n          action.payload.response,\n          action.payload.queryExecuted\n        );\n        state.products = state.products.concat(\n          action.payload.response.products.map((product, index) =>\n            preprocessProduct(product, paginationOffset + index + 1)\n          )\n        );\n      })\n      .addCase(executeSearch.pending, (state, action) => {\n        handlePending(state, action.meta.requestId);\n      })\n      .addCase(fetchMoreProducts.pending, (state, action) => {\n        handlePending(state, action.meta.requestId);\n      })\n      .addCase(promoteChildToParent, (state, action) => {\n        const {products} = state;\n        let childToPromote;\n        const currentParentIndex = products.findIndex((product) => {\n          childToPromote = product.children.find(\n            (child) => child.permanentid === action.payload.child.permanentid\n          );\n          return !!childToPromote;\n        });\n\n        if (currentParentIndex === -1 || childToPromote === undefined) {\n          return;\n        }\n\n        const position = products[currentParentIndex].position;\n        const {children, totalNumberOfChildren} = products[currentParentIndex];\n\n        const newParent: Product = {\n          ...(childToPromote as ChildProduct),\n          children,\n          totalNumberOfChildren,\n          position,\n        };\n\n        products.splice(currentParentIndex, 1, newParent);\n      })\n      .addCase(setView, () => getCommerceSearchInitialState())\n      .addCase(setContext, () => getCommerceSearchInitialState());\n  }\n);\n\nfunction handleError(\n  state: CommerceSearchState,\n  error?: CommerceAPIErrorStatusResponse\n) {\n  state.error = error || null;\n  state.isLoading = false;\n}\n\nfunction handlePending(state: CommerceSearchState, requestId: string) {\n  state.isLoading = true;\n  state.requestId = requestId;\n}\n\nfunction handleFulfilled(\n  state: CommerceSearchState,\n  response: CommerceSuccessResponse,\n  query?: string\n) {\n  state.error = null;\n  state.facets = response.facets;\n  state.responseId = response.responseId;\n  state.isLoading = false;\n  state.queryExecuted = query ?? '';\n}\n\nfunction getPaginationOffset(\n  payload: QuerySearchCommerceAPIThunkReturn\n): number {\n  const pagination = payload.response.pagination;\n  return pagination.page * pagination.perPage;\n}\n\nfunction preprocessProduct(product: BaseProduct, position: number): Product {\n  const isParentAlreadyInChildren = product.children.some(\n    (child) => child.permanentid === product.permanentid\n  );\n  if (product.children.length === 0 || isParentAlreadyInChildren) {\n    return {...product, position};\n  }\n\n  const {children, totalNumberOfChildren, ...restOfProduct} = product;\n\n  return {\n    ...product,\n    children: [restOfProduct, ...children],\n    position,\n  };\n}\n", "import {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {Product} from '../../../api/commerce/common/product.js';\nimport {AnyFacetResponse} from '../facets/facet-set/interfaces/response.js';\n\nexport interface CommerceSearchState {\n  error: CommerceAPIErrorStatusResponse | null;\n  isLoading: boolean;\n  requestId: string;\n  responseId: string;\n  products: Product[];\n  facets: AnyFacetResponse[];\n  queryExecuted: string;\n}\n\nexport const getCommerceSearchInitialState = (): CommerceSearchState => ({\n  error: null,\n  isLoading: false,\n  requestId: '',\n  responseId: '',\n  products: [],\n  facets: [],\n  queryExecuted: '',\n});\n", "import {type Draft as WritableDraft} from '@reduxjs/toolkit';\nimport {AnyAction, createReducer} from '@reduxjs/toolkit';\nimport {SortOption} from '../../../api/commerce/common/sort.js';\nimport {\n  buildRelevanceSortCriterion,\n  SortBy,\n  SortCriterion,\n} from '../../sort/sort.js';\nimport {setContext, setView} from '../context/context-actions.js';\nimport {Parameters} from '../parameters/parameters-actions.js';\nimport {restoreProductListingParameters} from '../product-listing-parameters/product-listing-parameters-actions.js';\nimport {fetchProductListing} from '../product-listing/product-listing-actions.js';\nimport {restoreSearchParameters} from '../search-parameters/search-parameters-actions.js';\nimport {executeSearch} from '../search/search-actions.js';\nimport {applySort} from './sort-actions.js';\nimport {CommerceSortState, getCommerceSortInitialState} from './sort-state.js';\n\nexport const sortReducer = createReducer(\n  getCommerceSortInitialState(),\n\n  (builder) => {\n    builder\n      .addCase(applySort, (state, action) => {\n        state.appliedSort = action.payload;\n      })\n      .addCase(fetchProductListing.fulfilled, handleFetchFulfilled)\n      .addCase(executeSearch.fulfilled, handleFetchFulfilled)\n      .addCase(setContext, getCommerceSortInitialState)\n      .addCase(setView, getCommerceSortInitialState)\n      .addCase(restoreSearchParameters, handleRestoreParameters)\n      .addCase(restoreProductListingParameters, handleRestoreParameters);\n  }\n);\n\nfunction handleFetchFulfilled(\n  state: WritableDraft<CommerceSortState>,\n  action: AnyAction\n) {\n  const response = action.payload.response;\n  state.appliedSort = mapResponseSortToStateSort(response.sort.appliedSort);\n  state.availableSorts = response.sort.availableSorts.map(\n    mapResponseSortToStateSort\n  );\n}\n\nconst mapResponseSortToStateSort = (sort: SortOption): SortCriterion => {\n  if (sort.sortCriteria === SortBy.Relevance) {\n    return buildRelevanceSortCriterion();\n  }\n\n  return {\n    by: SortBy.Fields,\n    fields: (sort.fields || []).map(({field, direction, displayName}) => ({\n      name: field,\n      direction,\n      displayName,\n    })),\n  };\n};\n\nfunction handleRestoreParameters(\n  state: WritableDraft<CommerceSortState>,\n  action: {payload: Parameters}\n) {\n  if (action.payload.sortCriteria) {\n    state.appliedSort = action.payload.sortCriteria;\n  }\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  handleApplyQueryTriggerModification,\n  handleFetchItemsFulfilled,\n  handleFetchItemsPending,\n  handleUpdateIgnoreQueryTrigger,\n} from '../../triggers/triggers-slice-functions.js';\nimport {getTriggerInitialState} from '../../triggers/triggers-state.js';\nimport {executeSearch} from '../search/search-actions.js';\nimport {\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from './triggers-actions.js';\n\nexport const commerceTriggersReducer = createReducer(\n  getTriggerInitialState(),\n  (builder) =>\n    builder\n      .addCase(executeSearch.pending, handleFetchItemsPending)\n      .addCase(executeSearch.fulfilled, (state, action) =>\n        handleFetchItemsFulfilled(state, action.payload.response.triggers)\n      )\n      .addCase(applyQueryTriggerModification, (state, action) =>\n        handleApplyQueryTriggerModification(state, action.payload)\n      )\n      .addCase(updateIgnoreQueryTrigger, (state, action) =>\n        handleUpdateIgnoreQueryTrigger(state, action.payload.q)\n      )\n);\n", "import {Trigger} from '../../api/common/trigger.js';\nimport {ApplyQueryTriggerModificationPayload} from './triggers-actions.js';\nimport {FunctionExecutionTrigger, TriggerState} from './triggers-state.js';\n\nexport function handleFetchItemsPending(state: TriggerState) {\n  state.query = '';\n  state.queryModification = {\n    originalQuery: '',\n    newQuery: '',\n    queryToIgnore: state.queryModification.queryToIgnore,\n  };\n\n  return state;\n}\n\nexport function handleFetchItemsFulfilled(\n  state: TriggerState,\n  triggers: Trigger[]\n) {\n  const redirectTriggers: string[] = [];\n  const queryTriggers: string[] = [];\n  const executeTriggers: FunctionExecutionTrigger[] = [];\n  const notifyTriggers: string[] = [];\n\n  triggers.forEach((trigger) => {\n    switch (trigger.type) {\n      case 'redirect':\n        redirectTriggers.push(trigger.content);\n        break;\n      case 'query':\n        queryTriggers.push(trigger.content);\n        break;\n      case 'execute':\n        executeTriggers.push({\n          functionName: trigger.content.name,\n          params: trigger.content.params,\n        });\n        break;\n      case 'notify':\n        notifyTriggers.push(trigger.content);\n        break;\n    }\n  });\n\n  state.redirectTo = redirectTriggers[0] ?? '';\n  state.query = state.queryModification.newQuery;\n  state.executions = executeTriggers;\n  state.notifications = notifyTriggers;\n\n  return state;\n}\n\nexport function handleApplyQueryTriggerModification(\n  state: TriggerState,\n  payload: ApplyQueryTriggerModificationPayload\n) {\n  state.queryModification = {...payload, queryToIgnore: ''};\n\n  return state;\n}\n\nexport function handleUpdateIgnoreQueryTrigger(\n  state: TriggerState,\n  payload: string\n) {\n  state.queryModification.queryToIgnore = payload;\n\n  return state;\n}\n", "import {ExecuteTriggerParams} from '../../api/common/trigger.js';\n\n/**\n * The name of a function to execute and its parameters.\n */\nexport interface FunctionExecutionTrigger {\n  /**\n   * The name of the function to execute.\n   */\n  functionName: string;\n  /**\n   * The parameters of the function to execute.\n   */\n  params: ExecuteTriggerParams;\n}\n\nexport interface TriggerState {\n  /**\n   * The URL to redirect the user to after receiving a redirection trigger.\n   */\n  redirectTo: string;\n\n  /**\n   * The new query to perform a search with after receiving a query trigger.\n   */\n  query: string;\n\n  /**\n   * The JavaScript functions to execute after receiving execution triggers.\n   */\n  executions: FunctionExecutionTrigger[];\n\n  /**\n   * The notifications to display to the user after receiving notification triggers.\n   */\n  notifications: string[];\n\n  /**\n   * The modification that should be applied as a result of a query trigger.\n   */\n  queryModification: {\n    /**\n     * The original query performed by the end user.\n     */\n    originalQuery: string;\n    /**\n     * The new query that should be executed.\n     */\n    newQuery: string;\n    /**\n     * The query modification that should be ignored when explicitly requested by the end user.\n     */\n    queryToIgnore: string;\n  };\n}\n\nexport const getTriggerInitialState: () => TriggerState = () => ({\n  redirectTo: '',\n  query: '',\n  executions: [],\n  notifications: [],\n  queryModification: {originalQuery: '', newQuery: '', queryToIgnore: ''},\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {VERSION} from '../../utils/version.js';\n\nexport const versionReducer = createReducer(VERSION, (builder) => builder);\n", "import {AnyAction, createReducer} from '@reduxjs/toolkit';\nimport {setContext, setView} from '../../commerce/context/context-actions.js';\nimport {Parameters} from '../../commerce/parameters/parameters-actions.js';\nimport {restoreProductListingParameters} from '../../commerce/product-listing-parameters/product-listing-parameters-actions.js';\nimport {fetchProductListing} from '../../commerce/product-listing/product-listing-actions.js';\nimport {restoreSearchParameters} from '../../commerce/search-parameters/search-parameters-actions.js';\nimport {executeSearch as executeCommerceSearch} from '../../commerce/search/search-actions.js';\nimport {change} from '../../history/history-actions.js';\nimport {executeSearch} from '../../search/search-actions.js';\nimport {\n  FacetOrderState,\n  getFacetOrderInitialState,\n} from './facet-order-state.js';\n\nexport const facetOrderReducer = createReducer(\n  getFacetOrderInitialState(),\n  (builder) => {\n    builder\n      .addCase(executeSearch.fulfilled, handleQueryFulfilled)\n      .addCase(fetchProductListing.fulfilled, handleQueryFulfilled)\n      .addCase(executeCommerceSearch.fulfilled, handleQueryFulfilled)\n      .addCase(restoreSearchParameters, handleRestoreParameters)\n      .addCase(restoreProductListingParameters, handleRestoreParameters)\n      .addCase(change.fulfilled, (state, action) => {\n        return action.payload?.facetOrder ?? state;\n      })\n      .addCase(setView, () => getFacetOrderInitialState())\n      .addCase(setContext, () => getFacetOrderInitialState());\n  }\n);\n\nfunction handleQueryFulfilled(_: FacetOrderState, action: AnyAction) {\n  return action.payload.response.facets.map(\n    (facet: {facetId: string}) => facet.facetId\n  );\n}\n\nfunction handleRestoreParameters(\n  _: FacetOrderState,\n  action: {payload: Parameters}\n) {\n  return [\n    ...Object.keys(action.payload.f ?? {}),\n    ...Object.keys(action.payload.lf ?? {}),\n    ...Object.keys(action.payload.nf ?? {}),\n    ...Object.keys(action.payload.df ?? {}),\n    ...Object.keys(action.payload.cf ?? {}),\n    ...Object.keys(action.payload.mnf ?? {}),\n  ];\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchResponse} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-response.js';\nimport {\n  executeCommerceFacetSearch,\n  executeCommerceFieldSuggest,\n  getFacetIdWithCommerceFieldSuggestionNamespace,\n} from '../../../commerce/facets/facet-search-set/commerce-facet-search-actions.js';\nimport {fetchProductListing} from '../../../commerce/product-listing/product-listing-actions.js';\nimport {fetchQuerySuggestions} from '../../../commerce/query-suggest/query-suggest-actions.js';\nimport {executeSearch as executeCommerceSearch} from '../../../commerce/search/search-actions.js';\nimport {executeSearch} from '../../../search/search-actions.js';\nimport {\n  handleFacetSearchRegistration,\n  handleFacetSearchUpdate,\n  handleFacetSearchPending,\n  handleFacetSearchRejected,\n  handleFacetSearchFulfilled,\n  handleFacetSearchClear,\n  handleFacetSearchSetClear,\n  handleCommerceFacetSearchFulfilled,\n  handleCommerceFacetFieldSuggestionsFulfilled,\n  handleCommerceFetchQuerySuggestionsFulfilledForCategoryFacet,\n} from '../facet-search-reducer-helpers.js';\nimport {\n  clearFacetSearch,\n  executeFacetSearch,\n} from '../generic/generic-facet-search-actions.js';\nimport {updateFacetSearch} from '../specific/specific-facet-search-actions.js';\nimport {registerCategoryFacetSearch} from './category-facet-search-actions.js';\nimport {getCategoryFacetSearchSetInitialState} from './category-facet-search-set-state.js';\n\nexport const categoryFacetSearchSetReducer = createReducer(\n  getCategoryFacetSearchSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerCategoryFacetSearch, (state, action) => {\n        const payload = action.payload;\n        handleFacetSearchRegistration(state, payload, buildEmptyResponse);\n      })\n      .addCase(updateFacetSearch, (state, action) => {\n        handleFacetSearchUpdate(state, action.payload);\n      })\n      .addCase(executeCommerceFacetSearch.pending, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchPending(state, facetId, action.meta.requestId);\n      })\n      .addCase(executeCommerceFieldSuggest.pending, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchPending(state, facetId, action.meta.requestId);\n      })\n      .addCase(executeFacetSearch.pending, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchPending(state, facetId, action.meta.requestId);\n      })\n      .addCase(executeCommerceFacetSearch.rejected, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchRejected(state, facetId);\n      })\n      .addCase(executeCommerceFieldSuggest.rejected, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchRejected(\n          state,\n          getFacetIdWithCommerceFieldSuggestionNamespace(facetId)\n        );\n      })\n      .addCase(executeFacetSearch.rejected, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchRejected(state, facetId);\n      })\n      .addCase(executeCommerceFacetSearch.fulfilled, (state, action) => {\n        handleCommerceFacetSearchFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId\n        );\n      })\n      .addCase(executeCommerceFieldSuggest.fulfilled, (state, action) => {\n        handleCommerceFacetFieldSuggestionsFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId,\n          buildEmptyResponse\n        );\n      })\n      .addCase(fetchQuerySuggestions.fulfilled, (state, action) => {\n        handleCommerceFetchQuerySuggestionsFulfilledForCategoryFacet(\n          state,\n          action.payload,\n          action.meta.requestId,\n          buildEmptyResponse\n        );\n      })\n      .addCase(executeFacetSearch.fulfilled, (state, action) => {\n        handleFacetSearchFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId\n        );\n      })\n      .addCase(clearFacetSearch, (state, {payload: {facetId}}) => {\n        handleFacetSearchClear(state, {facetId}, buildEmptyResponse);\n      })\n      .addCase(fetchProductListing.fulfilled, (state) =>\n        handleFacetSearchSetClear(state, buildEmptyResponse)\n      )\n      .addCase(executeCommerceSearch.fulfilled, (state) =>\n        handleFacetSearchSetClear(state, buildEmptyResponse)\n      )\n      .addCase(executeSearch.fulfilled, (state) => {\n        handleFacetSearchSetClear(state, buildEmptyResponse);\n      });\n  }\n);\n\nfunction buildEmptyResponse(): CategoryFacetSearchResponse {\n  return {\n    moreValuesAvailable: false,\n    values: [],\n  };\n}\n", "import {CommerceAPIResponse} from '../../../api/commerce/commerce-api-client.js';\nimport {FacetSearchRequestOptions} from '../../../api/search/facet-search/base/base-facet-search-request.js';\nimport {FacetSearchResponse} from '../../../api/search/facet-search/facet-search-response.js';\nimport {getFacetIdWithCommerceFieldSuggestionNamespace} from '../../commerce/facets/facet-search-set/commerce-facet-search-actions.js';\nimport {FieldSuggestionsFacet} from '../../commerce/facets/field-suggestions-order/field-suggestions-order-state.js';\nimport {FacetSearchOptions} from './facet-search-request-options.js';\n\nexport type FacetSearchState<T extends FacetSearchResponse> = {\n  /**\n   * The options used to perform a facet search request.\n   */\n  options: FacetSearchRequestOptions;\n  /**\n   * `true` if the facet search request is currently being executed against the Coveo platform, `false` otherwise.\n   */\n  isLoading: boolean;\n  /**\n   * The facet search response.\n   */\n  response: T;\n  /** The initial maximum number of values to fetch.\n   */\n  initialNumberOfValues: number;\n  /**\n   * The unique identifier of the current request.\n   */\n  requestId: string;\n};\n\nexport type FacetSearchSetState<T extends FacetSearchResponse> = Record<\n  string,\n  FacetSearchState<T>\n>;\n\nexport function handleFacetSearchRegistration<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: FacetSearchOptions,\n  buildEmptyResponse: () => T\n) {\n  const {facetId} = payload;\n\n  if (state[facetId]) {\n    return;\n  }\n\n  const isLoading = false;\n  const options = {...defaultFacetSearchOptions, ...payload};\n  const response = buildEmptyResponse();\n\n  state[facetId] = {\n    options,\n    isLoading,\n    response,\n    initialNumberOfValues: options.numberOfValues,\n    requestId: '',\n  };\n}\n\nexport function handleFacetSearchUpdate<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: FacetSearchOptions\n) {\n  const {facetId, ...rest} = payload;\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.options = {...search.options, ...rest};\n}\n\nexport function handleFacetSearchPending<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  facetId: string,\n  requestId: string\n) {\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.requestId = requestId;\n  search.isLoading = true;\n}\n\nexport function handleFacetSearchRejected<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  facetId: string\n) {\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.isLoading = false;\n}\n\nexport function handleFacetSearchFulfilled<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: {facetId: string; response: T},\n  requestId: string\n) {\n  const {facetId, response} = payload;\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  if (search.requestId !== requestId) {\n    return;\n  }\n\n  search.isLoading = false;\n  search.response = response;\n}\n\nexport function handleCommerceFacetSearchFulfilled<\n  T extends FacetSearchResponse,\n>(\n  state: FacetSearchSetState<T>,\n  payload: {\n    facetId: string;\n    response: CommerceAPIResponse<T>;\n  },\n  requestId: string\n) {\n  const {facetId, response} = payload;\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  if (search.requestId !== requestId) {\n    return;\n  }\n\n  search.isLoading = false;\n  if ('success' in response) {\n    search.response = response.success;\n  }\n}\n\nexport function handleCommerceFacetFieldSuggestionsFulfilled<\n  T extends FacetSearchResponse,\n>(\n  state: FacetSearchSetState<T>,\n  payload: {\n    facetId: string;\n    response: CommerceAPIResponse<T>;\n  },\n  requestId: string,\n  buildEmptyResponse: () => T\n) {\n  const {facetId, response} = payload;\n  const namespacedFacetId =\n    getFacetIdWithCommerceFieldSuggestionNamespace(facetId);\n  let search = state[namespacedFacetId];\n\n  if (!search) {\n    handleFacetSearchRegistration(\n      state,\n      {facetId: namespacedFacetId},\n      buildEmptyResponse\n    );\n    search = state[namespacedFacetId];\n  } else if (search.requestId !== requestId) {\n    return;\n  }\n\n  search.isLoading = false;\n  if ('success' in response) {\n    search.response = response.success;\n  }\n}\n\nexport function handleCommerceFetchQuerySuggestionsFulfilledForRegularFacet<\n  T extends FacetSearchResponse,\n>(\n  state: FacetSearchSetState<T>,\n  payload: {\n    fieldSuggestionsFacets: {facetId: string; type: string}[];\n    query: string | undefined;\n  },\n  requestId: string,\n  buildEmptyResponse: () => T\n) {\n  if (!payload.fieldSuggestionsFacets) {\n    return;\n  }\n\n  for (const fieldSuggestionFacet of payload.fieldSuggestionsFacets) {\n    if (\n      fieldSuggestionFacet.facetId in state ||\n      fieldSuggestionFacet.type !== 'regular'\n    ) {\n      continue;\n    }\n\n    state[fieldSuggestionFacet.facetId] = {\n      options: {\n        ...defaultFacetSearchOptions,\n        query: payload.query ?? '',\n      },\n      isLoading: false,\n      response: buildEmptyResponse(),\n      initialNumberOfValues: defaultFacetSearchOptions.numberOfValues,\n      requestId,\n    };\n  }\n}\n\nexport function handleCommerceFetchQuerySuggestionsFulfilledForCategoryFacet<\n  T extends FacetSearchResponse,\n>(\n  state: FacetSearchSetState<T>,\n  payload: {\n    fieldSuggestionsFacets: FieldSuggestionsFacet[];\n    query: string | undefined;\n  },\n  requestId: string,\n  buildEmptyResponse: () => T\n) {\n  if (!payload.fieldSuggestionsFacets) {\n    return;\n  }\n\n  for (const fieldSuggestionFacet of payload.fieldSuggestionsFacets) {\n    const namespacedFacetId = getFacetIdWithCommerceFieldSuggestionNamespace(\n      fieldSuggestionFacet.facetId\n    );\n    if (\n      namespacedFacetId in state ||\n      fieldSuggestionFacet.type !== 'hierarchical'\n    ) {\n      continue;\n    }\n\n    state[namespacedFacetId] = {\n      options: {\n        ...defaultFacetSearchOptions,\n        query: payload.query ?? '',\n      },\n      isLoading: false,\n      response: buildEmptyResponse(),\n      initialNumberOfValues: defaultFacetSearchOptions.numberOfValues,\n      requestId,\n    };\n  }\n}\n\nexport function handleFacetSearchClear<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: FacetSearchOptions,\n  buildEmptyResponse: () => T\n) {\n  const {facetId} = payload;\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.requestId = '';\n  search.isLoading = false;\n  search.response = buildEmptyResponse();\n  search.options.numberOfValues = search.initialNumberOfValues;\n  search.options.query = defaultFacetSearchOptions.query;\n}\n\nexport function handleFacetSearchSetClear<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  buildEmptyResponse: () => T\n) {\n  Object.keys(state).forEach((facetId) =>\n    handleFacetSearchClear(state, {facetId}, buildEmptyResponse)\n  );\n}\n\nexport const defaultFacetSearchOptions: FacetSearchRequestOptions = {\n  captions: {},\n  numberOfValues: 10,\n  query: '',\n};\n", "import {\n  AsyncThunkPayloadCreator,\n  createAction,\n  createAsyncThunk,\n} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchRequest} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-request.js';\nimport {FacetSearchResponse} from '../../../../api/search/facet-search/facet-search-response.js';\nimport {SpecificFacetSearchRequest} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-request.js';\nimport {FacetSearchAPIClient} from '../../../../api/search/search-api-client.js';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options.js';\nimport {ClientThunkExtraArguments} from '../../../../app/thunk-extra-arguments.js';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../../utils/validate-payload.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {buildCategoryFacetSearchRequest} from '../category/category-facet-search-request-builder.js';\nimport {buildSpecificFacetSearchRequest} from '../specific/specific-facet-search-request-builder.js';\nimport {\n  StateNeededForCategoryFacetSearch,\n  StateNeededForFacetSearch,\n  StateNeededForSpecificFacetSearch,\n} from './generic-facet-search-state.js';\n\ntype ExecuteFacetSearchThunkReturn = {\n  facetId: string;\n  response: FacetSearchResponse;\n};\ntype ExecuteFacetSearchThunkArg = string;\ntype ExecuteFacetSearchThunkApiConfig = AsyncThunkOptions<\n  StateNeededForFacetSearch,\n  ClientThunkExtraArguments<FacetSearchAPIClient>\n>;\n\nconst getExecuteFacetSearchThunkPayloadCreator =\n  (\n    isFieldSuggestionsRequest: boolean\n  ): AsyncThunkPayloadCreator<\n    ExecuteFacetSearchThunkReturn,\n    ExecuteFacetSearchThunkArg,\n    ExecuteFacetSearchThunkApiConfig\n  > =>\n  async (\n    facetId: string,\n    {getState, extra: {apiClient, validatePayload, navigatorContext}}\n  ) => {\n    const state = getState();\n    let req: SpecificFacetSearchRequest | CategoryFacetSearchRequest;\n    validatePayload(facetId, requiredNonEmptyString);\n    if (isSpecificFacetSearchState(state, facetId)) {\n      req = await buildSpecificFacetSearchRequest(\n        facetId,\n        state,\n        navigatorContext,\n        isFieldSuggestionsRequest\n      );\n    } else {\n      req = await buildCategoryFacetSearchRequest(\n        facetId,\n        state as StateNeededForCategoryFacetSearch,\n        navigatorContext,\n        isFieldSuggestionsRequest\n      );\n    }\n\n    const response = await apiClient.facetSearch(req);\n\n    return {facetId, response};\n  };\n\nexport const executeFacetSearch = createAsyncThunk<\n  ExecuteFacetSearchThunkReturn,\n  string,\n  AsyncThunkOptions<\n    StateNeededForFacetSearch,\n    ClientThunkExtraArguments<FacetSearchAPIClient>\n  >\n>('facetSearch/executeSearch', getExecuteFacetSearchThunkPayloadCreator(false));\n\nexport const executeFieldSuggest = createAsyncThunk<\n  {facetId: string; response: FacetSearchResponse},\n  string,\n  AsyncThunkOptions<\n    StateNeededForFacetSearch,\n    ClientThunkExtraArguments<FacetSearchAPIClient>\n  >\n>('facetSearch/executeSearch', getExecuteFacetSearchThunkPayloadCreator(true)); // We use the same action type because this action is meant to be handled by reducers the same way.\n\nexport const clearFacetSearch = createAction(\n  'facetSearch/clearResults',\n  (payload: {facetId: string}) =>\n    validatePayload(payload, {facetId: facetIdDefinition})\n);\n\nconst isSpecificFacetSearchState = (\n  s: StateNeededForFacetSearch,\n  facetId: string\n): s is StateNeededForSpecificFacetSearch => {\n  return (\n    s.facetSearchSet !== undefined &&\n    s.facetSet !== undefined &&\n    s.facetSet[facetId] !== undefined\n  );\n};\n", "import {getSearchApiBaseUrl} from '../../../../api/platform-client.js';\nimport {CategoryFacetSearchRequest} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-request.js';\nimport {NavigatorContext} from '../../../../app/navigatorContextProvider.js';\nimport {buildSearchRequest} from '../../../search/search-request.js';\nimport {CategoryFacetRequest} from '../../category-facet-set/interfaces/request.js';\nimport {StateNeededForCategoryFacetSearch} from '../generic/generic-facet-search-state.js';\n\nexport const buildCategoryFacetSearchRequest = async (\n  id: string,\n  state: StateNeededForCategoryFacetSearch,\n  navigatorContext: NavigatorContext,\n  isFieldSuggestionsRequest: boolean\n): Promise<CategoryFacetSearchRequest> => {\n  const options = state.categoryFacetSearchSet[id].options;\n  const categoryFacet = state.categoryFacetSet[id]!.request;\n\n  const {captions, query, numberOfValues} = options;\n  const {field, delimitingCharacter, basePath, filterFacetCount} =\n    categoryFacet;\n  const path = getPathToSelectedCategoryFacetItem(categoryFacet);\n  const ignorePaths = path.length ? [path] : [];\n  const newQuery = `*${query}*`;\n\n  return {\n    url:\n      state.configuration.search.apiBaseUrl ??\n      getSearchApiBaseUrl(\n        state.configuration.organizationId,\n        state.configuration.environment\n      ),\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    ...(state.configuration.search.authenticationProviders.length && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n    basePath,\n    captions,\n    numberOfValues,\n    query: newQuery,\n    field,\n    delimitingCharacter,\n    ignorePaths,\n    filterFacetCount,\n    type: 'hierarchical',\n    ...(isFieldSuggestionsRequest\n      ? {}\n      : {\n          searchContext: (await buildSearchRequest(state, navigatorContext))\n            .request,\n        }),\n  };\n};\n\nconst getPathToSelectedCategoryFacetItem = (\n  categoryFacet: CategoryFacetRequest\n): string[] => {\n  const path = [];\n  let selectedValue = categoryFacet.currentValues[0];\n  while (selectedValue) {\n    path.push(selectedValue.value);\n    selectedValue = selectedValue.children[0];\n  }\n  return path;\n};\n", "import {getSearchApiBaseUrl} from '../../../../api/platform-client.js';\nimport {SpecificFacetSearchRequest} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-request.js';\nimport {NavigatorContext} from '../../../../app/navigatorContextProvider.js';\nimport {buildSearchRequest} from '../../../search/search-request.js';\nimport {StateNeededForSpecificFacetSearch} from '../generic/generic-facet-search-state.js';\n\nexport const buildSpecificFacetSearchRequest = async (\n  id: string,\n  state: StateNeededForSpecificFacetSearch,\n  navigatorContext: NavigatorContext,\n  isFieldSuggestionsRequest: boolean\n): Promise<SpecificFacetSearchRequest> => {\n  const {captions, query, numberOfValues} = state.facetSearchSet[id].options;\n  const {field, currentValues, filterFacetCount} = state.facetSet[id]!.request;\n  const ignoreValues = currentValues\n    .filter((v) => v.state !== 'idle')\n    .map((facetValue) => facetValue.value);\n  const newQuery = `*${query}*`;\n\n  return {\n    url:\n      state.configuration.search.apiBaseUrl ??\n      getSearchApiBaseUrl(\n        state.configuration.organizationId,\n        state.configuration.environment\n      ),\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    ...(state.configuration.search.authenticationProviders && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n    captions,\n    numberOfValues,\n    query: newQuery,\n    field,\n    ignoreValues,\n    filterFacetCount,\n    type: 'specific',\n    ...(isFieldSuggestionsRequest\n      ? {}\n      : {\n          searchContext: (await buildSearchRequest(state, navigatorContext))\n            .request,\n        }),\n  };\n};\n", "import {CategoryFacetSearchResponse} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-response.js';\nimport {\n  FacetSearchSetState,\n  FacetSearchState,\n} from '../facet-search-reducer-helpers.js';\n\nexport type CategoryFacetSearchState =\n  FacetSearchState<CategoryFacetSearchResponse>;\n\nexport type CategoryFacetSearchSetState =\n  FacetSearchSetState<CategoryFacetSearchResponse>;\n\nexport function getCategoryFacetSearchSetInitialState(): CategoryFacetSearchSetState {\n  return {};\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {SpecificFacetSearchResponse} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {setView} from '../../../commerce/context/context-actions.js';\nimport {\n  executeCommerceFacetSearch,\n  executeCommerceFieldSuggest,\n  getFacetIdWithCommerceFieldSuggestionNamespace,\n} from '../../../commerce/facets/facet-search-set/commerce-facet-search-actions.js';\nimport {fetchProductListing} from '../../../commerce/product-listing/product-listing-actions.js';\nimport {fetchQuerySuggestions} from '../../../commerce/query-suggest/query-suggest-actions.js';\nimport {executeSearch as executeCommerceSearch} from '../../../commerce/search/search-actions.js';\nimport {executeSearch} from '../../../search/search-actions.js';\nimport {\n  handleCommerceFacetFieldSuggestionsFulfilled,\n  handleCommerceFacetSearchFulfilled,\n  handleCommerceFetchQuerySuggestionsFulfilledForRegularFacet,\n  handleFacetSearchClear,\n  handleFacetSearchFulfilled,\n  handleFacetSearchPending,\n  handleFacetSearchRegistration,\n  handleFacetSearchRejected,\n  handleFacetSearchSetClear,\n  handleFacetSearchUpdate,\n} from '../facet-search-reducer-helpers.js';\nimport {\n  clearFacetSearch,\n  executeFacetSearch,\n} from '../generic/generic-facet-search-actions.js';\nimport {\n  registerFacetSearch,\n  updateFacetSearch,\n} from './specific-facet-search-actions.js';\nimport {getFacetSearchSetInitialState} from './specific-facet-search-set-state.js';\n\nexport const specificFacetSearchSetReducer = createReducer(\n  getFacetSearchSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerFacetSearch, (state, action) => {\n        const payload = action.payload;\n        handleFacetSearchRegistration(state, payload, buildEmptyResponse);\n      })\n      .addCase(updateFacetSearch, (state, action) => {\n        handleFacetSearchUpdate(state, action.payload);\n      })\n      .addCase(executeCommerceFacetSearch.pending, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchPending(state, facetId, action.meta.requestId);\n      })\n      .addCase(executeCommerceFieldSuggest.pending, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchPending(\n          state,\n          getFacetIdWithCommerceFieldSuggestionNamespace(facetId),\n          action.meta.requestId\n        );\n      })\n      .addCase(executeFacetSearch.pending, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchPending(state, facetId, action.meta.requestId);\n      })\n      .addCase(executeCommerceFacetSearch.rejected, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchRejected(state, facetId);\n      })\n      .addCase(executeCommerceFieldSuggest.rejected, (state, action) => {\n        const {facetId} = action.meta.arg;\n        handleFacetSearchRejected(\n          state,\n          getFacetIdWithCommerceFieldSuggestionNamespace(facetId)\n        );\n      })\n      .addCase(executeFacetSearch.rejected, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchRejected(state, facetId);\n      })\n      .addCase(executeCommerceFacetSearch.fulfilled, (state, action) => {\n        handleCommerceFacetSearchFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId\n        );\n      })\n      .addCase(executeCommerceFieldSuggest.fulfilled, (state, action) => {\n        handleCommerceFacetFieldSuggestionsFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId,\n          buildEmptyResponse\n        );\n      })\n      .addCase(fetchQuerySuggestions.fulfilled, (state, action) => {\n        handleCommerceFetchQuerySuggestionsFulfilledForRegularFacet(\n          state,\n          action.payload,\n          action.meta.requestId,\n          buildEmptyResponse\n        );\n      })\n      .addCase(executeFacetSearch.fulfilled, (state, action) => {\n        handleFacetSearchFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId\n        );\n      })\n      .addCase(clearFacetSearch, (state, {payload}) => {\n        handleFacetSearchClear(state, payload, buildEmptyResponse);\n      })\n      .addCase(executeSearch.fulfilled, (state) => {\n        handleFacetSearchSetClear(state, buildEmptyResponse);\n      })\n      .addCase(fetchProductListing.fulfilled, (state) =>\n        handleFacetSearchSetClear(state, buildEmptyResponse)\n      )\n      .addCase(executeCommerceSearch.fulfilled, (state) =>\n        handleFacetSearchSetClear(state, buildEmptyResponse)\n      )\n      .addCase(setView, (state) =>\n        handleFacetSearchSetClear(state, buildEmptyResponse)\n      );\n  }\n);\n\nfunction buildEmptyResponse(): SpecificFacetSearchResponse {\n  return {\n    moreValuesAvailable: false,\n    values: [],\n  };\n}\n", "import {SpecificFacetSearchResponse} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {\n  FacetSearchSetState,\n  FacetSearchState,\n} from '../facet-search-reducer-helpers.js';\n\nexport type SpecificFacetSearchState =\n  FacetSearchState<SpecificFacetSearchResponse>;\nexport type SpecificFacetSearchSetState =\n  FacetSearchSetState<SpecificFacetSearchResponse>;\n\nexport function getFacetSearchSetInitialState(): SpecificFacetSearchSetState {\n  return {};\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {type Relay} from '@coveo/relay';\nimport {\n  Dispatch,\n  ThunkDispatch,\n  Unsubscribe,\n  ReducersMapObject,\n  StateFromReducersMapObject,\n  Middleware,\n  Reducer,\n  UnknownAction,\n} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\nimport {getRelayInstanceFromState} from '../api/analytics/analytics-relay-client.js';\nimport {answerApi} from '../api/knowledge/stream-answer-api.js';\nimport {\n  disableAnalytics,\n  enableAnalytics,\n  updateAnalyticsConfiguration,\n  UpdateAnalyticsConfigurationActionCreatorPayload,\n  updateBasicConfiguration,\n} from '../features/configuration/configuration-actions.js';\nimport {\n  ConfigurationState,\n  CoreConfigurationState,\n} from '../features/configuration/configuration-state.js';\nimport {versionReducer as version} from '../features/debug/version-slice.js';\nimport {SearchParametersState} from '../state/search-app-state.js';\nimport {isBrowser} from '../utils/runtime.js';\nimport {doNotTrack} from '../utils/utils.js';\nimport {analyticsMiddleware} from './analytics-middleware.js';\nimport {configuration} from './common-reducers.js';\nimport {EngineConfiguration} from './engine-configuration.js';\nimport {instantlyCallableThunkActionMiddleware} from './instantly-callable-middleware.js';\nimport {logActionErrorMiddleware} from './logger-middlewares.js';\nimport {LoggerOptions} from './logger.js';\nimport {\n  NavigatorContext,\n  NavigatorContextProvider,\n  defaultBrowserNavigatorContextProvider,\n  defaultNodeJSNavigatorContextProvider,\n} from './navigatorContextProvider.js';\nimport {createReducerManager, ReducerManager} from './reducer-manager.js';\nimport {createRenewAccessTokenMiddleware} from './renew-access-token-middleware.js';\nimport {stateKey} from './state-key.js';\nimport {CoreExtraArguments, Store, configureStore} from './store.js';\nimport {ThunkExtraArguments} from './thunk-extra-arguments.js';\n\nexport type CoreState<\n  Configuration extends CoreConfigurationState = CoreConfigurationState,\n> = {\n  configuration: Configuration;\n  version: string;\n} & Partial<SearchParametersState>;\n\ntype EngineDispatch<\n  State,\n  ExtraArguments extends ThunkExtraArguments,\n> = ThunkDispatch<State, ExtraArguments, UnknownAction> &\n  Dispatch<UnknownAction>;\n\nexport interface CoreEngine<\n  State extends object = {},\n  ExtraArguments extends ThunkExtraArguments = ThunkExtraArguments,\n  Configuration extends CoreConfigurationState = CoreConfigurationState,\n> {\n  /**\n   * Dispatches an action directly. This is the only way to trigger a state change.\n   * Each headless controller dispatches its own actions.\n   *\n   * @param action An action supported by the headless engine.\n   *\n   * @returns For convenience, the action object that was just dispatched.\n   */\n  dispatch: EngineDispatch<State & CoreState<Configuration>, ExtraArguments>;\n  /**\n   * Adds a change listener. It will be called any time an action is\n   * dispatched, and some part of the state tree may potentially have changed.\n   * You may then access the new `state`.\n   *\n   * @param listener A callback to be invoked on every dispatch.\n   * @returns A function to remove this change listener.\n   */\n  subscribe(listener: () => void): Unsubscribe;\n  /**\n   * The complete headless state tree.\n   */\n  state: State & CoreState<Configuration>;\n  /**\n   * The Relay instance used by Headless.\n   */\n  relay: Relay;\n  /**\n   * The redux store.\n   */\n  store: Store;\n  /**\n   * The logger instance used by headless.\n   * */\n  logger: Logger;\n  /**\n   * Adds the specified reducers to the store.\n   *\n   * @param reducers - An object containing the reducers to attach to the engine.\n   */\n  addReducers(reducers: ReducersMapObject): void;\n  /**\n   * Enable analytics tracking\n   */\n  enableAnalytics(): void;\n  /**\n   * Disable analytics tracking\n   */\n  disableAnalytics(): void;\n  /**\n   * The navigator context (referer, location, UserAgent)\n   */\n  navigatorContext: NavigatorContext;\n}\n\nexport type CoreEngineNext<\n  State extends object = {},\n  ExtraArguments extends ThunkExtraArguments = ThunkExtraArguments,\n  Configuration extends CoreConfigurationState = CoreConfigurationState,\n> = Omit<CoreEngine<State, ExtraArguments>, 'state' | 'store'> & {\n  /**\n   * The readonly internal state of the headless engine.\n   *\n   * @internal\n   */\n  readonly [stateKey]: State & CoreState<Configuration>;\n\n  /**\n   * The readonly global headless engine configuration\n   */\n  readonly configuration: Configuration;\n};\n\nexport interface EngineOptions<Reducers extends ReducersMapObject>\n  extends ExternalEngineOptions<StateFromReducersMapObject<Reducers>> {\n  /**\n   * Map object of reducers.\n   * A reducer is a pure function that takes the previous state and an action, and returns the next state.\n   * ```\n   * (previousState, action) => nextState\n   * ```\n   * [Redux documentation on reducers.](https://redux.js.org/glossary#reducer)\n   */\n  reducers: Reducers;\n  /**\n   * An optional cross reducer (aka: root reducer) that can be combined with the slice reducers.\n   *\n   * [Redux documentation on root reducers.](https://redux.js.org/usage/structuring-reducers/beyond-combinereducers)\n   */\n  crossReducer?: Reducer;\n}\n\nexport interface ExternalEngineOptions<State extends object> {\n  /**\n   * The global headless engine configuration options.\n   */\n  configuration: EngineConfiguration;\n\n  /**\n   * The initial headless state.\n   * You may optionally specify it to hydrate the state\n   * from the server in universal apps, or to restore a previously serialized\n   * user session.\n   */\n  preloadedState?: State;\n  /**\n   * List of additional middlewares.\n   * A middleware is a higher-order function that composes a dispatch function to return a new dispatch function.\n   * It is useful for logging actions, performing side effects like routing, or turning an asynchronous API call into a series of synchronous actions.\n   *\n   * @example\n   * ```\n   * type MiddlewareAPI = { dispatch: Dispatch, getState: () => State }\n   * type Middleware = (api: MiddlewareAPI) => (next: Dispatch) => Dispatch\n   * ```\n   * [Redux documentation on middlewares.](https://redux.js.org/glossary#middleware)\n   */\n  middlewares?: Middleware<{}, State>[];\n  /**\n   * The logger options.\n   */\n  loggerOptions?: LoggerOptions;\n  /**\n   * An optional function returning navigation context. (referer, location, UserAgent)\n   */\n  navigatorContextProvider?: NavigatorContextProvider;\n}\n\nfunction getUpdateAnalyticsConfigurationPayload(\n  configuration: EngineConfiguration,\n  logger: Logger\n): UpdateAnalyticsConfigurationActionCreatorPayload | null {\n  const {analytics} = configuration;\n  const {analyticsClientMiddleware: _, ...payload} = analytics ?? {};\n\n  const payloadWithURL = {\n    ...payload,\n    ...(analytics?.proxyBaseUrl && {\n      apiBaseUrl: analytics.proxyBaseUrl,\n      nexApiBaseUrl: analytics.proxyBaseUrl,\n    }),\n  };\n\n  // TODO KIT-2844\n  if (payloadWithURL.analyticsMode !== 'next' && doNotTrack()) {\n    logger.info('Analytics disabled since doNotTrack is active.');\n    return {\n      ...payloadWithURL,\n      enabled: false,\n    };\n  }\n\n  if (payloadWithURL.analyticsMode === 'next' && !payload.trackingId) {\n    throw new InvalidEngineConfiguration(\n      'analytics.trackingId is required when analytics.analyticsMode=\"next\"'\n    );\n  }\n\n  return payloadWithURL;\n}\n\nexport function buildEngine<\n  Reducers extends ReducersMapObject,\n  ExtraArguments extends ThunkExtraArguments,\n>(\n  options: EngineOptions<Reducers>,\n  thunkExtraArguments: ExtraArguments\n): CoreEngine<\n  StateFromReducersMapObject<Reducers>,\n  CoreExtraArguments & ExtraArguments,\n  ConfigurationState\n> {\n  const reducers = {\n    ...options.reducers,\n    configuration,\n    version,\n  };\n  const engine = buildCoreEngine(\n    {...options, reducers},\n    thunkExtraArguments,\n    configuration\n  );\n  const {accessToken, environment, organizationId} = options.configuration;\n\n  engine.dispatch(\n    updateBasicConfiguration({\n      accessToken,\n      environment,\n      organizationId,\n    })\n  );\n\n  const analyticsPayload = getUpdateAnalyticsConfigurationPayload(\n    options.configuration,\n    engine.logger\n  );\n  if (analyticsPayload) {\n    engine.dispatch(updateAnalyticsConfiguration(analyticsPayload));\n  }\n\n  return engine;\n}\n\nexport function buildCoreEngine<\n  Reducers extends ReducersMapObject,\n  ExtraArguments extends ThunkExtraArguments,\n  Configuration extends CoreConfigurationState,\n>(\n  options: EngineOptions<Reducers>,\n  thunkExtraArguments: ExtraArguments,\n  configurationReducer: Reducer<Configuration>\n): CoreEngine<\n  StateFromReducersMapObject<Reducers>,\n  ExtraArguments,\n  Configuration\n> {\n  const {reducers} = options;\n  const reducerManager = createReducerManager(\n    {...reducers, configurationReducer},\n    options.preloadedState ?? {}\n  );\n  if (options.crossReducer) {\n    reducerManager.addCrossReducer(options.crossReducer);\n  }\n  const logger = thunkExtraArguments.logger;\n  const getClientId = () => {\n    let clientId = '';\n    try {\n      clientId = getRelayInstanceFromState(engine.state).getMeta('').clientId;\n    } catch (e) {\n      logger.warn('Error while obtaining clientID from relay', e);\n    }\n    return clientId;\n  };\n  const thunkExtraArgumentsWithRelay: CoreExtraArguments & ExtraArguments = {\n    ...thunkExtraArguments,\n    get relay() {\n      return getRelayInstanceFromState(engine.state);\n    },\n    get navigatorContext() {\n      if (options.navigatorContextProvider) {\n        return options.navigatorContextProvider();\n      }\n      if (!isBrowser()) {\n        return defaultNodeJSNavigatorContextProvider();\n      }\n\n      return defaultBrowserNavigatorContextProvider(getClientId());\n    },\n  };\n  const store = createStore(\n    options,\n    thunkExtraArgumentsWithRelay,\n    reducerManager\n  );\n\n  const engine = {\n    addReducers(reducers: ReducersMapObject) {\n      if (reducerManager.containsAll(reducers)) {\n        return;\n      }\n\n      reducerManager.add(reducers);\n      store.replaceReducer(reducerManager.combinedReducer);\n    },\n\n    dispatch: store.dispatch,\n\n    subscribe: store.subscribe,\n\n    enableAnalytics() {\n      store.dispatch(enableAnalytics());\n    },\n\n    disableAnalytics() {\n      store.dispatch(disableAnalytics());\n    },\n\n    get state() {\n      return store.getState();\n    },\n\n    get relay() {\n      return getRelayInstanceFromState(this.state);\n    },\n\n    get navigatorContext() {\n      if (options.navigatorContextProvider) {\n        return options.navigatorContextProvider();\n      }\n      if (!isBrowser()) {\n        return defaultNodeJSNavigatorContextProvider();\n      }\n\n      return defaultBrowserNavigatorContextProvider(getClientId());\n    },\n\n    logger,\n\n    store,\n  };\n  return engine;\n}\n\nfunction createStore<\n  Reducers extends ReducersMapObject,\n  ExtraArguments extends CoreExtraArguments,\n>(\n  options: EngineOptions<Reducers>,\n  thunkExtraArguments: ExtraArguments,\n  reducerManager: ReducerManager\n) {\n  const {preloadedState, configuration} = options;\n  const name = configuration.name || 'coveo-headless';\n  const middlewares = createMiddleware(options, thunkExtraArguments.logger);\n\n  return configureStore({\n    preloadedState,\n    reducer: reducerManager.combinedReducer,\n    middlewares,\n    thunkExtraArguments,\n    name,\n  });\n}\n\nfunction createMiddleware<Reducers extends ReducersMapObject>(\n  options: EngineOptions<Reducers>,\n  logger: Logger\n) {\n  const {renewAccessToken} = options.configuration;\n  const renewTokenMiddleware = createRenewAccessTokenMiddleware(\n    logger,\n    renewAccessToken\n  );\n\n  return [\n    instantlyCallableThunkActionMiddleware,\n    renewTokenMiddleware,\n    logActionErrorMiddleware(logger),\n    analyticsMiddleware,\n  ].concat(answerApi.middleware, options.middlewares || []);\n}\n\nclass InvalidEngineConfiguration extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidEngineConfiguration';\n  }\n}\n", "import {\n  EventSourceMessage,\n  fetchEventSource,\n} from '@microsoft/fetch-event-source';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {selectFieldsToIncludeInCitation} from '../../features/generated-answer/generated-answer-selectors.js';\nimport {GeneratedContentFormat} from '../../features/generated-answer/generated-response-format.js';\nimport {maximumNumberOfResultsFromIndex} from '../../features/pagination/pagination-constants.js';\nimport {selectPipeline} from '../../features/pipeline/select-pipeline.js';\nimport {selectQuery} from '../../features/query/query-selectors.js';\nimport {selectSearchHub} from '../../features/search-hub/search-hub-selectors.js';\nimport {\n  initialSearchMappings,\n  mapFacetRequest,\n} from '../../features/search/search-mappings.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {\n  ConfigurationSection,\n  GeneratedAnswerSection,\n  InsightConfigurationSection,\n} from '../../state/state-sections.js';\nimport {getFacets} from '../../utils/facet-utils.js';\nimport {GeneratedAnswerCitation} from '../generated-answer/generated-answer-event-payload.js';\nimport {getOrganizationEndpoint} from '../platform-client.js';\nimport {SearchRequest} from '../search/search/search-request.js';\nimport {answerSlice} from './answer-slice.js';\n\nexport type StateNeededByAnswerAPI = {\n  searchHub: string;\n  pipeline: string;\n  answer: ReturnType<typeof answerApi.reducer>;\n} & ConfigurationSection &\n  Partial<SearchAppState> &\n  Partial<InsightConfigurationSection> &\n  GeneratedAnswerSection;\n\nexport interface GeneratedAnswerStream {\n  answerId?: string;\n  contentFormat?: GeneratedContentFormat;\n  answer?: string;\n  citations?: GeneratedAnswerCitation[];\n  generated?: boolean;\n  isStreaming: boolean;\n  isLoading: boolean;\n  error?: {message: string; code: number};\n}\n\ninterface StreamPayload\n  extends Pick<GeneratedAnswerStream, 'contentFormat' | 'citations'> {\n  textDelta?: string;\n  padding?: string;\n  answerGenerated?: boolean;\n}\n\ntype PayloadType =\n  | 'genqa.headerMessageType'\n  | 'genqa.messageType'\n  | 'genqa.citationsType'\n  | 'genqa.endOfStreamType';\n\nconst handleHeaderMessage = (\n  draft: GeneratedAnswerStream,\n  payload: Pick<GeneratedAnswerStream, 'contentFormat'>\n) => {\n  const {contentFormat} = payload;\n  draft.contentFormat = contentFormat;\n  draft.isStreaming = true;\n  draft.isLoading = false;\n};\n\nconst handleMessage = (\n  draft: GeneratedAnswerStream,\n  payload: Pick<StreamPayload, 'textDelta'>\n) => {\n  if (draft.answer === undefined) {\n    draft.answer = payload.textDelta;\n  } else if (typeof payload.textDelta === 'string') {\n    draft.answer = draft.answer.concat(payload.textDelta);\n  }\n};\n\nconst handleCitations = (\n  draft: GeneratedAnswerStream,\n  payload: Pick<StreamPayload, 'citations'>\n) => {\n  draft.citations = payload.citations;\n};\n\nconst handleEndOfStream = (\n  draft: GeneratedAnswerStream,\n  payload: Pick<StreamPayload, 'answerGenerated'>\n) => {\n  draft.generated = payload.answerGenerated;\n  draft.isStreaming = false;\n};\n\ninterface MessageType {\n  payloadType: PayloadType;\n  payload: string;\n  finishReason?: string;\n  errorMessage?: string;\n  code?: number;\n}\n\nconst handleError = (\n  draft: GeneratedAnswerStream,\n  message: Required<MessageType>\n) => {\n  draft.error = {\n    message: message.errorMessage,\n    code: message.code!,\n  };\n  draft.isStreaming = false;\n  draft.isLoading = false;\n  // Throwing an error here breaks the client and prevents the error from reaching the state.\n  console.error(`${message.errorMessage} - code ${message.code}`);\n};\n\nconst updateCacheWithEvent = (\n  event: EventSourceMessage,\n  draft: GeneratedAnswerStream\n) => {\n  const message: Required<MessageType> = JSON.parse(event.data);\n  if (message.finishReason === 'ERROR' && message.errorMessage) {\n    handleError(draft, message);\n  }\n\n  const parsedPayload: StreamPayload = message.payload.length\n    ? JSON.parse(message.payload)\n    : {};\n\n  switch (message.payloadType) {\n    case 'genqa.headerMessageType':\n      if (parsedPayload.contentFormat) {\n        handleHeaderMessage(draft, parsedPayload);\n      }\n      break;\n    case 'genqa.messageType':\n      if (parsedPayload.textDelta) {\n        handleMessage(draft, parsedPayload);\n      }\n      break;\n    case 'genqa.citationsType':\n      if (parsedPayload.citations) {\n        handleCitations(draft, parsedPayload);\n      }\n      break;\n    case 'genqa.endOfStreamType':\n      if (draft.answer?.length || parsedPayload.answerGenerated) {\n        handleEndOfStream(draft, parsedPayload);\n      }\n      break;\n  }\n};\n\nexport const answerApi = answerSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getAnswer: builder.query<GeneratedAnswerStream, Partial<SearchRequest>>({\n      queryFn: () => ({\n        data: {\n          contentFormat: undefined,\n          answer: undefined,\n          citations: undefined,\n          error: undefined,\n          generated: false,\n          isStreaming: true,\n          isLoading: true,\n        },\n      }),\n      async onCacheEntryAdded(\n        args,\n        {getState, cacheDataLoaded, updateCachedData}\n      ) {\n        await cacheDataLoaded;\n        /**\n         * createApi has to be called prior to creating the redux store and is used as part of the store setup sequence.\n         * It cannot use the inferred state used by Redux, thus the casting.\n         * https://redux-toolkit.js.org/rtk-query/usage-with-typescript#typing-dispatch-and-getstate\n         */\n        const {configuration, generatedAnswer, insightConfiguration} =\n          getState() as unknown as StateNeededByAnswerAPI;\n        const {organizationId, environment, accessToken} = configuration;\n        const platformEndpoint = getOrganizationEndpoint(\n          organizationId,\n          environment\n        );\n        const insightGenerateEndpoint = `${platformEndpoint}/rest/organizations/${organizationId}/insight/v1/configs/${insightConfiguration?.insightId}/answer/${generatedAnswer.answerConfigurationId}/generate`;\n        const generateEndpoint = `${platformEndpoint}/rest/organizations/${organizationId}/answer/v1/configs/${generatedAnswer.answerConfigurationId}/generate`;\n        await fetchEventSource(\n          insightConfiguration ? insightGenerateEndpoint : generateEndpoint,\n          {\n            method: 'POST',\n            body: JSON.stringify(args),\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n              'Accept-Encoding': '*',\n            },\n            fetch,\n            onopen: async (res) => {\n              const answerId = res.headers.get('x-answer-id');\n              if (answerId) {\n                updateCachedData((draft) => {\n                  draft.answerId = answerId;\n                });\n              }\n            },\n            onmessage: (event) => {\n              updateCachedData((draft) => {\n                updateCacheWithEvent(event, draft);\n              });\n            },\n            onerror: (error) => {\n              throw error;\n            },\n          }\n        );\n      },\n    }),\n  }),\n});\n\nexport const selectAnswerTriggerParams = createSelector(\n  (state) => selectQuery(state)?.q,\n  (state) => state.search.requestId,\n  (q, requestId) => ({q, requestId})\n);\n\nlet generateFacetParams: Record<string, ReturnType<typeof getFacets>> = {};\n\nconst getGeneratedFacetParams = (q: string, state: StateNeededByAnswerAPI) => ({\n  ...generateFacetParams,\n  [q]: getFacets(state)\n    ?.map((facetRequest) =>\n      mapFacetRequest(facetRequest, initialSearchMappings())\n    )\n    .sort((a, b) =>\n      a.facetId > b.facetId ? 1 : b.facetId > a.facetId ? -1 : 0\n    ),\n});\n\nconst getNumberOfResultsWithinIndexLimit = (state: StateNeededByAnswerAPI) => {\n  if (!state.pagination) {\n    return undefined;\n  }\n\n  const isOverIndexLimit =\n    state.pagination.firstResult + state.pagination.numberOfResults >\n    maximumNumberOfResultsFromIndex;\n\n  if (isOverIndexLimit) {\n    return maximumNumberOfResultsFromIndex - state.pagination.firstResult;\n  }\n  return state.pagination.numberOfResults;\n};\n\nexport const constructAnswerQueryParams = (\n  state: StateNeededByAnswerAPI,\n  usage: 'fetch' | 'select'\n) => {\n  const q = selectQuery(state)?.q;\n  const searchHub = selectSearchHub(state);\n  const pipeline = selectPipeline(state);\n  const citationsFieldToInclude = selectFieldsToIncludeInCitation(state) ?? [];\n\n  if (q && usage === 'fetch') {\n    generateFacetParams = getGeneratedFacetParams(q, state);\n  }\n\n  return {\n    q,\n    pipelineRuleParameters: {\n      mlGenerativeQuestionAnswering: {\n        responseFormat: state.generatedAnswer.responseFormat,\n        citationsFieldToInclude,\n      },\n    },\n    ...(searchHub?.length && {searchHub}),\n    ...(pipeline?.length && {pipeline}),\n    ...(generateFacetParams[q!]?.length && {\n      facets: generateFacetParams[q!],\n    }),\n    ...(state.fields && {fieldsToInclude: state.fields.fieldsToInclude}),\n    ...(state.didYouMean && {\n      queryCorrection: {\n        enabled:\n          state.didYouMean.enableDidYouMean &&\n          state.didYouMean.queryCorrectionMode === 'next',\n        options: {\n          automaticallyCorrect: state.didYouMean.automaticallyCorrectQuery\n            ? ('whenNoResults' as const)\n            : ('never' as const),\n        },\n      },\n      enableDidYouMean:\n        state.didYouMean.enableDidYouMean &&\n        state.didYouMean.queryCorrectionMode === 'legacy',\n    }),\n    ...(state.pagination && {\n      numberOfResults: getNumberOfResultsWithinIndexLimit(state),\n      firstResult: state.pagination.firstResult,\n    }),\n    tab: state.configuration.analytics.originLevel2,\n  };\n};\n\nexport const fetchAnswer = (state: StateNeededByAnswerAPI) =>\n  answerApi.endpoints.getAnswer.initiate(\n    constructAnswerQueryParams(state, 'fetch')\n  );\n\nexport const selectAnswer = (state: StateNeededByAnswerAPI) =>\n  answerApi.endpoints.getAnswer.select(\n    constructAnswerQueryParams(state, 'select')\n  )(state);\n", null, null, null, "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {\n  selectAnswer,\n  StateNeededByAnswerAPI,\n} from '../../api/knowledge/stream-answer-api.js';\nimport {GeneratedAnswerCitation} from '../../controllers/generated-answer/headless-generated-answer.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {\n  GeneratedAnswerSection,\n  SearchSection,\n} from '../../state/state-sections.js';\nimport {selectQuery} from '../query/query-selectors.js';\n\nexport const generativeQuestionAnsweringIdSelector = (\n  state: Partial<SearchAppState>\n): {answerAPIEnabled: boolean; id: string | undefined} => {\n  if (isGeneratedAnswerSection(state)) {\n    return {answerAPIEnabled: true, id: selectAnswer(state).data?.answerId};\n  }\n\n  if (isSearchSection(state)) {\n    return {\n      answerAPIEnabled: false,\n      id: state.search.response.extendedResults.generativeQuestionAnsweringId,\n    };\n  }\n\n  return {answerAPIEnabled: false, id: undefined};\n};\n\nconst isSearchSection = (\n  state: Partial<SearchAppState> | StateNeededByAnswerAPI\n): state is SearchSection => 'search' in state;\n\nconst isGeneratedAnswerSection = (\n  state: Partial<SearchAppState>\n): state is StateNeededByAnswerAPI =>\n  'answer' in state &&\n  'generatedAnswer' in state &&\n  !isNullOrUndefined(state.generatedAnswer?.answerConfigurationId);\n\nexport const selectFieldsToIncludeInCitation = (\n  state: Partial<GeneratedAnswerSection>\n) => state.generatedAnswer?.fieldsToIncludeInCitations;\n\nexport const citationSourceSelector = createSelector(\n  (state: Partial<GeneratedAnswerSection>) => state.generatedAnswer?.citations,\n  (_state: Partial<GeneratedAnswerSection>, citationId: string) => citationId,\n  (citations, citationId) =>\n    citations?.find(\n      (citation: GeneratedAnswerCitation) => citation.id === citationId\n    )\n);\n\nexport const selectAnswerTriggerParams = createSelector(\n  (state) => selectQuery(state)?.q,\n  (state) => state.search.requestId,\n  (q, requestId) => ({q, requestId})\n);\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {QueryState} from './query-state.js';\n\nexport const selectQuery = createSelector(\n  (state: {query?: QueryState}) => state.query,\n  (query) => query\n);\n", "import {createSelector} from '@reduxjs/toolkit';\n\nexport const selectPipeline = createSelector(\n  (state: {pipeline?: string}) => state.pipeline,\n  (pipeline) => pipeline\n);\n", "import {createSelector} from '@reduxjs/toolkit';\n\nexport const selectSearchHub = createSelector(\n  (state: {searchHub?: string}) => state.searchHub,\n  (searchHub) => searchHub\n);\n", "import {\n  BaseQueryFn,\n  createApi,\n  FetchArgs,\n  fetchBaseQuery,\n  FetchBaseQueryError,\n  retry,\n} from '@reduxjs/toolkit/query';\nimport {\n  ConfigurationSection,\n  GeneratedAnswerSection,\n} from '../../state/state-sections.js';\nimport {getOrganizationEndpoint} from '../platform-client.js';\n\ntype StateNeededByAnswerSlice = ConfigurationSection & GeneratedAnswerSection;\n\n/**\n * `dynamicBaseQuery` is passed to the baseQuery of the createApi,\n * but note that the baseQuery will not be used if a queryFn is provided in the createApi endpoint\n */\nconst dynamicBaseQuery: BaseQueryFn<\n  string | FetchArgs,\n  unknown,\n  FetchBaseQueryError\n> = async (args, api, extraOptions) => {\n  const state = api.getState() as StateNeededByAnswerSlice;\n  const {accessToken, environment, organizationId} = state.configuration;\n  const answerConfigurationId = state.generatedAnswer.answerConfigurationId;\n  const updatedArgs = {\n    ...(args as FetchArgs),\n    headers: {\n      ...((args as FetchArgs)?.headers || {}),\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n  try {\n    const platformEndpoint = getOrganizationEndpoint(\n      organizationId,\n      environment\n    );\n    const data = fetchBaseQuery({\n      baseUrl: `${platformEndpoint}/rest/organizations/${organizationId}/answer/v1/configs/${answerConfigurationId}`,\n    })(updatedArgs, api, extraOptions);\n    return {data};\n  } catch (error) {\n    return {error: error as FetchBaseQueryError};\n  }\n};\n\nexport const answerSlice = createApi({\n  reducerPath: 'answer',\n  baseQuery: retry(dynamicBaseQuery, {maxRetries: 3}),\n  endpoints: () => ({}),\n});\n", "import type { SerializedError } from '@reduxjs/toolkit';\nimport type { BaseQueryError } from '../baseQueryTypes';\nimport type { QueryDefinition, MutationDefinition, EndpointDefinitions, BaseEndpointDefinition, ResultTypeFrom, QueryArgFrom } from '../endpointDefinitions';\nimport type { Id, WithRequiredProp } from '../tsHelpers';\nexport type QueryCacheKey = string & {\n  _type: 'queryCacheKey';\n};\nexport type QuerySubstateIdentifier = {\n  queryCacheKey: QueryCacheKey;\n};\nexport type MutationSubstateIdentifier = {\n  requestId: string;\n  fixedCacheKey?: string;\n} | {\n  requestId?: string;\n  fixedCacheKey: string;\n};\nexport type RefetchConfigOptions = {\n  refetchOnMountOrArgChange: boolean | number;\n  refetchOnReconnect: boolean;\n  refetchOnFocus: boolean;\n};\n\n/**\r\n * Strings describing the query state at any given time.\r\n */\nexport enum QueryStatus {\n  uninitialized = 'uninitialized',\n  pending = 'pending',\n  fulfilled = 'fulfilled',\n  rejected = 'rejected',\n}\nexport type RequestStatusFlags = {\n  status: QueryStatus.uninitialized;\n  isUninitialized: true;\n  isLoading: false;\n  isSuccess: false;\n  isError: false;\n} | {\n  status: QueryStatus.pending;\n  isUninitialized: false;\n  isLoading: true;\n  isSuccess: false;\n  isError: false;\n} | {\n  status: QueryStatus.fulfilled;\n  isUninitialized: false;\n  isLoading: false;\n  isSuccess: true;\n  isError: false;\n} | {\n  status: QueryStatus.rejected;\n  isUninitialized: false;\n  isLoading: false;\n  isSuccess: false;\n  isError: true;\n};\nexport function getRequestStatusFlags(status: QueryStatus): RequestStatusFlags {\n  return ({\n    status,\n    isUninitialized: status === QueryStatus.uninitialized,\n    isLoading: status === QueryStatus.pending,\n    isSuccess: status === QueryStatus.fulfilled,\n    isError: status === QueryStatus.rejected\n  } as any);\n}\nexport type SubscriptionOptions = {\n  /**\r\n   * How frequently to automatically re-fetch data (in milliseconds). Defaults to `0` (off).\r\n   */\n  pollingInterval?: number;\n  /**\r\n   *  Defaults to 'false'. This setting allows you to control whether RTK Query will continue polling if the window is not focused.\r\n   *\r\n   *  If pollingInterval is not set or set to 0, this **will not be evaluated** until pollingInterval is greater than 0.\r\n   *\r\n   *  Note: requires [`setupListeners`](./setupListeners) to have been called.\r\n   */\n  skipPollingIfUnfocused?: boolean;\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after regaining a network connection.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   *\r\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\r\n   */\n  refetchOnReconnect?: boolean;\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after the application window regains focus.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   *\r\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\r\n   */\n  refetchOnFocus?: boolean;\n};\nexport type Subscribers = {\n  [requestId: string]: SubscriptionOptions;\n};\nexport type QueryKeys<Definitions extends EndpointDefinitions> = { [K in keyof Definitions]: Definitions[K] extends QueryDefinition<any, any, any, any> ? K : never }[keyof Definitions];\nexport type MutationKeys<Definitions extends EndpointDefinitions> = { [K in keyof Definitions]: Definitions[K] extends MutationDefinition<any, any, any, any> ? K : never }[keyof Definitions];\ntype BaseQuerySubState<D extends BaseEndpointDefinition<any, any, any>> = {\n  /**\r\n   * The argument originally passed into the hook or `initiate` action call\r\n   */\n  originalArgs: QueryArgFrom<D>;\n  /**\r\n   * A unique ID associated with the request\r\n   */\n  requestId: string;\n  /**\r\n   * The received data from the query\r\n   */\n  data?: ResultTypeFrom<D>;\n  /**\r\n   * The received error if applicable\r\n   */\n  error?: SerializedError | (D extends QueryDefinition<any, infer BaseQuery, any, any> ? BaseQueryError<BaseQuery> : never);\n  /**\r\n   * The name of the endpoint associated with the query\r\n   */\n  endpointName: string;\n  /**\r\n   * Time that the latest query started\r\n   */\n  startedTimeStamp: number;\n  /**\r\n   * Time that the latest query was fulfilled\r\n   */\n  fulfilledTimeStamp?: number;\n};\nexport type QuerySubState<D extends BaseEndpointDefinition<any, any, any>> = Id<({\n  status: QueryStatus.fulfilled;\n} & WithRequiredProp<BaseQuerySubState<D>, 'data' | 'fulfilledTimeStamp'> & {\n  error: undefined;\n}) | ({\n  status: QueryStatus.pending;\n} & BaseQuerySubState<D>) | ({\n  status: QueryStatus.rejected;\n} & WithRequiredProp<BaseQuerySubState<D>, 'error'>) | {\n  status: QueryStatus.uninitialized;\n  originalArgs?: undefined;\n  data?: undefined;\n  error?: undefined;\n  requestId?: undefined;\n  endpointName?: string;\n  startedTimeStamp?: undefined;\n  fulfilledTimeStamp?: undefined;\n}>;\ntype BaseMutationSubState<D extends BaseEndpointDefinition<any, any, any>> = {\n  requestId: string;\n  data?: ResultTypeFrom<D>;\n  error?: SerializedError | (D extends MutationDefinition<any, infer BaseQuery, any, any> ? BaseQueryError<BaseQuery> : never);\n  endpointName: string;\n  startedTimeStamp: number;\n  fulfilledTimeStamp?: number;\n};\nexport type MutationSubState<D extends BaseEndpointDefinition<any, any, any>> = (({\n  status: QueryStatus.fulfilled;\n} & WithRequiredProp<BaseMutationSubState<D>, 'data' | 'fulfilledTimeStamp'>) & {\n  error: undefined;\n}) | (({\n  status: QueryStatus.pending;\n} & BaseMutationSubState<D>) & {\n  data?: undefined;\n}) | ({\n  status: QueryStatus.rejected;\n} & WithRequiredProp<BaseMutationSubState<D>, 'error'>) | {\n  requestId?: undefined;\n  status: QueryStatus.uninitialized;\n  data?: undefined;\n  error?: undefined;\n  endpointName?: string;\n  startedTimeStamp?: undefined;\n  fulfilledTimeStamp?: undefined;\n};\nexport type CombinedState<D extends EndpointDefinitions, E extends string, ReducerPath extends string> = {\n  queries: QueryState<D>;\n  mutations: MutationState<D>;\n  provided: InvalidationState<E>;\n  subscriptions: SubscriptionState;\n  config: ConfigState<ReducerPath>;\n};\nexport type InvalidationState<TagTypes extends string> = { [_ in TagTypes]: {\n  [id: string]: Array<QueryCacheKey>;\n  [id: number]: Array<QueryCacheKey>;\n} };\nexport type QueryState<D extends EndpointDefinitions> = {\n  [queryCacheKey: string]: QuerySubState<D[string]> | undefined;\n};\nexport type SubscriptionState = {\n  [queryCacheKey: string]: Subscribers | undefined;\n};\nexport type ConfigState<ReducerPath> = RefetchConfigOptions & {\n  reducerPath: ReducerPath;\n  online: boolean;\n  focused: boolean;\n  middlewareRegistered: boolean | 'conflict';\n} & ModifiableConfigState;\nexport type ModifiableConfigState = {\n  keepUnusedDataFor: number;\n  invalidationBehavior: 'delayed' | 'immediately';\n} & RefetchConfigOptions;\nexport type MutationState<D extends EndpointDefinitions> = {\n  [requestId: string]: MutationSubState<D[string]> | undefined;\n};\nexport type RootState<Definitions extends EndpointDefinitions, TagTypes extends string, ReducerPath extends string> = { [P in ReducerPath]: CombinedState<Definitions, TagTypes, P> };", "// This file exists to consolidate all of the imports from the `@reduxjs/toolkit` package.\n// ESBuild does not de-duplicate imports, so this file is used to ensure that each method\n// imported is only listed once, and there's only one mention of the `@reduxjs/toolkit` package.\n\nexport { createAction, createSlice, createSelector, createAsyncThunk, combineReducers, createNextState, isAnyOf, isAllOf, isAction, isPending, isRejected, isFulfilled, isRejectedWithValue, isAsyncThunkAction, prepareAutoBatched, SHOULD_AUTOBATCH, isPlainObject, nanoid } from '@reduxjs/toolkit';", "import { isPlainObject as _iPO } from '../core/rtkImports';\n\n// remove type guard\nconst isPlainObject: (_: any) => boolean = _iPO;\nexport function copyWithStructuralSharing<T>(oldObj: any, newObj: T): T;\nexport function copyWithStructuralSharing(oldObj: any, newObj: any): any {\n  if (oldObj === newObj || !(isPlainObject(oldObj) && isPlainObject(newObj) || Array.isArray(oldObj) && Array.isArray(newObj))) {\n    return newObj;\n  }\n  const newKeys = Object.keys(newObj);\n  const oldKeys = Object.keys(oldObj);\n  let isSameObject = newKeys.length === oldKeys.length;\n  const mergeObj: any = Array.isArray(newObj) ? [] : {};\n  for (const key of newKeys) {\n    mergeObj[key] = copyWithStructuralSharing(oldObj[key], newObj[key]);\n    if (isSameObject) isSameObject = oldObj[key] === mergeObj[key];\n  }\n  return isSameObject ? oldObj : mergeObj;\n}", "// Fast method for counting an object's keys\n// without resorting to `Object.keys(obj).length\n// Will this make a big difference in perf? Probably not\n// But we can save a few allocations.\n\nexport function countObjectKeys(obj: Record<any, any>) {\n  let count = 0;\n  for (const _key in obj) {\n    count++;\n  }\n  return count;\n}", "/**\r\n * Alternative to `Array.flat(1)`\r\n * @param arr An array like [1,2,3,[1,2]]\r\n * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\r\n */\nexport const flatten = (arr: readonly any[]) => [].concat(...arr);", "/**\r\n * If either :// or // is present consider it to be an absolute url\r\n *\r\n * @param url string\r\n */\n\nexport function isAbsoluteUrl(url: string) {\n  return new RegExp(`(^|:)//`).test(url);\n}", "/**\r\n * Assumes true for a non-browser env, otherwise makes a best effort\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\r\n */\nexport function isDocumentVisible(): boolean {\n  // `document` may not exist in non-browser envs (like RN)\n  if (typeof document === 'undefined') {\n    return true;\n  }\n  // Match true for visible, prerender, undefined\n  return document.visibilityState !== 'hidden';\n}", "export function isNotNullish<T>(v: T | null | undefined): v is T {\n  return v != null;\n}", "/**\r\n * Assumes a browser is online if `undefined`, otherwise makes a best effort\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine\r\n */\nexport function isOnline() {\n  // We set the default config value in the store, so we'd need to check for this in a SSR env\n  return typeof navigator === 'undefined' ? true : navigator.onLine === undefined ? true : navigator.onLine;\n}", "import { isAbsoluteUrl } from './isAbsoluteUrl';\nconst withoutTrailingSlash = (url: string) => url.replace(/\\/$/, '');\nconst withoutLeadingSlash = (url: string) => url.replace(/^\\//, '');\nexport function joinUrls(base: string | undefined, url: string | undefined): string {\n  if (!base) {\n    return url!;\n  }\n  if (!url) {\n    return base;\n  }\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  const delimiter = base.endsWith('/') || !url.startsWith('?') ? '/' : '';\n  base = withoutTrailingSlash(base);\n  url = withoutLeadingSlash(url);\n  return `${base}${delimiter}${url}`;\n}", "import { joinUrls } from './utils';\nimport { isPlainObject } from './core/rtkImports';\nimport type { BaseQueryApi, BaseQueryFn } from './baseQueryTypes';\nimport type { MaybePromise, Override } from './tsHelpers';\nexport type ResponseHandler = 'content-type' | 'json' | 'text' | ((response: Response) => Promise<any>);\ntype CustomRequestInit = Override<RequestInit, {\n  headers?: Headers | string[][] | Record<string, string | undefined> | undefined;\n}>;\nexport interface FetchArgs extends CustomRequestInit {\n  url: string;\n  params?: Record<string, any>;\n  body?: any;\n  responseHandler?: ResponseHandler;\n  validateStatus?: (response: Response, body: any) => boolean;\n  /**\n   * A number in milliseconds that represents that maximum time a request can take before timing out.\n   */\n  timeout?: number;\n}\n\n/**\n * A mini-wrapper that passes arguments straight through to\n * {@link [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)}.\n * Avoids storing `fetch` in a closure, in order to permit mocking/monkey-patching.\n */\nconst defaultFetchFn: typeof fetch = (...args) => fetch(...args);\nconst defaultValidateStatus = (response: Response) => response.status >= 200 && response.status <= 299;\nconst defaultIsJsonContentType = (headers: Headers) => /*applicat*/ /ion\\/(vnd\\.api\\+)?json/.test(headers.get('content-type') || '');\nexport type FetchBaseQueryError = {\n  /**\n   * * `number`:\n   *   HTTP status code\n   */\n  status: number;\n  data: unknown;\n} | {\n  /**\n   * * `\"FETCH_ERROR\"`:\n   *   An error that occurred during execution of `fetch` or the `fetchFn` callback option\n   **/\n  status: 'FETCH_ERROR';\n  data?: undefined;\n  error: string;\n} | {\n  /**\n   * * `\"PARSING_ERROR\"`:\n   *   An error happened during parsing.\n   *   Most likely a non-JSON-response was returned with the default `responseHandler` \"JSON\",\n   *   or an error occurred while executing a custom `responseHandler`.\n   **/\n  status: 'PARSING_ERROR';\n  originalStatus: number;\n  data: string;\n  error: string;\n} | {\n  /**\n   * * `\"TIMEOUT_ERROR\"`:\n   *   Request timed out\n   **/\n  status: 'TIMEOUT_ERROR';\n  data?: undefined;\n  error: string;\n} | {\n  /**\n   * * `\"CUSTOM_ERROR\"`:\n   *   A custom error type that you can return from your `queryFn` where another error might not make sense.\n   **/\n  status: 'CUSTOM_ERROR';\n  data?: unknown;\n  error: string;\n};\nfunction stripUndefined(obj: any) {\n  if (!isPlainObject(obj)) {\n    return obj;\n  }\n  const copy: Record<string, any> = {\n    ...obj\n  };\n  for (const [k, v] of Object.entries(copy)) {\n    if (v === undefined) delete copy[k];\n  }\n  return copy;\n}\nexport type FetchBaseQueryArgs = {\n  baseUrl?: string;\n  prepareHeaders?: (headers: Headers, api: Pick<BaseQueryApi, 'getState' | 'extra' | 'endpoint' | 'type' | 'forced'>) => MaybePromise<Headers | void>;\n  fetchFn?: (input: RequestInfo, init?: RequestInit | undefined) => Promise<Response>;\n  paramsSerializer?: (params: Record<string, any>) => string;\n  /**\n   * By default, we only check for 'application/json' and 'application/vnd.api+json' as the content-types for json. If you need to support another format, you can pass\n   * in a predicate function for your given api to get the same automatic stringifying behavior\n   * @example\n   * ```ts\n   * const isJsonContentType = (headers: Headers) => [\"application/vnd.api+json\", \"application/json\", \"application/vnd.hal+json\"].includes(headers.get(\"content-type\")?.trim());\n   * ```\n   */\n  isJsonContentType?: (headers: Headers) => boolean;\n  /**\n   * Defaults to `application/json`;\n   */\n  jsonContentType?: string;\n\n  /**\n   * Custom replacer function used when calling `JSON.stringify()`;\n   */\n  jsonReplacer?: (this: any, key: string, value: any) => any;\n} & RequestInit & Pick<FetchArgs, 'responseHandler' | 'validateStatus' | 'timeout'>;\nexport type FetchBaseQueryMeta = {\n  request: Request;\n  response?: Response;\n};\n\n/**\n * This is a very small wrapper around fetch that aims to simplify requests.\n *\n * @example\n * ```ts\n * const baseQuery = fetchBaseQuery({\n *   baseUrl: 'https://api.your-really-great-app.com/v1/',\n *   prepareHeaders: (headers, { getState }) => {\n *     const token = (getState() as RootState).auth.token;\n *     // If we have a token set in state, let's assume that we should be passing it.\n *     if (token) {\n *       headers.set('authorization', `Bearer ${token}`);\n *     }\n *     return headers;\n *   },\n * })\n * ```\n *\n * @param {string} baseUrl\n * The base URL for an API service.\n * Typically in the format of https://example.com/\n *\n * @param {(headers: Headers, api: { getState: () => unknown; extra: unknown; endpoint: string; type: 'query' | 'mutation'; forced: boolean; }) => Headers} prepareHeaders\n * An optional function that can be used to inject headers on requests.\n * Provides a Headers object, as well as most of the `BaseQueryApi` (`dispatch` is not available).\n * Useful for setting authentication or headers that need to be set conditionally.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Headers\n *\n * @param {(input: RequestInfo, init?: RequestInit | undefined) => Promise<Response>} fetchFn\n * Accepts a custom `fetch` function if you do not want to use the default on the window.\n * Useful in SSR environments if you need to use a library such as `isomorphic-fetch` or `cross-fetch`\n *\n * @param {(params: Record<string, unknown>) => string} paramsSerializer\n * An optional function that can be used to stringify querystring parameters.\n *\n * @param {(headers: Headers) => boolean} isJsonContentType\n * An optional predicate function to determine if `JSON.stringify()` should be called on the `body` arg of `FetchArgs`\n *\n * @param {string} jsonContentType Used when automatically setting the content-type header for a request with a jsonifiable body that does not have an explicit content-type header. Defaults to `application/json`.\n *\n * @param {(this: any, key: string, value: any) => any} jsonReplacer Custom replacer function used when calling `JSON.stringify()`.\n *\n * @param {number} timeout\n * A number in milliseconds that represents the maximum time a request can take before timing out.\n */\nexport function fetchBaseQuery({\n  baseUrl,\n  prepareHeaders = x => x,\n  fetchFn = defaultFetchFn,\n  paramsSerializer,\n  isJsonContentType = defaultIsJsonContentType,\n  jsonContentType = 'application/json',\n  jsonReplacer,\n  timeout: defaultTimeout,\n  responseHandler: globalResponseHandler,\n  validateStatus: globalValidateStatus,\n  ...baseFetchOptions\n}: FetchBaseQueryArgs = {}): BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError, {}, FetchBaseQueryMeta> {\n  if (typeof fetch === 'undefined' && fetchFn === defaultFetchFn) {\n    console.warn('Warning: `fetch` is not available. Please supply a custom `fetchFn` property to use `fetchBaseQuery` on SSR environments.');\n  }\n  return async (arg, api) => {\n    const {\n      signal,\n      getState,\n      extra,\n      endpoint,\n      forced,\n      type\n    } = api;\n    let meta: FetchBaseQueryMeta | undefined;\n    let {\n      url,\n      headers = new Headers(baseFetchOptions.headers),\n      params = undefined,\n      responseHandler = globalResponseHandler ?? ('json' as const),\n      validateStatus = globalValidateStatus ?? defaultValidateStatus,\n      timeout = defaultTimeout,\n      ...rest\n    } = typeof arg == 'string' ? {\n      url: arg\n    } : arg;\n    let config: RequestInit = {\n      ...baseFetchOptions,\n      signal,\n      ...rest\n    };\n    headers = new Headers(stripUndefined(headers));\n    config.headers = (await prepareHeaders(headers, {\n      getState,\n      extra,\n      endpoint,\n      forced,\n      type\n    })) || headers;\n\n    // Only set the content-type to json if appropriate. Will not be true for FormData, ArrayBuffer, Blob, etc.\n    const isJsonifiable = (body: any) => typeof body === 'object' && (isPlainObject(body) || Array.isArray(body) || typeof body.toJSON === 'function');\n    if (!config.headers.has('content-type') && isJsonifiable(config.body)) {\n      config.headers.set('content-type', jsonContentType);\n    }\n    if (isJsonifiable(config.body) && isJsonContentType(config.headers)) {\n      config.body = JSON.stringify(config.body, jsonReplacer);\n    }\n    if (params) {\n      const divider = ~url.indexOf('?') ? '&' : '?';\n      const query = paramsSerializer ? paramsSerializer(params) : new URLSearchParams(stripUndefined(params));\n      url += divider + query;\n    }\n    url = joinUrls(baseUrl, url);\n    const request = new Request(url, config);\n    const requestClone = new Request(url, config);\n    meta = {\n      request: requestClone\n    };\n    let response,\n      timedOut = false,\n      timeoutId = timeout && setTimeout(() => {\n        timedOut = true;\n        api.abort();\n      }, timeout);\n    try {\n      response = await fetchFn(request);\n    } catch (e) {\n      return {\n        error: {\n          status: timedOut ? 'TIMEOUT_ERROR' : 'FETCH_ERROR',\n          error: String(e)\n        },\n        meta\n      };\n    } finally {\n      if (timeoutId) clearTimeout(timeoutId);\n    }\n    const responseClone = response.clone();\n    meta.response = responseClone;\n    let resultData: any;\n    let responseText: string = '';\n    try {\n      let handleResponseError;\n      await Promise.all([handleResponse(response, responseHandler).then(r => resultData = r, e => handleResponseError = e),\n      // see https://github.com/node-fetch/node-fetch/issues/665#issuecomment-538995182\n      // we *have* to \"use up\" both streams at the same time or they will stop running in node-fetch scenarios\n      responseClone.text().then(r => responseText = r, () => {})]);\n      if (handleResponseError) throw handleResponseError;\n    } catch (e) {\n      return {\n        error: {\n          status: 'PARSING_ERROR',\n          originalStatus: response.status,\n          data: responseText,\n          error: String(e)\n        },\n        meta\n      };\n    }\n    return validateStatus(response, resultData) ? {\n      data: resultData,\n      meta\n    } : {\n      error: {\n        status: response.status,\n        data: resultData\n      },\n      meta\n    };\n  };\n  async function handleResponse(response: Response, responseHandler: ResponseHandler) {\n    if (typeof responseHandler === 'function') {\n      return responseHandler(response);\n    }\n    if (responseHandler === 'content-type') {\n      responseHandler = isJsonContentType(response.headers) ? 'json' : 'text';\n    }\n    if (responseHandler === 'json') {\n      const text = await response.text();\n      return text.length ? JSON.parse(text) : null;\n    }\n    return response.text();\n  }\n}", "export class HandledError {\n  constructor(public readonly value: any, public readonly meta: any = undefined) {}\n}", "import type { BaseQueryApi, BaseQueryArg, BaseQueryEnhancer, BaseQueryError, BaseQueryExtraOptions, BaseQueryFn } from './baseQueryTypes';\nimport type { FetchBaseQueryError } from './fetchBaseQuery';\nimport { HandledError } from './HandledError';\n\n/**\n * Exponential backoff based on the attempt number.\n *\n * @remarks\n * 1. 600ms * random(0.4, 1.4)\n * 2. 1200ms * random(0.4, 1.4)\n * 3. 2400ms * random(0.4, 1.4)\n * 4. 4800ms * random(0.4, 1.4)\n * 5. 9600ms * random(0.4, 1.4)\n *\n * @param attempt - Current attempt\n * @param maxRetries - Maximum number of retries\n */\nasync function defaultBackoff(attempt: number = 0, maxRetries: number = 5) {\n  const attempts = Math.min(attempt, maxRetries);\n  const timeout = ~~((Math.random() + 0.4) * (300 << attempts)); // Force a positive int in the case we make this an option\n  await new Promise(resolve => setTimeout((res: any) => resolve(res), timeout));\n}\ntype RetryConditionFunction = (error: BaseQueryError<BaseQueryFn>, args: BaseQueryArg<BaseQueryFn>, extraArgs: {\n  attempt: number;\n  baseQueryApi: BaseQueryApi;\n  extraOptions: BaseQueryExtraOptions<BaseQueryFn> & RetryOptions;\n}) => boolean;\nexport type RetryOptions = {\n  /**\n   * Function used to determine delay between retries\n   */\n  backoff?: (attempt: number, maxRetries: number) => Promise<void>;\n} & ({\n  /**\n   * How many times the query will be retried (default: 5)\n   */\n  maxRetries?: number;\n  retryCondition?: undefined;\n} | {\n  /**\n   * Callback to determine if a retry should be attempted.\n   * Return `true` for another retry and `false` to quit trying prematurely.\n   */\n  retryCondition?: RetryConditionFunction;\n  maxRetries?: undefined;\n});\nfunction fail(e: any): never {\n  throw Object.assign(new HandledError({\n    error: e\n  }), {\n    throwImmediately: true\n  });\n}\nconst EMPTY_OPTIONS = {};\nconst retryWithBackoff: BaseQueryEnhancer<unknown, RetryOptions, RetryOptions | void> = (baseQuery, defaultOptions) => async (args, api, extraOptions) => {\n  // We need to figure out `maxRetries` before we define `defaultRetryCondition.\n  // This is probably goofy, but ought to work.\n  // Put our defaults in one array, filter out undefineds, grab the last value.\n  const possibleMaxRetries: number[] = [5, ((defaultOptions as any) || EMPTY_OPTIONS).maxRetries, ((extraOptions as any) || EMPTY_OPTIONS).maxRetries].filter(x => x !== undefined);\n  const [maxRetries] = possibleMaxRetries.slice(-1);\n  const defaultRetryCondition: RetryConditionFunction = (_, __, {\n    attempt\n  }) => attempt <= maxRetries;\n  const options: {\n    maxRetries: number;\n    backoff: typeof defaultBackoff;\n    retryCondition: typeof defaultRetryCondition;\n  } = {\n    maxRetries,\n    backoff: defaultBackoff,\n    retryCondition: defaultRetryCondition,\n    ...defaultOptions,\n    ...extraOptions\n  };\n  let retry = 0;\n  while (true) {\n    try {\n      const result = await baseQuery(args, api, extraOptions);\n      // baseQueries _should_ return an error property, so we should check for that and throw it to continue retrying\n      if (result.error) {\n        throw new HandledError(result);\n      }\n      return result;\n    } catch (e: any) {\n      retry++;\n      if (e.throwImmediately) {\n        if (e instanceof HandledError) {\n          return e.value;\n        }\n\n        // We don't know what this is, so we have to rethrow it\n        throw e;\n      }\n      if (e instanceof HandledError && !options.retryCondition((e.value.error as FetchBaseQueryError), args, {\n        attempt: retry,\n        baseQueryApi: api,\n        extraOptions\n      })) {\n        return e.value;\n      }\n      await options.backoff(retry, options.maxRetries);\n    }\n  }\n};\n\n/**\n * A utility that can wrap `baseQuery` in the API definition to provide retries with a basic exponential backoff.\n *\n * @example\n *\n * ```ts\n * // codeblock-meta title=\"Retry every request 5 times by default\"\n * import { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react'\n * interface Post {\n *   id: number\n *   name: string\n * }\n * type PostsResponse = Post[]\n *\n * // maxRetries: 5 is the default, and can be omitted. Shown for documentation purposes.\n * const staggeredBaseQuery = retry(fetchBaseQuery({ baseUrl: '/' }), { maxRetries: 5 });\n * export const api = createApi({\n *   baseQuery: staggeredBaseQuery,\n *   endpoints: (build) => ({\n *     getPosts: build.query<PostsResponse, void>({\n *       query: () => ({ url: 'posts' }),\n *     }),\n *     getPost: build.query<PostsResponse, string>({\n *       query: (id) => ({ url: `post/${id}` }),\n *       extraOptions: { maxRetries: 8 }, // You can override the retry behavior on each endpoint\n *     }),\n *   }),\n * });\n *\n * export const { useGetPostsQuery, useGetPostQuery } = api;\n * ```\n */\nexport const retry = /* @__PURE__ */Object.assign(retryWithBackoff, {\n  fail\n});", "import type { ThunkDispatch, ActionCreatorWithoutPayload // Workaround for API-Extractor\n} from '@reduxjs/toolkit';\nimport { createAction } from './rtkImports';\nexport const onFocus = /* @__PURE__ */createAction('__rtkq/focused');\nexport const onFocusLost = /* @__PURE__ */createAction('__rtkq/unfocused');\nexport const onOnline = /* @__PURE__ */createAction('__rtkq/online');\nexport const onOffline = /* @__PURE__ */createAction('__rtkq/offline');\nlet initialized = false;\n\n/**\r\n * A utility used to enable `refetchOnMount` and `refetchOnReconnect` behaviors.\r\n * It requires the dispatch method from your store.\r\n * Calling `setupListeners(store.dispatch)` will configure listeners with the recommended defaults,\r\n * but you have the option of providing a callback for more granular control.\r\n *\r\n * @example\r\n * ```ts\r\n * setupListeners(store.dispatch)\r\n * ```\r\n *\r\n * @param dispatch - The dispatch method from your store\r\n * @param customHandler - An optional callback for more granular control over listener behavior\r\n * @returns Return value of the handler.\r\n * The default handler returns an `unsubscribe` method that can be called to remove the listeners.\r\n */\nexport function setupListeners(dispatch: ThunkDispatch<any, any, any>, customHandler?: (dispatch: ThunkDispatch<any, any, any>, actions: {\n  onFocus: typeof onFocus;\n  onFocusLost: typeof onFocusLost;\n  onOnline: typeof onOnline;\n  onOffline: typeof onOffline;\n}) => () => void) {\n  function defaultHandler() {\n    const handleFocus = () => dispatch(onFocus());\n    const handleFocusLost = () => dispatch(onFocusLost());\n    const handleOnline = () => dispatch(onOnline());\n    const handleOffline = () => dispatch(onOffline());\n    const handleVisibilityChange = () => {\n      if (window.document.visibilityState === 'visible') {\n        handleFocus();\n      } else {\n        handleFocusLost();\n      }\n    };\n    if (!initialized) {\n      if (typeof window !== 'undefined' && window.addEventListener) {\n        // Handle focus events\n        window.addEventListener('visibilitychange', handleVisibilityChange, false);\n        window.addEventListener('focus', handleFocus, false);\n\n        // Handle connection events\n        window.addEventListener('online', handleOnline, false);\n        window.addEventListener('offline', handleOffline, false);\n        initialized = true;\n      }\n    }\n    const unsubscribe = () => {\n      window.removeEventListener('focus', handleFocus);\n      window.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n      initialized = false;\n    };\n    return unsubscribe;\n  }\n  return customHandler ? customHandler(dispatch, {\n    onFocus,\n    onFocusLost,\n    onOffline,\n    onOnline\n  }) : defaultHandler();\n}", "import type { Api } from '@reduxjs/toolkit/query';\nimport type { BaseQueryApi, BaseQueryArg, BaseQueryError, BaseQueryExtraOptions, BaseQueryFn, BaseQueryMeta, BaseQueryResult, QueryReturnValue } from './baseQueryTypes';\nimport type { QuerySubState, RootState } from './core';\nimport type { CacheCollectionQueryExtraOptions } from './core/buildMiddleware/cacheCollection';\nimport type { CacheLifecycleMutationExtraOptions, CacheLifecycleQueryExtraOptions } from './core/buildMiddleware/cacheLifecycle';\nimport type { QueryLifecycleMutationExtraOptions, QueryLifecycleQueryExtraOptions } from './core/buildMiddleware/queryLifecycle';\nimport type { SerializeQueryArgs } from './defaultSerializeQueryArgs';\nimport type { NEVER } from './fakeBaseQuery';\nimport type { CastAny, HasRequiredProps, MaybePromise, NonUndefined, OmitFromUnion, UnwrapPromise } from './tsHelpers';\nconst resultType = /* @__PURE__ */Symbol();\nconst baseQuery = /* @__PURE__ */Symbol();\ntype EndpointDefinitionWithQuery<QueryArg, BaseQuery extends BaseQueryFn, ResultType> = {\n  /**\n   * `query` can be a function that returns either a `string` or an `object` which is passed to your `baseQuery`. If you are using [fetchBaseQuery](./fetchBaseQuery), this can return either a `string` or an `object` of properties in `FetchArgs`. If you use your own custom [`baseQuery`](../../rtk-query/usage/customizing-queries), you can customize this behavior to your liking.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"query example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   tagTypes: ['Post'],\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       // highlight-start\n   *       query: () => 'posts',\n   *       // highlight-end\n   *     }),\n   *     addPost: build.mutation<Post, Partial<Post>>({\n   *      // highlight-start\n   *      query: (body) => ({\n   *        url: `posts`,\n   *        method: 'POST',\n   *        body,\n   *      }),\n   *      // highlight-end\n   *      invalidatesTags: [{ type: 'Post', id: 'LIST' }],\n   *    }),\n   *   })\n   * })\n   * ```\n   */\n  query(arg: QueryArg): BaseQueryArg<BaseQuery>;\n  queryFn?: never;\n  /**\n   * A function to manipulate the data returned by a query or mutation.\n   */\n  transformResponse?(baseQueryReturnValue: BaseQueryResult<BaseQuery>, meta: BaseQueryMeta<BaseQuery>, arg: QueryArg): ResultType | Promise<ResultType>;\n  /**\n   * A function to manipulate the data returned by a failed query or mutation.\n   */\n  transformErrorResponse?(baseQueryReturnValue: BaseQueryError<BaseQuery>, meta: BaseQueryMeta<BaseQuery>, arg: QueryArg): unknown;\n  /**\n   * Defaults to `true`.\n   *\n   * Most apps should leave this setting on. The only time it can be a performance issue\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\n   * you're unable to paginate it.\n   *\n   * For details of how this works, please see the below. When it is set to `false`,\n   * every request will cause subscribed components to rerender, even when the data has not changed.\n   *\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\n   */\n  structuralSharing?: boolean;\n};\ntype EndpointDefinitionWithQueryFn<QueryArg, BaseQuery extends BaseQueryFn, ResultType> = {\n  /**\n   * Can be used in place of `query` as an inline function that bypasses `baseQuery` completely for the endpoint.\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Basic queryFn example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *     }),\n   *     flipCoin: build.query<'heads' | 'tails', void>({\n   *       // highlight-start\n   *       queryFn(arg, queryApi, extraOptions, baseQuery) {\n   *         const randomVal = Math.random()\n   *         if (randomVal < 0.45) {\n   *           return { data: 'heads' }\n   *         }\n   *         if (randomVal < 0.9) {\n   *           return { data: 'tails' }\n   *         }\n   *         return { error: { status: 500, statusText: 'Internal Server Error', data: \"Coin landed on its edge!\" } }\n   *       }\n   *       // highlight-end\n   *     })\n   *   })\n   * })\n   * ```\n   */\n  queryFn(arg: QueryArg, api: BaseQueryApi, extraOptions: BaseQueryExtraOptions<BaseQuery>, baseQuery: (arg: Parameters<BaseQuery>[0]) => ReturnType<BaseQuery>): MaybePromise<QueryReturnValue<ResultType, BaseQueryError<BaseQuery>, BaseQueryMeta<BaseQuery>>>;\n  query?: never;\n  transformResponse?: never;\n  transformErrorResponse?: never;\n  /**\n   * Defaults to `true`.\n   *\n   * Most apps should leave this setting on. The only time it can be a performance issue\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\n   * you're unable to paginate it.\n   *\n   * For details of how this works, please see the below. When it is set to `false`,\n   * every request will cause subscribed components to rerender, even when the data has not changed.\n   *\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\n   */\n  structuralSharing?: boolean;\n};\ntype BaseEndpointTypes<QueryArg, BaseQuery extends BaseQueryFn, ResultType> = {\n  QueryArg: QueryArg;\n  BaseQuery: BaseQuery;\n  ResultType: ResultType;\n};\nexport type BaseEndpointDefinition<QueryArg, BaseQuery extends BaseQueryFn, ResultType> = (([CastAny<BaseQueryResult<BaseQuery>, {}>] extends [NEVER] ? never : EndpointDefinitionWithQuery<QueryArg, BaseQuery, ResultType>) | EndpointDefinitionWithQueryFn<QueryArg, BaseQuery, ResultType>) & {\n  /* phantom type */\n  [resultType]?: ResultType;\n  /* phantom type */\n  [baseQuery]?: BaseQuery;\n} & HasRequiredProps<BaseQueryExtraOptions<BaseQuery>, {\n  extraOptions: BaseQueryExtraOptions<BaseQuery>;\n}, {\n  extraOptions?: BaseQueryExtraOptions<BaseQuery>;\n}>;\nexport enum DefinitionType {\n  query = 'query',\n  mutation = 'mutation',\n}\nexport type GetResultDescriptionFn<TagTypes extends string, ResultType, QueryArg, ErrorType, MetaType> = (result: ResultType | undefined, error: ErrorType | undefined, arg: QueryArg, meta: MetaType) => ReadonlyArray<TagDescription<TagTypes>>;\nexport type FullTagDescription<TagType> = {\n  type: TagType;\n  id?: number | string;\n};\nexport type TagDescription<TagType> = TagType | FullTagDescription<TagType>;\nexport type ResultDescription<TagTypes extends string, ResultType, QueryArg, ErrorType, MetaType> = ReadonlyArray<TagDescription<TagTypes>> | GetResultDescriptionFn<TagTypes, ResultType, QueryArg, ErrorType, MetaType>;\ntype QueryTypes<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = BaseEndpointTypes<QueryArg, BaseQuery, ResultType> & {\n  /**\n   * The endpoint definition type. To be used with some internal generic types.\n   * @example\n   * ```ts\n   * const useMyWrappedHook: UseQuery<typeof api.endpoints.query.Types.QueryDefinition> = ...\n   * ```\n   */\n  QueryDefinition: QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n  TagTypes: TagTypes;\n  ReducerPath: ReducerPath;\n};\nexport interface QueryExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> extends CacheLifecycleQueryExtraOptions<ResultType, QueryArg, BaseQuery, ReducerPath>, QueryLifecycleQueryExtraOptions<ResultType, QueryArg, BaseQuery, ReducerPath>, CacheCollectionQueryExtraOptions {\n  type: DefinitionType.query;\n\n  /**\n   * Used by `query` endpoints. Determines which 'tag' is attached to the cached data returned by the query.\n   * Expects an array of tag type strings, an array of objects of tag types with ids, or a function that returns such an array.\n   * 1.  `['Post']` - equivalent to `2`\n   * 2.  `[{ type: 'Post' }]` - equivalent to `1`\n   * 3.  `[{ type: 'Post', id: 1 }]`\n   * 4.  `(result, error, arg) => ['Post']` - equivalent to `5`\n   * 5.  `(result, error, arg) => [{ type: 'Post' }]` - equivalent to `4`\n   * 6.  `(result, error, arg) => [{ type: 'Post', id: 1 }]`\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"providesTags example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   tagTypes: ['Posts'],\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *       // highlight-start\n   *       providesTags: (result) =>\n   *         result\n   *           ? [\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\n   *               { type: 'Posts', id: 'LIST' },\n   *             ]\n   *           : [{ type: 'Posts', id: 'LIST' }],\n   *       // highlight-end\n   *     })\n   *   })\n   * })\n   * ```\n   */\n  providesTags?: ResultDescription<TagTypes, ResultType, QueryArg, BaseQueryError<BaseQuery>, BaseQueryMeta<BaseQuery>>;\n  /**\n   * Not to be used. A query should not invalidate tags in the cache.\n   */\n  invalidatesTags?: never;\n\n  /**\n   * Can be provided to return a custom cache key value based on the query arguments.\n   *\n   * This is primarily intended for cases where a non-serializable value is passed as part of the query arg object and should be excluded from the cache key.  It may also be used for cases where an endpoint should only have a single cache entry, such as an infinite loading / pagination implementation.\n   *\n   * Unlike the `createApi` version which can _only_ return a string, this per-endpoint option can also return an an object, number, or boolean.  If it returns a string, that value will be used as the cache key directly.  If it returns an object / number / boolean, that value will be passed to the built-in `defaultSerializeQueryArgs`.  This simplifies the use case of stripping out args you don't want included in the cache key.\n   *\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"serializeQueryArgs : exclude value\"\n   *\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * interface MyApiClient {\n   *   fetchPost: (id: string) => Promise<Post>\n   * }\n   *\n   * createApi({\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *  endpoints: (build) => ({\n   *    // Example: an endpoint with an API client passed in as an argument,\n   *    // but only the item ID should be used as the cache key\n   *    getPost: build.query<Post, { id: string; client: MyApiClient }>({\n   *      queryFn: async ({ id, client }) => {\n   *        const post = await client.fetchPost(id)\n   *        return { data: post }\n   *      },\n   *      // highlight-start\n   *      serializeQueryArgs: ({ queryArgs, endpointDefinition, endpointName }) => {\n   *        const { id } = queryArgs\n   *        // This can return a string, an object, a number, or a boolean.\n   *        // If it returns an object, number or boolean, that value\n   *        // will be serialized automatically via `defaultSerializeQueryArgs`\n   *        return { id } // omit `client` from the cache key\n   *\n   *        // Alternately, you can use `defaultSerializeQueryArgs` yourself:\n   *        // return defaultSerializeQueryArgs({\n   *        //   endpointName,\n   *        //   queryArgs: { id },\n   *        //   endpointDefinition\n   *        // })\n   *        // Or  create and return a string yourself:\n   *        // return `getPost(${id})`\n   *      },\n   *      // highlight-end\n   *    }),\n   *  }),\n   *})\n   * ```\n   */\n  serializeQueryArgs?: SerializeQueryArgs<QueryArg, string | number | boolean | Record<any, any>>;\n\n  /**\n   * Can be provided to merge an incoming response value into the current cache data.\n   * If supplied, no automatic structural sharing will be applied - it's up to\n   * you to update the cache appropriately.\n   *\n   * Since RTKQ normally replaces cache entries with the new response, you will usually\n   * need to use this with the `serializeQueryArgs` or `forceRefetch` options to keep\n   * an existing cache entry so that it can be updated.\n   *\n   * Since this is wrapped with Immer, you may either mutate the `currentCacheValue` directly,\n   * or return a new value, but _not_ both at once.\n   *\n   * Will only be called if the existing `currentCacheData` is _not_ `undefined` - on first response,\n   * the cache entry will just save the response data directly.\n   *\n   * Useful if you don't want a new request to completely override the current cache value,\n   * maybe because you have manually updated it from another source and don't want those\n   * updates to get lost.\n   *\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"merge: pagination\"\n   *\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * createApi({\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *  endpoints: (build) => ({\n   *    listItems: build.query<string[], number>({\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\n   *     // Only have one cache entry because the arg always maps to one string\n   *     serializeQueryArgs: ({ endpointName }) => {\n   *       return endpointName\n   *      },\n   *      // Always merge incoming data to the cache entry\n   *      merge: (currentCache, newItems) => {\n   *        currentCache.push(...newItems)\n   *      },\n   *      // Refetch when the page arg changes\n   *      forceRefetch({ currentArg, previousArg }) {\n   *        return currentArg !== previousArg\n   *      },\n   *    }),\n   *  }),\n   *})\n   * ```\n   */\n  merge?(currentCacheData: ResultType, responseData: ResultType, otherArgs: {\n    arg: QueryArg;\n    baseQueryMeta: BaseQueryMeta<BaseQuery>;\n    requestId: string;\n    fulfilledTimeStamp: number;\n  }): ResultType | void;\n\n  /**\n   * Check to see if the endpoint should force a refetch in cases where it normally wouldn't.\n   * This is primarily useful for \"infinite scroll\" / pagination use cases where\n   * RTKQ is keeping a single cache entry that is added to over time, in combination\n   * with `serializeQueryArgs` returning a fixed cache key and a `merge` callback\n   * set to add incoming data to the cache entry each time.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"forceRefresh: pagination\"\n   *\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * createApi({\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *  endpoints: (build) => ({\n   *    listItems: build.query<string[], number>({\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\n   *     // Only have one cache entry because the arg always maps to one string\n   *     serializeQueryArgs: ({ endpointName }) => {\n   *       return endpointName\n   *      },\n   *      // Always merge incoming data to the cache entry\n   *      merge: (currentCache, newItems) => {\n   *        currentCache.push(...newItems)\n   *      },\n   *      // Refetch when the page arg changes\n   *      forceRefetch({ currentArg, previousArg }) {\n   *        return currentArg !== previousArg\n   *      },\n   *    }),\n   *  }),\n   *})\n   * ```\n   */\n  forceRefetch?(params: {\n    currentArg: QueryArg | undefined;\n    previousArg: QueryArg | undefined;\n    state: RootState<any, any, string>;\n    endpointState?: QuerySubState<any>;\n  }): boolean;\n\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n  Types?: QueryTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n}\nexport type QueryDefinition<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> & QueryExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>;\ntype MutationTypes<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = BaseEndpointTypes<QueryArg, BaseQuery, ResultType> & {\n  /**\n   * The endpoint definition type. To be used with some internal generic types.\n   * @example\n   * ```ts\n   * const useMyWrappedHook: UseMutation<typeof api.endpoints.query.Types.MutationDefinition> = ...\n   * ```\n   */\n  MutationDefinition: MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n  TagTypes: TagTypes;\n  ReducerPath: ReducerPath;\n};\nexport interface MutationExtraOptions<TagTypes extends string, ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> extends CacheLifecycleMutationExtraOptions<ResultType, QueryArg, BaseQuery, ReducerPath>, QueryLifecycleMutationExtraOptions<ResultType, QueryArg, BaseQuery, ReducerPath> {\n  type: DefinitionType.mutation;\n\n  /**\n   * Used by `mutation` endpoints. Determines which cached data should be either re-fetched or removed from the cache.\n   * Expects the same shapes as `providesTags`.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"invalidatesTags example\"\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   tagTypes: ['Posts'],\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *       providesTags: (result) =>\n   *         result\n   *           ? [\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\n   *               { type: 'Posts', id: 'LIST' },\n   *             ]\n   *           : [{ type: 'Posts', id: 'LIST' }],\n   *     }),\n   *     addPost: build.mutation<Post, Partial<Post>>({\n   *       query(body) {\n   *         return {\n   *           url: `posts`,\n   *           method: 'POST',\n   *           body,\n   *         }\n   *       },\n   *       // highlight-start\n   *       invalidatesTags: [{ type: 'Posts', id: 'LIST' }],\n   *       // highlight-end\n   *     }),\n   *   })\n   * })\n   * ```\n   */\n  invalidatesTags?: ResultDescription<TagTypes, ResultType, QueryArg, BaseQueryError<BaseQuery>, BaseQueryMeta<BaseQuery>>;\n  /**\n   * Not to be used. A mutation should not provide tags to the cache.\n   */\n  providesTags?: never;\n\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n  Types?: MutationTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n}\nexport type MutationDefinition<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> & MutationExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>;\nexport type EndpointDefinition<QueryArg, BaseQuery extends BaseQueryFn, TagTypes extends string, ResultType, ReducerPath extends string = string> = QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath> | MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\nexport type EndpointDefinitions = Record<string, EndpointDefinition<any, any, any, any>>;\nexport function isQueryDefinition(e: EndpointDefinition<any, any, any, any>): e is QueryDefinition<any, any, any, any> {\n  return e.type === DefinitionType.query;\n}\nexport function isMutationDefinition(e: EndpointDefinition<any, any, any, any>): e is MutationDefinition<any, any, any, any> {\n  return e.type === DefinitionType.mutation;\n}\nexport type EndpointBuilder<BaseQuery extends BaseQueryFn, TagTypes extends string, ReducerPath extends string> = {\n  /**\n   * An endpoint definition that retrieves data, and may provide tags to the cache.\n   *\n   * @example\n   * ```js\n   * // codeblock-meta title=\"Example of all query endpoint options\"\n   * const api = createApi({\n   *  baseQuery,\n   *  endpoints: (build) => ({\n   *    getPost: build.query({\n   *      query: (id) => ({ url: `post/${id}` }),\n   *      // Pick out data and prevent nested properties in a hook or selector\n   *      transformResponse: (response) => response.data,\n   *      // Pick out error and prevent nested properties in a hook or selector\n   *      transformErrorResponse: (response) => response.error,\n   *      // `result` is the server response\n   *      providesTags: (result, error, id) => [{ type: 'Post', id }],\n   *      // trigger side effects or optimistic updates\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry, updateCachedData }) {},\n   *      // handle subscriptions etc\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry, updateCachedData }) {},\n   *    }),\n   *  }),\n   *});\n   *```\n   */\n  query<ResultType, QueryArg>(definition: OmitFromUnion<QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>, 'type'>): QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n  /**\n   * An endpoint definition that alters data on the server or will possibly invalidate the cache.\n   *\n   * @example\n   * ```js\n   * // codeblock-meta title=\"Example of all mutation endpoint options\"\n   * const api = createApi({\n   *   baseQuery,\n   *   endpoints: (build) => ({\n   *     updatePost: build.mutation({\n   *       query: ({ id, ...patch }) => ({ url: `post/${id}`, method: 'PATCH', body: patch }),\n   *       // Pick out data and prevent nested properties in a hook or selector\n   *       transformResponse: (response) => response.data,\n   *       // Pick out error and prevent nested properties in a hook or selector\n   *       transformErrorResponse: (response) => response.error,\n   *       // `result` is the server response\n   *       invalidatesTags: (result, error, id) => [{ type: 'Post', id }],\n   *      // trigger side effects or optimistic updates\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry }) {},\n   *      // handle subscriptions etc\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry }) {},\n   *     }),\n   *   }),\n   * });\n   * ```\n   */\n  mutation<ResultType, QueryArg>(definition: OmitFromUnion<MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>, 'type'>): MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>;\n};\nexport type AssertTagTypes = <T extends FullTagDescription<string>>(t: T) => T;\nexport function calculateProvidedBy<ResultType, QueryArg, ErrorType, MetaType>(description: ResultDescription<string, ResultType, QueryArg, ErrorType, MetaType> | undefined, result: ResultType | undefined, error: ErrorType | undefined, queryArg: QueryArg, meta: MetaType | undefined, assertTagTypes: AssertTagTypes): readonly FullTagDescription<string>[] {\n  if (isFunction(description)) {\n    return description((result as ResultType), (error as undefined), queryArg, (meta as MetaType)).map(expandTagDescription).map(assertTagTypes);\n  }\n  if (Array.isArray(description)) {\n    return description.map(expandTagDescription).map(assertTagTypes);\n  }\n  return [];\n}\nfunction isFunction<T>(t: T): t is Extract<T, Function> {\n  return typeof t === 'function';\n}\nexport function expandTagDescription(description: TagDescription<string>): FullTagDescription<string> {\n  return typeof description === 'string' ? {\n    type: description\n  } : description;\n}\nexport type QueryArgFrom<D extends BaseEndpointDefinition<any, any, any>> = D extends BaseEndpointDefinition<infer QA, any, any> ? QA : unknown;\nexport type ResultTypeFrom<D extends BaseEndpointDefinition<any, any, any>> = D extends BaseEndpointDefinition<any, any, infer RT> ? RT : unknown;\nexport type ReducerPathFrom<D extends EndpointDefinition<any, any, any, any, any>> = D extends EndpointDefinition<any, any, any, any, infer RP> ? RP : unknown;\nexport type TagTypesFrom<D extends EndpointDefinition<any, any, any, any>> = D extends EndpointDefinition<any, any, infer RP, any> ? RP : unknown;\nexport type TagTypesFromApi<T> = T extends Api<any, any, any, infer TagTypes> ? TagTypes : never;\nexport type DefinitionsFromApi<T> = T extends Api<any, infer Definitions, any, any> ? Definitions : never;\nexport type TransformedResponse<NewDefinitions extends EndpointDefinitions, K, ResultType> = K extends keyof NewDefinitions ? NewDefinitions[K]['transformResponse'] extends undefined ? ResultType : UnwrapPromise<ReturnType<NonUndefined<NewDefinitions[K]['transformResponse']>>> : ResultType;\nexport type OverrideResultType<Definition, NewResultType> = Definition extends QueryDefinition<infer QueryArg, infer BaseQuery, infer TagTypes, any, infer ReducerPath> ? QueryDefinition<QueryArg, BaseQuery, TagTypes, NewResultType, ReducerPath> : Definition extends MutationDefinition<infer QueryArg, infer BaseQuery, infer TagTypes, any, infer ReducerPath> ? MutationDefinition<QueryArg, BaseQuery, TagTypes, NewResultType, ReducerPath> : never;\nexport type UpdateDefinitions<Definitions extends EndpointDefinitions, NewTagTypes extends string, NewDefinitions extends EndpointDefinitions> = { [K in keyof Definitions]: Definitions[K] extends QueryDefinition<infer QueryArg, infer BaseQuery, any, infer ResultType, infer ReducerPath> ? QueryDefinition<QueryArg, BaseQuery, NewTagTypes, TransformedResponse<NewDefinitions, K, ResultType>, ReducerPath> : Definitions[K] extends MutationDefinition<infer QueryArg, infer BaseQuery, any, infer ResultType, infer ReducerPath> ? MutationDefinition<QueryArg, BaseQuery, NewTagTypes, TransformedResponse<NewDefinitions, K, ResultType>, ReducerPath> : never };", "import type { AsyncThunk, AsyncThunkPayloadCreator, Draft, ThunkAction, ThunkDispatch, UnknownAction } from '@reduxjs/toolkit';\nimport type { Patch } from 'immer';\nimport { isDraftable, produceWithPatches } from 'immer';\nimport type { Api, ApiContext } from '../apiTypes';\nimport type { BaseQueryError, BaseQueryFn, QueryReturnValue } from '../baseQueryTypes';\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { AssertTagTypes, EndpointDefinition, EndpointDefinitions, MutationDefinition, QueryArgFrom, QueryDefinition, ResultTypeFrom } from '../endpointDefinitions';\nimport { calculateProvidedBy, isQueryDefinition } from '../endpointDefinitions';\nimport { HandledError } from '../HandledError';\nimport type { UnwrapPromise } from '../tsHelpers';\nimport type { QueryKeys, QuerySubstateIdentifier, RootState } from './apiState';\nimport { QueryStatus } from './apiState';\nimport type { QueryActionCreatorResult, StartQueryActionCreatorOptions } from './buildInitiate';\nimport { forceQueryFnSymbol, isUpsertQuery } from './buildInitiate';\nimport type { ApiEndpointQuery, PrefetchOptions } from './module';\nimport { createAsyncThunk, isAllOf, isFulfilled, isPending, isRejected, isRejectedWithValue, SHOULD_AUTOBATCH } from './rtkImports';\nexport type BuildThunksApiEndpointQuery<Definition extends QueryDefinition<any, any, any, any, any>> = Matchers<QueryThunk, Definition>;\nexport type BuildThunksApiEndpointMutation<Definition extends MutationDefinition<any, any, any, any, any>> = Matchers<MutationThunk, Definition>;\ntype EndpointThunk<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = Definition extends EndpointDefinition<infer QueryArg, infer BaseQueryFn, any, infer ResultType> ? Thunk extends AsyncThunk<unknown, infer ATArg, infer ATConfig> ? AsyncThunk<ResultType, ATArg & {\n  originalArgs: QueryArg;\n}, ATConfig & {\n  rejectValue: BaseQueryError<BaseQueryFn>;\n}> : never : never;\nexport type PendingAction<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = ReturnType<EndpointThunk<Thunk, Definition>['pending']>;\nexport type FulfilledAction<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = ReturnType<EndpointThunk<Thunk, Definition>['fulfilled']>;\nexport type RejectedAction<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> = ReturnType<EndpointThunk<Thunk, Definition>['rejected']>;\nexport type Matcher<M> = (value: any) => value is M;\nexport interface Matchers<Thunk extends QueryThunk | MutationThunk, Definition extends EndpointDefinition<any, any, any, any>> {\n  matchPending: Matcher<PendingAction<Thunk, Definition>>;\n  matchFulfilled: Matcher<FulfilledAction<Thunk, Definition>>;\n  matchRejected: Matcher<RejectedAction<Thunk, Definition>>;\n}\nexport type QueryThunkArg = QuerySubstateIdentifier & StartQueryActionCreatorOptions & {\n  type: 'query';\n  originalArgs: unknown;\n  endpointName: string;\n};\ntype MutationThunkArg = {\n  type: 'mutation';\n  originalArgs: unknown;\n  endpointName: string;\n  track?: boolean;\n  fixedCacheKey?: string;\n};\nexport type ThunkResult = unknown;\nexport type ThunkApiMetaConfig = {\n  pendingMeta: {\n    startedTimeStamp: number;\n    [SHOULD_AUTOBATCH]: true;\n  };\n  fulfilledMeta: {\n    fulfilledTimeStamp: number;\n    baseQueryMeta: unknown;\n    [SHOULD_AUTOBATCH]: true;\n  };\n  rejectedMeta: {\n    baseQueryMeta: unknown;\n    [SHOULD_AUTOBATCH]: true;\n  };\n};\nexport type QueryThunk = AsyncThunk<ThunkResult, QueryThunkArg, ThunkApiMetaConfig>;\nexport type MutationThunk = AsyncThunk<ThunkResult, MutationThunkArg, ThunkApiMetaConfig>;\nfunction defaultTransformResponse(baseQueryReturnValue: unknown) {\n  return baseQueryReturnValue;\n}\nexport type MaybeDrafted<T> = T | Draft<T>;\nexport type Recipe<T> = (data: MaybeDrafted<T>) => void | MaybeDrafted<T>;\nexport type UpsertRecipe<T> = (data: MaybeDrafted<T> | undefined) => void | MaybeDrafted<T>;\nexport type PatchQueryDataThunk<Definitions extends EndpointDefinitions, PartialState> = <EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>, patches: readonly Patch[], updateProvided?: boolean) => ThunkAction<void, PartialState, any, UnknownAction>;\nexport type UpdateQueryDataThunk<Definitions extends EndpointDefinitions, PartialState> = <EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>, updateRecipe: Recipe<ResultTypeFrom<Definitions[EndpointName]>>, updateProvided?: boolean) => ThunkAction<PatchCollection, PartialState, any, UnknownAction>;\nexport type UpsertQueryDataThunk<Definitions extends EndpointDefinitions, PartialState> = <EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>, value: ResultTypeFrom<Definitions[EndpointName]>) => ThunkAction<QueryActionCreatorResult<Definitions[EndpointName] extends QueryDefinition<any, any, any, any> ? Definitions[EndpointName] : never>, PartialState, any, UnknownAction>;\n\n/**\n * An object returned from dispatching a `api.util.updateQueryData` call.\n */\nexport type PatchCollection = {\n  /**\n   * An `immer` Patch describing the cache update.\n   */\n  patches: Patch[];\n  /**\n   * An `immer` Patch to revert the cache update.\n   */\n  inversePatches: Patch[];\n  /**\n   * A function that will undo the cache update.\n   */\n  undo: () => void;\n};\nexport function buildThunks<BaseQuery extends BaseQueryFn, ReducerPath extends string, Definitions extends EndpointDefinitions>({\n  reducerPath,\n  baseQuery,\n  context: {\n    endpointDefinitions\n  },\n  serializeQueryArgs,\n  api,\n  assertTagType\n}: {\n  baseQuery: BaseQuery;\n  reducerPath: ReducerPath;\n  context: ApiContext<Definitions>;\n  serializeQueryArgs: InternalSerializeQueryArgs;\n  api: Api<BaseQuery, Definitions, ReducerPath, any>;\n  assertTagType: AssertTagTypes;\n}) {\n  type State = RootState<any, string, ReducerPath>;\n  const patchQueryData: PatchQueryDataThunk<EndpointDefinitions, State> = (endpointName, args, patches, updateProvided) => (dispatch, getState) => {\n    const endpointDefinition = endpointDefinitions[endpointName];\n    const queryCacheKey = serializeQueryArgs({\n      queryArgs: args,\n      endpointDefinition,\n      endpointName\n    });\n    dispatch(api.internalActions.queryResultPatched({\n      queryCacheKey,\n      patches\n    }));\n    if (!updateProvided) {\n      return;\n    }\n    const newValue = api.endpoints[endpointName].select(args)((\n    // Work around TS 4.1 mismatch\n    getState() as RootState<any, any, any>));\n    const providedTags = calculateProvidedBy(endpointDefinition.providesTags, newValue.data, undefined, args, {}, assertTagType);\n    dispatch(api.internalActions.updateProvidedBy({\n      queryCacheKey,\n      providedTags\n    }));\n  };\n  const updateQueryData: UpdateQueryDataThunk<EndpointDefinitions, State> = (endpointName, args, updateRecipe, updateProvided = true) => (dispatch, getState) => {\n    const endpointDefinition = api.endpoints[endpointName];\n    const currentState = endpointDefinition.select(args)((\n    // Work around TS 4.1 mismatch\n    getState() as RootState<any, any, any>));\n    const ret: PatchCollection = {\n      patches: [],\n      inversePatches: [],\n      undo: () => dispatch(api.util.patchQueryData(endpointName, args, ret.inversePatches, updateProvided))\n    };\n    if (currentState.status === QueryStatus.uninitialized) {\n      return ret;\n    }\n    let newValue;\n    if ('data' in currentState) {\n      if (isDraftable(currentState.data)) {\n        const [value, patches, inversePatches] = produceWithPatches(currentState.data, updateRecipe);\n        ret.patches.push(...patches);\n        ret.inversePatches.push(...inversePatches);\n        newValue = value;\n      } else {\n        newValue = updateRecipe(currentState.data);\n        ret.patches.push({\n          op: 'replace',\n          path: [],\n          value: newValue\n        });\n        ret.inversePatches.push({\n          op: 'replace',\n          path: [],\n          value: currentState.data\n        });\n      }\n    }\n    if (ret.patches.length === 0) {\n      return ret;\n    }\n    dispatch(api.util.patchQueryData(endpointName, args, ret.patches, updateProvided));\n    return ret;\n  };\n  const upsertQueryData: UpsertQueryDataThunk<Definitions, State> = (endpointName, args, value) => dispatch => {\n    return dispatch((api.endpoints[endpointName] as ApiEndpointQuery<QueryDefinition<any, any, any, any, any>, Definitions>).initiate(args, {\n      subscribe: false,\n      forceRefetch: true,\n      [forceQueryFnSymbol]: () => ({\n        data: value\n      })\n    }));\n  };\n  const executeEndpoint: AsyncThunkPayloadCreator<ThunkResult, QueryThunkArg | MutationThunkArg, ThunkApiMetaConfig & {\n    state: RootState<any, string, ReducerPath>;\n  }> = async (arg, {\n    signal,\n    abort,\n    rejectWithValue,\n    fulfillWithValue,\n    dispatch,\n    getState,\n    extra\n  }) => {\n    const endpointDefinition = endpointDefinitions[arg.endpointName];\n    try {\n      let transformResponse: (baseQueryReturnValue: any, meta: any, arg: any) => any = defaultTransformResponse;\n      let result: QueryReturnValue;\n      const baseQueryApi = {\n        signal,\n        abort,\n        dispatch,\n        getState,\n        extra,\n        endpoint: arg.endpointName,\n        type: arg.type,\n        forced: arg.type === 'query' ? isForcedQuery(arg, getState()) : undefined\n      };\n      const forceQueryFn = arg.type === 'query' ? arg[forceQueryFnSymbol] : undefined;\n      if (forceQueryFn) {\n        result = forceQueryFn();\n      } else if (endpointDefinition.query) {\n        result = await baseQuery(endpointDefinition.query(arg.originalArgs), baseQueryApi, (endpointDefinition.extraOptions as any));\n        if (endpointDefinition.transformResponse) {\n          transformResponse = endpointDefinition.transformResponse;\n        }\n      } else {\n        result = await endpointDefinition.queryFn(arg.originalArgs, baseQueryApi, (endpointDefinition.extraOptions as any), arg => baseQuery(arg, baseQueryApi, (endpointDefinition.extraOptions as any)));\n      }\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n        const what = endpointDefinition.query ? '`baseQuery`' : '`queryFn`';\n        let err: undefined | string;\n        if (!result) {\n          err = `${what} did not return anything.`;\n        } else if (typeof result !== 'object') {\n          err = `${what} did not return an object.`;\n        } else if (result.error && result.data) {\n          err = `${what} returned an object containing both \\`error\\` and \\`result\\`.`;\n        } else if (result.error === undefined && result.data === undefined) {\n          err = `${what} returned an object containing neither a valid \\`error\\` and \\`result\\`. At least one of them should not be \\`undefined\\``;\n        } else {\n          for (const key of Object.keys(result)) {\n            if (key !== 'error' && key !== 'data' && key !== 'meta') {\n              err = `The object returned by ${what} has the unknown property ${key}.`;\n              break;\n            }\n          }\n        }\n        if (err) {\n          console.error(`Error encountered handling the endpoint ${arg.endpointName}.\n              ${err}\n              It needs to return an object with either the shape \\`{ data: <value> }\\` or \\`{ error: <value> }\\` that may contain an optional \\`meta\\` property.\n              Object returned was:`, result);\n        }\n      }\n      if (result.error) throw new HandledError(result.error, result.meta);\n      return fulfillWithValue(await transformResponse(result.data, result.meta, arg.originalArgs), {\n        fulfilledTimeStamp: Date.now(),\n        baseQueryMeta: result.meta,\n        [SHOULD_AUTOBATCH]: true\n      });\n    } catch (error) {\n      let catchedError = error;\n      if (catchedError instanceof HandledError) {\n        let transformErrorResponse: (baseQueryReturnValue: any, meta: any, arg: any) => any = defaultTransformResponse;\n        if (endpointDefinition.query && endpointDefinition.transformErrorResponse) {\n          transformErrorResponse = endpointDefinition.transformErrorResponse;\n        }\n        try {\n          return rejectWithValue(await transformErrorResponse(catchedError.value, catchedError.meta, arg.originalArgs), {\n            baseQueryMeta: catchedError.meta,\n            [SHOULD_AUTOBATCH]: true\n          });\n        } catch (e) {\n          catchedError = e;\n        }\n      }\n      if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n        console.error(`An unhandled error occurred processing a request for the endpoint \"${arg.endpointName}\".\nIn the case of an unhandled error, no tags will be \"provided\" or \"invalidated\".`, catchedError);\n      } else {\n        console.error(catchedError);\n      }\n      throw catchedError;\n    }\n  };\n  function isForcedQuery(arg: QueryThunkArg, state: RootState<any, string, ReducerPath>) {\n    const requestState = state[reducerPath]?.queries?.[arg.queryCacheKey];\n    const baseFetchOnMountOrArgChange = state[reducerPath]?.config.refetchOnMountOrArgChange;\n    const fulfilledVal = requestState?.fulfilledTimeStamp;\n    const refetchVal = arg.forceRefetch ?? (arg.subscribe && baseFetchOnMountOrArgChange);\n    if (refetchVal) {\n      // Return if it's true or compare the dates because it must be a number\n      return refetchVal === true || (Number(new Date()) - Number(fulfilledVal)) / 1000 >= refetchVal;\n    }\n    return false;\n  }\n  const queryThunk = createAsyncThunk<ThunkResult, QueryThunkArg, ThunkApiMetaConfig & {\n    state: RootState<any, string, ReducerPath>;\n  }>(`${reducerPath}/executeQuery`, executeEndpoint, {\n    getPendingMeta() {\n      return {\n        startedTimeStamp: Date.now(),\n        [SHOULD_AUTOBATCH]: true\n      };\n    },\n    condition(queryThunkArgs, {\n      getState\n    }) {\n      const state = getState();\n      const requestState = state[reducerPath]?.queries?.[queryThunkArgs.queryCacheKey];\n      const fulfilledVal = requestState?.fulfilledTimeStamp;\n      const currentArg = queryThunkArgs.originalArgs;\n      const previousArg = requestState?.originalArgs;\n      const endpointDefinition = endpointDefinitions[queryThunkArgs.endpointName];\n\n      // Order of these checks matters.\n      // In order for `upsertQueryData` to successfully run while an existing request is in flight,\n      /// we have to check for that first, otherwise `queryThunk` will bail out and not run at all.\n      if (isUpsertQuery(queryThunkArgs)) {\n        return true;\n      }\n\n      // Don't retry a request that's currently in-flight\n      if (requestState?.status === 'pending') {\n        return false;\n      }\n\n      // if this is forced, continue\n      if (isForcedQuery(queryThunkArgs, state)) {\n        return true;\n      }\n      if (isQueryDefinition(endpointDefinition) && endpointDefinition?.forceRefetch?.({\n        currentArg,\n        previousArg,\n        endpointState: requestState,\n        state\n      })) {\n        return true;\n      }\n\n      // Pull from the cache unless we explicitly force refetch or qualify based on time\n      if (fulfilledVal) {\n        // Value is cached and we didn't specify to refresh, skip it.\n        return false;\n      }\n      return true;\n    },\n    dispatchConditionRejection: true\n  });\n  const mutationThunk = createAsyncThunk<ThunkResult, MutationThunkArg, ThunkApiMetaConfig & {\n    state: RootState<any, string, ReducerPath>;\n  }>(`${reducerPath}/executeMutation`, executeEndpoint, {\n    getPendingMeta() {\n      return {\n        startedTimeStamp: Date.now(),\n        [SHOULD_AUTOBATCH]: true\n      };\n    }\n  });\n  const hasTheForce = (options: any): options is {\n    force: boolean;\n  } => 'force' in options;\n  const hasMaxAge = (options: any): options is {\n    ifOlderThan: false | number;\n  } => 'ifOlderThan' in options;\n  const prefetch = <EndpointName extends QueryKeys<Definitions>,>(endpointName: EndpointName, arg: any, options: PrefetchOptions): ThunkAction<void, any, any, UnknownAction> => (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\n    const force = hasTheForce(options) && options.force;\n    const maxAge = hasMaxAge(options) && options.ifOlderThan;\n    const queryAction = (force: boolean = true) => {\n      const options = {\n        forceRefetch: force,\n        isPrefetch: true\n      };\n      return (api.endpoints[endpointName] as ApiEndpointQuery<any, any>).initiate(arg, options);\n    };\n    const latestStateValue = (api.endpoints[endpointName] as ApiEndpointQuery<any, any>).select(arg)(getState());\n    if (force) {\n      dispatch(queryAction());\n    } else if (maxAge) {\n      const lastFulfilledTs = latestStateValue?.fulfilledTimeStamp;\n      if (!lastFulfilledTs) {\n        dispatch(queryAction());\n        return;\n      }\n      const shouldRetrigger = (Number(new Date()) - Number(new Date(lastFulfilledTs))) / 1000 >= maxAge;\n      if (shouldRetrigger) {\n        dispatch(queryAction());\n      }\n    } else {\n      // If prefetching with no options, just let it try\n      dispatch(queryAction(false));\n    }\n  };\n  function matchesEndpoint(endpointName: string) {\n    return (action: any): action is UnknownAction => action?.meta?.arg?.endpointName === endpointName;\n  }\n  function buildMatchThunkActions<Thunk extends AsyncThunk<any, QueryThunkArg, ThunkApiMetaConfig> | AsyncThunk<any, MutationThunkArg, ThunkApiMetaConfig>>(thunk: Thunk, endpointName: string) {\n    return ({\n      matchPending: isAllOf(isPending(thunk), matchesEndpoint(endpointName)),\n      matchFulfilled: isAllOf(isFulfilled(thunk), matchesEndpoint(endpointName)),\n      matchRejected: isAllOf(isRejected(thunk), matchesEndpoint(endpointName))\n    } as Matchers<Thunk, any>);\n  }\n  return {\n    queryThunk,\n    mutationThunk,\n    prefetch,\n    updateQueryData,\n    upsertQueryData,\n    patchQueryData,\n    buildMatchThunkActions\n  };\n}\nexport function calculateProvidedByThunk(action: UnwrapPromise<ReturnType<ReturnType<QueryThunk>> | ReturnType<ReturnType<MutationThunk>>>, type: 'providesTags' | 'invalidatesTags', endpointDefinitions: EndpointDefinitions, assertTagType: AssertTagTypes) {\n  return calculateProvidedBy(endpointDefinitions[action.meta.arg.endpointName][type], isFulfilled(action) ? action.payload : undefined, isRejectedWithValue(action) ? action.payload : undefined, action.meta.arg.originalArgs, 'baseQueryMeta' in action.meta ? action.meta.baseQueryMeta : undefined, assertTagType);\n}", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { SerializedError, ThunkAction, UnknownAction } from '@reduxjs/toolkit';\nimport type { Dispatch } from 'redux';\nimport type { SafePromise } from '../../tsHelpers';\nimport { asSafePromise } from '../../tsHelpers';\nimport type { Api, ApiContext } from '../apiTypes';\nimport type { BaseQueryError, QueryReturnValue } from '../baseQueryTypes';\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { EndpointDefinitions, MutationDefinition, QueryArgFrom, QueryDefinition, ResultTypeFrom } from '../endpointDefinitions';\nimport { countObjectKeys, isNotNullish } from '../utils';\nimport type { SubscriptionOptions } from './apiState';\nimport type { QueryResultSelectorResult } from './buildSelectors';\nimport type { MutationThunk, QueryThunk, QueryThunkArg } from './buildThunks';\nimport type { ApiEndpointQuery } from './module';\nexport type BuildInitiateApiEndpointQuery<Definition extends QueryDefinition<any, any, any, any, any>> = {\n  initiate: StartQueryActionCreator<Definition>;\n};\nexport type BuildInitiateApiEndpointMutation<Definition extends MutationDefinition<any, any, any, any, any>> = {\n  initiate: StartMutationActionCreator<Definition>;\n};\nexport const forceQueryFnSymbol = Symbol('forceQueryFn');\nexport const isUpsertQuery = (arg: QueryThunkArg) => typeof arg[forceQueryFnSymbol] === 'function';\nexport type StartQueryActionCreatorOptions = {\n  subscribe?: boolean;\n  forceRefetch?: boolean | number;\n  subscriptionOptions?: SubscriptionOptions;\n  [forceQueryFnSymbol]?: () => QueryReturnValue;\n};\ntype StartQueryActionCreator<D extends QueryDefinition<any, any, any, any, any>> = (arg: QueryArgFrom<D>, options?: StartQueryActionCreatorOptions) => ThunkAction<QueryActionCreatorResult<D>, any, any, UnknownAction>;\nexport type QueryActionCreatorResult<D extends QueryDefinition<any, any, any, any>> = SafePromise<QueryResultSelectorResult<D>> & {\n  arg: QueryArgFrom<D>;\n  requestId: string;\n  subscriptionOptions: SubscriptionOptions | undefined;\n  abort(): void;\n  unwrap(): Promise<ResultTypeFrom<D>>;\n  unsubscribe(): void;\n  refetch(): QueryActionCreatorResult<D>;\n  updateSubscriptionOptions(options: SubscriptionOptions): void;\n  queryCacheKey: string;\n};\ntype StartMutationActionCreator<D extends MutationDefinition<any, any, any, any>> = (arg: QueryArgFrom<D>, options?: {\n  /**\n   * If this mutation should be tracked in the store.\n   * If you just want to manually trigger this mutation using `dispatch` and don't care about the\n   * result, state & potential errors being held in store, you can set this to false.\n   * (defaults to `true`)\n   */\n  track?: boolean;\n  fixedCacheKey?: string;\n}) => ThunkAction<MutationActionCreatorResult<D>, any, any, UnknownAction>;\nexport type MutationActionCreatorResult<D extends MutationDefinition<any, any, any, any>> = SafePromise<{\n  data: ResultTypeFrom<D>;\n  error?: undefined;\n} | {\n  data?: undefined;\n  error: Exclude<BaseQueryError<D extends MutationDefinition<any, infer BaseQuery, any, any> ? BaseQuery : never>, undefined> | SerializedError;\n}> & {\n  /** @internal */\n  arg: {\n    /**\n     * The name of the given endpoint for the mutation\n     */\n    endpointName: string;\n    /**\n     * The original arguments supplied to the mutation call\n     */\n    originalArgs: QueryArgFrom<D>;\n    /**\n     * Whether the mutation is being tracked in the store.\n     */\n    track?: boolean;\n    fixedCacheKey?: string;\n  };\n  /**\n   * A unique string generated for the request sequence\n   */\n  requestId: string;\n\n  /**\n   * A method to cancel the mutation promise. Note that this is not intended to prevent the mutation\n   * that was fired off from reaching the server, but only to assist in handling the response.\n   *\n   * Calling `abort()` prior to the promise resolving will force it to reach the error state with\n   * the serialized error:\n   * `{ name: 'AbortError', message: 'Aborted' }`\n   *\n   * @example\n   * ```ts\n   * const [updateUser] = useUpdateUserMutation();\n   *\n   * useEffect(() => {\n   *   const promise = updateUser(id);\n   *   promise\n   *     .unwrap()\n   *     .catch((err) => {\n   *       if (err.name === 'AbortError') return;\n   *       // else handle the unexpected error\n   *     })\n   *\n   *   return () => {\n   *     promise.abort();\n   *   }\n   * }, [id, updateUser])\n   * ```\n   */\n  abort(): void;\n  /**\n   * Unwraps a mutation call to provide the raw response/error.\n   *\n   * @remarks\n   * If you need to access the error or success payload immediately after a mutation, you can chain .unwrap().\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Using .unwrap\"\n   * addPost({ id: 1, name: 'Example' })\n   *   .unwrap()\n   *   .then((payload) => console.log('fulfilled', payload))\n   *   .catch((error) => console.error('rejected', error));\n   * ```\n   *\n   * @example\n   * ```ts\n   * // codeblock-meta title=\"Using .unwrap with async await\"\n   * try {\n   *   const payload = await addPost({ id: 1, name: 'Example' }).unwrap();\n   *   console.log('fulfilled', payload)\n   * } catch (error) {\n   *   console.error('rejected', error);\n   * }\n   * ```\n   */\n  unwrap(): Promise<ResultTypeFrom<D>>;\n  /**\n   * A method to manually unsubscribe from the mutation call, meaning it will be removed from cache after the usual caching grace period.\n   The value returned by the hook will reset to `isUninitialized` afterwards.\n   */\n  reset(): void;\n};\nexport function buildInitiate({\n  serializeQueryArgs,\n  queryThunk,\n  mutationThunk,\n  api,\n  context\n}: {\n  serializeQueryArgs: InternalSerializeQueryArgs;\n  queryThunk: QueryThunk;\n  mutationThunk: MutationThunk;\n  api: Api<any, EndpointDefinitions, any, any>;\n  context: ApiContext<EndpointDefinitions>;\n}) {\n  const runningQueries: Map<Dispatch, Record<string, QueryActionCreatorResult<any> | undefined>> = new Map();\n  const runningMutations: Map<Dispatch, Record<string, MutationActionCreatorResult<any> | undefined>> = new Map();\n  const {\n    unsubscribeQueryResult,\n    removeMutationResult,\n    updateSubscriptionOptions\n  } = api.internalActions;\n  return {\n    buildInitiateQuery,\n    buildInitiateMutation,\n    getRunningQueryThunk,\n    getRunningMutationThunk,\n    getRunningQueriesThunk,\n    getRunningMutationsThunk\n  };\n  function getRunningQueryThunk(endpointName: string, queryArgs: any) {\n    return (dispatch: Dispatch) => {\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      const queryCacheKey = serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      });\n      return (runningQueries.get(dispatch)?.[queryCacheKey] as QueryActionCreatorResult<never> | undefined);\n    };\n  }\n  function getRunningMutationThunk(\n  /**\n   * this is only here to allow TS to infer the result type by input value\n   * we could use it to validate the result, but it's probably not necessary\n   */\n  _endpointName: string, fixedCacheKeyOrRequestId: string) {\n    return (dispatch: Dispatch) => {\n      return (runningMutations.get(dispatch)?.[fixedCacheKeyOrRequestId] as MutationActionCreatorResult<never> | undefined);\n    };\n  }\n  function getRunningQueriesThunk() {\n    return (dispatch: Dispatch) => Object.values(runningQueries.get(dispatch) || {}).filter(isNotNullish);\n  }\n  function getRunningMutationsThunk() {\n    return (dispatch: Dispatch) => Object.values(runningMutations.get(dispatch) || {}).filter(isNotNullish);\n  }\n  function middlewareWarning(dispatch: Dispatch) {\n    if (process.env.NODE_ENV !== 'production') {\n      if ((middlewareWarning as any).triggered) return;\n      const returnedValue = dispatch(api.internalActions.internal_getRTKQSubscriptions());\n      (middlewareWarning as any).triggered = true;\n\n      // The RTKQ middleware should return the internal state object,\n      // but it should _not_ be the action object.\n      if (typeof returnedValue !== 'object' || typeof returnedValue?.type === 'string') {\n        // Otherwise, must not have been added\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(34) : `Warning: Middleware for RTK-Query API at reducerPath \"${api.reducerPath}\" has not been added to the store.\nYou must add the middleware for RTK-Query to function correctly!`);\n      }\n    }\n  }\n  function buildInitiateQuery(endpointName: string, endpointDefinition: QueryDefinition<any, any, any, any>) {\n    const queryAction: StartQueryActionCreator<any> = (arg, {\n      subscribe = true,\n      forceRefetch,\n      subscriptionOptions,\n      [forceQueryFnSymbol]: forceQueryFn,\n      ...rest\n    } = {}) => (dispatch, getState) => {\n      const queryCacheKey = serializeQueryArgs({\n        queryArgs: arg,\n        endpointDefinition,\n        endpointName\n      });\n      const thunk = queryThunk({\n        ...rest,\n        type: 'query',\n        subscribe,\n        forceRefetch: forceRefetch,\n        subscriptionOptions,\n        endpointName,\n        originalArgs: arg,\n        queryCacheKey,\n        [forceQueryFnSymbol]: forceQueryFn\n      });\n      const selector = (api.endpoints[endpointName] as ApiEndpointQuery<any, any>).select(arg);\n      const thunkResult = dispatch(thunk);\n      const stateAfter = selector(getState());\n      middlewareWarning(dispatch);\n      const {\n        requestId,\n        abort\n      } = thunkResult;\n      const skippedSynchronously = stateAfter.requestId !== requestId;\n      const runningQuery = runningQueries.get(dispatch)?.[queryCacheKey];\n      const selectFromState = () => selector(getState());\n      const statePromise: QueryActionCreatorResult<any> = Object.assign(((forceQueryFn ?\n      // a query has been forced (upsertQueryData)\n      // -> we want to resolve it once data has been written with the data that will be written\n      thunkResult.then(selectFromState) : skippedSynchronously && !runningQuery ?\n      // a query has been skipped due to a condition and we do not have any currently running query\n      // -> we want to resolve it immediately with the current data\n      Promise.resolve(stateAfter) :\n      // query just started or one is already in flight\n      // -> wait for the running query, then resolve with data from after that\n      Promise.all([runningQuery, thunkResult]).then(selectFromState)) as SafePromise<any>), {\n        arg,\n        requestId,\n        subscriptionOptions,\n        queryCacheKey,\n        abort,\n        async unwrap() {\n          const result = await statePromise;\n          if (result.isError) {\n            throw result.error;\n          }\n          return result.data;\n        },\n        refetch: () => dispatch(queryAction(arg, {\n          subscribe: false,\n          forceRefetch: true\n        })),\n        unsubscribe() {\n          if (subscribe) dispatch(unsubscribeQueryResult({\n            queryCacheKey,\n            requestId\n          }));\n        },\n        updateSubscriptionOptions(options: SubscriptionOptions) {\n          statePromise.subscriptionOptions = options;\n          dispatch(updateSubscriptionOptions({\n            endpointName,\n            requestId,\n            queryCacheKey,\n            options\n          }));\n        }\n      });\n      if (!runningQuery && !skippedSynchronously && !forceQueryFn) {\n        const running = runningQueries.get(dispatch) || {};\n        running[queryCacheKey] = statePromise;\n        runningQueries.set(dispatch, running);\n        statePromise.then(() => {\n          delete running[queryCacheKey];\n          if (!countObjectKeys(running)) {\n            runningQueries.delete(dispatch);\n          }\n        });\n      }\n      return statePromise;\n    };\n    return queryAction;\n  }\n  function buildInitiateMutation(endpointName: string): StartMutationActionCreator<any> {\n    return (arg, {\n      track = true,\n      fixedCacheKey\n    } = {}) => (dispatch, getState) => {\n      const thunk = mutationThunk({\n        type: 'mutation',\n        endpointName,\n        originalArgs: arg,\n        track,\n        fixedCacheKey\n      });\n      const thunkResult = dispatch(thunk);\n      middlewareWarning(dispatch);\n      const {\n        requestId,\n        abort,\n        unwrap\n      } = thunkResult;\n      const returnValuePromise = asSafePromise(thunkResult.unwrap().then(data => ({\n        data\n      })), error => ({\n        error\n      }));\n      const reset = () => {\n        dispatch(removeMutationResult({\n          requestId,\n          fixedCacheKey\n        }));\n      };\n      const ret = Object.assign(returnValuePromise, {\n        arg: thunkResult.arg,\n        requestId,\n        abort,\n        unwrap,\n        reset\n      });\n      const running = runningMutations.get(dispatch) || {};\n      runningMutations.set(dispatch, running);\n      running[requestId] = ret;\n      ret.then(() => {\n        delete running[requestId];\n        if (!countObjectKeys(running)) {\n          runningMutations.delete(dispatch);\n        }\n      });\n      if (fixedCacheKey) {\n        running[fixedCacheKey] = ret;\n        ret.then(() => {\n          if (running[fixedCacheKey] === ret) {\n            delete running[fixedCacheKey];\n            if (!countObjectKeys(running)) {\n              runningMutations.delete(dispatch);\n            }\n          }\n        });\n      }\n      return ret;\n    };\n  }\n}", "import type { Middleware, StoreEnhancer } from 'redux';\nimport type { Tuple } from './utils';\nexport function safeAssign<T extends object>(target: T, ...args: Array<Partial<NoInfer<T>>>) {\n  Object.assign(target, ...args);\n}\n\n/**\n * return True if T is `any`, otherwise return False\n * taken from https://github.com/joonhocho/tsdef\n *\n * @internal\n */\nexport type IsAny<T, True, False = never> =\n// test if we are going the left AND right path in the condition\ntrue | false extends (T extends never ? true : false) ? True : False;\nexport type CastAny<T, CastTo> = IsAny<T, CastTo, T>;\n\n/**\n * return True if T is `unknown`, otherwise return False\n * taken from https://github.com/joonhocho/tsdef\n *\n * @internal\n */\nexport type IsUnknown<T, True, False = never> = unknown extends T ? IsAny<T, False, True> : False;\nexport type FallbackIfUnknown<T, Fallback> = IsUnknown<T, Fallback, T>;\n\n/**\n * @internal\n */\nexport type IfMaybeUndefined<P, True, False> = [undefined] extends [P] ? True : False;\n\n/**\n * @internal\n */\nexport type IfVoid<P, True, False> = [void] extends [P] ? True : False;\n\n/**\n * @internal\n */\nexport type IsEmptyObj<T, True, False = never> = T extends any ? keyof T extends never ? IsUnknown<T, False, IfMaybeUndefined<T, False, IfVoid<T, False, True>>> : False : never;\n\n/**\n * returns True if TS version is above 3.5, False if below.\n * uses feature detection to detect TS version >= 3.5\n * * versions below 3.5 will return `{}` for unresolvable interference\n * * versions above will return `unknown`\n *\n * @internal\n */\nexport type AtLeastTS35<True, False> = [True, False][IsUnknown<ReturnType<<T>() => T>, 0, 1>];\n\n/**\n * @internal\n */\nexport type IsUnknownOrNonInferrable<T, True, False> = AtLeastTS35<IsUnknown<T, True, False>, IsEmptyObj<T, True, IsUnknown<T, True, False>>>;\n\n/**\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\n */\nexport type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never;\n\n// Appears to have a convenient side effect of ignoring `never` even if that's not what you specified\nexport type ExcludeFromTuple<T, E, Acc extends unknown[] = []> = T extends [infer Head, ...infer Tail] ? ExcludeFromTuple<Tail, E, [...Acc, ...([Head] extends [E] ? [] : [Head])]> : Acc;\ntype ExtractDispatchFromMiddlewareTuple<MiddlewareTuple extends readonly any[], Acc extends {}> = MiddlewareTuple extends [infer Head, ...infer Tail] ? ExtractDispatchFromMiddlewareTuple<Tail, Acc & (Head extends Middleware<infer D> ? IsAny<D, {}, D> : {})> : Acc;\nexport type ExtractDispatchExtensions<M> = M extends Tuple<infer MiddlewareTuple> ? ExtractDispatchFromMiddlewareTuple<MiddlewareTuple, {}> : M extends ReadonlyArray<Middleware> ? ExtractDispatchFromMiddlewareTuple<[...M], {}> : never;\ntype ExtractStoreExtensionsFromEnhancerTuple<EnhancerTuple extends readonly any[], Acc extends {}> = EnhancerTuple extends [infer Head, ...infer Tail] ? ExtractStoreExtensionsFromEnhancerTuple<Tail, Acc & (Head extends StoreEnhancer<infer Ext> ? IsAny<Ext, {}, Ext> : {})> : Acc;\nexport type ExtractStoreExtensions<E> = E extends Tuple<infer EnhancerTuple> ? ExtractStoreExtensionsFromEnhancerTuple<EnhancerTuple, {}> : E extends ReadonlyArray<StoreEnhancer> ? UnionToIntersection<E[number] extends StoreEnhancer<infer Ext> ? Ext extends {} ? IsAny<Ext, {}, Ext> : {} : {}> : never;\ntype ExtractStateExtensionsFromEnhancerTuple<EnhancerTuple extends readonly any[], Acc extends {}> = EnhancerTuple extends [infer Head, ...infer Tail] ? ExtractStateExtensionsFromEnhancerTuple<Tail, Acc & (Head extends StoreEnhancer<any, infer StateExt> ? IsAny<StateExt, {}, StateExt> : {})> : Acc;\nexport type ExtractStateExtensions<E> = E extends Tuple<infer EnhancerTuple> ? ExtractStateExtensionsFromEnhancerTuple<EnhancerTuple, {}> : E extends ReadonlyArray<StoreEnhancer> ? UnionToIntersection<E[number] extends StoreEnhancer<any, infer StateExt> ? StateExt extends {} ? IsAny<StateExt, {}, StateExt> : {} : {}> : never;\n\n/**\n * Helper type. Passes T out again, but boxes it in a way that it cannot\n * \"widen\" the type by accident if it is a generic that should be inferred\n * from elsewhere.\n *\n * @internal\n */\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\nexport type NonUndefined<T> = T extends undefined ? never : T;\nexport type WithRequiredProp<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;\nexport type WithOptionalProp<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\nexport interface TypeGuard<T> {\n  (value: any): value is T;\n}\nexport interface HasMatchFunction<T> {\n  match: TypeGuard<T>;\n}\nexport const hasMatchFunction = <T,>(v: Matcher<T>): v is HasMatchFunction<T> => {\n  return v && typeof (v as HasMatchFunction<T>).match === 'function';\n};\n\n/** @public */\nexport type Matcher<T> = HasMatchFunction<T> | TypeGuard<T>;\n\n/** @public */\nexport type ActionFromMatcher<M extends Matcher<any>> = M extends Matcher<infer T> ? T : never;\nexport type Id<T> = { [K in keyof T]: T[K] } & {};\nexport type Tail<T extends any[]> = T extends [any, ...infer Tail] ? Tail : never;\nexport type UnknownIfNonSpecific<T> = {} extends T ? unknown : T;\n\n/**\n * A Promise that will never reject.\n * @see https://github.com/reduxjs/redux-toolkit/issues/4101\n */\nexport type SafePromise<T> = Promise<T> & {\n  __linterBrands: 'SafePromise';\n};\n\n/**\n * Properly wraps a Promise as a {@link SafePromise} with .catch(fallback).\n */\nexport function asSafePromise<Resolved, Rejected>(promise: Promise<Resolved>, fallback: (error: unknown) => Rejected) {\n  return (promise.catch(fallback) as SafePromise<Resolved | Rejected>);\n}", "import type { Action, PayloadAction, UnknownAction } from '@reduxjs/toolkit';\nimport { combineReducers, createAction, createSlice, isAnyOf, isFulfilled, isRejectedWithValue, createNextState, prepareAutoBatched } from './rtkImports';\nimport type { QuerySubstateIdentifier, QuerySubState, MutationSubstateIdentifier, MutationSubState, MutationState, QueryState, InvalidationState, Subscribers, QueryCacheKey, SubscriptionState, ConfigState } from './apiState';\nimport { QueryStatus } from './apiState';\nimport type { MutationThunk, QueryThunk, RejectedAction } from './buildThunks';\nimport { calculateProvidedByThunk } from './buildThunks';\nimport type { AssertTagTypes, EndpointDefinitions, FullTagDescription, QueryDefinition } from '../endpointDefinitions';\nimport type { Patch } from 'immer';\nimport { isDraft } from 'immer';\nimport { applyPatches, original } from 'immer';\nimport { onFocus, onFocusLost, onOffline, onOnline } from './setupListeners';\nimport { isDocumentVisible, isOnline, copyWithStructuralSharing } from '../utils';\nimport type { ApiContext } from '../apiTypes';\nimport { isUpsertQuery } from './buildInitiate';\nfunction updateQuerySubstateIfExists(state: QueryState<any>, queryCacheKey: QueryCacheKey, update: (substate: QuerySubState<any>) => void) {\n  const substate = state[queryCacheKey];\n  if (substate) {\n    update(substate);\n  }\n}\nexport function getMutationCacheKey(id: MutationSubstateIdentifier | {\n  requestId: string;\n  arg: {\n    fixedCacheKey?: string | undefined;\n  };\n}): string;\nexport function getMutationCacheKey(id: {\n  fixedCacheKey?: string;\n  requestId?: string;\n}): string | undefined;\nexport function getMutationCacheKey(id: {\n  fixedCacheKey?: string;\n  requestId?: string;\n} | MutationSubstateIdentifier | {\n  requestId: string;\n  arg: {\n    fixedCacheKey?: string | undefined;\n  };\n}): string | undefined {\n  return ('arg' in id ? id.arg.fixedCacheKey : id.fixedCacheKey) ?? id.requestId;\n}\nfunction updateMutationSubstateIfExists(state: MutationState<any>, id: MutationSubstateIdentifier | {\n  requestId: string;\n  arg: {\n    fixedCacheKey?: string | undefined;\n  };\n}, update: (substate: MutationSubState<any>) => void) {\n  const substate = state[getMutationCacheKey(id)];\n  if (substate) {\n    update(substate);\n  }\n}\nconst initialState = ({} as any);\nexport function buildSlice({\n  reducerPath,\n  queryThunk,\n  mutationThunk,\n  context: {\n    endpointDefinitions: definitions,\n    apiUid,\n    extractRehydrationInfo,\n    hasRehydrationInfo\n  },\n  assertTagType,\n  config\n}: {\n  reducerPath: string;\n  queryThunk: QueryThunk;\n  mutationThunk: MutationThunk;\n  context: ApiContext<EndpointDefinitions>;\n  assertTagType: AssertTagTypes;\n  config: Omit<ConfigState<string>, 'online' | 'focused' | 'middlewareRegistered'>;\n}) {\n  const resetApiState = createAction(`${reducerPath}/resetApiState`);\n  const querySlice = createSlice({\n    name: `${reducerPath}/queries`,\n    initialState: (initialState as QueryState<any>),\n    reducers: {\n      removeQueryResult: {\n        reducer(draft, {\n          payload: {\n            queryCacheKey\n          }\n        }: PayloadAction<QuerySubstateIdentifier>) {\n          delete draft[queryCacheKey];\n        },\n        prepare: prepareAutoBatched<QuerySubstateIdentifier>()\n      },\n      queryResultPatched: {\n        reducer(draft, {\n          payload: {\n            queryCacheKey,\n            patches\n          }\n        }: PayloadAction<QuerySubstateIdentifier & {\n          patches: readonly Patch[];\n        }>) {\n          updateQuerySubstateIfExists(draft, queryCacheKey, substate => {\n            substate.data = applyPatches((substate.data as any), patches.concat());\n          });\n        },\n        prepare: prepareAutoBatched<QuerySubstateIdentifier & {\n          patches: readonly Patch[];\n        }>()\n      }\n    },\n    extraReducers(builder) {\n      builder.addCase(queryThunk.pending, (draft, {\n        meta,\n        meta: {\n          arg\n        }\n      }) => {\n        const upserting = isUpsertQuery(arg);\n        draft[arg.queryCacheKey] ??= {\n          status: QueryStatus.uninitialized,\n          endpointName: arg.endpointName\n        };\n        updateQuerySubstateIfExists(draft, arg.queryCacheKey, substate => {\n          substate.status = QueryStatus.pending;\n          substate.requestId = upserting && substate.requestId ?\n          // for `upsertQuery` **updates**, keep the current `requestId`\n          substate.requestId :\n          // for normal queries or `upsertQuery` **inserts** always update the `requestId`\n          meta.requestId;\n          if (arg.originalArgs !== undefined) {\n            substate.originalArgs = arg.originalArgs;\n          }\n          substate.startedTimeStamp = meta.startedTimeStamp;\n        });\n      }).addCase(queryThunk.fulfilled, (draft, {\n        meta,\n        payload\n      }) => {\n        updateQuerySubstateIfExists(draft, meta.arg.queryCacheKey, substate => {\n          if (substate.requestId !== meta.requestId && !isUpsertQuery(meta.arg)) return;\n          const {\n            merge\n          } = (definitions[meta.arg.endpointName] as QueryDefinition<any, any, any, any>);\n          substate.status = QueryStatus.fulfilled;\n          if (merge) {\n            if (substate.data !== undefined) {\n              const {\n                fulfilledTimeStamp,\n                arg,\n                baseQueryMeta,\n                requestId\n              } = meta;\n              // There's existing cache data. Let the user merge it in themselves.\n              // We're already inside an Immer-powered reducer, and the user could just mutate `substate.data`\n              // themselves inside of `merge()`. But, they might also want to return a new value.\n              // Try to let Immer figure that part out, save the result, and assign it to `substate.data`.\n              let newData = createNextState(substate.data, draftSubstateData => {\n                // As usual with Immer, you can mutate _or_ return inside here, but not both\n                return merge(draftSubstateData, payload, {\n                  arg: arg.originalArgs,\n                  baseQueryMeta,\n                  fulfilledTimeStamp,\n                  requestId\n                });\n              });\n              substate.data = newData;\n            } else {\n              // Presumably a fresh request. Just cache the response data.\n              substate.data = payload;\n            }\n          } else {\n            // Assign or safely update the cache data.\n            substate.data = definitions[meta.arg.endpointName].structuralSharing ?? true ? copyWithStructuralSharing(isDraft(substate.data) ? original(substate.data) : substate.data, payload) : payload;\n          }\n          delete substate.error;\n          substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;\n        });\n      }).addCase(queryThunk.rejected, (draft, {\n        meta: {\n          condition,\n          arg,\n          requestId\n        },\n        error,\n        payload\n      }) => {\n        updateQuerySubstateIfExists(draft, arg.queryCacheKey, substate => {\n          if (condition) {\n            // request was aborted due to condition (another query already running)\n          } else {\n            // request failed\n            if (substate.requestId !== requestId) return;\n            substate.status = QueryStatus.rejected;\n            substate.error = ((payload ?? error) as any);\n          }\n        });\n      }).addMatcher(hasRehydrationInfo, (draft, action) => {\n        const {\n          queries\n        } = extractRehydrationInfo(action)!;\n        for (const [key, entry] of Object.entries(queries)) {\n          if (\n          // do not rehydrate entries that were currently in flight.\n          entry?.status === QueryStatus.fulfilled || entry?.status === QueryStatus.rejected) {\n            draft[key] = entry;\n          }\n        }\n      });\n    }\n  });\n  const mutationSlice = createSlice({\n    name: `${reducerPath}/mutations`,\n    initialState: (initialState as MutationState<any>),\n    reducers: {\n      removeMutationResult: {\n        reducer(draft, {\n          payload\n        }: PayloadAction<MutationSubstateIdentifier>) {\n          const cacheKey = getMutationCacheKey(payload);\n          if (cacheKey in draft) {\n            delete draft[cacheKey];\n          }\n        },\n        prepare: prepareAutoBatched<MutationSubstateIdentifier>()\n      }\n    },\n    extraReducers(builder) {\n      builder.addCase(mutationThunk.pending, (draft, {\n        meta,\n        meta: {\n          requestId,\n          arg,\n          startedTimeStamp\n        }\n      }) => {\n        if (!arg.track) return;\n        draft[getMutationCacheKey(meta)] = {\n          requestId,\n          status: QueryStatus.pending,\n          endpointName: arg.endpointName,\n          startedTimeStamp\n        };\n      }).addCase(mutationThunk.fulfilled, (draft, {\n        payload,\n        meta\n      }) => {\n        if (!meta.arg.track) return;\n        updateMutationSubstateIfExists(draft, meta, substate => {\n          if (substate.requestId !== meta.requestId) return;\n          substate.status = QueryStatus.fulfilled;\n          substate.data = payload;\n          substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;\n        });\n      }).addCase(mutationThunk.rejected, (draft, {\n        payload,\n        error,\n        meta\n      }) => {\n        if (!meta.arg.track) return;\n        updateMutationSubstateIfExists(draft, meta, substate => {\n          if (substate.requestId !== meta.requestId) return;\n          substate.status = QueryStatus.rejected;\n          substate.error = ((payload ?? error) as any);\n        });\n      }).addMatcher(hasRehydrationInfo, (draft, action) => {\n        const {\n          mutations\n        } = extractRehydrationInfo(action)!;\n        for (const [key, entry] of Object.entries(mutations)) {\n          if (\n          // do not rehydrate entries that were currently in flight.\n          (entry?.status === QueryStatus.fulfilled || entry?.status === QueryStatus.rejected) &&\n          // only rehydrate endpoints that were persisted using a `fixedCacheKey`\n          key !== entry?.requestId) {\n            draft[key] = entry;\n          }\n        }\n      });\n    }\n  });\n  const invalidationSlice = createSlice({\n    name: `${reducerPath}/invalidation`,\n    initialState: (initialState as InvalidationState<string>),\n    reducers: {\n      updateProvidedBy: {\n        reducer(draft, action: PayloadAction<{\n          queryCacheKey: QueryCacheKey;\n          providedTags: readonly FullTagDescription<string>[];\n        }>) {\n          const {\n            queryCacheKey,\n            providedTags\n          } = action.payload;\n          for (const tagTypeSubscriptions of Object.values(draft)) {\n            for (const idSubscriptions of Object.values(tagTypeSubscriptions)) {\n              const foundAt = idSubscriptions.indexOf(queryCacheKey);\n              if (foundAt !== -1) {\n                idSubscriptions.splice(foundAt, 1);\n              }\n            }\n          }\n          for (const {\n            type,\n            id\n          } of providedTags) {\n            const subscribedQueries = (draft[type] ??= {})[id || '__internal_without_id'] ??= [];\n            const alreadySubscribed = subscribedQueries.includes(queryCacheKey);\n            if (!alreadySubscribed) {\n              subscribedQueries.push(queryCacheKey);\n            }\n          }\n        },\n        prepare: prepareAutoBatched<{\n          queryCacheKey: QueryCacheKey;\n          providedTags: readonly FullTagDescription<string>[];\n        }>()\n      }\n    },\n    extraReducers(builder) {\n      builder.addCase(querySlice.actions.removeQueryResult, (draft, {\n        payload: {\n          queryCacheKey\n        }\n      }) => {\n        for (const tagTypeSubscriptions of Object.values(draft)) {\n          for (const idSubscriptions of Object.values(tagTypeSubscriptions)) {\n            const foundAt = idSubscriptions.indexOf(queryCacheKey);\n            if (foundAt !== -1) {\n              idSubscriptions.splice(foundAt, 1);\n            }\n          }\n        }\n      }).addMatcher(hasRehydrationInfo, (draft, action) => {\n        const {\n          provided\n        } = extractRehydrationInfo(action)!;\n        for (const [type, incomingTags] of Object.entries(provided)) {\n          for (const [id, cacheKeys] of Object.entries(incomingTags)) {\n            const subscribedQueries = (draft[type] ??= {})[id || '__internal_without_id'] ??= [];\n            for (const queryCacheKey of cacheKeys) {\n              const alreadySubscribed = subscribedQueries.includes(queryCacheKey);\n              if (!alreadySubscribed) {\n                subscribedQueries.push(queryCacheKey);\n              }\n            }\n          }\n        }\n      }).addMatcher(isAnyOf(isFulfilled(queryThunk), isRejectedWithValue(queryThunk)), (draft, action) => {\n        const providedTags = calculateProvidedByThunk(action, 'providesTags', definitions, assertTagType);\n        const {\n          queryCacheKey\n        } = action.meta.arg;\n        invalidationSlice.caseReducers.updateProvidedBy(draft, invalidationSlice.actions.updateProvidedBy({\n          queryCacheKey,\n          providedTags\n        }));\n      });\n    }\n  });\n\n  // Dummy slice to generate actions\n  const subscriptionSlice = createSlice({\n    name: `${reducerPath}/subscriptions`,\n    initialState: (initialState as SubscriptionState),\n    reducers: {\n      updateSubscriptionOptions(d, a: PayloadAction<{\n        endpointName: string;\n        requestId: string;\n        options: Subscribers[number];\n      } & QuerySubstateIdentifier>) {\n        // Dummy\n      },\n      unsubscribeQueryResult(d, a: PayloadAction<{\n        requestId: string;\n      } & QuerySubstateIdentifier>) {\n        // Dummy\n      },\n      internal_getRTKQSubscriptions() {}\n    }\n  });\n  const internalSubscriptionsSlice = createSlice({\n    name: `${reducerPath}/internalSubscriptions`,\n    initialState: (initialState as SubscriptionState),\n    reducers: {\n      subscriptionsUpdated: {\n        reducer(state, action: PayloadAction<Patch[]>) {\n          return applyPatches(state, action.payload);\n        },\n        prepare: prepareAutoBatched<Patch[]>()\n      }\n    }\n  });\n  const configSlice = createSlice({\n    name: `${reducerPath}/config`,\n    initialState: ({\n      online: isOnline(),\n      focused: isDocumentVisible(),\n      middlewareRegistered: false,\n      ...config\n    } as ConfigState<string>),\n    reducers: {\n      middlewareRegistered(state, {\n        payload\n      }: PayloadAction<string>) {\n        state.middlewareRegistered = state.middlewareRegistered === 'conflict' || apiUid !== payload ? 'conflict' : true;\n      }\n    },\n    extraReducers: builder => {\n      builder.addCase(onOnline, state => {\n        state.online = true;\n      }).addCase(onOffline, state => {\n        state.online = false;\n      }).addCase(onFocus, state => {\n        state.focused = true;\n      }).addCase(onFocusLost, state => {\n        state.focused = false;\n      })\n      // update the state to be a new object to be picked up as a \"state change\"\n      // by redux-persist's `autoMergeLevel2`\n      .addMatcher(hasRehydrationInfo, draft => ({\n        ...draft\n      }));\n    }\n  });\n  const combinedReducer = combineReducers({\n    queries: querySlice.reducer,\n    mutations: mutationSlice.reducer,\n    provided: invalidationSlice.reducer,\n    subscriptions: internalSubscriptionsSlice.reducer,\n    config: configSlice.reducer\n  });\n  const reducer: typeof combinedReducer = (state, action) => combinedReducer(resetApiState.match(action) ? undefined : state, action);\n  const actions = {\n    ...configSlice.actions,\n    ...querySlice.actions,\n    ...subscriptionSlice.actions,\n    ...internalSubscriptionsSlice.actions,\n    ...mutationSlice.actions,\n    ...invalidationSlice.actions,\n    resetApiState\n  };\n  return {\n    reducer,\n    actions\n  };\n}\nexport type SliceActions = ReturnType<typeof buildSlice>['actions'];", "import type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { EndpointDefinitions, MutationDefinition, QueryArgFrom, QueryDefinition, ReducerPathFrom, TagDescription, TagTypesFrom } from '../endpointDefinitions';\nimport { expandTagDescription } from '../endpointDefinitions';\nimport { flatten } from '../utils';\nimport type { MutationSubState, QueryCacheKey, QueryKeys, QueryState, QuerySubState, RequestStatusFlags, RootState as _RootState } from './apiState';\nimport { QueryStatus, getRequestStatusFlags } from './apiState';\nimport { getMutationCacheKey } from './buildSlice';\nimport type { createSelector as _createSelector } from './rtkImports';\nimport { createNextState } from './rtkImports';\nexport type SkipToken = typeof skipToken;\n/**\n * Can be passed into `useQuery`, `useQueryState` or `useQuerySubscription`\n * instead of the query argument to get the same effect as if setting\n * `skip: true` in the query options.\n *\n * Useful for scenarios where a query should be skipped when `arg` is `undefined`\n * and TypeScript complains about it because `arg` is not allowed to be passed\n * in as `undefined`, such as\n *\n * ```ts\n * // codeblock-meta title=\"will error if the query argument is not allowed to be undefined\" no-transpile\n * useSomeQuery(arg, { skip: !!arg })\n * ```\n *\n * ```ts\n * // codeblock-meta title=\"using skipToken instead\" no-transpile\n * useSomeQuery(arg ?? skipToken)\n * ```\n *\n * If passed directly into a query or mutation selector, that selector will always\n * return an uninitialized state.\n */\nexport const skipToken = /* @__PURE__ */Symbol.for('RTKQ/skipToken');\nexport type BuildSelectorsApiEndpointQuery<Definition extends QueryDefinition<any, any, any, any, any>, Definitions extends EndpointDefinitions> = {\n  select: QueryResultSelectorFactory<Definition, _RootState<Definitions, TagTypesFrom<Definition>, ReducerPathFrom<Definition>>>;\n};\nexport type BuildSelectorsApiEndpointMutation<Definition extends MutationDefinition<any, any, any, any, any>, Definitions extends EndpointDefinitions> = {\n  select: MutationResultSelectorFactory<Definition, _RootState<Definitions, TagTypesFrom<Definition>, ReducerPathFrom<Definition>>>;\n};\ntype QueryResultSelectorFactory<Definition extends QueryDefinition<any, any, any, any>, RootState> = (queryArg: QueryArgFrom<Definition> | SkipToken) => (state: RootState) => QueryResultSelectorResult<Definition>;\nexport type QueryResultSelectorResult<Definition extends QueryDefinition<any, any, any, any>> = QuerySubState<Definition> & RequestStatusFlags;\ntype MutationResultSelectorFactory<Definition extends MutationDefinition<any, any, any, any>, RootState> = (requestId: string | {\n  requestId: string | undefined;\n  fixedCacheKey: string | undefined;\n} | SkipToken) => (state: RootState) => MutationResultSelectorResult<Definition>;\nexport type MutationResultSelectorResult<Definition extends MutationDefinition<any, any, any, any>> = MutationSubState<Definition> & RequestStatusFlags;\nconst initialSubState: QuerySubState<any> = {\n  status: (QueryStatus.uninitialized as const)\n};\n\n// abuse immer to freeze default states\nconst defaultQuerySubState = /* @__PURE__ */createNextState(initialSubState, () => {});\nconst defaultMutationSubState = /* @__PURE__ */createNextState((initialSubState as MutationSubState<any>), () => {});\nexport function buildSelectors<Definitions extends EndpointDefinitions, ReducerPath extends string>({\n  serializeQueryArgs,\n  reducerPath,\n  createSelector\n}: {\n  serializeQueryArgs: InternalSerializeQueryArgs;\n  reducerPath: ReducerPath;\n  createSelector: typeof _createSelector;\n}) {\n  type RootState = _RootState<Definitions, string, string>;\n  const selectSkippedQuery = (state: RootState) => defaultQuerySubState;\n  const selectSkippedMutation = (state: RootState) => defaultMutationSubState;\n  return {\n    buildQuerySelector,\n    buildMutationSelector,\n    selectInvalidatedBy,\n    selectCachedArgsForQuery\n  };\n  function withRequestFlags<T extends {\n    status: QueryStatus;\n  }>(substate: T): T & RequestStatusFlags {\n    return {\n      ...substate,\n      ...getRequestStatusFlags(substate.status)\n    };\n  }\n  function selectInternalState(rootState: RootState) {\n    const state = rootState[reducerPath];\n    if (process.env.NODE_ENV !== 'production') {\n      if (!state) {\n        if ((selectInternalState as any).triggered) return state;\n        (selectInternalState as any).triggered = true;\n        console.error(`Error: No data found at \\`state.${reducerPath}\\`. Did you forget to add the reducer to the store?`);\n      }\n    }\n    return state;\n  }\n  function buildQuerySelector(endpointName: string, endpointDefinition: QueryDefinition<any, any, any, any>) {\n    return (((queryArgs: any) => {\n      const serializedArgs = serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      });\n      const selectQuerySubstate = (state: RootState) => selectInternalState(state)?.queries?.[serializedArgs] ?? defaultQuerySubState;\n      const finalSelectQuerySubState = queryArgs === skipToken ? selectSkippedQuery : selectQuerySubstate;\n      return createSelector(finalSelectQuerySubState, withRequestFlags);\n    }) as QueryResultSelectorFactory<any, RootState>);\n  }\n  function buildMutationSelector() {\n    return ((id => {\n      let mutationId: string | typeof skipToken;\n      if (typeof id === 'object') {\n        mutationId = getMutationCacheKey(id) ?? skipToken;\n      } else {\n        mutationId = id;\n      }\n      const selectMutationSubstate = (state: RootState) => selectInternalState(state)?.mutations?.[(mutationId as string)] ?? defaultMutationSubState;\n      const finalSelectMutationSubstate = mutationId === skipToken ? selectSkippedMutation : selectMutationSubstate;\n      return createSelector(finalSelectMutationSubstate, withRequestFlags);\n    }) as MutationResultSelectorFactory<any, RootState>);\n  }\n  function selectInvalidatedBy(state: RootState, tags: ReadonlyArray<TagDescription<string>>): Array<{\n    endpointName: string;\n    originalArgs: any;\n    queryCacheKey: QueryCacheKey;\n  }> {\n    const apiState = state[reducerPath];\n    const toInvalidate = new Set<QueryCacheKey>();\n    for (const tag of tags.map(expandTagDescription)) {\n      const provided = apiState.provided[tag.type];\n      if (!provided) {\n        continue;\n      }\n      let invalidateSubscriptions = (tag.id !== undefined ?\n      // id given: invalidate all queries that provide this type & id\n      provided[tag.id] :\n      // no id: invalidate all queries that provide this type\n      flatten(Object.values(provided))) ?? [];\n      for (const invalidate of invalidateSubscriptions) {\n        toInvalidate.add(invalidate);\n      }\n    }\n    return flatten(Array.from(toInvalidate.values()).map(queryCacheKey => {\n      const querySubState = apiState.queries[queryCacheKey];\n      return querySubState ? [{\n        queryCacheKey,\n        endpointName: querySubState.endpointName!,\n        originalArgs: querySubState.originalArgs\n      }] : [];\n    }));\n  }\n  function selectCachedArgsForQuery<QueryName extends QueryKeys<Definitions>>(state: RootState, queryName: QueryName): Array<QueryArgFrom<Definitions[QueryName]>> {\n    return Object.values((state[reducerPath].queries as QueryState<any>)).filter((entry): entry is Exclude<QuerySubState<Definitions[QueryName]>, {\n      status: QueryStatus.uninitialized;\n    }> => entry?.endpointName === queryName && entry.status !== QueryStatus.uninitialized).map(entry => entry.originalArgs);\n  }\n}", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { Api, ApiContext, Module, ModuleName } from './apiTypes';\nimport type { CombinedState } from './core/apiState';\nimport type { BaseQueryArg, BaseQueryFn } from './baseQueryTypes';\nimport type { SerializeQueryArgs } from './defaultSerializeQueryArgs';\nimport { defaultSerializeQueryArgs } from './defaultSerializeQueryArgs';\nimport type { EndpointBuilder, EndpointDefinitions } from './endpointDefinitions';\nimport { DefinitionType, isQueryDefinition } from './endpointDefinitions';\nimport { nanoid } from './core/rtkImports';\nimport type { UnknownAction } from '@reduxjs/toolkit';\nimport type { NoInfer } from './tsHelpers';\nimport { weakMapMemoize } from 'reselect';\nexport interface CreateApiOptions<BaseQuery extends BaseQueryFn, Definitions extends EndpointDefinitions, ReducerPath extends string = 'api', TagTypes extends string = never> {\n  /**\n   * The base query used by each endpoint if no `queryFn` option is specified. RTK Query exports a utility called [fetchBaseQuery](./fetchBaseQuery) as a lightweight wrapper around `fetch` for common use-cases. See [Customizing Queries](../../rtk-query/usage/customizing-queries) if `fetchBaseQuery` does not handle your requirements.\n   *\n   * @example\n   *\n   * ```ts\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n   *\n   * const api = createApi({\n   *   // highlight-start\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   // highlight-end\n   *   endpoints: (build) => ({\n   *     // ...endpoints\n   *   }),\n   * })\n   * ```\n   */\n  baseQuery: BaseQuery;\n  /**\n   * An array of string tag type names. Specifying tag types is optional, but you should define them so that they can be used for caching and invalidation. When defining a tag type, you will be able to [provide](../../rtk-query/usage/automated-refetching#providing-tags) them with `providesTags` and [invalidate](../../rtk-query/usage/automated-refetching#invalidating-tags) them with `invalidatesTags` when configuring [endpoints](#endpoints).\n   *\n   * @example\n   *\n   * ```ts\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   // highlight-start\n   *   tagTypes: ['Post', 'User'],\n   *   // highlight-end\n   *   endpoints: (build) => ({\n   *     // ...endpoints\n   *   }),\n   * })\n   * ```\n   */\n  tagTypes?: readonly TagTypes[];\n  /**\n   * The `reducerPath` is a _unique_ key that your service will be mounted to in your store. If you call `createApi` more than once in your application, you will need to provide a unique value each time. Defaults to `'api'`.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"apis.js\"\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query';\n   *\n   * const apiOne = createApi({\n   *   // highlight-start\n   *   reducerPath: 'apiOne',\n   *   // highlight-end\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (builder) => ({\n   *     // ...endpoints\n   *   }),\n   * });\n   *\n   * const apiTwo = createApi({\n   *   // highlight-start\n   *   reducerPath: 'apiTwo',\n   *   // highlight-end\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (builder) => ({\n   *     // ...endpoints\n   *   }),\n   * });\n   * ```\n   */\n  reducerPath?: ReducerPath;\n  /**\n   * Accepts a custom function if you have a need to change the creation of cache keys for any reason.\n   */\n  serializeQueryArgs?: SerializeQueryArgs<BaseQueryArg<BaseQuery>>;\n  /**\n   * Endpoints are just a set of operations that you want to perform against your server. You define them as an object using the builder syntax. There are two basic endpoint types: [`query`](../../rtk-query/usage/queries) and [`mutation`](../../rtk-query/usage/mutations).\n   */\n  endpoints(build: EndpointBuilder<BaseQuery, TagTypes, ReducerPath>): Definitions;\n  /**\n   * Defaults to `60` _(this value is in seconds)_. This is how long RTK Query will keep your data cached for **after** the last component unsubscribes. For example, if you query an endpoint, then unmount the component, then mount another component that makes the same request within the given time frame, the most recent value will be served from the cache.\n   *\n   * ```ts\n   * // codeblock-meta title=\"keepUnusedDataFor example\"\n   *\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * interface Post {\n   *   id: number\n   *   name: string\n   * }\n   * type PostsResponse = Post[]\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   endpoints: (build) => ({\n   *     getPosts: build.query<PostsResponse, void>({\n   *       query: () => 'posts',\n   *       // highlight-start\n   *       keepUnusedDataFor: 5\n   *       // highlight-end\n   *     })\n   *   })\n   * })\n   * ```\n   */\n  keepUnusedDataFor?: number;\n  /**\n   * Defaults to `false`. This setting allows you to control whether if a cached result is already available RTK Query will only serve a cached result, or if it should `refetch` when set to `true` or if an adequate amount of time has passed since the last successful query result.\n   * - `false` - Will not cause a query to be performed _unless_ it does not exist yet.\n   * - `true` - Will always refetch when a new subscriber to a query is added. Behaves the same as calling the `refetch` callback or passing `forceRefetch: true` in the action creator.\n   * - `number` - **Value is in seconds**. If a number is provided and there is an existing query in the cache, it will compare the current time vs the last fulfilled timestamp, and only refetch if enough time has elapsed.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   */\n  refetchOnMountOrArgChange?: boolean | number;\n  /**\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after the application window regains focus.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   *\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\n   */\n  refetchOnFocus?: boolean;\n  /**\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after regaining a network connection.\n   *\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\n   *\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\n   */\n  refetchOnReconnect?: boolean;\n  /**\n   * Defaults to `'immediately'`. This setting allows you to control when tags are invalidated after a mutation.\n   *\n   * - `'immediately'`: Queries are invalidated instantly after the mutation finished, even if they are running.\n   *   If the query provides tags that were invalidated while it ran, it won't be re-fetched.\n   * - `'delayed'`: Invalidation only happens after all queries and mutations are settled.\n   *   This ensures that queries are always invalidated correctly and automatically \"batches\" invalidations of concurrent mutations.\n   *   Note that if you constantly have some queries (or mutations) running, this can delay tag invalidations indefinitely.\n   */\n  invalidationBehavior?: 'delayed' | 'immediately';\n  /**\n   * A function that is passed every dispatched action. If this returns something other than `undefined`,\n   * that return value will be used to rehydrate fulfilled & errored queries.\n   *\n   * @example\n   *\n   * ```ts\n   * // codeblock-meta title=\"next-redux-wrapper rehydration example\"\n   * import type { Action, PayloadAction } from '@reduxjs/toolkit'\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n   * import { HYDRATE } from 'next-redux-wrapper'\n   *\n   * type RootState = any; // normally inferred from state\n   *\n   * function isHydrateAction(action: Action): action is PayloadAction<RootState> {\n   *   return action.type === HYDRATE\n   * }\n   *\n   * export const api = createApi({\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\n   *   // highlight-start\n   *   extractRehydrationInfo(action, { reducerPath }): any {\n   *     if (isHydrateAction(action)) {\n   *       return action.payload[reducerPath]\n   *     }\n   *   },\n   *   // highlight-end\n   *   endpoints: (build) => ({\n   *     // omitted\n   *   }),\n   * })\n   * ```\n   */\n  extractRehydrationInfo?: (action: UnknownAction, {\n    reducerPath\n  }: {\n    reducerPath: ReducerPath;\n  }) => undefined | CombinedState<NoInfer<Definitions>, NoInfer<TagTypes>, NoInfer<ReducerPath>>;\n}\nexport type CreateApi<Modules extends ModuleName> = {\n  /**\n   * Creates a service to use in your application. Contains only the basic redux logic (the core module).\n   *\n   * @link https://rtk-query-docs.netlify.app/api/createApi\n   */\n  <BaseQuery extends BaseQueryFn, Definitions extends EndpointDefinitions, ReducerPath extends string = 'api', TagTypes extends string = never>(options: CreateApiOptions<BaseQuery, Definitions, ReducerPath, TagTypes>): Api<BaseQuery, Definitions, ReducerPath, TagTypes, Modules>;\n};\n\n/**\n * Builds a `createApi` method based on the provided `modules`.\n *\n * @link https://rtk-query-docs.netlify.app/concepts/customizing-create-api\n *\n * @example\n * ```ts\n * const MyContext = React.createContext<ReactReduxContextValue | null>(null);\n * const customCreateApi = buildCreateApi(\n *   coreModule(),\n *   reactHooksModule({\n *     hooks: {\n *       useDispatch: createDispatchHook(MyContext),\n *       useSelector: createSelectorHook(MyContext),\n *       useStore: createStoreHook(MyContext)\n *     }\n *   })\n * );\n * ```\n *\n * @param modules - A variable number of modules that customize how the `createApi` method handles endpoints\n * @returns A `createApi` method using the provided `modules`.\n */\nexport function buildCreateApi<Modules extends [Module<any>, ...Module<any>[]]>(...modules: Modules): CreateApi<Modules[number]['name']> {\n  return function baseCreateApi(options) {\n    const extractRehydrationInfo = weakMapMemoize((action: UnknownAction) => options.extractRehydrationInfo?.(action, {\n      reducerPath: ((options.reducerPath ?? 'api') as any)\n    }));\n    const optionsWithDefaults: CreateApiOptions<any, any, any, any> = {\n      reducerPath: 'api',\n      keepUnusedDataFor: 60,\n      refetchOnMountOrArgChange: false,\n      refetchOnFocus: false,\n      refetchOnReconnect: false,\n      invalidationBehavior: 'delayed',\n      ...options,\n      extractRehydrationInfo,\n      serializeQueryArgs(queryArgsApi) {\n        let finalSerializeQueryArgs = defaultSerializeQueryArgs;\n        if ('serializeQueryArgs' in queryArgsApi.endpointDefinition) {\n          const endpointSQA = queryArgsApi.endpointDefinition.serializeQueryArgs!;\n          finalSerializeQueryArgs = queryArgsApi => {\n            const initialResult = endpointSQA(queryArgsApi);\n            if (typeof initialResult === 'string') {\n              // If the user function returned a string, use it as-is\n              return initialResult;\n            } else {\n              // Assume they returned an object (such as a subset of the original\n              // query args) or a primitive, and serialize it ourselves\n              return defaultSerializeQueryArgs({\n                ...queryArgsApi,\n                queryArgs: initialResult\n              });\n            }\n          };\n        } else if (options.serializeQueryArgs) {\n          finalSerializeQueryArgs = options.serializeQueryArgs;\n        }\n        return finalSerializeQueryArgs(queryArgsApi);\n      },\n      tagTypes: [...(options.tagTypes || [])]\n    };\n    const context: ApiContext<EndpointDefinitions> = {\n      endpointDefinitions: {},\n      batch(fn) {\n        // placeholder \"batch\" method to be overridden by plugins, for example with React.unstable_batchedUpdate\n        fn();\n      },\n      apiUid: nanoid(),\n      extractRehydrationInfo,\n      hasRehydrationInfo: weakMapMemoize(action => extractRehydrationInfo(action) != null)\n    };\n    const api = ({\n      injectEndpoints,\n      enhanceEndpoints({\n        addTagTypes,\n        endpoints\n      }) {\n        if (addTagTypes) {\n          for (const eT of addTagTypes) {\n            if (!optionsWithDefaults.tagTypes!.includes((eT as any))) {\n              ;\n              (optionsWithDefaults.tagTypes as any[]).push(eT);\n            }\n          }\n        }\n        if (endpoints) {\n          for (const [endpointName, partialDefinition] of Object.entries(endpoints)) {\n            if (typeof partialDefinition === 'function') {\n              partialDefinition(context.endpointDefinitions[endpointName]);\n            } else {\n              Object.assign(context.endpointDefinitions[endpointName] || {}, partialDefinition);\n            }\n          }\n        }\n        return api;\n      }\n    } as Api<BaseQueryFn, {}, string, string, Modules[number]['name']>);\n    const initializedModules = modules.map(m => m.init((api as any), (optionsWithDefaults as any), context));\n    function injectEndpoints(inject: Parameters<typeof api.injectEndpoints>[0]) {\n      const evaluatedEndpoints = inject.endpoints({\n        query: x => ({\n          ...x,\n          type: DefinitionType.query\n        } as any),\n        mutation: x => ({\n          ...x,\n          type: DefinitionType.mutation\n        } as any)\n      });\n      for (const [endpointName, definition] of Object.entries(evaluatedEndpoints)) {\n        if (inject.overrideExisting !== true && endpointName in context.endpointDefinitions) {\n          if (inject.overrideExisting === 'throw') {\n            throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(39) : `called \\`injectEndpoints\\` to override already-existing endpointName ${endpointName} without specifying \\`overrideExisting: true\\``);\n          } else if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n            console.error(`called \\`injectEndpoints\\` to override already-existing endpointName ${endpointName} without specifying \\`overrideExisting: true\\``);\n          }\n          continue;\n        }\n        context.endpointDefinitions[endpointName] = definition;\n        for (const m of initializedModules) {\n          m.injectEndpoint(endpointName, definition);\n        }\n      }\n      return (api as any);\n    }\n    return api.injectEndpoints({\n      endpoints: (options.endpoints as any)\n    });\n  };\n}", "import type { QueryCacheKey } from './core/apiState';\nimport type { EndpointDefinition } from './endpointDefinitions';\nimport { isPlainObject } from './core/rtkImports';\nconst cache: WeakMap<any, string> | undefined = WeakMap ? new WeakMap() : undefined;\nexport const defaultSerializeQueryArgs: SerializeQueryArgs<any> = ({\n  endpointName,\n  queryArgs\n}) => {\n  let serialized = '';\n  const cached = cache?.get(queryArgs);\n  if (typeof cached === 'string') {\n    serialized = cached;\n  } else {\n    const stringified = JSON.stringify(queryArgs, (key, value) => {\n      // Handle bigints\n      value = typeof value === 'bigint' ? {\n        $bigint: value.toString()\n      } : value;\n      // Sort the object keys before stringifying, to prevent useQuery({ a: 1, b: 2 }) having a different cache key than useQuery({ b: 2, a: 1 })\n      value = isPlainObject(value) ? Object.keys(value).sort().reduce<any>((acc, key) => {\n        acc[key] = (value as any)[key];\n        return acc;\n      }, {}) : value;\n      return value;\n    });\n    if (isPlainObject(queryArgs)) {\n      cache?.set(queryArgs, stringified);\n    }\n    serialized = stringified;\n  }\n  return `${endpointName}(${serialized})`;\n};\nexport type SerializeQueryArgs<QueryArgs, ReturnType = string> = (_: {\n  queryArgs: QueryArgs;\n  endpointDefinition: EndpointDefinition<any, any, any, any>;\n  endpointName: string;\n}) => ReturnType;\nexport type InternalSerializeQueryArgs = (_: {\n  queryArgs: any;\n  endpointDefinition: EndpointDefinition<any, any, any, any>;\n  endpointName: string;\n}) => QueryCacheKey;", "import { formatProdErrorMessage as _formatProdErrorMessage } from \"@reduxjs/toolkit\";\nimport type { BaseQueryFn } from './baseQueryTypes';\nexport const _NEVER = /* @__PURE__ */Symbol();\nexport type NEVER = typeof _NEVER;\n\n/**\n * Creates a \"fake\" baseQuery to be used if your api *only* uses the `queryFn` definition syntax.\n * This also allows you to specify a specific error type to be shared by all your `queryFn` definitions.\n */\nexport function fakeBaseQuery<ErrorType>(): BaseQueryFn<void, NEVER, ErrorType, {}> {\n  return function () {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(33) : 'When using `fakeBaseQuery`, all queries & mutations must use the `queryFn` definition syntax.');\n  };\n}", "/**\n * Note: this file should import all other files for type discovery and declaration merging\n */\nimport type { ActionCreatorWithPayload, Middleware, Reducer, ThunkAction, ThunkDispatch, UnknownAction } from '@reduxjs/toolkit';\nimport { enablePatches } from 'immer';\nimport type { Api, Module } from '../apiTypes';\nimport type { BaseQueryFn } from '../baseQueryTypes';\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs';\nimport type { AssertTagTypes, EndpointDefinitions, MutationDefinition, QueryArgFrom, QueryDefinition, TagDescription } from '../endpointDefinitions';\nimport { isMutationDefinition, isQueryDefinition } from '../endpointDefinitions';\nimport { assertCast, safeAssign } from '../tsHelpers';\nimport type { CombinedState, MutationKeys, QueryKeys, RootState } from './apiState';\nimport type { BuildInitiateApiEndpointMutation, BuildInitiateApiEndpointQuery, MutationActionCreatorResult, QueryActionCreatorResult } from './buildInitiate';\nimport { buildInitiate } from './buildInitiate';\nimport type { ReferenceCacheCollection, ReferenceCacheLifecycle, ReferenceQueryLifecycle } from './buildMiddleware';\nimport { buildMiddleware } from './buildMiddleware';\nimport type { BuildSelectorsApiEndpointMutation, BuildSelectorsApiEndpointQuery } from './buildSelectors';\nimport { buildSelectors } from './buildSelectors';\nimport type { SliceActions } from './buildSlice';\nimport { buildSlice } from './buildSlice';\nimport type { BuildThunksApiEndpointMutation, BuildThunksApiEndpointQuery, PatchQueryDataThunk, UpdateQueryDataThunk, UpsertQueryDataThunk } from './buildThunks';\nimport { buildThunks } from './buildThunks';\nimport { createSelector as _createSelector } from './rtkImports';\nimport { onFocus, onFocusLost, onOffline, onOnline } from './setupListeners';\n\n/**\n * `ifOlderThan` - (default: `false` | `number`) - _number is value in seconds_\n * - If specified, it will only run the query if the difference between `new Date()` and the last `fulfilledTimeStamp` is greater than the given value\n *\n * @overloadSummary\n * `force`\n * - If `force: true`, it will ignore the `ifOlderThan` value if it is set and the query will be run even if it exists in the cache.\n */\nexport type PrefetchOptions = {\n  ifOlderThan?: false | number;\n} | {\n  force?: boolean;\n};\nexport const coreModuleName = /* @__PURE__ */Symbol();\nexport type CoreModule = typeof coreModuleName | ReferenceCacheLifecycle | ReferenceQueryLifecycle | ReferenceCacheCollection;\nexport type ThunkWithReturnValue<T> = ThunkAction<T, any, any, UnknownAction>;\nexport interface ApiModules<\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nBaseQuery extends BaseQueryFn, Definitions extends EndpointDefinitions, ReducerPath extends string, TagTypes extends string> {\n  [coreModuleName]: {\n    /**\n     * This api's reducer should be mounted at `store[api.reducerPath]`.\n     *\n     * @example\n     * ```ts\n     * configureStore({\n     *   reducer: {\n     *     [api.reducerPath]: api.reducer,\n     *   },\n     *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\n     * })\n     * ```\n     */\n    reducerPath: ReducerPath;\n    /**\n     * Internal actions not part of the public API. Note: These are subject to change at any given time.\n     */\n    internalActions: InternalActions;\n    /**\n     *  A standard redux reducer that enables core functionality. Make sure it's included in your store.\n     *\n     * @example\n     * ```ts\n     * configureStore({\n     *   reducer: {\n     *     [api.reducerPath]: api.reducer,\n     *   },\n     *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\n     * })\n     * ```\n     */\n    reducer: Reducer<CombinedState<Definitions, TagTypes, ReducerPath>, UnknownAction>;\n    /**\n     * This is a standard redux middleware and is responsible for things like polling, garbage collection and a handful of other things. Make sure it's included in your store.\n     *\n     * @example\n     * ```ts\n     * configureStore({\n     *   reducer: {\n     *     [api.reducerPath]: api.reducer,\n     *   },\n     *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\n     * })\n     * ```\n     */\n    middleware: Middleware<{}, RootState<Definitions, string, ReducerPath>, ThunkDispatch<any, any, UnknownAction>>;\n    /**\n     * A collection of utility thunks for various situations.\n     */\n    util: {\n      /**\n       * A thunk that (if dispatched) will return a specific running query, identified\n       * by `endpointName` and `args`.\n       * If that query is not running, dispatching the thunk will result in `undefined`.\n       *\n       * Can be used to await a specific query triggered in any way,\n       * including via hook calls or manually dispatching `initiate` actions.\n       *\n       * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n       */\n      getRunningQueryThunk<EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, args: QueryArgFrom<Definitions[EndpointName]>): ThunkWithReturnValue<QueryActionCreatorResult<Definitions[EndpointName] & {\n        type: 'query';\n      }> | undefined>;\n\n      /**\n       * A thunk that (if dispatched) will return a specific running mutation, identified\n       * by `endpointName` and `fixedCacheKey` or `requestId`.\n       * If that mutation is not running, dispatching the thunk will result in `undefined`.\n       *\n       * Can be used to await a specific mutation triggered in any way,\n       * including via hook trigger functions or manually dispatching `initiate` actions.\n       *\n       * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n       */\n      getRunningMutationThunk<EndpointName extends MutationKeys<Definitions>>(endpointName: EndpointName, fixedCacheKeyOrRequestId: string): ThunkWithReturnValue<MutationActionCreatorResult<Definitions[EndpointName] & {\n        type: 'mutation';\n      }> | undefined>;\n\n      /**\n       * A thunk that (if dispatched) will return all running queries.\n       *\n       * Useful for SSR scenarios to await all running queries triggered in any way,\n       * including via hook calls or manually dispatching `initiate` actions.\n       *\n       * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n       */\n      getRunningQueriesThunk(): ThunkWithReturnValue<Array<QueryActionCreatorResult<any>>>;\n\n      /**\n       * A thunk that (if dispatched) will return all running mutations.\n       *\n       * Useful for SSR scenarios to await all running mutations triggered in any way,\n       * including via hook calls or manually dispatching `initiate` actions.\n       *\n       * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\n       */\n      getRunningMutationsThunk(): ThunkWithReturnValue<Array<MutationActionCreatorResult<any>>>;\n\n      /**\n       * A Redux thunk that can be used to manually trigger pre-fetching of data.\n       *\n       * The thunk accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and a set of options used to determine if the data actually should be re-fetched based on cache staleness.\n       *\n       * React Hooks users will most likely never need to use this directly, as the `usePrefetch` hook will dispatch this thunk internally as needed when you call the prefetching function supplied by the hook.\n       *\n       * @example\n       *\n       * ```ts no-transpile\n       * dispatch(api.util.prefetch('getPosts', undefined, { force: true }))\n       * ```\n       */\n      prefetch<EndpointName extends QueryKeys<Definitions>>(endpointName: EndpointName, arg: QueryArgFrom<Definitions[EndpointName]>, options: PrefetchOptions): ThunkAction<void, any, any, UnknownAction>;\n      /**\n       * A Redux thunk action creator that, when dispatched, creates and applies a set of JSON diff/patch objects to the current state. This immediately updates the Redux state with those changes.\n       *\n       * The thunk action creator accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and an `updateRecipe` callback function. The callback receives an Immer-wrapped `draft` of the current state, and may modify the draft to match the expected results after the mutation completes successfully.\n       *\n       * The thunk executes _synchronously_, and returns an object containing `{patches: Patch[], inversePatches: Patch[], undo: () => void}`. The `patches` and `inversePatches` are generated using Immer's [`produceWithPatches` method](https://immerjs.github.io/immer/patches).\n       *\n       * This is typically used as the first step in implementing optimistic updates. The generated `inversePatches` can be used to revert the updates by calling `dispatch(patchQueryData(endpointName, args, inversePatches))`. Alternatively, the `undo` method can be called directly to achieve the same effect.\n       *\n       * Note that the first two arguments (`endpointName` and `args`) are used to determine which existing cache entry to update. If no existing cache entry is found, the `updateRecipe` callback will not run.\n       *\n       * @example\n       *\n       * ```ts\n       * const patchCollection = dispatch(\n       *   api.util.updateQueryData('getPosts', undefined, (draftPosts) => {\n       *     draftPosts.push({ id: 1, name: 'Teddy' })\n       *   })\n       * )\n       * ```\n       */\n      updateQueryData: UpdateQueryDataThunk<Definitions, RootState<Definitions, string, ReducerPath>>;\n\n      /**\n       * A Redux thunk action creator that, when dispatched, acts as an artificial API request to upsert a value into the cache.\n       *\n       * The thunk action creator accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and the data to upsert.\n       *\n       * If no cache entry for that cache key exists, a cache entry will be created and the data added. If a cache entry already exists, this will _overwrite_ the existing cache entry data.\n       *\n       * The thunk executes _asynchronously_, and returns a promise that resolves when the store has been updated.\n       *\n       * If dispatched while an actual request is in progress, both the upsert and request will be handled as soon as they resolve, resulting in a \"last result wins\" update behavior.\n       *\n       * @example\n       *\n       * ```ts\n       * await dispatch(\n       *   api.util.upsertQueryData('getPost', {id: 1}, {id: 1, text: \"Hello!\"})\n       * )\n       * ```\n       */\n      upsertQueryData: UpsertQueryDataThunk<Definitions, RootState<Definitions, string, ReducerPath>>;\n      /**\n       * A Redux thunk that applies a JSON diff/patch array to the cached data for a given query result. This immediately updates the Redux state with those changes.\n       *\n       * The thunk accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and a JSON diff/patch array as produced by Immer's `produceWithPatches`.\n       *\n       * This is typically used as the second step in implementing optimistic updates. If a request fails, the optimistically-applied changes can be reverted by dispatching `patchQueryData` with the `inversePatches` that were generated by `updateQueryData` earlier.\n       *\n       * In cases where it is desired to simply revert the previous changes, it may be preferable to call the `undo` method returned from dispatching `updateQueryData` instead.\n       *\n       * @example\n       * ```ts\n       * const patchCollection = dispatch(\n       *   api.util.updateQueryData('getPosts', undefined, (draftPosts) => {\n       *     draftPosts.push({ id: 1, name: 'Teddy' })\n       *   })\n       * )\n       *\n       * // later\n       * dispatch(\n       *   api.util.patchQueryData('getPosts', undefined, patchCollection.inversePatches)\n       * )\n       *\n       * // or\n       * patchCollection.undo()\n       * ```\n       */\n      patchQueryData: PatchQueryDataThunk<Definitions, RootState<Definitions, string, ReducerPath>>;\n\n      /**\n       * A Redux action creator that can be dispatched to manually reset the api state completely. This will immediately remove all existing cache entries, and all queries will be considered 'uninitialized'.\n       *\n       * @example\n       *\n       * ```ts\n       * dispatch(api.util.resetApiState())\n       * ```\n       */\n      resetApiState: SliceActions['resetApiState'];\n      /**\n       * A Redux action creator that can be used to manually invalidate cache tags for [automated re-fetching](../../usage/automated-refetching.mdx).\n       *\n       * The action creator accepts one argument: the cache tags to be invalidated. It returns an action with those tags as a payload, and the corresponding `invalidateTags` action type for the api.\n       *\n       * Dispatching the result of this action creator will [invalidate](../../usage/automated-refetching.mdx#invalidating-cache-data) the given tags, causing queries to automatically re-fetch if they are subscribed to cache data that [provides](../../usage/automated-refetching.mdx#providing-cache-data) the corresponding tags.\n       *\n       * The array of tags provided to the action creator should be in one of the following formats, where `TagType` is equal to a string provided to the [`tagTypes`](../createApi.mdx#tagtypes) property of the api:\n       *\n       * - `[TagType]`\n       * - `[{ type: TagType }]`\n       * - `[{ type: TagType, id: number | string }]`\n       *\n       * @example\n       *\n       * ```ts\n       * dispatch(api.util.invalidateTags(['Post']))\n       * dispatch(api.util.invalidateTags([{ type: 'Post', id: 1 }]))\n       * dispatch(\n       *   api.util.invalidateTags([\n       *     { type: 'Post', id: 1 },\n       *     { type: 'Post', id: 'LIST' },\n       *   ])\n       * )\n       * ```\n       */\n      invalidateTags: ActionCreatorWithPayload<Array<TagDescription<TagTypes>>, string>;\n\n      /**\n       * A function to select all `{ endpointName, originalArgs, queryCacheKey }` combinations that would be invalidated by a specific set of tags.\n       *\n       * Can be used for mutations that want to do optimistic updates instead of invalidating a set of tags, but don't know exactly what they need to update.\n       */\n      selectInvalidatedBy: (state: RootState<Definitions, string, ReducerPath>, tags: ReadonlyArray<TagDescription<TagTypes>>) => Array<{\n        endpointName: string;\n        originalArgs: any;\n        queryCacheKey: string;\n      }>;\n\n      /**\n       * A function to select all arguments currently cached for a given endpoint.\n       *\n       * Can be used for mutations that want to do optimistic updates instead of invalidating a set of tags, but don't know exactly what they need to update.\n       */\n      selectCachedArgsForQuery: <QueryName extends QueryKeys<Definitions>>(state: RootState<Definitions, string, ReducerPath>, queryName: QueryName) => Array<QueryArgFrom<Definitions[QueryName]>>;\n    };\n    /**\n     * Endpoints based on the input endpoints provided to `createApi`, containing `select` and `action matchers`.\n     */\n    endpoints: { [K in keyof Definitions]: Definitions[K] extends QueryDefinition<any, any, any, any, any> ? ApiEndpointQuery<Definitions[K], Definitions> : Definitions[K] extends MutationDefinition<any, any, any, any, any> ? ApiEndpointMutation<Definitions[K], Definitions> : never };\n  };\n}\nexport interface ApiEndpointQuery<\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinition extends QueryDefinition<any, any, any, any, any>,\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinitions extends EndpointDefinitions> extends BuildThunksApiEndpointQuery<Definition>, BuildInitiateApiEndpointQuery<Definition>, BuildSelectorsApiEndpointQuery<Definition, Definitions> {\n  name: string;\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n  Types: NonNullable<Definition['Types']>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface ApiEndpointMutation<\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinition extends MutationDefinition<any, any, any, any, any>,\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nDefinitions extends EndpointDefinitions> extends BuildThunksApiEndpointMutation<Definition>, BuildInitiateApiEndpointMutation<Definition>, BuildSelectorsApiEndpointMutation<Definition, Definitions> {\n  name: string;\n  /**\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\n   */\n  Types: NonNullable<Definition['Types']>;\n}\nexport type ListenerActions = {\n  /**\n   * Will cause the RTK Query middleware to trigger any refetchOnReconnect-related behavior\n   * @link https://rtk-query-docs.netlify.app/api/setupListeners\n   */\n  onOnline: typeof onOnline;\n  onOffline: typeof onOffline;\n  /**\n   * Will cause the RTK Query middleware to trigger any refetchOnFocus-related behavior\n   * @link https://rtk-query-docs.netlify.app/api/setupListeners\n   */\n  onFocus: typeof onFocus;\n  onFocusLost: typeof onFocusLost;\n};\nexport type InternalActions = SliceActions & ListenerActions;\nexport interface CoreModuleOptions {\n  /**\n   * A selector creator (usually from `reselect`, or matching the same signature)\n   */\n  createSelector?: typeof _createSelector;\n}\n\n/**\n * Creates a module containing the basic redux logic for use with `buildCreateApi`.\n *\n * @example\n * ```ts\n * const createBaseApi = buildCreateApi(coreModule());\n * ```\n */\nexport const coreModule = ({\n  createSelector = _createSelector\n}: CoreModuleOptions = {}): Module<CoreModule> => ({\n  name: coreModuleName,\n  init(api, {\n    baseQuery,\n    tagTypes,\n    reducerPath,\n    serializeQueryArgs,\n    keepUnusedDataFor,\n    refetchOnMountOrArgChange,\n    refetchOnFocus,\n    refetchOnReconnect,\n    invalidationBehavior\n  }, context) {\n    enablePatches();\n    assertCast<InternalSerializeQueryArgs>(serializeQueryArgs);\n    const assertTagType: AssertTagTypes = tag => {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n        if (!tagTypes.includes((tag.type as any))) {\n          console.error(`Tag type '${tag.type}' was used, but not specified in \\`tagTypes\\`!`);\n        }\n      }\n      return tag;\n    };\n    Object.assign(api, {\n      reducerPath,\n      endpoints: {},\n      internalActions: {\n        onOnline,\n        onOffline,\n        onFocus,\n        onFocusLost\n      },\n      util: {}\n    });\n    const {\n      queryThunk,\n      mutationThunk,\n      patchQueryData,\n      updateQueryData,\n      upsertQueryData,\n      prefetch,\n      buildMatchThunkActions\n    } = buildThunks({\n      baseQuery,\n      reducerPath,\n      context,\n      api,\n      serializeQueryArgs,\n      assertTagType\n    });\n    const {\n      reducer,\n      actions: sliceActions\n    } = buildSlice({\n      context,\n      queryThunk,\n      mutationThunk,\n      reducerPath,\n      assertTagType,\n      config: {\n        refetchOnFocus,\n        refetchOnReconnect,\n        refetchOnMountOrArgChange,\n        keepUnusedDataFor,\n        reducerPath,\n        invalidationBehavior\n      }\n    });\n    safeAssign(api.util, {\n      patchQueryData,\n      updateQueryData,\n      upsertQueryData,\n      prefetch,\n      resetApiState: sliceActions.resetApiState\n    });\n    safeAssign(api.internalActions, sliceActions);\n    const {\n      middleware,\n      actions: middlewareActions\n    } = buildMiddleware({\n      reducerPath,\n      context,\n      queryThunk,\n      mutationThunk,\n      api,\n      assertTagType\n    });\n    safeAssign(api.util, middlewareActions);\n    safeAssign(api, {\n      reducer: (reducer as any),\n      middleware\n    });\n    const {\n      buildQuerySelector,\n      buildMutationSelector,\n      selectInvalidatedBy,\n      selectCachedArgsForQuery\n    } = buildSelectors({\n      serializeQueryArgs: (serializeQueryArgs as any),\n      reducerPath,\n      createSelector\n    });\n    safeAssign(api.util, {\n      selectInvalidatedBy,\n      selectCachedArgsForQuery\n    });\n    const {\n      buildInitiateQuery,\n      buildInitiateMutation,\n      getRunningMutationThunk,\n      getRunningMutationsThunk,\n      getRunningQueriesThunk,\n      getRunningQueryThunk\n    } = buildInitiate({\n      queryThunk,\n      mutationThunk,\n      api,\n      serializeQueryArgs: (serializeQueryArgs as any),\n      context\n    });\n    safeAssign(api.util, {\n      getRunningMutationThunk,\n      getRunningMutationsThunk,\n      getRunningQueryThunk,\n      getRunningQueriesThunk\n    });\n    return {\n      name: coreModuleName,\n      injectEndpoint(endpointName, definition) {\n        const anyApi = ((api as any) as Api<any, Record<string, any>, string, string, CoreModule>);\n        anyApi.endpoints[endpointName] ??= ({} as any);\n        if (isQueryDefinition(definition)) {\n          safeAssign(anyApi.endpoints[endpointName], {\n            name: endpointName,\n            select: buildQuerySelector(endpointName, definition),\n            initiate: buildInitiateQuery(endpointName, definition)\n          }, buildMatchThunkActions(queryThunk, endpointName));\n        } else if (isMutationDefinition(definition)) {\n          safeAssign(anyApi.endpoints[endpointName], {\n            name: endpointName,\n            select: buildMutationSelector(),\n            initiate: buildInitiateMutation(endpointName)\n          }, buildMatchThunkActions(mutationThunk, endpointName));\n        }\n      }\n    };\n  }\n});", "export type Id<T> = { [K in keyof T]: T[K] } & {};\nexport type WithRequiredProp<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;\nexport type Override<T1, T2> = T2 extends any ? Omit<T1, keyof T2> & T2 : never;\nexport function assertCast<T>(v: any): asserts v is T {}\nexport function safeAssign<T extends object>(target: T, ...args: Array<Partial<NoInfer<T>>>): T {\n  return Object.assign(target, ...args);\n}\n\n/**\r\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\r\n */\nexport type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never;\nexport type NonOptionalKeys<T> = { [K in keyof T]-?: undefined extends T[K] ? never : K }[keyof T];\nexport type HasRequiredProps<T, True, False> = NonOptionalKeys<T> extends never ? False : True;\nexport type OptionalIfAllPropsOptional<T> = HasRequiredProps<T, T, T | never>;\nexport type NoInfer<T> = [T][T extends any ? 0 : never];\nexport type NonUndefined<T> = T extends undefined ? never : T;\nexport type UnwrapPromise<T> = T extends PromiseLike<infer V> ? V : T;\nexport type MaybePromise<T> = T | PromiseLike<T>;\nexport type OmitFromUnion<T, K extends keyof T> = T extends any ? Omit<T, K> : never;\nexport type IsAny<T, True, False = never> = true | false extends (T extends never ? true : false) ? True : False;\nexport type CastAny<T, CastTo> = IsAny<T, CastTo, T>;", "import type { InternalHandlerBuilder, SubscriptionSelectors } from './types';\nimport type { SubscriptionState } from '../apiState';\nimport { produceWithPatches } from 'immer';\nimport type { Action } from '@reduxjs/toolkit';\nimport { countObjectKeys } from '../../utils/countObjectKeys';\nexport const buildBatchedActionsHandler: InternalHandlerBuilder<[actionShouldContinue: boolean, returnValue: SubscriptionSelectors | boolean]> = ({\n  api,\n  queryThunk,\n  internalState\n}) => {\n  const subscriptionsPrefix = `${api.reducerPath}/subscriptions`;\n  let previousSubscriptions: SubscriptionState = ((null as unknown) as SubscriptionState);\n  let updateSyncTimer: ReturnType<typeof window.setTimeout> | null = null;\n  const {\n    updateSubscriptionOptions,\n    unsubscribeQueryResult\n  } = api.internalActions;\n\n  // Actually intentionally mutate the subscriptions state used in the middleware\n  // This is done to speed up perf when loading many components\n  const actuallyMutateSubscriptions = (mutableState: SubscriptionState, action: Action) => {\n    if (updateSubscriptionOptions.match(action)) {\n      const {\n        queryCacheKey,\n        requestId,\n        options\n      } = action.payload;\n      if (mutableState?.[queryCacheKey]?.[requestId]) {\n        mutableState[queryCacheKey]![requestId] = options;\n      }\n      return true;\n    }\n    if (unsubscribeQueryResult.match(action)) {\n      const {\n        queryCacheKey,\n        requestId\n      } = action.payload;\n      if (mutableState[queryCacheKey]) {\n        delete mutableState[queryCacheKey]![requestId];\n      }\n      return true;\n    }\n    if (api.internalActions.removeQueryResult.match(action)) {\n      delete mutableState[action.payload.queryCacheKey];\n      return true;\n    }\n    if (queryThunk.pending.match(action)) {\n      const {\n        meta: {\n          arg,\n          requestId\n        }\n      } = action;\n      const substate = mutableState[arg.queryCacheKey] ??= {};\n      substate[`${requestId}_running`] = {};\n      if (arg.subscribe) {\n        substate[requestId] = arg.subscriptionOptions ?? substate[requestId] ?? {};\n      }\n      return true;\n    }\n    let mutated = false;\n    if (queryThunk.fulfilled.match(action) || queryThunk.rejected.match(action)) {\n      const state = mutableState[action.meta.arg.queryCacheKey] || {};\n      const key = `${action.meta.requestId}_running`;\n      mutated ||= !!state[key];\n      delete state[key];\n    }\n    if (queryThunk.rejected.match(action)) {\n      const {\n        meta: {\n          condition,\n          arg,\n          requestId\n        }\n      } = action;\n      if (condition && arg.subscribe) {\n        const substate = mutableState[arg.queryCacheKey] ??= {};\n        substate[requestId] = arg.subscriptionOptions ?? substate[requestId] ?? {};\n        mutated = true;\n      }\n    }\n    return mutated;\n  };\n  const getSubscriptions = () => internalState.currentSubscriptions;\n  const getSubscriptionCount = (queryCacheKey: string) => {\n    const subscriptions = getSubscriptions();\n    const subscriptionsForQueryArg = subscriptions[queryCacheKey] ?? {};\n    return countObjectKeys(subscriptionsForQueryArg);\n  };\n  const isRequestSubscribed = (queryCacheKey: string, requestId: string) => {\n    const subscriptions = getSubscriptions();\n    return !!subscriptions?.[queryCacheKey]?.[requestId];\n  };\n  const subscriptionSelectors: SubscriptionSelectors = {\n    getSubscriptions,\n    getSubscriptionCount,\n    isRequestSubscribed\n  };\n  return (action, mwApi): [actionShouldContinue: boolean, result: SubscriptionSelectors | boolean] => {\n    if (!previousSubscriptions) {\n      // Initialize it the first time this handler runs\n      previousSubscriptions = JSON.parse(JSON.stringify(internalState.currentSubscriptions));\n    }\n    if (api.util.resetApiState.match(action)) {\n      previousSubscriptions = internalState.currentSubscriptions = {};\n      updateSyncTimer = null;\n      return [true, false];\n    }\n\n    // Intercept requests by hooks to see if they're subscribed\n    // We return the internal state reference so that hooks\n    // can do their own checks to see if they're still active.\n    // It's stupid and hacky, but it does cut down on some dispatch calls.\n    if (api.internalActions.internal_getRTKQSubscriptions.match(action)) {\n      return [false, subscriptionSelectors];\n    }\n\n    // Update subscription data based on this action\n    const didMutate = actuallyMutateSubscriptions(internalState.currentSubscriptions, action);\n    let actionShouldContinue = true;\n    if (didMutate) {\n      if (!updateSyncTimer) {\n        // We only use the subscription state for the Redux DevTools at this point,\n        // as the real data is kept here in the middleware.\n        // Given that, we can throttle synchronizing this state significantly to\n        // save on overall perf.\n        // In 1.9, it was updated in a microtask, but now we do it at most every 500ms.\n        updateSyncTimer = setTimeout(() => {\n          // Deep clone the current subscription data\n          const newSubscriptions: SubscriptionState = JSON.parse(JSON.stringify(internalState.currentSubscriptions));\n          // Figure out a smaller diff between original and current\n          const [, patches] = produceWithPatches(previousSubscriptions, () => newSubscriptions);\n\n          // Sync the store state for visibility\n          mwApi.next(api.internalActions.subscriptionsUpdated(patches));\n          // Save the cloned state for later reference\n          previousSubscriptions = newSubscriptions;\n          updateSyncTimer = null;\n        }, 500);\n      }\n      const isSubscriptionSliceAction = typeof action.type == 'string' && !!action.type.startsWith(subscriptionsPrefix);\n      const isAdditionalSubscriptionAction = queryThunk.rejected.match(action) && action.meta.condition && !!action.meta.arg.subscribe;\n      actionShouldContinue = !isSubscriptionSliceAction && !isAdditionalSubscriptionAction;\n    }\n    return [actionShouldContinue, false];\n  };\n};", "import type { QueryDefinition } from '../../endpointDefinitions';\nimport type { ConfigState, QueryCacheKey } from '../apiState';\nimport { isAnyOf } from '../rtkImports';\nimport type { ApiMiddlewareInternalHandler, InternalHandlerBuilder, QueryStateMeta, SubMiddlewareApi, TimeoutId } from './types';\nexport type ReferenceCacheCollection = never;\nfunction isObjectEmpty(obj: Record<any, any>) {\n  // Apparently a for..in loop is faster than `Object.keys()` here:\n  // https://stackoverflow.com/a/59787784/62937\n  for (const k in obj) {\n    // If there is at least one key, it's not empty\n    return false;\n  }\n  return true;\n}\nexport type CacheCollectionQueryExtraOptions = {\n  /**\n   * Overrides the api-wide definition of `keepUnusedDataFor` for this endpoint only. _(This value is in seconds.)_\n   *\n   * This is how long RTK Query will keep your data cached for **after** the last component unsubscribes. For example, if you query an endpoint, then unmount the component, then mount another component that makes the same request within the given time frame, the most recent value will be served from the cache.\n   */\n  keepUnusedDataFor?: number;\n};\n\n// Per https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value , browsers store\n// `setTimeout()` timer values in a 32-bit int. If we pass a value in that's larger than that,\n// it wraps and ends up executing immediately.\n// Our `keepUnusedDataFor` values are in seconds, so adjust the numbers here accordingly.\nexport const THIRTY_TWO_BIT_MAX_INT = 2_147_483_647;\nexport const THIRTY_TWO_BIT_MAX_TIMER_SECONDS = 2_147_483_647 / 1_000 - 1;\nexport const buildCacheCollectionHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  api,\n  queryThunk,\n  context,\n  internalState\n}) => {\n  const {\n    removeQueryResult,\n    unsubscribeQueryResult\n  } = api.internalActions;\n  const canTriggerUnsubscribe = isAnyOf(unsubscribeQueryResult.match, queryThunk.fulfilled, queryThunk.rejected);\n  function anySubscriptionsRemainingForKey(queryCacheKey: string) {\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey];\n    return !!subscriptions && !isObjectEmpty(subscriptions);\n  }\n  const currentRemovalTimeouts: QueryStateMeta<TimeoutId> = {};\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi, internalState) => {\n    if (canTriggerUnsubscribe(action)) {\n      const state = mwApi.getState()[reducerPath];\n      const {\n        queryCacheKey\n      } = unsubscribeQueryResult.match(action) ? action.payload : action.meta.arg;\n      handleUnsubscribe(queryCacheKey, state.queries[queryCacheKey]?.endpointName, mwApi, state.config);\n    }\n    if (api.util.resetApiState.match(action)) {\n      for (const [key, timeout] of Object.entries(currentRemovalTimeouts)) {\n        if (timeout) clearTimeout(timeout);\n        delete currentRemovalTimeouts[key];\n      }\n    }\n    if (context.hasRehydrationInfo(action)) {\n      const state = mwApi.getState()[reducerPath];\n      const {\n        queries\n      } = context.extractRehydrationInfo(action)!;\n      for (const [queryCacheKey, queryState] of Object.entries(queries)) {\n        // Gotcha:\n        // If rehydrating before the endpoint has been injected,the global `keepUnusedDataFor`\n        // will be used instead of the endpoint-specific one.\n        handleUnsubscribe((queryCacheKey as QueryCacheKey), queryState?.endpointName, mwApi, state.config);\n      }\n    }\n  };\n  function handleUnsubscribe(queryCacheKey: QueryCacheKey, endpointName: string | undefined, api: SubMiddlewareApi, config: ConfigState<string>) {\n    const endpointDefinition = (context.endpointDefinitions[endpointName!] as QueryDefinition<any, any, any, any>);\n    const keepUnusedDataFor = endpointDefinition?.keepUnusedDataFor ?? config.keepUnusedDataFor;\n    if (keepUnusedDataFor === Infinity) {\n      // Hey, user said keep this forever!\n      return;\n    }\n    // Prevent `setTimeout` timers from overflowing a 32-bit internal int, by\n    // clamping the max value to be at most 1000ms less than the 32-bit max.\n    // Look, a 24.8-day keepalive ought to be enough for anybody, right? :)\n    // Also avoid negative values too.\n    const finalKeepUnusedDataFor = Math.max(0, Math.min(keepUnusedDataFor, THIRTY_TWO_BIT_MAX_TIMER_SECONDS));\n    if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\n      const currentTimeout = currentRemovalTimeouts[queryCacheKey];\n      if (currentTimeout) {\n        clearTimeout(currentTimeout);\n      }\n      currentRemovalTimeouts[queryCacheKey] = setTimeout(() => {\n        if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\n          api.dispatch(removeQueryResult({\n            queryCacheKey\n          }));\n        }\n        delete currentRemovalTimeouts![queryCacheKey];\n      }, finalKeepUnusedDataFor * 1000);\n    }\n  }\n  return handler;\n};", "import type { ThunkDispatch, UnknownAction } from '@reduxjs/toolkit';\nimport type { BaseQueryFn, BaseQueryMeta } from '../../baseQueryTypes';\nimport type { BaseEndpointDefinition } from '../../endpointDefinitions';\nimport { DefinitionType } from '../../endpointDefinitions';\nimport type { RootState } from '../apiState';\nimport type { MutationResultSelectorResult, QueryResultSelectorResult } from '../buildSelectors';\nimport { getMutationCacheKey } from '../buildSlice';\nimport type { PatchCollection, Recipe } from '../buildThunks';\nimport { isAsyncThunkAction, isFulfilled } from '../rtkImports';\nimport type { ApiMiddlewareInternalHandler, InternalHandlerBuilder, PromiseWithKnownReason, SubMiddlewareApi } from './types';\nexport type ReferenceCacheLifecycle = never;\nexport interface QueryBaseLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends LifecycleApi<ReducerPath> {\n  /**\n   * Gets the current value of this cache entry.\n   */\n  getCacheEntry(): QueryResultSelectorResult<{\n    type: DefinitionType.query;\n  } & BaseEndpointDefinition<QueryArg, BaseQuery, ResultType>>;\n  /**\n   * Updates the current cache entry value.\n   * For documentation see `api.util.updateQueryData`.\n   */\n  updateCachedData(updateRecipe: Recipe<ResultType>): PatchCollection;\n}\nexport type MutationBaseLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> = LifecycleApi<ReducerPath> & {\n  /**\n   * Gets the current value of this cache entry.\n   */\n  getCacheEntry(): MutationResultSelectorResult<{\n    type: DefinitionType.mutation;\n  } & BaseEndpointDefinition<QueryArg, BaseQuery, ResultType>>;\n};\ntype LifecycleApi<ReducerPath extends string = string> = {\n  /**\n   * The dispatch method for the store\n   */\n  dispatch: ThunkDispatch<any, any, UnknownAction>;\n  /**\n   * A method to get the current state\n   */\n  getState(): RootState<any, any, ReducerPath>;\n  /**\n   * `extra` as provided as `thunk.extraArgument` to the `configureStore` `getDefaultMiddleware` option.\n   */\n  extra: unknown;\n  /**\n   * A unique ID generated for the mutation\n   */\n  requestId: string;\n};\ntype CacheLifecyclePromises<ResultType = unknown, MetaType = unknown> = {\n  /**\n   * Promise that will resolve with the first value for this cache key.\n   * This allows you to `await` until an actual value is in cache.\n   *\n   * If the cache entry is removed from the cache before any value has ever\n   * been resolved, this Promise will reject with\n   * `new Error('Promise never resolved before cacheEntryRemoved.')`\n   * to prevent memory leaks.\n   * You can just re-throw that error (or not handle it at all) -\n   * it will be caught outside of `cacheEntryAdded`.\n   *\n   * If you don't interact with this promise, it will not throw.\n   */\n  cacheDataLoaded: PromiseWithKnownReason<{\n    /**\n     * The (transformed) query result.\n     */\n    data: ResultType;\n    /**\n     * The `meta` returned by the `baseQuery`\n     */\n    meta: MetaType;\n  }, typeof neverResolvedError>;\n  /**\n   * Promise that allows you to wait for the point in time when the cache entry\n   * has been removed from the cache, by not being used/subscribed to any more\n   * in the application for too long or by dispatching `api.util.resetApiState`.\n   */\n  cacheEntryRemoved: Promise<void>;\n};\nexport interface QueryCacheLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends QueryBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>, CacheLifecyclePromises<ResultType, BaseQueryMeta<BaseQuery>> {}\nexport type MutationCacheLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> = MutationBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath> & CacheLifecyclePromises<ResultType, BaseQueryMeta<BaseQuery>>;\nexport type CacheLifecycleQueryExtraOptions<ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> = {\n  onCacheEntryAdded?(arg: QueryArg, api: QueryCacheLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n};\nexport type CacheLifecycleMutationExtraOptions<ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> = {\n  onCacheEntryAdded?(arg: QueryArg, api: MutationCacheLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n};\nconst neverResolvedError = (new Error('Promise never resolved before cacheEntryRemoved.') as Error & {\n  message: 'Promise never resolved before cacheEntryRemoved.';\n});\nexport const buildCacheLifecycleHandler: InternalHandlerBuilder = ({\n  api,\n  reducerPath,\n  context,\n  queryThunk,\n  mutationThunk,\n  internalState\n}) => {\n  const isQueryThunk = isAsyncThunkAction(queryThunk);\n  const isMutationThunk = isAsyncThunkAction(mutationThunk);\n  const isFulfilledThunk = isFulfilled(queryThunk, mutationThunk);\n  type CacheLifecycle = {\n    valueResolved?(value: {\n      data: unknown;\n      meta: unknown;\n    }): unknown;\n    cacheEntryRemoved(): void;\n  };\n  const lifecycleMap: Record<string, CacheLifecycle> = {};\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi, stateBefore) => {\n    const cacheKey = getCacheKey(action);\n    if (queryThunk.pending.match(action)) {\n      const oldState = stateBefore[reducerPath].queries[cacheKey];\n      const state = mwApi.getState()[reducerPath].queries[cacheKey];\n      if (!oldState && state) {\n        handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);\n      }\n    } else if (mutationThunk.pending.match(action)) {\n      const state = mwApi.getState()[reducerPath].mutations[cacheKey];\n      if (state) {\n        handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);\n      }\n    } else if (isFulfilledThunk(action)) {\n      const lifecycle = lifecycleMap[cacheKey];\n      if (lifecycle?.valueResolved) {\n        lifecycle.valueResolved({\n          data: action.payload,\n          meta: action.meta.baseQueryMeta\n        });\n        delete lifecycle.valueResolved;\n      }\n    } else if (api.internalActions.removeQueryResult.match(action) || api.internalActions.removeMutationResult.match(action)) {\n      const lifecycle = lifecycleMap[cacheKey];\n      if (lifecycle) {\n        delete lifecycleMap[cacheKey];\n        lifecycle.cacheEntryRemoved();\n      }\n    } else if (api.util.resetApiState.match(action)) {\n      for (const [cacheKey, lifecycle] of Object.entries(lifecycleMap)) {\n        delete lifecycleMap[cacheKey];\n        lifecycle.cacheEntryRemoved();\n      }\n    }\n  };\n  function getCacheKey(action: any) {\n    if (isQueryThunk(action)) return action.meta.arg.queryCacheKey;\n    if (isMutationThunk(action)) {\n      return action.meta.arg.fixedCacheKey ?? action.meta.requestId;\n    }\n    if (api.internalActions.removeQueryResult.match(action)) return action.payload.queryCacheKey;\n    if (api.internalActions.removeMutationResult.match(action)) return getMutationCacheKey(action.payload);\n    return '';\n  }\n  function handleNewKey(endpointName: string, originalArgs: any, queryCacheKey: string, mwApi: SubMiddlewareApi, requestId: string) {\n    const endpointDefinition = context.endpointDefinitions[endpointName];\n    const onCacheEntryAdded = endpointDefinition?.onCacheEntryAdded;\n    if (!onCacheEntryAdded) return;\n    const lifecycle = ({} as CacheLifecycle);\n    const cacheEntryRemoved = new Promise<void>(resolve => {\n      lifecycle.cacheEntryRemoved = resolve;\n    });\n    const cacheDataLoaded: PromiseWithKnownReason<{\n      data: unknown;\n      meta: unknown;\n    }, typeof neverResolvedError> = Promise.race([new Promise<{\n      data: unknown;\n      meta: unknown;\n    }>(resolve => {\n      lifecycle.valueResolved = resolve;\n    }), cacheEntryRemoved.then(() => {\n      throw neverResolvedError;\n    })]);\n    // prevent uncaught promise rejections from happening.\n    // if the original promise is used in any way, that will create a new promise that will throw again\n    cacheDataLoaded.catch(() => {});\n    lifecycleMap[queryCacheKey] = lifecycle;\n    const selector = (api.endpoints[endpointName] as any).select(endpointDefinition.type === DefinitionType.query ? originalArgs : queryCacheKey);\n    const extra = mwApi.dispatch((_, __, extra) => extra);\n    const lifecycleApi = {\n      ...mwApi,\n      getCacheEntry: () => selector(mwApi.getState()),\n      requestId,\n      extra,\n      updateCachedData: ((endpointDefinition.type === DefinitionType.query ? (updateRecipe: Recipe<any>) => mwApi.dispatch(api.util.updateQueryData((endpointName as never), originalArgs, updateRecipe)) : undefined) as any),\n      cacheDataLoaded,\n      cacheEntryRemoved\n    };\n    const runningHandler = onCacheEntryAdded(originalArgs, lifecycleApi);\n    // if a `neverResolvedError` was thrown, but not handled in the running handler, do not let it leak out further\n    Promise.resolve(runningHandler).catch(e => {\n      if (e === neverResolvedError) return;\n      throw e;\n    });\n  }\n  return handler;\n};", "import type { InternalHandlerBuilder } from './types';\nexport const buildDevCheckHandler: InternalHandlerBuilder = ({\n  api,\n  context: {\n    apiUid\n  },\n  reducerPath\n}) => {\n  return (action, mwApi) => {\n    if (api.util.resetApiState.match(action)) {\n      // dispatch after api reset\n      mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));\n    }\n    if (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n      if (api.internalActions.middlewareRegistered.match(action) && action.payload === apiUid && mwApi.getState()[reducerPath]?.config?.middlewareRegistered === 'conflict') {\n        console.warn(`There is a mismatch between slice and middleware for the reducerPath \"${reducerPath}\".\nYou can only have one api per reducer path, this will lead to crashes in various situations!${reducerPath === 'api' ? `\nIf you have multiple apis, you *have* to specify the reducerPath option when using createApi!` : ''}`);\n      }\n    }\n  };\n};", "import { isAnyOf, isFulfilled, isRejected, isRejectedWithValue } from '../rtkImports';\nimport type { EndpointDefinitions, FullTagDescription } from '../../endpointDefinitions';\nimport { calculateProvidedBy } from '../../endpointDefinitions';\nimport type { CombinedState, QueryCacheKey } from '../apiState';\nimport { QueryStatus } from '../apiState';\nimport { calculateProvidedByThunk } from '../buildThunks';\nimport type { SubMiddlewareApi, InternalHandlerBuilder, ApiMiddlewareInternalHandler, InternalMiddlewareState } from './types';\nimport { countObjectKeys } from '../../utils/countObjectKeys';\nexport const buildInvalidationByTagsHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  context,\n  context: {\n    endpointDefinitions\n  },\n  mutationThunk,\n  queryThunk,\n  api,\n  assertTagType,\n  refetchQuery,\n  internalState\n}) => {\n  const {\n    removeQueryResult\n  } = api.internalActions;\n  const isThunkActionWithTags = isAnyOf(isFulfilled(mutationThunk), isRejectedWithValue(mutationThunk));\n  const isQueryEnd = isAnyOf(isFulfilled(mutationThunk, queryThunk), isRejected(mutationThunk, queryThunk));\n  let pendingTagInvalidations: FullTagDescription<string>[] = [];\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (isThunkActionWithTags(action)) {\n      invalidateTags(calculateProvidedByThunk(action, 'invalidatesTags', endpointDefinitions, assertTagType), mwApi);\n    } else if (isQueryEnd(action)) {\n      invalidateTags([], mwApi);\n    } else if (api.util.invalidateTags.match(action)) {\n      invalidateTags(calculateProvidedBy(action.payload, undefined, undefined, undefined, undefined, assertTagType), mwApi);\n    }\n  };\n  function hasPendingRequests(state: CombinedState<EndpointDefinitions, string, string>) {\n    for (const key in state.queries) {\n      if (state.queries[key]?.status === QueryStatus.pending) return true;\n    }\n    for (const key in state.mutations) {\n      if (state.mutations[key]?.status === QueryStatus.pending) return true;\n    }\n    return false;\n  }\n  function invalidateTags(newTags: readonly FullTagDescription<string>[], mwApi: SubMiddlewareApi) {\n    const rootState = mwApi.getState();\n    const state = rootState[reducerPath];\n    pendingTagInvalidations.push(...newTags);\n    if (state.config.invalidationBehavior === 'delayed' && hasPendingRequests(state)) {\n      return;\n    }\n    const tags = pendingTagInvalidations;\n    pendingTagInvalidations = [];\n    if (tags.length === 0) return;\n    const toInvalidate = api.util.selectInvalidatedBy(rootState, tags);\n    context.batch(() => {\n      const valuesArray = Array.from(toInvalidate.values());\n      for (const {\n        queryCacheKey\n      } of valuesArray) {\n        const querySubState = state.queries[queryCacheKey];\n        const subscriptionSubState = internalState.currentSubscriptions[queryCacheKey] ?? {};\n        if (querySubState) {\n          if (countObjectKeys(subscriptionSubState) === 0) {\n            mwApi.dispatch(removeQueryResult({\n              queryCacheKey: (queryCacheKey as QueryCacheKey)\n            }));\n          } else if (querySubState.status !== QueryStatus.uninitialized) {\n            mwApi.dispatch(refetchQuery(querySubState, queryCacheKey));\n          }\n        }\n      }\n    });\n  }\n  return handler;\n};", "import type { QuerySubstateIdentifier, Subscribers } from '../apiState';\nimport { QueryStatus } from '../apiState';\nimport type { QueryStateMeta, SubMiddlewareApi, TimeoutId, InternalHandlerBuilder, ApiMiddlewareInternalHandler, InternalMiddlewareState } from './types';\nexport const buildPollingHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  queryThunk,\n  api,\n  refetchQuery,\n  internalState\n}) => {\n  const currentPolls: QueryStateMeta<{\n    nextPollTimestamp: number;\n    timeout?: TimeoutId;\n    pollingInterval: number;\n  }> = {};\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (api.internalActions.updateSubscriptionOptions.match(action) || api.internalActions.unsubscribeQueryResult.match(action)) {\n      updatePollingInterval(action.payload, mwApi);\n    }\n    if (queryThunk.pending.match(action) || queryThunk.rejected.match(action) && action.meta.condition) {\n      updatePollingInterval(action.meta.arg, mwApi);\n    }\n    if (queryThunk.fulfilled.match(action) || queryThunk.rejected.match(action) && !action.meta.condition) {\n      startNextPoll(action.meta.arg, mwApi);\n    }\n    if (api.util.resetApiState.match(action)) {\n      clearPolls();\n    }\n  };\n  function startNextPoll({\n    queryCacheKey\n  }: QuerySubstateIdentifier, api: SubMiddlewareApi) {\n    const state = api.getState()[reducerPath];\n    const querySubState = state.queries[queryCacheKey];\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey];\n    if (!querySubState || querySubState.status === QueryStatus.uninitialized) return;\n    const {\n      lowestPollingInterval,\n      skipPollingIfUnfocused\n    } = findLowestPollingInterval(subscriptions);\n    if (!Number.isFinite(lowestPollingInterval)) return;\n    const currentPoll = currentPolls[queryCacheKey];\n    if (currentPoll?.timeout) {\n      clearTimeout(currentPoll.timeout);\n      currentPoll.timeout = undefined;\n    }\n    const nextPollTimestamp = Date.now() + lowestPollingInterval;\n    currentPolls[queryCacheKey] = {\n      nextPollTimestamp,\n      pollingInterval: lowestPollingInterval,\n      timeout: setTimeout(() => {\n        if (state.config.focused || !skipPollingIfUnfocused) {\n          api.dispatch(refetchQuery(querySubState, queryCacheKey));\n        }\n        startNextPoll({\n          queryCacheKey\n        }, api);\n      }, lowestPollingInterval)\n    };\n  }\n  function updatePollingInterval({\n    queryCacheKey\n  }: QuerySubstateIdentifier, api: SubMiddlewareApi) {\n    const state = api.getState()[reducerPath];\n    const querySubState = state.queries[queryCacheKey];\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey];\n    if (!querySubState || querySubState.status === QueryStatus.uninitialized) {\n      return;\n    }\n    const {\n      lowestPollingInterval\n    } = findLowestPollingInterval(subscriptions);\n    if (!Number.isFinite(lowestPollingInterval)) {\n      cleanupPollForKey(queryCacheKey);\n      return;\n    }\n    const currentPoll = currentPolls[queryCacheKey];\n    const nextPollTimestamp = Date.now() + lowestPollingInterval;\n    if (!currentPoll || nextPollTimestamp < currentPoll.nextPollTimestamp) {\n      startNextPoll({\n        queryCacheKey\n      }, api);\n    }\n  }\n  function cleanupPollForKey(key: string) {\n    const existingPoll = currentPolls[key];\n    if (existingPoll?.timeout) {\n      clearTimeout(existingPoll.timeout);\n    }\n    delete currentPolls[key];\n  }\n  function clearPolls() {\n    for (const key of Object.keys(currentPolls)) {\n      cleanupPollForKey(key);\n    }\n  }\n  function findLowestPollingInterval(subscribers: Subscribers = {}) {\n    let skipPollingIfUnfocused: boolean | undefined = false;\n    let lowestPollingInterval = Number.POSITIVE_INFINITY;\n    for (let key in subscribers) {\n      if (!!subscribers[key].pollingInterval) {\n        lowestPollingInterval = Math.min(subscribers[key].pollingInterval!, lowestPollingInterval);\n        skipPollingIfUnfocused = subscribers[key].skipPollingIfUnfocused || skipPollingIfUnfocused;\n      }\n    }\n    return {\n      lowestPollingInterval,\n      skipPollingIfUnfocused\n    };\n  }\n  return handler;\n};", "import type { BaseQueryError, BaseQueryFn, BaseQueryMeta } from '../../baseQueryTypes';\nimport { DefinitionType } from '../../endpointDefinitions';\nimport type { Recipe } from '../buildThunks';\nimport { isFulfilled, isPending, isRejected } from '../rtkImports';\nimport type { MutationBaseLifecycleApi, QueryBaseLifecycleApi } from './cacheLifecycle';\nimport type { ApiMiddlewareInternalHandler, InternalHandlerBuilder, PromiseConstructorWithKnownReason, PromiseWithKnownReason } from './types';\nexport type ReferenceQueryLifecycle = never;\ntype QueryLifecyclePromises<ResultType, BaseQuery extends BaseQueryFn> = {\n  /**\n   * Promise that will resolve with the (transformed) query result.\n   *\n   * If the query fails, this promise will reject with the error.\n   *\n   * This allows you to `await` for the query to finish.\n   *\n   * If you don't interact with this promise, it will not throw.\n   */\n  queryFulfilled: PromiseWithKnownReason<{\n    /**\n     * The (transformed) query result.\n     */\n    data: ResultType;\n    /**\n     * The `meta` returned by the `baseQuery`\n     */\n    meta: BaseQueryMeta<BaseQuery>;\n  }, QueryFulfilledRejectionReason<BaseQuery>>;\n};\ntype QueryFulfilledRejectionReason<BaseQuery extends BaseQueryFn> = {\n  error: BaseQueryError<BaseQuery>;\n  /**\n   * If this is `false`, that means this error was returned from the `baseQuery` or `queryFn` in a controlled manner.\n   */\n  isUnhandledError: false;\n  /**\n   * The `meta` returned by the `baseQuery`\n   */\n  meta: BaseQueryMeta<BaseQuery>;\n} | {\n  error: unknown;\n  meta?: undefined;\n  /**\n   * If this is `true`, that means that this error is the result of `baseQueryFn`, `queryFn`, `transformResponse` or `transformErrorResponse` throwing an error instead of handling it properly.\n   * There can not be made any assumption about the shape of `error`.\n   */\n  isUnhandledError: true;\n};\nexport type QueryLifecycleQueryExtraOptions<ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> = {\n  /**\n   * A function that is called when the individual query is started. The function is called with a lifecycle api object containing properties such as `queryFulfilled`, allowing code to be run when a query is started, when it succeeds, and when it fails (i.e. throughout the lifecycle of an individual query/mutation call).\n   *\n   * Can be used to perform side-effects throughout the lifecycle of the query.\n   *\n   * @example\n   * ```ts\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n   * import { messageCreated } from './notificationsSlice\n   * export interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({\n   *     baseUrl: '/',\n   *   }),\n   *   endpoints: (build) => ({\n   *     getPost: build.query<Post, number>({\n   *       query: (id) => `post/${id}`,\n   *       async onQueryStarted(id, { dispatch, queryFulfilled }) {\n   *         // `onStart` side-effect\n   *         dispatch(messageCreated('Fetching posts...'))\n   *         try {\n   *           const { data } = await queryFulfilled\n   *           // `onSuccess` side-effect\n   *           dispatch(messageCreated('Posts received!'))\n   *         } catch (err) {\n   *           // `onError` side-effect\n   *           dispatch(messageCreated('Error fetching posts!'))\n   *         }\n   *       }\n   *     }),\n   *   }),\n   * })\n   * ```\n   */\n  onQueryStarted?(arg: QueryArg, api: QueryLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n};\nexport type QueryLifecycleMutationExtraOptions<ResultType, QueryArg, BaseQuery extends BaseQueryFn, ReducerPath extends string = string> = {\n  /**\n   * A function that is called when the individual mutation is started. The function is called with a lifecycle api object containing properties such as `queryFulfilled`, allowing code to be run when a query is started, when it succeeds, and when it fails (i.e. throughout the lifecycle of an individual query/mutation call).\n   *\n   * Can be used for `optimistic updates`.\n   *\n   * @example\n   *\n   * ```ts\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\n   * export interface Post {\n   *   id: number\n   *   name: string\n   * }\n   *\n   * const api = createApi({\n   *   baseQuery: fetchBaseQuery({\n   *     baseUrl: '/',\n   *   }),\n   *   tagTypes: ['Post'],\n   *   endpoints: (build) => ({\n   *     getPost: build.query<Post, number>({\n   *       query: (id) => `post/${id}`,\n   *       providesTags: ['Post'],\n   *     }),\n   *     updatePost: build.mutation<void, Pick<Post, 'id'> & Partial<Post>>({\n   *       query: ({ id, ...patch }) => ({\n   *         url: `post/${id}`,\n   *         method: 'PATCH',\n   *         body: patch,\n   *       }),\n   *       invalidatesTags: ['Post'],\n   *       async onQueryStarted({ id, ...patch }, { dispatch, queryFulfilled }) {\n   *         const patchResult = dispatch(\n   *           api.util.updateQueryData('getPost', id, (draft) => {\n   *             Object.assign(draft, patch)\n   *           })\n   *         )\n   *         try {\n   *           await queryFulfilled\n   *         } catch {\n   *           patchResult.undo()\n   *         }\n   *       },\n   *     }),\n   *   }),\n   * })\n   * ```\n   */\n  onQueryStarted?(arg: QueryArg, api: MutationLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>): Promise<void> | void;\n};\nexport interface QueryLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> extends QueryBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>, QueryLifecyclePromises<ResultType, BaseQuery> {}\nexport type MutationLifecycleApi<QueryArg, BaseQuery extends BaseQueryFn, ResultType, ReducerPath extends string = string> = MutationBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath> & QueryLifecyclePromises<ResultType, BaseQuery>;\nexport const buildQueryLifecycleHandler: InternalHandlerBuilder = ({\n  api,\n  context,\n  queryThunk,\n  mutationThunk\n}) => {\n  const isPendingThunk = isPending(queryThunk, mutationThunk);\n  const isRejectedThunk = isRejected(queryThunk, mutationThunk);\n  const isFullfilledThunk = isFulfilled(queryThunk, mutationThunk);\n  type CacheLifecycle = {\n    resolve(value: {\n      data: unknown;\n      meta: unknown;\n    }): unknown;\n    reject(value: QueryFulfilledRejectionReason<any>): unknown;\n  };\n  const lifecycleMap: Record<string, CacheLifecycle> = {};\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (isPendingThunk(action)) {\n      const {\n        requestId,\n        arg: {\n          endpointName,\n          originalArgs\n        }\n      } = action.meta;\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      const onQueryStarted = endpointDefinition?.onQueryStarted;\n      if (onQueryStarted) {\n        const lifecycle = ({} as CacheLifecycle);\n        const queryFulfilled = new (Promise as PromiseConstructorWithKnownReason)<{\n          data: unknown;\n          meta: unknown;\n        }, QueryFulfilledRejectionReason<any>>((resolve, reject) => {\n          lifecycle.resolve = resolve;\n          lifecycle.reject = reject;\n        });\n        // prevent uncaught promise rejections from happening.\n        // if the original promise is used in any way, that will create a new promise that will throw again\n        queryFulfilled.catch(() => {});\n        lifecycleMap[requestId] = lifecycle;\n        const selector = (api.endpoints[endpointName] as any).select(endpointDefinition.type === DefinitionType.query ? originalArgs : requestId);\n        const extra = mwApi.dispatch((_, __, extra) => extra);\n        const lifecycleApi = {\n          ...mwApi,\n          getCacheEntry: () => selector(mwApi.getState()),\n          requestId,\n          extra,\n          updateCachedData: ((endpointDefinition.type === DefinitionType.query ? (updateRecipe: Recipe<any>) => mwApi.dispatch(api.util.updateQueryData((endpointName as never), originalArgs, updateRecipe)) : undefined) as any),\n          queryFulfilled\n        };\n        onQueryStarted(originalArgs, lifecycleApi);\n      }\n    } else if (isFullfilledThunk(action)) {\n      const {\n        requestId,\n        baseQueryMeta\n      } = action.meta;\n      lifecycleMap[requestId]?.resolve({\n        data: action.payload,\n        meta: baseQueryMeta\n      });\n      delete lifecycleMap[requestId];\n    } else if (isRejectedThunk(action)) {\n      const {\n        requestId,\n        rejectedWithValue,\n        baseQueryMeta\n      } = action.meta;\n      lifecycleMap[requestId]?.reject({\n        error: action.payload ?? action.error,\n        isUnhandledError: !rejectedWithValue,\n        meta: (baseQueryMeta as any)\n      });\n      delete lifecycleMap[requestId];\n    }\n  };\n  return handler;\n};", "import { QueryStatus } from '../apiState';\nimport type { QueryCacheKey } from '../apiState';\nimport { onFocus, onOnline } from '../setupListeners';\nimport type { ApiMiddlewareInternalHandler, InternalHandlerBuilder, SubMiddlewareApi } from './types';\nimport { countObjectKeys } from '../../utils/countObjectKeys';\nexport const buildWindowEventHandler: InternalHandlerBuilder = ({\n  reducerPath,\n  context,\n  api,\n  refetchQuery,\n  internalState\n}) => {\n  const {\n    removeQueryResult\n  } = api.internalActions;\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\n    if (onFocus.match(action)) {\n      refetchValidQueries(mwApi, 'refetchOnFocus');\n    }\n    if (onOnline.match(action)) {\n      refetchValidQueries(mwApi, 'refetchOnReconnect');\n    }\n  };\n  function refetchValidQueries(api: SubMiddlewareApi, type: 'refetchOnFocus' | 'refetchOnReconnect') {\n    const state = api.getState()[reducerPath];\n    const queries = state.queries;\n    const subscriptions = internalState.currentSubscriptions;\n    context.batch(() => {\n      for (const queryCacheKey of Object.keys(subscriptions)) {\n        const querySubState = queries[queryCacheKey];\n        const subscriptionSubState = subscriptions[queryCacheKey];\n        if (!subscriptionSubState || !querySubState) continue;\n        const shouldRefetch = Object.values(subscriptionSubState).some(sub => sub[type] === true) || Object.values(subscriptionSubState).every(sub => sub[type] === undefined) && state.config[type];\n        if (shouldRefetch) {\n          if (countObjectKeys(subscriptionSubState) === 0) {\n            api.dispatch(removeQueryResult({\n              queryCacheKey: (queryCacheKey as QueryCacheKey)\n            }));\n          } else if (querySubState.status !== QueryStatus.uninitialized) {\n            api.dispatch(refetchQuery(querySubState, queryCacheKey));\n          }\n        }\n      }\n    });\n  }\n  return handler;\n};", "import type { Action, Middleware, ThunkDispatch, UnknownAction } from '@reduxjs/toolkit';\nimport type { EndpointDefinitions, FullTagDescription } from '../../endpointDefinitions';\nimport type { QueryStatus, QuerySubState, RootState } from '../apiState';\nimport type { QueryThunkArg } from '../buildThunks';\nimport { createAction, isAction } from '../rtkImports';\nimport { buildBatchedActionsHandler } from './batchActions';\nimport { buildCacheCollectionHandler } from './cacheCollection';\nimport { buildCacheLifecycleHandler } from './cacheLifecycle';\nimport { buildDevCheckHandler } from './devMiddleware';\nimport { buildInvalidationByTagsHandler } from './invalidationByTags';\nimport { buildPollingHandler } from './polling';\nimport { buildQueryLifecycleHandler } from './queryLifecycle';\nimport type { BuildMiddlewareInput, InternalHandlerBuilder, InternalMiddlewareState } from './types';\nimport { buildWindowEventHandler } from './windowEventHandling';\nexport type { ReferenceCacheCollection } from './cacheCollection';\nexport type { MutationCacheLifecycleApi, QueryCacheLifecycleApi, ReferenceCacheLifecycle } from './cacheLifecycle';\nexport type { MutationLifecycleApi, QueryLifecycleApi, ReferenceQueryLifecycle } from './queryLifecycle';\nexport type { SubscriptionSelectors } from './types';\nexport function buildMiddleware<Definitions extends EndpointDefinitions, ReducerPath extends string, TagTypes extends string>(input: BuildMiddlewareInput<Definitions, ReducerPath, TagTypes>) {\n  const {\n    reducerPath,\n    queryThunk,\n    api,\n    context\n  } = input;\n  const {\n    apiUid\n  } = context;\n  const actions = {\n    invalidateTags: createAction<Array<TagTypes | FullTagDescription<TagTypes>>>(`${reducerPath}/invalidateTags`)\n  };\n  const isThisApiSliceAction = (action: Action) => action.type.startsWith(`${reducerPath}/`);\n  const handlerBuilders: InternalHandlerBuilder[] = [buildDevCheckHandler, buildCacheCollectionHandler, buildInvalidationByTagsHandler, buildPollingHandler, buildCacheLifecycleHandler, buildQueryLifecycleHandler];\n  const middleware: Middleware<{}, RootState<Definitions, string, ReducerPath>, ThunkDispatch<any, any, UnknownAction>> = mwApi => {\n    let initialized = false;\n    const internalState: InternalMiddlewareState = {\n      currentSubscriptions: {}\n    };\n    const builderArgs = {\n      ...((input as any) as BuildMiddlewareInput<EndpointDefinitions, string, string>),\n      internalState,\n      refetchQuery,\n      isThisApiSliceAction\n    };\n    const handlers = handlerBuilders.map(build => build(builderArgs));\n    const batchedActionsHandler = buildBatchedActionsHandler(builderArgs);\n    const windowEventsHandler = buildWindowEventHandler(builderArgs);\n    return next => {\n      return action => {\n        if (!isAction(action)) {\n          return next(action);\n        }\n        if (!initialized) {\n          initialized = true;\n          // dispatch before any other action\n          mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));\n        }\n        const mwApiWithNext = {\n          ...mwApi,\n          next\n        };\n        const stateBefore = mwApi.getState();\n        const [actionShouldContinue, internalProbeResult] = batchedActionsHandler(action, mwApiWithNext, stateBefore);\n        let res: any;\n        if (actionShouldContinue) {\n          res = next(action);\n        } else {\n          res = internalProbeResult;\n        }\n        if (!!mwApi.getState()[reducerPath]) {\n          // Only run these checks if the middleware is registered okay\n\n          // This looks for actions that aren't specific to the API slice\n          windowEventsHandler(action, mwApiWithNext, stateBefore);\n          if (isThisApiSliceAction(action) || context.hasRehydrationInfo(action)) {\n            // Only run these additional checks if the actions are part of the API slice,\n            // or the action has hydration-related data\n            for (const handler of handlers) {\n              handler(action, mwApiWithNext, stateBefore);\n            }\n          }\n        }\n        return res;\n      };\n    };\n  };\n  return {\n    middleware,\n    actions\n  };\n  function refetchQuery(querySubState: Exclude<QuerySubState<any>, {\n    status: QueryStatus.uninitialized;\n  }>, queryCacheKey: string, override: Partial<QueryThunkArg> = {}) {\n    return queryThunk({\n      type: 'query',\n      endpointName: querySubState.endpointName,\n      originalArgs: querySubState.originalArgs,\n      subscribe: false,\n      forceRefetch: true,\n      queryCacheKey: (queryCacheKey as any),\n      ...override\n    });\n  }\n}", "import { buildCreateApi } from '../createApi';\nimport { coreModule } from './module';\nexport const createApi = /* @__PURE__ */buildCreateApi(coreModule());\nexport { QueryStatus } from './apiState';\nexport type { CombinedState, MutationKeys, QueryCacheKey, QueryKeys, QuerySubState, RootState, SubscriptionOptions } from './apiState';\nexport type { MutationActionCreatorResult, QueryActionCreatorResult, StartQueryActionCreatorOptions } from './buildInitiate';\nexport type { MutationCacheLifecycleApi, MutationLifecycleApi, QueryCacheLifecycleApi, QueryLifecycleApi, SubscriptionSelectors } from './buildMiddleware';\nexport { skipToken } from './buildSelectors';\nexport type { MutationResultSelectorResult, QueryResultSelectorResult, SkipToken } from './buildSelectors';\nexport type { SliceActions } from './buildSlice';\nexport type { PatchQueryDataThunk, UpdateQueryDataThunk, UpsertQueryDataThunk } from './buildThunks';\nexport { coreModuleName } from './module';\nexport type { ApiEndpointMutation, ApiEndpointQuery, CoreModule, InternalActions, PrefetchOptions, ThunkWithReturnValue } from './module';\nexport { setupListeners } from './setupListeners';\nexport { buildCreateApi, coreModule };", "export function isBrowser(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {Middleware, UnknownAction} from '@reduxjs/toolkit';\n\ntype UnknownActionWithAnalyticsPayload = UnknownAction & {\n  payload: {analyticsAction?: UnknownAction};\n};\n\nfunction isAnalyticsAction(\n  action: unknown\n): action is UnknownActionWithAnalyticsPayload {\n  const analytics = (action as UnknownActionWithAnalyticsPayload).payload\n    ?.analyticsAction;\n\n  return isActionWithType(action) && !isNullOrUndefined(analytics);\n}\n\nfunction isActionWithType(action: unknown): action is UnknownAction {\n  return 'type' in (action as UnknownAction);\n}\n\nexport const analyticsMiddleware: Middleware = (api) => (next) => (action) => {\n  // Why all these shenanigans ?\n  // https://redux.js.org/style-guide/style-guide#do-not-put-non-serializable-values-in-state-or-actions\n  // analyticsAction is returned as a function in some action payload. A function is non serializable.\n  // This is not recommended, with one exception: It has to be handled before any reducer has the chance to do it's job, and should not stored in the state.\n  // To meet those conditions, we ensure the analyticsMiddleware is always the first executed (in store.ts/configureStore) and that it is removed from the payload.\n  // We only keep a reference to the function in order to dispatch it correctly after the reducer (next) has the chance of processing the action/state change\n\n  let analytics: UnknownAction | undefined = undefined;\n\n  if (isAnalyticsAction(action)) {\n    analytics = action.payload.analyticsAction;\n    delete action.payload.analyticsAction;\n  }\n\n  const ret = next(action);\n\n  if (isActionWithType(action)) {\n    if (\n      action.type === 'search/executeSearch/fullfilled' &&\n      analytics === undefined\n    ) {\n      console.error('No analytics action associated with search:', action);\n    }\n\n    if (\n      action.type === 'recommendation/get/fullfilled' &&\n      analytics === undefined\n    ) {\n      console.error(\n        'No analytics action associated with recommendation:',\n        action\n      );\n    }\n\n    if (\n      action.type === 'productRecommendations/get/fullfilled' &&\n      analytics === undefined\n    ) {\n      console.error(\n        'No analytics action associated with product recommendation:',\n        action\n      );\n    }\n  }\n\n  if (analytics !== undefined) {\n    api.dispatch(analytics);\n  }\n\n  return ret;\n};\n", "import {configurationReducer} from '../features/configuration/configuration-slice.js';\n\nexport const configuration = configurationReducer;\n", "import {isNullOrUndefined} from '@coveo/bueno';\n//@ts-expect-error package is just an alias resolved in esbuild\nimport getMagicCookie from '@coveo/pendragon';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions.js';\nimport {updateActiveTab} from '../tab-set/tab-set-actions.js';\nimport {\n  updateBasicConfiguration,\n  updateSearchConfiguration,\n  disableAnalytics,\n  enableAnalytics,\n  updateAnalyticsConfiguration,\n  setOriginLevel2,\n  setOriginLevel3,\n  UpdateBasicConfigurationActionCreatorPayload,\n  UpdateSearchConfigurationActionCreatorPayload,\n  UpdateAnalyticsConfigurationActionCreatorPayload,\n} from './configuration-actions.js';\nimport {\n  getConfigurationInitialState,\n  ConfigurationState,\n} from './configuration-state.js';\n\nexport const configurationReducer = createReducer(\n  getConfigurationInitialState(),\n  (builder) =>\n    builder\n      .addCase(updateBasicConfiguration, (state, action) => {\n        handleUpdateBasicConfiguration(state, action.payload);\n      })\n      .addCase(updateSearchConfiguration, (state, action) => {\n        handleUpdateSearchConfiguration(state, action.payload);\n      })\n      .addCase(updateAnalyticsConfiguration, (state, action) => {\n        handleUpdateAnalyticsConfiguration(state, action.payload);\n      })\n      .addCase(disableAnalytics, (state) => {\n        state.analytics.enabled = false;\n      })\n      .addCase(enableAnalytics, (state) => {\n        state.analytics.enabled = true;\n      })\n      .addCase(setOriginLevel2, (state, action) => {\n        state.analytics.originLevel2 = action.payload.originLevel2;\n      })\n      .addCase(setOriginLevel3, (state, action) => {\n        state.analytics.originLevel3 = action.payload.originLevel3;\n      })\n      .addCase(updateActiveTab, (state, action) => {\n        state.analytics.originLevel2 = action.payload;\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        state.analytics.originLevel2 =\n          action.payload.tab || state.analytics.originLevel2;\n      })\n);\n\nfunction handleUpdateBasicConfiguration(\n  state: ConfigurationState,\n  payload: UpdateBasicConfigurationActionCreatorPayload\n) {\n  if (!isNullOrUndefined(payload.accessToken)) {\n    state.accessToken = payload.accessToken;\n  }\n\n  state.environment = payload.environment ?? 'prod';\n\n  if (!isNullOrUndefined(payload.organizationId)) {\n    state.organizationId = payload.organizationId;\n  }\n}\n\nfunction handleUpdateSearchConfiguration(\n  state: ConfigurationState,\n  payload: UpdateSearchConfigurationActionCreatorPayload\n) {\n  if (!isNullOrUndefined(payload.proxyBaseUrl)) {\n    state.search.apiBaseUrl = payload.proxyBaseUrl;\n  }\n  if (!isNullOrUndefined(payload.locale)) {\n    state.search.locale = payload.locale;\n  }\n  if (!isNullOrUndefined(payload.timezone)) {\n    state.search.timezone = payload.timezone;\n  }\n  if (!isNullOrUndefined(payload.authenticationProviders)) {\n    state.search.authenticationProviders = payload.authenticationProviders;\n  }\n}\n\nfunction handleUpdateAnalyticsConfiguration(\n  state: ConfigurationState,\n  payload: UpdateAnalyticsConfigurationActionCreatorPayload\n) {\n  if (!isNullOrUndefined(payload.enabled)) {\n    state.analytics.enabled = payload.enabled;\n  }\n  if (!isNullOrUndefined(payload.originContext)) {\n    state.analytics.originContext = payload.originContext;\n  }\n  if (!isNullOrUndefined(payload.originLevel2)) {\n    state.analytics.originLevel2 = payload.originLevel2;\n  }\n  if (!isNullOrUndefined(payload.originLevel3)) {\n    state.analytics.originLevel3 = payload.originLevel3;\n  }\n  if (!isNullOrUndefined(payload.proxyBaseUrl)) {\n    state.analytics.apiBaseUrl = payload.proxyBaseUrl;\n  }\n  if (!isNullOrUndefined(payload.trackingId)) {\n    state.analytics.trackingId = payload.trackingId;\n  }\n  if (!isNullOrUndefined(payload.analyticsMode)) {\n    state.analytics.analyticsMode = payload.analyticsMode;\n  }\n  if (!isNullOrUndefined(payload.source)) {\n    state.analytics.source = payload.source;\n  }\n  const magicCookie = getMagicCookie();\n  if (magicCookie) {\n    state.analytics.analyticsMode = 'next';\n    state.analytics.trackingId = magicCookie;\n  }\n  if (!isNullOrUndefined(payload.runtimeEnvironment)) {\n    state.analytics.runtimeEnvironment = payload.runtimeEnvironment;\n  }\n  if (!isNullOrUndefined(payload.anonymous)) {\n    state.analytics.anonymous = payload.anonymous;\n  }\n  if (!isNullOrUndefined(payload.deviceId)) {\n    state.analytics.deviceId = payload.deviceId;\n  }\n  if (!isNullOrUndefined(payload.userDisplayName)) {\n    state.analytics.userDisplayName = payload.userDisplayName;\n  }\n  if (!isNullOrUndefined(payload.documentLocation)) {\n    state.analytics.documentLocation = payload.documentLocation;\n  }\n}\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../utils/validate-payload.js';\n\nexport interface RegisterTabActionCreatorPayload {\n  /**\n   * A unique identifier for the tab (e.g., `\"abc\"`).\n   */\n  id: string;\n\n  /**\n   * The tab filter expression.\n   */\n  expression: string;\n}\n\nexport const registerTab = createAction(\n  'tab/register',\n  (payload: RegisterTabActionCreatorPayload) => {\n    const schema = new RecordValue({\n      values: {\n        id: requiredNonEmptyString,\n        expression: requiredEmptyAllowedString,\n      },\n    });\n\n    return validatePayload<RegisterTabActionCreatorPayload>(payload, schema);\n  }\n);\n\nexport const updateActiveTab = createAction(\n  'tab/updateActiveTab',\n  (id: string) => {\n    return validatePayload(id, requiredNonEmptyString);\n  }\n);\n", "import {IRuntimeEnvironment} from 'coveo.analytics';\nimport dayjs from 'dayjs';\nimport timezone from 'dayjs/plugin/timezone.js';\nimport utc from 'dayjs/plugin/utc.js';\nimport {PlatformEnvironment} from '../../utils/url-utils.js';\nimport {CoveoFramework} from '../../utils/version.js';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nexport interface CoreConfigurationState<\n  Analytics extends CoreAnalyticsState = CoreAnalyticsState,\n> {\n  /**\n   * The access token to use to authenticate requests against the Coveo Cloud endpoints. Typically, this will be an API key or search token that grants the privileges to execute queries and push usage analytics data in the target Coveo Cloud organization.\n   */\n  accessToken: string;\n\n  /**\n   * The global headless engine Usage Analytics API configuration.\n   */\n  analytics: Analytics;\n\n  /**\n   * The environment in which the Coveo cloud organization is hosted.\n   *\n   * The `dev` and `stg` environments are only available internally for Coveo employees (e.g., Professional Services).\n   *\n   * Defaults to `prod`.\n   */\n  environment: PlatformEnvironment;\n\n  /**\n   * The unique identifier of the target Coveo Cloud organization (e.g., `mycoveocloudorganizationg8tp8wu3`)\n   */\n  organizationId: string;\n}\n\nexport interface ConfigurationState\n  extends CoreConfigurationState<AnalyticsState> {\n  /**\n   * The global headless engine Search API configuration.\n   */\n  search: SearchState;\n  /**\n   * The global headless engine Knowledge configuration.\n   */\n  knowledge: KnowledgeState;\n}\n\nexport interface SearchState {\n  /**\n   * The Search API base URL to use.\n   *\n   * By default, will append `/rest/search/v2` to the automatically resolved\n   * platform [organization endpoint](https://docs.coveo.com/en/mcc80216)\n   * (i.e., `https;://<ORG_ID>.org<hipaa|dev|stg|>.coveo.com`)\n   *\n   * If necessary, you can override this value by specifying a `proxyBaseUrl` in the `search` object of your engine\n   * configuration, or when manually dispatching the `updateSearchConfiguration` action.\n   */\n  apiBaseUrl?: string;\n  /**\n   * The locale of the current user. Must comply with IETF\u2019s BCP 47 definition: https://www.rfc-editor.org/rfc/bcp/bcp47.txt.\n   */\n  locale: string;\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n   * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n   */\n  timezone: string;\n  /**\n   * Specifies the name of the authentication providers to use to perform queries.\n   *\n   * See [SAML Authentication](https://docs.coveo.com/en/91/).\n   */\n  authenticationProviders: string[];\n}\n\nexport interface AnalyticsState extends CoreAnalyticsState {\n  /**\n   * Sets the Origin Context dimension on the analytics events.\n   *\n   * You can use this dimension to specify the context of your application.\n   * Suggested values are \"Search\", \"InternalSearch\" and \"CommunitySearch\"\n   *\n   * By default, `Search`.\n   */\n  originContext: string;\n\n  /**\n   * Sets the value of the Origin Level 2 dimension on the analytics events.\n   *\n   * Origin level 2 is a usage analytics event metadata whose value should typically be the name/identifier of the tab from which the usage analytics event originates.\n   *\n   * In the context of product listing, the value should match the breadcrumb of the product listing page from which the usage analytics event originates (for example, `canoes-kayaks/kayaks/sea-kayaks`).\n   *\n   * When logging a usage analytics event, originLevel2 should always be set to the same value as the corresponding `tab` (parameter) Search API query parameter so Coveo Machine Learning models function properly, and usage analytics reports and dashboards are coherent.\n   *\n   * If left unspecified, this value will automatically try to resolve itself from the `tab` Search API query parameter.\n   */\n  originLevel2: string;\n\n  /**\n   * Origin level 3 is a usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface that\u2019s making the request.\n   *\n   * When logging a Search usage analytics event, originLevel3 should always be set to the same value as the corresponding referrer Search API query parameter so usage analytics reports and dashboards are coherent.\n   *\n   * This value is optional, and will automatically try to resolve itself from the referrer search parameter.\n   */\n  originLevel3: string;\n\n  /**\n   * Optional analytics runtime environment, this is needed for analytics to work correctly if you're running outside of a browser.\n   * See https://github.com/coveo/coveo.analytics.js for more info\n   */\n  runtimeEnvironment?: IRuntimeEnvironment;\n\n  /**\n   * Whether analytics events should be logged anonymously.\n   * If set to true, the Usage Analytics Write API will not extract the name and userDisplayName, if present, from the search token\n   */\n  anonymous: boolean;\n\n  /**\n   *  The name of the device that the end user is using. It should be explicitly configured in the context of a native mobile app.\n   */\n  deviceId: string;\n\n  /**\n   * Specifies the user display name for the usage analytics logs.\n   */\n  userDisplayName: string;\n\n  /**\n   * Specifies the URL of the current page or component.\n   */\n  documentLocation: string;\n\n  /**\n   * Specifies the analytics mode to use.\n   *\n   * By default, `next`.\n   * @internal\n   */\n  analyticsMode: 'legacy' | 'next';\n}\n\nexport interface CoreAnalyticsState {\n  /**\n   * The Analytics API base URL to use.\n   *\n   * By default, will append `/rest/organizations/${organizationId}/events/v1` (or `/rest/v15/analytics` if\n   * `analyticsMode`is set to `legacy`) to the automatically resolved analytics\n   * [organization endpoint](https://docs.coveo.com/en/mcc80216)\n   * (i.e., `https;://<ORG_ID>.analytics.org<hipaa|dev|stg|>.coveo.com`)\n   *\n   * If necessary, you can override this value by specifying a `proxyBaseUrl` in the `analytics` object of your engine\n   * configuration, or when manually dispatching the `updateAnalyticsConfiguration` action.\n   */\n  apiBaseUrl?: string;\n\n  /**\n   * Specifies if analytics tracking should be enabled. By default analytics events are tracked.\n   */\n  enabled: boolean;\n\n  /**\n   * Specifies the frameworks and version used around Headless (e.g. @coveo/atomic)\n   * @internal\n   */\n  source: Partial<Record<CoveoFramework, string>>;\n\n  /**\n   * The unique identifier of the tracking target.\n   * @internal\n   */\n  trackingId: string;\n}\n\ninterface KnowledgeState {\n  answerConfigurationId: string;\n}\n\nexport const getConfigurationInitialState: () => ConfigurationState = () => ({\n  organizationId: '',\n  accessToken: '',\n  search: {\n    locale: 'en-US',\n    timezone: dayjs.tz.guess(),\n    authenticationProviders: [],\n  },\n  analytics: {\n    enabled: true,\n    originContext: 'Search',\n    originLevel2: 'default',\n    originLevel3: 'default',\n    anonymous: false,\n    deviceId: '',\n    userDisplayName: '',\n    documentLocation: '',\n    trackingId: '',\n    analyticsMode: 'next',\n    source: {},\n  },\n  knowledge: {\n    answerConfigurationId: '',\n  },\n  environment: 'prod',\n});\n", "import {Middleware} from '@reduxjs/toolkit';\n\nfunction isInstantlyCallableThunkAction(action: unknown): action is () => void {\n  return (action as {instantlyCallable: boolean}).instantlyCallable;\n}\n\n/**\n * Makes instantly callable thunk actions dispatchable directly.\n */\nexport const instantlyCallableThunkActionMiddleware: Middleware =\n  () => (next) => (action) =>\n    next(isInstantlyCallableThunkAction(action) ? action() : action);\n", "import {\n  Action,\n  Middleware,\n  SerializedError,\n  UnknownAction,\n} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\n\ntype UnknownActionWithPossibleErrorPayload = UnknownAction & {\n  payload?: {ignored?: boolean};\n  error?: SerializedError;\n};\n\nexport const logActionErrorMiddleware: (logger: Logger) => Middleware =\n  (logger) => () => (next) => (action) => {\n    const unknownAction = action as UnknownActionWithPossibleErrorPayload;\n    if (!unknownAction.error) {\n      return next(action);\n    }\n\n    const error: SerializedError = unknownAction.error;\n\n    if (!unknownAction.payload?.ignored) {\n      logger.error(\n        error.stack || error.message || error.name || 'Error',\n        `Action dispatch error ${unknownAction.type}`,\n        action\n      );\n    }\n\n    // Validation errors should prevent further dispatching\n    if (unknownAction.error.name === 'SchemaValidationError') {\n      return;\n    }\n\n    return next(action);\n  };\n\nexport const logActionMiddleware: (logger: Logger) => Middleware =\n  (logger) => (api) => (next) => (action) => {\n    logger.debug(\n      {\n        action,\n        nextState: api.getState(),\n      },\n      `Action dispatched: ${(action as Action).type}`\n    );\n\n    return next(action);\n  };\n", "export interface NavigatorContext {\n  referrer: string | null;\n  userAgent: string | null;\n  location: string | null;\n  clientId: string;\n}\n\nexport type NavigatorContextProvider = () => NavigatorContext;\nexport type BrowserNavigatorContextProvider = (\n  clientId: string\n) => NavigatorContext;\n\nexport const defaultBrowserNavigatorContextProvider: BrowserNavigatorContextProvider =\n  (clientId: string) => ({\n    referrer: document.referrer,\n    userAgent: navigator.userAgent,\n    location: window.location.href,\n    clientId,\n  });\n\nexport const defaultNodeJSNavigatorContextProvider: NavigatorContextProvider =\n  () => ({\n    referrer: null,\n    userAgent: null,\n    location: null,\n    clientId: '',\n  });\n", "import {\n  combineReducers,\n  ReducersMapObject,\n  Reducer,\n  AnyAction,\n  StateFromReducersMapObject,\n} from '@reduxjs/toolkit';\nimport {fromEntries} from '../utils/utils.js';\n\nexport interface ReducerManager {\n  combinedReducer: Reducer;\n  add(newReducers: ReducersMapObject): void;\n  containsAll(newReducers: ReducersMapObject): boolean;\n  addCrossReducer(reducer: Reducer): void;\n}\n\nexport function createReducerManager(\n  initialReducers: ReducersMapObject,\n  preloadedState: object\n): ReducerManager {\n  const reducers = {...initialReducers};\n  let crossReducer: Reducer;\n\n  const rootReducer: (\n    combined: Reducer<StateFromReducersMapObject<ReducersMapObject>, AnyAction>\n  ) => Reducer = (combined) => {\n    return (state, action) => {\n      const intermediate = combined(state, action);\n      const final = crossReducer\n        ? crossReducer(intermediate, action)\n        : intermediate;\n      return final;\n    };\n  };\n\n  return {\n    get combinedReducer() {\n      const placeholderReducers = fromEntries(\n        Object.entries(preloadedState)\n          .filter(([key]) => !(key in reducers))\n          .map(([key, value]) => [key, <Reducer>(() => value)])\n      );\n      return rootReducer(\n        combineReducers({...placeholderReducers, ...reducers})\n      );\n    },\n\n    containsAll(newReducers: ReducersMapObject) {\n      const keys = Object.keys(newReducers);\n      return keys.every((key) => key in reducers);\n    },\n\n    add(newReducers: ReducersMapObject) {\n      Object.keys(newReducers)\n        .filter((key) => !(key in reducers))\n        .forEach((key) => (reducers[key] = newReducers[key]));\n    },\n\n    addCrossReducer(reducer: Reducer) {\n      crossReducer = reducer;\n    },\n  };\n}\n", "import {Middleware, UnknownAction} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\nimport {debounce} from 'ts-debounce';\nimport {updateBasicConfiguration} from '../features/configuration/configuration-actions.js';\nimport {ExpiredTokenError} from '../utils/errors.js';\n\nexport function createRenewAccessTokenMiddleware(\n  logger: Logger,\n  renewToken?: () => Promise<string>\n): Middleware {\n  let accessTokenRenewalsAttempts = 0;\n  const resetRenewalTriesAfterDelay = debounce(\n    () => (accessTokenRenewalsAttempts = 0),\n    500\n  );\n\n  return (store) => (next) => async (action) => {\n    const isThunk = typeof action === 'function';\n\n    if (!isThunk) {\n      return next(action);\n    }\n\n    const payload = await next(action);\n\n    if (!isExpiredTokenError(payload)) {\n      return payload;\n    }\n\n    if (typeof renewToken !== 'function') {\n      logger.warn(\n        'Unable to renew the expired token because a renew function was not provided. Please specify the #renewAccessToken option when initializing the engine.'\n      );\n      return payload;\n    }\n\n    if (accessTokenRenewalsAttempts >= 5) {\n      logger.warn(\n        'Attempted to renew the token but was not successful. Please check the #renewAccessToken function.'\n      );\n      return payload;\n    }\n\n    accessTokenRenewalsAttempts++;\n    resetRenewalTriesAfterDelay();\n\n    const accessToken = await attempt(renewToken);\n    store.dispatch(updateBasicConfiguration({accessToken}));\n    store.dispatch(action as unknown as UnknownAction);\n    return;\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isExpiredTokenError(action: any) {\n  return action?.error?.name === new ExpiredTokenError().name;\n}\n\nasync function attempt(fn: () => Promise<string>) {\n  try {\n    return await fn();\n  } catch (e) {\n    return '';\n  }\n}\n", "export type Options<Result> = {\n  isImmediate?: boolean;\n  maxWait?: number;\n  callback?: (data: Result) => void;\n};\n\nexport interface DebouncedFunction<\n  Args extends any[],\n  F extends (...args: Args) => any\n> {\n  (this: ThisParameterType<F>, ...args: Args): Promise<ReturnType<F>>;\n  cancel: (reason?: any) => void;\n}\n\ninterface DebouncedPromise<FunctionReturn> {\n  resolve: (result: FunctionReturn) => void;\n  reject: (reason?: any) => void;\n}\n\nexport function debounce<Args extends any[], F extends (...args: Args) => any>(\n  func: F,\n  waitMilliseconds = 50,\n  options: Options<ReturnType<F>> = {}\n): {\n  (this: ThisParameterType<F>, ...args: Parameters<F> & Args): Promise<\n    ReturnType<F>\n  >;\n  cancel: (reason?: any) => void;\n} {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  const isImmediate = options.isImmediate ?? false;\n  const callback = options.callback ?? false;\n  const maxWait = options.maxWait;\n  let lastInvokeTime = Date.now();\n\n  let promises: DebouncedPromise<ReturnType<F>>[] = [];\n\n  function nextInvokeTimeout() {\n    if (maxWait !== undefined) {\n      const timeSinceLastInvocation = Date.now() - lastInvokeTime;\n\n      if (timeSinceLastInvocation + waitMilliseconds >= maxWait) {\n        return maxWait - timeSinceLastInvocation;\n      }\n    }\n\n    return waitMilliseconds;\n  }\n\n  const debouncedFunction = function (\n    this: ThisParameterType<F>,\n    ...args: Parameters<F>\n  ) {\n    const context = this;\n    return new Promise<ReturnType<F>>((resolve, reject) => {\n      const invokeFunction = function () {\n        timeoutId = undefined;\n        lastInvokeTime = Date.now();\n        if (!isImmediate) {\n          const result = func.apply(context, args);\n          callback && callback(result);\n          promises.forEach(({ resolve }) => resolve(result));\n          promises = [];\n        }\n      };\n\n      const shouldCallNow = isImmediate && timeoutId === undefined;\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n\n      if (shouldCallNow) {\n        const result = func.apply(context, args);\n        callback && callback(result);\n        return resolve(result);\n      }\n      promises.push({ resolve, reject });\n    });\n  };\n\n  debouncedFunction.cancel = function (reason?: any) {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    promises.forEach(({ reject }) => reject(reason));\n    promises = [];\n  };\n\n  return debouncedFunction;\n}\n", "import {Relay} from '@coveo/relay';\nimport {\n  configureStore as configureStoreToolkit,\n  ReducersMapObject,\n  StateFromReducersMapObject,\n  Middleware,\n  Reducer,\n} from '@reduxjs/toolkit';\nimport {logActionMiddleware} from './logger-middlewares.js';\nimport {NavigatorContext} from './navigatorContextProvider.js';\nimport {ThunkExtraArguments} from './thunk-extra-arguments.js';\n\nexport interface CoreExtraArguments\n  extends ThunkExtraArguments,\n    AdditionalCoreExtraArguments {}\n\nexport interface AdditionalCoreExtraArguments {\n  relay: Relay;\n  navigatorContext: NavigatorContext;\n}\n\ninterface ConfigureStoreOptions<Reducers extends ReducersMapObject> {\n  reducer: Reducer;\n  preloadedState?: StateFromReducersMapObject<Reducers>;\n  middlewares?: Middleware[];\n  thunkExtraArguments: CoreExtraArguments;\n  name: string;\n}\n\nexport function configureStore<Reducers extends ReducersMapObject>({\n  reducer,\n  preloadedState,\n  middlewares = [],\n  thunkExtraArguments,\n  name,\n}: ConfigureStoreOptions<Reducers>) {\n  return configureStoreToolkit({\n    reducer,\n    preloadedState,\n    devTools: {\n      stateSanitizer: (state) =>\n        (state as {history?: unknown}).history\n          ? {...state, history: '<<OMIT>>'}\n          : state,\n      name,\n      shouldHotReload: false, // KIT-961 -> Redux dev tool + hot reloading interacts badly with replaceReducers mechanism.\n    },\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({thunk: {extraArgument: thunkExtraArguments}})\n        .prepend(...middlewares)\n        .concat(logActionMiddleware(thunkExtraArguments.logger)),\n  });\n}\n\nexport type Store = ReturnType<typeof configureStore>;\n", "import {pino, LevelWithSilent} from 'pino';\n\nexport type LogLevel = LevelWithSilent;\n\nexport interface LoggerOptions {\n  /**\n   * By default, is set to `warn`.\n   */\n  level?: LogLevel;\n  /**\n   * Changes the shape of the log object. This function will be called every time one of the log methods (such as `.info`) is called.\n   * All arguments passed to the log method, except the message, will be pass to this function. By default it does not change the shape of the log object.\n   */\n  logFormatter?: (object: {}) => {};\n}\n\nexport function buildLogger(options: LoggerOptions | undefined) {\n  return pino({\n    name: '@coveo/headless',\n    level: options?.level || 'warn',\n    formatters: {\n      log: options?.logFormatter,\n    },\n  });\n}\n", "import {Relay} from '@coveo/relay';\nimport {AnalyticsClientSendEventHook} from 'coveo.analytics';\nimport {Logger} from 'pino';\nimport {GeneratedAnswerAPIClient} from '../api/generated-answer/generated-answer-client.js';\nimport {PreprocessRequest} from '../api/preprocess-request.js';\nimport {NoopPreprocessRequest} from '../api/preprocess-request.js';\nimport {validatePayloadAndThrow} from '../utils/validate-payload.js';\nimport {EngineConfiguration} from './engine-configuration.js';\nimport {NavigatorContext} from './navigatorContextProvider.js';\n\nexport interface ClientThunkExtraArguments<T, K = GeneratedAnswerAPIClient>\n  extends ThunkExtraArguments {\n  apiClient: T;\n  streamingClient?: K;\n  relay: Relay;\n  navigatorContext: NavigatorContext;\n}\n\nexport interface ThunkExtraArguments {\n  preprocessRequest?: PreprocessRequest;\n  analyticsClientMiddleware: AnalyticsClientSendEventHook;\n  logger: Logger;\n  validatePayload: typeof validatePayloadAndThrow;\n}\n\nexport function buildThunkExtraArguments(\n  configuration: EngineConfiguration,\n  logger: Logger\n): ThunkExtraArguments {\n  const analyticsClientMiddleware = getAnalyticsClientMiddleware(configuration);\n  const validatePayload = validatePayloadAndThrow;\n  const preprocessRequest = getPreprocessRequest(configuration);\n\n  return {\n    analyticsClientMiddleware,\n    validatePayload,\n    preprocessRequest,\n    logger,\n  };\n}\n\nfunction getAnalyticsClientMiddleware(\n  configuration: EngineConfiguration\n): AnalyticsClientSendEventHook {\n  const {analytics} = configuration;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const NoopAnalyticsMiddleware = (_: string, p: any) => p;\n  return analytics?.analyticsClientMiddleware || NoopAnalyticsMiddleware;\n}\n\nfunction getPreprocessRequest(configuration: EngineConfiguration) {\n  return configuration.preprocessRequest || NoopPreprocessRequest;\n}\n", "import {BooleanValue, RecordValue, Schema, StringValue} from '@coveo/bueno';\nimport {CartInitialState} from '../../controllers/commerce/context/cart/headless-cart.js';\nimport {ContextOptions} from '../../controllers/commerce/context/headless-context.js';\nimport {cartDefinition} from '../../features/commerce/context/cart/cart-validation.js';\nimport {contextDefinition} from '../../features/commerce/context/context-validation.js';\nimport {\n  nonEmptyString,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload.js';\nimport {\n  AnalyticsConfiguration,\n  EngineConfiguration,\n  engineConfigurationDefinitions,\n} from '../engine-configuration.js';\n\n/**\n * The commerce engine configuration.\n */\nexport interface CommerceEngineConfiguration extends EngineConfiguration {\n  /**\n   * The commerce analytics configuration.\n   */\n  analytics: Pick<\n    AnalyticsConfiguration,\n    'enabled' | 'proxyBaseUrl' | 'source' | 'trackingId'\n  >;\n  /**\n   * The commerce context options.\n   */\n  context: ContextOptions;\n  /**\n   * The initial cart state to restore.\n   */\n  cart?: CartInitialState;\n  /**\n   * The base URL to use to proxy Coveo commerce requests (e.g., `https://example.com/commerce`).\n   *\n   * This is an advanced option that you should only set if you need to proxy Coveo commerce requests through your own\n   * server. In most cases, you should not set this option.\n   *\n   * See [Headless proxy: Commerce](https://docs.coveo.com/en/headless/latest/usage/proxy#commerce).\n   **/\n  proxyBaseUrl?: string;\n}\n\nexport const commerceEngineConfigurationSchema =\n  new Schema<CommerceEngineConfiguration>({\n    ...engineConfigurationDefinitions,\n    analytics: new RecordValue({\n      options: {required: true},\n      values: {\n        enabled: new BooleanValue({required: false, default: true}),\n        proxyBaseUrl: new StringValue({required: false, url: true}),\n        source: new RecordValue({\n          options: {required: false},\n          values: {\n            '@coveo/atomic': nonEmptyString,\n            '@coveo/quantic': nonEmptyString,\n          },\n        }),\n        trackingId: requiredNonEmptyString,\n      },\n    }),\n    context: new RecordValue({\n      options: {required: true},\n      values: contextDefinition,\n    }),\n    cart: new RecordValue({\n      values: cartDefinition,\n    }),\n    proxyBaseUrl: new StringValue({required: false, url: true}),\n  });\n\nexport function getSampleCommerceEngineConfiguration(): CommerceEngineConfiguration {\n  return {\n    accessToken: 'xx564559b1-0045-48e1-953c-3addd1ee4457',\n    analytics: {\n      trackingId: 'sports-ui-samples',\n    },\n    context: {\n      language: 'en',\n      country: 'US',\n      currency: 'USD',\n      view: {\n        url: 'https://sports.barca.group',\n      },\n    },\n    cart: {\n      items: [\n        {\n          productId: 'SP01057_00001',\n          quantity: 1,\n          name: 'Kayaker Canoe',\n          price: 800,\n        },\n        {\n          productId: 'SP00081_00001',\n          quantity: 1,\n          name: 'Bamboo Canoe Paddle',\n          price: 120,\n        },\n        {\n          productId: 'SP04236_00005',\n          quantity: 1,\n          name: 'Eco-Brave Rashguard',\n          price: 33,\n        },\n        {\n          productId: 'SP04236_00005',\n          quantity: 1,\n          name: 'Eco-Brave Rashguard',\n          price: 33,\n        },\n      ],\n    },\n    organizationId: 'searchuisamples',\n  };\n}\n", "import {\n  BooleanValue,\n  RecordValue,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {\n  AnalyticsClientSendEventHook,\n  IRuntimeEnvironment,\n} from 'coveo.analytics';\nimport {PreprocessRequest} from '../api/preprocess-request.js';\nimport {PlatformEnvironment} from '../utils/url-utils.js';\nimport {requiredNonEmptyString} from '../utils/validate-payload.js';\nimport {CoveoFramework} from '../utils/version.js';\n\n/**\n * The global headless engine configuration options.\n */\nexport interface EngineConfiguration {\n  /**\n   * The unique identifier of the target Coveo Cloud organization (e.g., `mycoveocloudorganizationg8tp8wu3`)\n   */\n  organizationId: string;\n  /**\n   * The access token to use to authenticate requests against the Coveo Cloud endpoints. Typically, this will be an API key or search token that grants the privileges to execute queries and push usage analytics data in the target Coveo Cloud organization.\n   */\n  accessToken: string;\n  /**\n   * A function that fetches a new access token. The function must return a Promise that resolves to a string (the new access token).\n   */\n  renewAccessToken?: () => Promise<string>;\n  /**\n   * Allows for augmenting a Platform request before it is sent.\n   * @param request Request to be augmented\n   * @param clientOrigin The origin of the client, can be \"analyticsFetch\", \"analyticsBeacon\" or \"searchApiFetch\"\n   *\n   * @returns Augmented request\n   */\n  preprocessRequest?: PreprocessRequest;\n  /**\n   * The Engine name (e.g., myEngine). Specifying your Engine name will help in debugging when using an application with multiple Redux stores.\n   * @defaultValue 'coveo-headless'\n   */\n  name?: string;\n  /**\n   * Allows configuring options related to analytics.\n   */\n  analytics?: AnalyticsConfiguration;\n  /**\n   * The environment in which the organization is hosted.\n   *\n   * The `dev` and `stg` environments are only available internally for Coveo employees (e.g., Professional Services).\n   *\n   * Defaults to `prod`.\n   */\n  environment?: PlatformEnvironment;\n}\n\n/**\n * The analytics configuration options.\n */\nexport interface AnalyticsConfiguration {\n  /**\n   * Specifies if usage analytics tracking should be enabled.\n   *\n   * By default, all analytics events will be logged.\n   */\n  enabled?: boolean;\n  /**\n   * Sets the Origin Context dimension on the analytics events.\n   *\n   * You can use this dimension to specify the context of your application.\n   * The possible values are \"Search\", \"InternalSearch\", and \"CommunitySearch\".\n   *\n   * The default value is `Search`.\n   */\n  originContext?: string;\n  /**\n   * Sets the value of the Origin Level 2 dimension on the analytics events.\n   *\n   * Origin level 2 is a usage analytics event metadata whose value should typically be the name/identifier of the tab from which the usage analytics event originates.\n   *\n   * In the context of product listing, the value should match the breadcrumb of the product listing page from which the usage analytics event originates (for example, `canoes-kayaks/kayaks/sea-kayaks`).\n   *\n   * When logging a usage analytics event, originLevel2 should always be set to the same value as the corresponding `tab` (parameter) Search API query parameter so Coveo Machine Learning models function properly, and usage analytics reports and dashboards are coherent.\n   *\n   * If left unspecified, this value will automatically try to resolve itself from the `tab` Search API query parameter.\n   */\n  originLevel2?: string;\n  /**\n   * Origin level 3 is a usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface that\u2019s making the request.\n   *\n   * When logging a Search usage analytics event, originLevel3 should always be set to the same value as the corresponding referrer Search API query parameter so usage analytics reports and dashboards are coherent.\n   *\n   * This value is optional, and will automatically try to resolve itself from the referrer search parameter.\n   */\n  originLevel3?: string;\n  /**\n   * analyticsClientMiddleware allows to hook into an analytics event payload before it is sent to the Coveo platform.\n   */\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  /**\n   * Optional analytics runtime environment, this is needed for analytics to work correctly if you're running outside of a browser.\n   * See https://github.com/coveo/coveo.analytics.js for more info.\n   */\n  runtimeEnvironment?: AnalyticsRuntimeEnvironment;\n  /**\n   * Whether analytics events should be logged anonymously.\n   * If set to true, the Usage Analytics Write API will not extract the name and userDisplayName, if present, from the search token\n   */\n  anonymous?: boolean;\n  /**\n   *  The name of the device that the end user is using. It should be explicitly configured in the context of a native mobile app.\n   */\n  deviceId?: string;\n  /**\n   * Specifies the user display name for the usage analytics logs.\n   */\n  userDisplayName?: string;\n  /**\n   * Specifies the URL of the current page or component.\n   */\n  documentLocation?: string;\n  /**\n   * The unique identifier of the tracking target.\n   */\n  trackingId?: string;\n  /**\n   * The analytics client to use.\n   * - `legacy`: The legacy analytics client, i.e., the Coveo Analytics.js library.\n   * - `next`: The next analytics client, i.e., the Coveo Event Protocol with the Relay library.\n   *\n   * The default value is `next`.\n   *\n   * @default 'next'\n   */\n  analyticsMode?: 'legacy' | 'next';\n  /**\n   * Specifies the frameworks and version used around Headless (e.g. @coveo/atomic).\n   * @internal\n   */\n  source?: Partial<Record<CoveoFramework, string>>;\n  /**\n   * The base URL to use to proxy Coveo analytics requests (e.g., `https://example.com/analytics`).\n   *\n   * This is an advanced option that you should only set if you need to proxy Coveo analytics requests through your own\n   * server. In most cases, you should not set this option.\n   *\n   * See [Headless proxy: Analytics](https://docs.coveo.com/en/headless/latest/usage/proxy#analytics).\n   */\n  proxyBaseUrl?: string;\n}\n\nexport type AnalyticsRuntimeEnvironment = IRuntimeEnvironment;\n\nexport const engineConfigurationDefinitions: SchemaDefinition<EngineConfiguration> =\n  {\n    organizationId: requiredNonEmptyString,\n    accessToken: requiredNonEmptyString,\n    name: new StringValue({\n      required: false,\n      emptyAllowed: false,\n    }),\n    analytics: new RecordValue({\n      options: {\n        required: false,\n      },\n      values: {\n        enabled: new BooleanValue({\n          required: false,\n        }),\n        originContext: new StringValue({\n          required: false,\n        }),\n        originLevel2: new StringValue({\n          required: false,\n        }),\n        originLevel3: new StringValue({\n          required: false,\n        }),\n        analyticsMode: new StringValue<'legacy' | 'next'>({\n          constrainTo: ['legacy', 'next'],\n          required: false,\n          default: 'next',\n        }),\n        proxyBaseUrl: new StringValue({\n          required: false,\n          url: true,\n        }),\n      },\n    }),\n    environment: new StringValue<PlatformEnvironment>({\n      required: false,\n      default: 'prod',\n      constrainTo: ['prod', 'hipaa', 'stg', 'dev'],\n    }),\n  };\n\nexport function getSampleEngineConfiguration(): EngineConfiguration {\n  return {\n    organizationId: 'searchuisamples',\n    // deepcode ignore HardcodedNonCryptoSecret: Public key freely available for our documentation\n    accessToken: 'xx564559b1-0045-48e1-953c-3addd1ee4457',\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {\n  SetContextPayload,\n  SetViewPayload,\n  setContext,\n  setView,\n  SetLocationPayload,\n  setLocation,\n} from './context-actions.js';\nimport {contextReducer as commerceContext} from './context-slice.js';\n\nexport type {SetContextPayload, SetViewPayload, SetLocationPayload};\n\n/**\n * The context action creators.\n *\n * @group Actions\n * @category Context\n */\nexport interface ContextActionCreators {\n  /**\n   * Sets the entire context.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setContext(payload: SetContextPayload): PayloadAction<SetContextPayload>;\n\n  /**\n   * Sets the view context property without modifying any other context properties.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setView(payload: SetViewPayload): PayloadAction<SetViewPayload>;\n\n  /**\n   * Sets the location context property without modifying any other context properties.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setLocation(payload: SetLocationPayload): PayloadAction<SetLocationPayload>;\n}\n\n/**\n * Loads the commerce context reducer and returns the available context action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the context action creators.\n *\n * @group Actions\n * @category Context\n */\nexport function loadContextActions(\n  engine: CommerceEngine\n): ContextActionCreators {\n  engine.addReducers({commerceContext});\n  return {\n    setContext,\n    setView,\n    setLocation,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {StateNeededByExecuteSearch} from './search-actions-thunk-processor.js';\nimport {\n  PrepareForSearchWithQueryPayload,\n  PromoteChildToParentPayload,\n  QuerySearchCommerceAPIThunkReturn,\n  executeSearch,\n  fetchMoreProducts,\n  prepareForSearchWithQuery,\n  promoteChildToParent,\n} from './search-actions.js';\nimport {commerceSearchReducer as commerceSearch} from './search-slice.js';\n\nexport type {PrepareForSearchWithQueryPayload};\n\n/**\n * The search action creators.\n *\n * @group Actions\n * @category Search\n */\nexport interface SearchActionCreators {\n  /**\n   * Executes a search query.\n   *\n   * @returns A dispatchable action.\n   */\n  executeSearch(): AsyncThunkAction<\n    QuerySearchCommerceAPIThunkReturn,\n    void,\n    AsyncThunkCommerceOptions<StateNeededByExecuteSearch>\n  >;\n\n  /**\n   * Fetches and additional page of products and appends it to the current list.\n   *\n   * @returns A dispatchable action.\n   */\n  fetchMoreProducts(): AsyncThunkAction<\n    QuerySearchCommerceAPIThunkReturn | null,\n    void,\n    AsyncThunkCommerceOptions<StateNeededByExecuteSearch>\n  >;\n\n  /**\n   * Updates the query, resets the pagination, and optionally clears all facets in preparation for a new search query.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  prepareForSearchWithQuery(\n    payload: PrepareForSearchWithQueryPayload\n  ): AsyncThunkAction<\n    void,\n    PrepareForSearchWithQueryPayload,\n    AsyncThunkCommerceOptions<StateNeededByExecuteSearch>\n  >;\n\n  /**\n   * Promotes a child product to a parent product.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  promoteChildToParent(\n    payload: PromoteChildToParentPayload\n  ): PayloadAction<PromoteChildToParentPayload>;\n}\n\n/**\n * Loads the commerce search reducer and returns the available search action creators.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the search action creators.\n *\n * @group Actions\n * @category Search\n */\nexport function loadSearchActions(\n  engine: CommerceEngine\n): SearchActionCreators {\n  engine.addReducers({commerceSearch});\n\n  return {\n    executeSearch,\n    fetchMoreProducts,\n    prepareForSearchWithQuery,\n    promoteChildToParent,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {productListingReducer as productListing} from '../../../features/commerce/product-listing/product-listing-slice.js';\nimport {QueryCommerceAPIThunkReturn} from '../common/actions.js';\nimport {\n  PromoteChildToParentPayload,\n  StateNeededByFetchProductListing,\n  fetchMoreProducts,\n  fetchProductListing,\n  promoteChildToParent,\n} from './product-listing-actions.js';\n\n/**\n * The product listing action creators.\n *\n * @group Actions\n * @category ProductListing\n */\nexport interface ProductListingActionCreators {\n  /**\n   * Refreshes the product listing.\n   *\n   * @returns A dispatchable action.\n   */\n  fetchProductListing(): AsyncThunkAction<\n    QueryCommerceAPIThunkReturn,\n    void,\n    AsyncThunkCommerceOptions<StateNeededByFetchProductListing>\n  >;\n\n  /**\n   * Fetches and additional page of products and appends it to the current list.\n   *\n   * @returns A dispatchable action.\n   */\n  fetchMoreProducts(): AsyncThunkAction<\n    QueryCommerceAPIThunkReturn | null,\n    void,\n    AsyncThunkCommerceOptions<StateNeededByFetchProductListing>\n  >;\n\n  /**\n   * Promotes a child product to a parent product.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  promoteChildToParent(\n    payload: PromoteChildToParentPayload\n  ): PayloadAction<PromoteChildToParentPayload>;\n}\n\n/**\n * Loads the commerce product listing reducer and returns the available product listing action creators.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the product listing action creators.\n *\n * @group Actions\n * @category ProductListing\n */\nexport function loadProductListingActions(\n  engine: CommerceEngine\n): ProductListingActionCreators {\n  engine.addReducers({productListing});\n\n  return {\n    fetchProductListing,\n    fetchMoreProducts,\n    promoteChildToParent,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {\n  FetchMoreRecommendationsPayload,\n  FetchRecommendationsPayload,\n  PromoteChildToParentPayload,\n  QueryRecommendationsCommerceAPIThunkReturn,\n  RegisterRecommendationsSlotPayload,\n  StateNeededByFetchRecommendations,\n  fetchMoreRecommendations,\n  fetchRecommendations,\n  promoteChildToParent,\n  registerRecommendationsSlot,\n} from './recommendations-actions.js';\nimport {recommendationsReducer as recommendations} from './recommendations-slice.js';\n\nexport type {\n  RegisterRecommendationsSlotPayload,\n  FetchRecommendationsPayload,\n  FetchMoreRecommendationsPayload,\n};\n\n/**\n * The recommendations action creators.\n *\n * @group Actions\n * @category Recommendations\n */\nexport interface RecommendationsActionCreator {\n  /**\n   * Fetches recommendations.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  fetchRecommendations(\n    payload: FetchRecommendationsPayload\n  ): AsyncThunkAction<\n    QueryRecommendationsCommerceAPIThunkReturn,\n    FetchRecommendationsPayload,\n    AsyncThunkCommerceOptions<StateNeededByFetchRecommendations>\n  >;\n\n  /**\n   * Fetches an additional page of recommendations and appends it to the current list.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  fetchMoreRecommendations(\n    payload: FetchMoreRecommendationsPayload\n  ): AsyncThunkAction<\n    QueryRecommendationsCommerceAPIThunkReturn | null,\n    FetchMoreRecommendationsPayload,\n    AsyncThunkCommerceOptions<StateNeededByFetchRecommendations>\n  >;\n\n  /**\n   * Promotes a child product to a parent product.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  promoteChildToParent(\n    payload: PromoteChildToParentPayload\n  ): PayloadAction<PromoteChildToParentPayload>;\n\n  /**\n   * Registers a recommendations slot.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerRecommendationsSlot(\n    payload: RegisterRecommendationsSlotPayload\n  ): PayloadAction<RegisterRecommendationsSlotPayload>;\n}\n\n/**\n * Loads the commerce recommendations reducer and returns the available recommendations action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the recommendations action creators.\n *\n * @group Actions\n * @category Recommendations\n */\nexport function loadRecommendationsActions(\n  engine: CommerceEngine\n): RecommendationsActionCreator {\n  engine.addReducers({recommendations});\n  return {\n    fetchRecommendations,\n    fetchMoreRecommendations,\n    promoteChildToParent,\n    registerRecommendationsSlot,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {\n  RegisterRecommendationsSlotPaginationPayload,\n  NextPagePayload,\n  PreviousPagePayload,\n  SelectPagePayload,\n  SetPageSizePayload,\n  previousPage,\n  nextPage,\n  selectPage,\n  setPageSize,\n  registerRecommendationsSlotPagination,\n} from './pagination-actions.js';\nimport {paginationReducer as commercePagination} from './pagination-slice.js';\n\nexport type {\n  RegisterRecommendationsSlotPaginationPayload,\n  SetPageSizePayload,\n  SelectPagePayload,\n  NextPagePayload,\n  PreviousPagePayload,\n};\n\n/**\n * The pagination action creators.\n *\n * @group Actions\n * @category Pagination\n */\nexport interface PaginationActionCreators {\n  /**\n   * Registers pagination for a recommendations slot.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerRecommendationsSlotPagination(\n    payload: RegisterRecommendationsSlotPaginationPayload\n  ): PayloadAction<RegisterRecommendationsSlotPaginationPayload>;\n\n  /**\n   * Sets the page size.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setPageSize(payload: SetPageSizePayload): PayloadAction<SetPageSizePayload>;\n\n  /**\n   * Selects a page.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  selectPage(payload: SelectPagePayload): PayloadAction<SelectPagePayload>;\n\n  /**\n   * Selects the next page.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  nextPage(\n    payload?: NextPagePayload\n  ): PayloadAction<NextPagePayload | undefined>;\n\n  /**\n   * Selects the previous page.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  previousPage(\n    payload?: PreviousPagePayload\n  ): PayloadAction<PreviousPagePayload | undefined>;\n}\n\n/**\n * Loads the commerce pagination reducer and returns the available pagination action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the pagination action creators.\n *\n * @group Actions\n * @category Pagination\n */\nexport function loadPaginationActions(\n  engine: CommerceEngine\n): PaginationActionCreators {\n  engine.addReducers({commercePagination});\n  return {\n    registerRecommendationsSlotPagination,\n    setPageSize,\n    selectPage,\n    nextPage,\n    previousPage,\n  };\n}\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngineState} from '../../../app/commerce-engine/commerce-engine.js';\nimport {\n  ProductClickPayload,\n  ProductViewPayload,\n  productClick,\n  productView,\n} from './product-actions.js';\n\nexport type {ProductClickPayload, ProductViewPayload};\n\n/**\n * The product action creators.\n *\n * @group Actions\n * @category Product\n */\nexport interface ProductActionCreators {\n  /**\n   * Logs a click analytics event for a product.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  productClick(\n    payload: ProductClickPayload\n  ): AsyncThunkAction<\n    void,\n    ProductClickPayload,\n    AsyncThunkCommerceOptions<CommerceEngineState>\n  >;\n\n  /**\n   * Logs a view analytics event for a product.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  productView(\n    payload: ProductViewPayload\n  ): AsyncThunkAction<\n    void,\n    ProductViewPayload,\n    AsyncThunkCommerceOptions<CommerceEngineState>\n  >;\n}\n\n/**\n * Returns the possible product action creators.\n *\n * @returns An object holding the action creators.\n *\n * @group Actions\n * @category Product\n */\nexport function loadProductActions(): ProductActionCreators {\n  return {\n    productClick,\n    productView,\n  };\n}\n", "import {Ec, Product} from '@coveo/relay-event-types';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngineState} from '../../../app/commerce-engine/commerce-engine.js';\nimport {getCurrency} from '../context/context-selector.js';\n\nexport type ProductViewPayload = Product;\n\nexport const productView = createAsyncThunk<\n  void,\n  ProductViewPayload,\n  AsyncThunkCommerceOptions<CommerceEngineState>\n>('commerce/product/view', async (payload: Product, {extra, getState}) => {\n  const {relay} = extra;\n  const currency = getCurrency(getState().commerceContext);\n  const relayPayload: Ec.ProductView = {currency, product: payload};\n\n  relay.emit('ec.productView', relayPayload);\n});\n\nexport type ProductClickPayload = Omit<Ec.ProductClick, 'currency'>;\n\nexport const productClick = createAsyncThunk<\n  void,\n  ProductClickPayload,\n  AsyncThunkCommerceOptions<CommerceEngineState>\n>(\n  'commerce/product/click',\n  async (payload: ProductClickPayload, {extra, getState}) => {\n    const {relay} = extra;\n    const currency = getCurrency(getState().commerceContext);\n    const relayPayload = {currency, ...payload};\n\n    relay.emit('ec.productClick', relayPayload);\n  }\n);\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../../api/commerce/commerce-api-client.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {\n  CartActionPayload,\n  PurchasePayload,\n  SetItemsPayload,\n  UpdateItemQuantityPayload,\n  emitCartActionEvent,\n  emitPurchaseEvent,\n  purchase,\n  setItems,\n  updateItemQuantity,\n} from './cart-actions.js';\nimport {cartReducer as cart} from './cart-slice.js';\n\nexport type {\n  CartActionPayload,\n  PurchasePayload,\n  SetItemsPayload,\n  UpdateItemQuantityPayload,\n};\n\n/**\n * The cart action creators.\n *\n * @group Actions\n * @category Cart\n */\nexport interface CartActionCreators {\n  /**\n   * Emits an `ec.purchase` analytics event with the current cart state.\n   *\n   * Should be dispatched before the `purchase` action.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  emitPurchaseEvent(\n    payload: PurchasePayload\n  ): AsyncThunkAction<\n    void,\n    PurchasePayload,\n    AsyncThunkCommerceOptions<CommerceEngineState>\n  >;\n\n  /**\n   * Marks the items in the cart as purchased and empties the cart.\n   *\n   * Should be dispatched after the `emitPurchase` action.\n   *\n   * @returns A dispatchable action.\n   */\n  purchase(): PayloadAction<void>;\n\n  /**\n   * Sets the items in the cart.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setItems(payload: SetItemsPayload): PayloadAction<SetItemsPayload>;\n\n  /**\n   * Emits an `ec.cartAction` analytics event.\n   *\n   * Should be dispatched before the `updateItemQuantity` action.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  emitCartActionEvent(\n    payload: CartActionPayload\n  ): AsyncThunkAction<\n    void,\n    CartActionPayload,\n    AsyncThunkCommerceOptions<CommerceEngineState>\n  >;\n\n  /**\n   * Updates the quantity of an item in the cart.\n   *\n   * Should be dispatched after the `emitCartAction` action.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateItemQuantity(\n    payload: UpdateItemQuantityPayload\n  ): PayloadAction<UpdateItemQuantityPayload>;\n}\n\n/**\n * Loads the commerce cart reducer and returns the available cart action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the cart action creators.\n *\n * @group Actions\n * @category Cart\n */\nexport function loadCartActions(engine: CommerceEngine): CartActionCreators {\n  engine.addReducers({cart});\n  return {\n    emitPurchaseEvent,\n    emitCartActionEvent,\n    purchase,\n    setItems,\n    updateItemQuantity,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {ApplySortPayload, applySort} from './sort-actions.js';\nimport {sortReducer as commerceSort} from './sort-slice.js';\n\nexport type {ApplySortPayload};\n\n/**\n * The sort action creators.\n *\n * @group Actions\n * @category Sort\n */\nexport interface SortActionCreators {\n  /**\n   * Applies a sort criterion.\n   *\n   * @param payload - The payload of the action.\n   * @returns A dispatchable action.\n   */\n  applySort(payload: ApplySortPayload): PayloadAction<ApplySortPayload>;\n}\n\n/**\n * Loads the commerce sort reducer and returns the available sort action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the sort action creators.\n *\n * @group Actions\n * @category Sort\n */\nexport function loadSortActions(engine: CommerceEngine): SortActionCreators {\n  engine.addReducers({commerceSort});\n  return {\n    applySort,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facet-set/facet-set-slice.js';\nimport {\n  DeselectAllValuesInCoreFacetPayload,\n  UpdateCoreFacetFreezeCurrentValuesPayload,\n  UpdateCoreFacetIsFieldExpandedPayload,\n  UpdateCoreFacetNumberOfValuesPayload,\n  UpdateAutoSelectionForAllCoreFacetsPayload,\n  deselectAllValuesInCoreFacet,\n  updateCoreFacetFreezeCurrentValues,\n  updateCoreFacetIsFieldExpanded,\n  updateCoreFacetNumberOfValues,\n  updateAutoSelectionForAllCoreFacets,\n  clearAllCoreFacets,\n} from './core-facet-actions.js';\n\nexport type {\n  DeselectAllValuesInCoreFacetPayload,\n  UpdateAutoSelectionForAllCoreFacetsPayload,\n  UpdateCoreFacetFreezeCurrentValuesPayload,\n  UpdateCoreFacetIsFieldExpandedPayload,\n  UpdateCoreFacetNumberOfValuesPayload,\n};\n\n/**\n * The core facet action creators.\n *\n * @group Actions\n * @category CategoryFacet\n */\nexport interface CoreFacetActionsCreators {\n  /**\n   * Clears all facets.\n   *\n   * @returns A dispatchable action.\n   */\n  clearAllCoreFacets(): PayloadAction<void>;\n\n  /**\n   * Deselects all values in a given facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  deselectAllValuesInCoreFacet(\n    payload: DeselectAllValuesInCoreFacetPayload\n  ): PayloadAction<DeselectAllValuesInCoreFacetPayload>;\n\n  /**\n   * Updates the auto selection state of every facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateAutoSelectionForAllCoreFacets(\n    payload: UpdateAutoSelectionForAllCoreFacetsPayload\n  ): PayloadAction<UpdateAutoSelectionForAllCoreFacetsPayload>;\n\n  /**\n   * Update the freeze current values state of a given facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateCoreFacetFreezeCurrentValues(\n    payload: UpdateCoreFacetFreezeCurrentValuesPayload\n  ): PayloadAction<UpdateCoreFacetFreezeCurrentValuesPayload>;\n\n  /**\n   * Updates the expanded state of a given facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateCoreFacetIsFieldExpanded(\n    payload: UpdateCoreFacetIsFieldExpandedPayload\n  ): PayloadAction<UpdateCoreFacetIsFieldExpandedPayload>;\n\n  /**\n   * Updates the number of values to request for a given facet.\n   *\n   * **Note:** This action has no effect on category facets, which have their own action for this purpose.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateCoreFacetNumberOfValues(\n    payload: UpdateCoreFacetNumberOfValuesPayload\n  ): PayloadAction<UpdateCoreFacetNumberOfValuesPayload>;\n}\n\n/**\n * Loads the commerce facet set reducer and returns the available core facet action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the core facet action creators.\n *\n * @group Actions\n * @category CategoryFacet\n */\nexport function loadCoreFacetActions(\n  engine: CommerceEngine\n): CoreFacetActionsCreators {\n  engine.addReducers({commerceFacetSet});\n  return {\n    clearAllCoreFacets,\n    deselectAllValuesInCoreFacet,\n    updateAutoSelectionForAllCoreFacets,\n    updateCoreFacetFreezeCurrentValues,\n    updateCoreFacetIsFieldExpanded,\n    updateCoreFacetNumberOfValues,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facet-set/facet-set-slice.js';\nimport {\n  ToggleSelectCategoryFacetValuePayload,\n  UpdateCategoryFacetNumberOfValuesPayload,\n  toggleSelectCategoryFacetValue,\n  updateCategoryFacetNumberOfValues,\n} from './category-facet-actions.js';\n\nexport type {\n  ToggleSelectCategoryFacetValuePayload,\n  UpdateCategoryFacetNumberOfValuesPayload,\n};\n\n/**\n * The category facet action creators.\n *\n * @group Actions\n * @category CategoryFacet\n */\nexport interface CategoryFacetSetActionCreators {\n  /**\n   * Toggles the selection of a given category facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectCategoryFacetValue(\n    payload: ToggleSelectCategoryFacetValuePayload\n  ): PayloadAction<ToggleSelectCategoryFacetValuePayload>;\n\n  /**\n   * Updates the number of values to request for a given category facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateCategoryFacetNumberOfValues(\n    payload: UpdateCategoryFacetNumberOfValuesPayload\n  ): PayloadAction<UpdateCategoryFacetNumberOfValuesPayload>;\n}\n\n/**\n * Loads the commerce facet set reducer and returns the available category facet action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the category facet action creators.\n *\n * @group Actions\n * @category CategoryFacet\n */\nexport function loadCategoryFacetSetActions(\n  engine: CommerceEngine\n): CategoryFacetSetActionCreators {\n  engine.addReducers({commerceFacetSet});\n  return {\n    toggleSelectCategoryFacetValue,\n    updateCategoryFacetNumberOfValues,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facet-set/facet-set-slice.js';\nimport {\n  ToggleExcludeFacetValuePayload,\n  ToggleSelectFacetValuePayload,\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n} from './regular-facet-actions.js';\n\nexport type {ToggleExcludeFacetValuePayload, ToggleSelectFacetValuePayload};\n\n/**\n * The regular facet action creators.\n *\n * @group Actions\n * @category RegularFacet\n */\nexport interface RegularFacetActionCreators {\n  /**\n   * Toggles the exclusion of a given regular facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleExcludeFacetValue(\n    payload: ToggleExcludeFacetValuePayload\n  ): PayloadAction<ToggleExcludeFacetValuePayload>;\n\n  /**\n   * Toggles the selection of a given regular facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectFacetValue(\n    payload: ToggleSelectFacetValuePayload\n  ): PayloadAction<ToggleSelectFacetValuePayload>;\n}\n\n/**\n * Loads the commerce facet set reducer and returns the available regular facet action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the regular facet action creators.\n *\n * @group Actions\n * @category RegularFacet\n */\nexport function loadRegularFacetActions(\n  engine: CommerceEngine\n): RegularFacetActionCreators {\n  engine.addReducers({commerceFacetSet});\n  return {\n    toggleExcludeFacetValue,\n    toggleSelectFacetValue,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facet-set/facet-set-slice.js';\nimport {\n  toggleSelectLocationFacetValue,\n  ToggleSelectLocationFacetValuePayload,\n} from './location-facet-actions.js';\n\nexport type {ToggleSelectLocationFacetValuePayload};\n\n/**\n * The location facet action creators.\n */\nexport interface LocationFacetActionCreators {\n  /**\n   * Toggles the selection of a given location facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectLocationFacetValue(\n    payload: ToggleSelectLocationFacetValuePayload\n  ): PayloadAction<ToggleSelectLocationFacetValuePayload>;\n}\n\n/**\n * Loads the commerce facet set reducer and returns the available location facet action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the location facet action creators.\n */\nexport function loadLocationFacetActions(\n  engine: CommerceEngine\n): LocationFacetActionCreators {\n  engine.addReducers({commerceFacetSet});\n  return {\n    toggleSelectLocationFacetValue,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facet-set/facet-set-slice.js';\nimport {\n  ToggleExcludeDateFacetValuePayload,\n  ToggleSelectDateFacetValuePayload,\n  UpdateDateFacetValuesPayload,\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n  updateDateFacetValues,\n} from './date-facet-actions.js';\n\n/**\n * The date facet action creators.\n */\nexport type {\n  ToggleSelectDateFacetValuePayload,\n  ToggleExcludeDateFacetValuePayload,\n  UpdateDateFacetValuesPayload,\n};\n\n/**\n * The date facet action creators.\n *\n * @group Actions\n * @category DateFacet\n */\nexport interface DateFacetActionCreators {\n  /**\n   * Toggles the selection state of a given date facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectDateFacetValue(\n    payload: ToggleSelectDateFacetValuePayload\n  ): PayloadAction<ToggleSelectDateFacetValuePayload>;\n\n  /**\n   * Toggles the exclusion state of a given date facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleExcludeDateFacetValue(\n    payload: ToggleExcludeDateFacetValuePayload\n  ): PayloadAction<ToggleExcludeDateFacetValuePayload>;\n\n  /**\n   * Updates all values in a given date facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateDateFacetValues(\n    payload: UpdateDateFacetValuesPayload\n  ): PayloadAction<UpdateDateFacetValuesPayload>;\n}\n\n/**\n * Loads the commerce facet set reducer and returns the available date facet action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the date facet action creators.\n *\n * @group Actions\n * @category DateFacet\n */\nexport function loadDateFacetActions(\n  engine: CommerceEngine\n): DateFacetActionCreators {\n  engine.addReducers({commerceFacetSet});\n  return {\n    toggleSelectDateFacetValue,\n    toggleExcludeDateFacetValue,\n    updateDateFacetValues,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facet-set/facet-set-slice.js';\nimport {\n  ToggleExcludeNumericFacetValuePayload,\n  ToggleSelectNumericFacetValuePayload,\n  UpdateNumericFacetValuesPayload,\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n  updateNumericFacetValues,\n} from './numeric-facet-actions.js';\n\nexport type {\n  ToggleSelectNumericFacetValuePayload,\n  ToggleExcludeNumericFacetValuePayload,\n  UpdateNumericFacetValuesPayload,\n};\n\n/**\n * The numeric facet action creators.\n *\n * @group Actions\n * @category NumericFacet\n */\nexport interface NumericFacetActionCreators {\n  /**\n   * Toggles the selection state of a given numeric facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectNumericFacetValue(\n    payload: ToggleSelectNumericFacetValuePayload\n  ): PayloadAction<ToggleSelectNumericFacetValuePayload>;\n\n  /**\n   * Toggles the exclusion state of a given numeric facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleExcludeNumericFacetValue(\n    payload: ToggleExcludeNumericFacetValuePayload\n  ): PayloadAction<ToggleExcludeNumericFacetValuePayload>;\n\n  /**\n   * Updates all values in a given numeric facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateNumericFacetValues(\n    payload: UpdateNumericFacetValuesPayload\n  ): PayloadAction<UpdateNumericFacetValuesPayload>;\n}\n\n/**\n * Loads the commerce facet set reducer and returns the available numeric facet action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the numeric facet action creators.\n *\n * @group Actions\n * @category NumericFacet\n */\nexport function loadNumericFacetActions(\n  engine: CommerceEngine\n): NumericFacetActionCreators {\n  engine.addReducers({commerceFacetSet});\n  return {\n    toggleSelectNumericFacetValue,\n    toggleExcludeNumericFacetValue,\n    updateNumericFacetValues,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {querySetReducer} from '../../query-set/query-set-slice.js';\nimport {\n  RegisterQuerySetQueryPayload,\n  UpdateQuerySetQueryPayload,\n  registerQuerySetQuery,\n  updateQuerySetQuery,\n} from './query-set-actions.js';\n\nexport type {RegisterQuerySetQueryPayload, UpdateQuerySetQueryPayload};\n\n/**\n * The query set action creators.\n *\n * @group Actions\n * @category QuerySet\n */\nexport interface QuerySetActionCreators {\n  /**\n   * Registers a query set query.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerQuerySetQuery(\n    payload: RegisterQuerySetQueryPayload\n  ): PayloadAction<RegisterQuerySetQueryPayload>;\n\n  /**\n   * Updates a query set query.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateQuerySetQuery(\n    payload: UpdateQuerySetQueryPayload\n  ): PayloadAction<UpdateQuerySetQueryPayload>;\n}\n\n/**\n * Loads the query set reducer and returns the available query set action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the query set action creators.\n *\n * @group Actions\n * @category QuerySet\n */\nexport function loadQuerySetActions(engine: CommerceEngine) {\n  engine.addReducers({querySetReducer});\n  return {\n    registerQuerySetQuery,\n    updateQuerySetQuery,\n  };\n}\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n  registerQuerySetQuery as registerCommerceQuerySetQuery,\n  updateQuerySetQuery as updateCommerceQuerySetQuery,\n} from '../commerce/query-set/query-set-actions.js';\nimport {selectQuerySuggestion as selectCommerceQuerySuggestion} from '../commerce/query-suggest/query-suggest-actions.js';\nimport {\n  CommerceSearchParameters,\n  restoreSearchParameters as commerceRestoreSearchParameters,\n} from '../commerce/search-parameters/search-parameters-actions.js';\nimport {executeSearch as commerceExecuteSearch} from '../commerce/search/search-actions.js';\nimport {change} from '../history/history-actions.js';\nimport {selectQuerySuggestion} from '../query-suggest/query-suggest-actions.js';\nimport {\n  SearchParameters,\n  restoreSearchParameters,\n} from '../search-parameters/search-parameter-actions.js';\nimport {executeSearch} from '../search/search-actions.js';\nimport {\n  RegisterQuerySetQueryActionCreatorPayload,\n  registerQuerySetQuery,\n  updateQuerySetQuery,\n} from './query-set-actions.js';\nimport {getQuerySetInitialState, QuerySetState} from './query-set-state.js';\n\nexport const querySetReducer = createReducer(\n  getQuerySetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerQuerySetQuery, (state, action) =>\n        registerQuery(state, action.payload)\n      )\n      .addCase(registerCommerceQuerySetQuery, (state, action) =>\n        registerQuery(state, action.payload)\n      )\n      .addCase(updateQuerySetQuery, (state, action) => {\n        const {id, query} = action.payload;\n        updateQuery(state, id, query);\n      })\n      .addCase(updateCommerceQuerySetQuery, (state, action) => {\n        const {id, query} = action.payload;\n        updateQuery(state, id, query);\n      })\n      .addCase(selectQuerySuggestion, (state, action) => {\n        const {id, expression} = action.payload;\n        updateQuery(state, id, expression);\n      })\n      .addCase(selectCommerceQuerySuggestion, (state, action) => {\n        const {id, expression} = action.payload;\n        updateQuery(state, id, expression);\n      })\n      .addCase(commerceExecuteSearch.fulfilled, (state, action) => {\n        const {queryExecuted} = action.payload;\n        updateAllQuerySetQuery(state, queryExecuted);\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const {queryExecuted} = action.payload;\n        updateAllQuerySetQuery(state, queryExecuted);\n      })\n      .addCase(restoreSearchParameters, handleRestoreSearchParameters)\n      .addCase(commerceRestoreSearchParameters, handleRestoreSearchParameters)\n      .addCase(change.fulfilled, (state, action) => {\n        if (!action.payload) {\n          return;\n        }\n\n        for (const [id, query] of Object.entries(action.payload.querySet)) {\n          updateQuery(state, id, query);\n        }\n      });\n  }\n);\n\nfunction handleRestoreSearchParameters(\n  state: QuerySetState,\n  action: {\n    payload: SearchParameters | CommerceSearchParameters;\n  }\n) {\n  if (!isNullOrUndefined(action.payload.q)) {\n    updateAllQuerySetQuery(state, action.payload.q);\n  }\n}\n\nfunction updateAllQuerySetQuery(state: QuerySetState, query: string) {\n  Object.keys(state).forEach((id) => (state[id] = query));\n}\n\nconst updateQuery = (state: QuerySetState, id: string, query: string) => {\n  if (id in state) {\n    state[id] = query;\n  }\n};\n\nconst registerQuery = (\n  state: QuerySetState,\n  actionPayload: RegisterQuerySetQueryActionCreatorPayload\n) => {\n  const {id, query} = actionPayload;\n  if (id in state) {\n    return;\n  }\n\n  state[id] = query;\n};\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {\n  RegisterQuerySetQueryActionCreatorPayload,\n  UpdateQuerySetQueryActionCreatorPayload,\n  querySetDefinition,\n} from '../../query-set/query-set-actions.js';\n\nexport type RegisterQuerySetQueryPayload =\n  RegisterQuerySetQueryActionCreatorPayload;\nexport type UpdateQuerySetQueryPayload =\n  UpdateQuerySetQueryActionCreatorPayload;\n\nexport const registerQuerySetQuery = createAction(\n  'commerce/querySet/register',\n  (payload: RegisterQuerySetQueryPayload) =>\n    validatePayload(payload, querySetDefinition)\n);\n\nexport const updateQuerySetQuery = createAction(\n  'commerce/querySet/update',\n  (payload: UpdateQuerySetQueryPayload) =>\n    validatePayload(payload, querySetDefinition)\n);\n", "import {createAction} from '@reduxjs/toolkit';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  requiredEmptyAllowedString,\n} from '../../utils/validate-payload.js';\n\nexport const querySetDefinition = {\n  id: requiredNonEmptyString,\n  query: requiredEmptyAllowedString,\n};\n\nexport interface RegisterQuerySetQueryActionCreatorPayload {\n  /**\n   * The unique identifier of the target query.\n   */\n  id: string;\n\n  /**\n   * The initial basic query expression.\n   */\n  query: string;\n}\n\nexport const registerQuerySetQuery = createAction(\n  'querySet/register',\n  (payload: RegisterQuerySetQueryActionCreatorPayload) =>\n    validatePayload(payload, querySetDefinition)\n);\n\nexport interface UpdateQuerySetQueryActionCreatorPayload {\n  /**\n   * The unique identifier of the target query.\n   */\n  id: string;\n\n  /**\n   * The new basic query expression.\n   */\n  query: string;\n}\n\nexport const updateQuerySetQuery = createAction(\n  'querySet/update',\n  (payload: UpdateQuerySetQueryActionCreatorPayload) =>\n    validatePayload(payload, querySetDefinition)\n);\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {historyStore} from '../../api/analytics/coveo-analytics-utils.js';\nimport {getSearchApiBaseUrl} from '../../api/platform-client.js';\nimport {QuerySuggestRequest} from '../../api/search/query-suggest/query-suggest-request.js';\nimport {QuerySuggestSuccessResponse} from '../../api/search/query-suggest/query-suggest-response.js';\nimport {\n  isErrorResponse,\n  AsyncThunkSearchOptions,\n} from '../../api/search/search-api-client.js';\nimport {NavigatorContext} from '../../app/navigatorContextProvider.js';\nimport {\n  ConfigurationSection,\n  ContextSection,\n  PipelineSection,\n  QuerySetSection,\n  QuerySuggestionSection,\n  SearchHubSection,\n} from '../../state/state-sections.js';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  requiredEmptyAllowedString,\n} from '../../utils/validate-payload.js';\nimport {fromAnalyticsStateToAnalyticsParams} from '../configuration/analytics-params.js';\nimport {fromAnalyticsStateToAnalyticsParams as legacyFromAnalyticsStateToAnalyticsParams} from '../configuration/legacy-analytics-params.js';\n\nexport type StateNeededByQuerySuggest = ConfigurationSection &\n  QuerySuggestionSection &\n  QuerySetSection &\n  Partial<ContextSection & PipelineSection & SearchHubSection>;\n\nexport const idDefinition = {\n  id: requiredNonEmptyString,\n};\n\nexport interface QuerySuggestionID {\n  id: string;\n}\n\nexport interface RegisterQuerySuggestActionCreatorPayload {\n  /**\n   * A unique identifier for the new query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`). Usually, this will be the ID of the search box controller that requests the query suggestions.\n   */\n  id: string;\n\n  /**\n   * The number of query suggestions to request from Coveo ML (e.g., `3`).\n   *\n   * @defaultValue `5`.\n   */\n  count?: number;\n}\n\nexport const registerQuerySuggest = createAction(\n  'querySuggest/register',\n  (payload: RegisterQuerySuggestActionCreatorPayload) =>\n    validatePayload(payload, {\n      ...idDefinition,\n      count: new NumberValue({min: 0}),\n    })\n);\n\nexport const unregisterQuerySuggest = createAction(\n  'querySuggest/unregister',\n  (payload: {id: string}) => validatePayload(payload, idDefinition)\n);\n\nexport interface SelectQuerySuggestionActionCreatorPayload {\n  /**\n   * The unique identifier of the target query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`). Usually, this will be the ID of the search box controller that requests the query suggestions.\n   */\n  id: string;\n\n  /**\n   * The selected query suggestion (e.g., `coveo`).\n   */\n  expression: string;\n}\n\nexport const selectQuerySuggestion = createAction(\n  'querySuggest/selectSuggestion',\n  (payload: SelectQuerySuggestionActionCreatorPayload) =>\n    validatePayload(payload, {\n      ...idDefinition,\n      expression: requiredEmptyAllowedString,\n    })\n);\n\nexport interface ClearQuerySuggestActionCreatorPayload {\n  /**\n   * The unique identifier of the target query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`). Usually, this will be the ID of the search box controller that requests the query suggestions.\n   */\n  id: string;\n}\n\nexport const clearQuerySuggest = createAction(\n  'querySuggest/clear',\n  (payload: ClearQuerySuggestActionCreatorPayload) =>\n    validatePayload(payload, idDefinition)\n);\n\nexport interface FetchQuerySuggestionsActionCreatorPayload {\n  /**\n   * The unique identifier of the target query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`). Usually, this will be the ID of the search box controller that requests the query suggestions.\n   */\n  id: string;\n}\n\nexport interface FetchQuerySuggestionsThunkReturn\n  extends FetchQuerySuggestionsActionCreatorPayload,\n    QuerySuggestSuccessResponse {\n  /**\n   * The query for which query suggestions were retrieved.\n   */\n  q: string | undefined;\n}\n\nexport const fetchQuerySuggestions = createAsyncThunk<\n  FetchQuerySuggestionsThunkReturn,\n  FetchQuerySuggestionsActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededByQuerySuggest>\n>(\n  'querySuggest/fetch',\n\n  async (\n    payload: {id: string},\n    {\n      getState,\n      rejectWithValue,\n      extra: {apiClient, validatePayload, navigatorContext},\n    }\n  ) => {\n    validatePayload(payload, idDefinition);\n    const id = payload.id;\n    const request = await buildQuerySuggestRequest(\n      id,\n      getState(),\n      navigatorContext\n    );\n    const response = await apiClient.querySuggest(request);\n\n    if (isErrorResponse(response)) {\n      return rejectWithValue(response.error);\n    }\n\n    return {\n      id,\n      q: request.q,\n      ...response.success,\n    };\n  }\n);\n\nexport const buildQuerySuggestRequest = async (\n  id: string,\n  s: StateNeededByQuerySuggest,\n  navigatorContext: NavigatorContext\n): Promise<QuerySuggestRequest> => {\n  return {\n    accessToken: s.configuration.accessToken,\n    organizationId: s.configuration.organizationId,\n    url:\n      s.configuration.search.apiBaseUrl ??\n      getSearchApiBaseUrl(\n        s.configuration.organizationId,\n        s.configuration.environment\n      ),\n    count: s.querySuggest[id]!.count,\n    q: s.querySet[id],\n    locale: s.configuration.search.locale,\n    timezone: s.configuration.search.timezone,\n    actionsHistory: s.configuration.analytics.enabled\n      ? historyStore.getHistory()\n      : [],\n    ...(s.context && {context: s.context.contextValues}),\n    ...(s.pipeline && {pipeline: s.pipeline}),\n    ...(s.searchHub && {searchHub: s.searchHub}),\n    tab: s.configuration.analytics.originLevel2,\n    ...(s.configuration.analytics.enabled && {\n      ...(s.configuration.analytics.enabled &&\n      s.configuration.analytics.analyticsMode === 'legacy'\n        ? await legacyFromAnalyticsStateToAnalyticsParams(\n            s.configuration.analytics\n          )\n        : fromAnalyticsStateToAnalyticsParams(\n            s.configuration.analytics,\n            navigatorContext\n          )),\n    }),\n    ...(s.configuration.search.authenticationProviders.length && {\n      authentication: s.configuration.search.authenticationProviders.join(','),\n    }),\n  };\n};\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {\n  ClearQuerySuggestPayload,\n  FetchQuerySuggestionsPayload,\n  FetchQuerySuggestionsThunkReturn,\n  RegisterQuerySuggestPayload,\n  SelectQuerySuggestionPayload,\n  StateNeededByQuerySuggest,\n  clearQuerySuggest,\n  registerQuerySuggest,\n  selectQuerySuggestion,\n} from '../../../features/commerce/query-suggest/query-suggest-actions.js';\nimport {querySuggestReducer as querySuggest} from '../../query-suggest/query-suggest-slice.js';\nimport {fetchQuerySuggestions} from './query-suggest-actions.js';\n\nexport type {\n  ClearQuerySuggestPayload,\n  FetchQuerySuggestionsPayload,\n  RegisterQuerySuggestPayload,\n  SelectQuerySuggestionPayload,\n};\n\n/**\n * The query suggest action creators.\n *\n * @group Actions\n * @category QuerySuggest\n */\nexport interface QuerySuggestActionCreators {\n  /**\n   * Clears the query suggest entity.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  clearQuerySuggest(\n    payload: ClearQuerySuggestPayload\n  ): PayloadAction<ClearQuerySuggestPayload>;\n\n  /**\n   * Fetches a list of query suggestions for a specific query suggest entity according to the current headless state.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  fetchQuerySuggestions(\n    payload: FetchQuerySuggestionsPayload\n  ): AsyncThunkAction<\n    FetchQuerySuggestionsThunkReturn,\n    FetchQuerySuggestionsPayload,\n    AsyncThunkCommerceOptions<StateNeededByQuerySuggest>\n  >;\n\n  /**\n   * Registers a query suggest entity.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerQuerySuggest(\n    payload: RegisterQuerySuggestPayload\n  ): PayloadAction<RegisterQuerySuggestPayload>;\n\n  /**\n   * Selects a query suggestion.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  selectQuerySuggestion(\n    payload: SelectQuerySuggestionPayload\n  ): PayloadAction<SelectQuerySuggestionPayload>;\n}\n\n/**\n * Loads the query suggest reducer and returns the available query suggest action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the query suggest action creators.\n *\n * @group Actions\n * @category QuerySuggest\n */\nexport function loadQuerySuggestActions(\n  engine: CommerceEngine\n): QuerySuggestActionCreators {\n  engine.addReducers({querySuggest});\n\n  return {\n    clearQuerySuggest,\n    fetchQuerySuggestions,\n    registerQuerySuggest,\n    selectQuerySuggestion,\n  };\n}\n", "import {AnyAction, type Draft as WritableDraft} from '@reduxjs/toolkit';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n  clearQuerySuggest as clearCommerceQuerySuggest,\n  fetchQuerySuggestions as fetchCommerceQuerySuggestions,\n  registerQuerySuggest as registerCommerceQuerySuggest,\n} from '../commerce/query-suggest/query-suggest-actions.js';\nimport {\n  ClearQuerySuggestActionCreatorPayload,\n  RegisterQuerySuggestActionCreatorPayload,\n  clearQuerySuggest,\n  fetchQuerySuggestions,\n  registerQuerySuggest,\n  unregisterQuerySuggest,\n} from './query-suggest-actions.js';\nimport {\n  getQuerySuggestSetInitialState,\n  QuerySuggestSet,\n  QuerySuggestState,\n} from './query-suggest-state.js';\n\nexport const querySuggestReducer = createReducer(\n  getQuerySuggestSetInitialState(),\n  (builder) =>\n    builder\n      .addCase(registerQuerySuggest, (state, action) => {\n        handleRegisterQuerySuggest(state, action.payload);\n      })\n      .addCase(registerCommerceQuerySuggest, (state, action) => {\n        handleRegisterQuerySuggest(state, action.payload);\n      })\n      .addCase(unregisterQuerySuggest, (state, action) => {\n        delete state[action.payload.id];\n      })\n      .addCase(fetchQuerySuggestions.pending, handleFetchPending)\n      .addCase(fetchQuerySuggestions.fulfilled, (state, action) => {\n        const querySuggest = state[action.meta.arg.id];\n\n        if (\n          !querySuggest ||\n          action.meta.requestId !== querySuggest.currentRequestId\n        ) {\n          return;\n        }\n\n        const {q} = action.payload;\n        if (q) {\n          querySuggest.partialQueries.push(\n            q.replace(/;/, encodeURIComponent(';'))\n          );\n        }\n        querySuggest.responseId = action.payload.responseId;\n        querySuggest.completions = action.payload.completions;\n        querySuggest.isLoading = false;\n        querySuggest.error = null;\n      })\n      .addCase(fetchQuerySuggestions.rejected, handleFetchRejected)\n      .addCase(fetchCommerceQuerySuggestions.pending, handleFetchPending)\n      .addCase(fetchCommerceQuerySuggestions.fulfilled, (state, action) => {\n        const querySuggest = state[action.meta.arg.id];\n\n        if (\n          !querySuggest ||\n          action.meta.requestId !== querySuggest.currentRequestId\n        ) {\n          return;\n        }\n\n        const {query} = action.payload;\n        if (query) {\n          querySuggest.partialQueries.push(\n            query.replace(/;/, encodeURIComponent(';'))\n          );\n        }\n        querySuggest.responseId = action.payload.responseId;\n        querySuggest.completions = action.payload.completions.map(\n          (completion) => ({\n            expression: completion.expression,\n            highlighted: completion.highlighted,\n            score: 0,\n            executableConfidence: 0,\n          })\n        );\n        querySuggest.isLoading = false;\n        querySuggest.error = null;\n      })\n      .addCase(fetchCommerceQuerySuggestions.rejected, handleFetchRejected)\n      .addCase(clearQuerySuggest, (state, action) => {\n        handleClearQuerySuggest(state, action.payload);\n      })\n      .addCase(clearCommerceQuerySuggest, (state, action) => {\n        handleClearQuerySuggest(state, action.payload);\n      })\n);\n\nfunction handleRegisterQuerySuggest(\n  state: WritableDraft<QuerySuggestSet>,\n  payload: RegisterQuerySuggestActionCreatorPayload\n) {\n  const id = payload.id;\n\n  if (id in state) {\n    return;\n  }\n\n  state[id] = buildQuerySuggest(payload);\n}\n\nfunction buildQuerySuggest(\n  config: Partial<QuerySuggestState>\n): QuerySuggestState {\n  return {\n    id: '',\n    completions: [],\n    responseId: '',\n    count: 5,\n    currentRequestId: '',\n    error: null,\n    partialQueries: [],\n    isLoading: false,\n    ...config,\n  };\n}\n\nfunction handleFetchPending(\n  state: WritableDraft<QuerySuggestSet>,\n  action: AnyAction\n) {\n  const querySuggest = state[action.meta.arg.id];\n\n  if (!querySuggest) {\n    return;\n  }\n\n  querySuggest.currentRequestId = action.meta.requestId;\n  querySuggest.isLoading = true;\n}\n\nfunction handleFetchRejected(\n  state: WritableDraft<QuerySuggestSet>,\n  action: AnyAction\n) {\n  const querySuggest = state[action.meta.arg.id];\n\n  if (!querySuggest) {\n    return;\n  }\n\n  querySuggest.error = action.payload || null;\n  querySuggest.isLoading = false;\n}\n\nfunction handleClearQuerySuggest(\n  state: WritableDraft<QuerySuggestSet>,\n  payload: ClearQuerySuggestActionCreatorPayload\n) {\n  const querySuggest = state[payload.id];\n\n  if (!querySuggest) {\n    return;\n  }\n\n  querySuggest.responseId = '';\n  querySuggest.completions = [];\n  querySuggest.partialQueries = [];\n}\n", "import {QuerySuggestCompletion} from '../../api/search/query-suggest/query-suggest-response.js';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response.js';\n\nexport interface QuerySuggestState {\n  /**\n   * The unique identifier of the query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  id: string;\n  /**\n   * The current list of query suggestions.\n   */\n  completions: QuerySuggestCompletion[];\n  /**\n   * The query suggest response id.\n   */\n  responseId: string;\n  /**\n   * A history of the queries for which query suggestions have been received\n   */\n  partialQueries: string[];\n  /**\n   * The number of query suggestions requested from Coveo ML (e.g., `3`).\n   */\n  count: number;\n  /**\n   * The unique identifier of the current query suggestion request.\n   */\n  currentRequestId: string;\n  /**\n   * The error returned by the Coveo platform while executing the query suggestion request, if any. `null` otherwise.\n   */\n  error: SearchAPIErrorWithStatusCode | null;\n  /**\n   * `true` if the query suggest request is currently being executed against the Coveo platform, `false` otherwise.\n   */\n  isLoading: boolean;\n}\n\nexport type QuerySuggestSet = Record<string, QuerySuggestState | undefined>;\n\nexport const getQuerySuggestSetInitialState: () => QuerySuggestSet = () => ({});\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {configurationReducer as configuration} from '../../configuration/configuration-slice.js';\nimport {\n  UpdateAnalyticsConfigurationPayload,\n  UpdateBasicConfigurationPayload,\n  UpdateProxyBaseUrlPayload,\n  disableAnalytics,\n  enableAnalytics,\n  updateAnalyticsConfiguration,\n  updateBasicConfiguration,\n  updateProxyBaseUrl,\n} from './configuration-actions.js';\n\nexport type {\n  UpdateAnalyticsConfigurationPayload,\n  UpdateBasicConfigurationPayload,\n};\n\n/**\n * The configuration action creators.\n *\n * @group Actions\n * @category Configuration\n */\nexport interface ConfigurationActionCreators {\n  /**\n   * Disables analytics.\n   *\n   * @returns A dispatchable action.\n   */\n  disableAnalytics(): PayloadAction<void>;\n\n  /**\n   * Enables analytics.\n   *\n   * @returns A dispatchable action.\n   */\n  enableAnalytics(): PayloadAction<void>;\n\n  /**\n   * Updates the analytics configuration.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateAnalyticsConfiguration(\n    payload: UpdateAnalyticsConfigurationPayload\n  ): PayloadAction<UpdateAnalyticsConfigurationPayload>;\n\n  /**\n   * Updates the basic configuration.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateBasicConfiguration(\n    payload: UpdateBasicConfigurationPayload\n  ): PayloadAction<UpdateBasicConfigurationPayload>;\n\n  /**\n   * Updates the commerce configuration.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateProxyBaseUrl(\n    payload: UpdateProxyBaseUrlPayload\n  ): PayloadAction<UpdateProxyBaseUrlPayload>;\n}\n\n/**\n * Loads the configuration reducer and returns the available commerce configuration action creators.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the commerce configuration action creators.\n *\n * @group Actions\n * @category Configuration\n */\nexport function loadConfigurationActions(\n  engine: CommerceEngine\n): ConfigurationActionCreators {\n  engine.addReducers({configuration});\n  return {\n    disableAnalytics,\n    enableAnalytics,\n    updateAnalyticsConfiguration,\n    updateBasicConfiguration,\n    updateProxyBaseUrl,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {UpdateQueryPayload, updateQuery} from './query-actions.js';\nimport {queryReducer as query} from './query-slice.js';\n\nexport type {UpdateQueryPayload};\n\n/**\n * The query action creators.\n *\n * @group Actions\n * @category Query\n */\nexport interface QueryActionCreators {\n  /**\n   * Updates the basic query expression.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateQuery(payload: UpdateQueryPayload): PayloadAction<UpdateQueryPayload>;\n}\n\n/**\n * Loads the commerce query reducer and returns possible query action creators.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the query action creators.\n *\n * @group Actions\n * @category Query\n */\nexport function loadQueryActions(engine: CommerceEngine): QueryActionCreators {\n  engine.addReducers({query});\n\n  return {\n    updateQuery,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {facetOrderReducer as facetOrder} from '../../facets/facet-order/facet-order-slice.js';\nimport {querySetReducer as querySet} from '../../query-set/query-set-slice.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facets/facet-set/facet-set-slice.js';\nimport {paginationReducer as commercePagination} from '../pagination/pagination-slice.js';\nimport {queryReducer as query} from '../query/query-slice.js';\nimport {sortReducer as commerceSort} from '../sort/sort-slice.js';\nimport {\n  RestoreSearchParametersPayload,\n  restoreSearchParameters,\n} from './search-parameters-actions.js';\n\nexport type {RestoreSearchParametersPayload};\n\n/**\n * The search parameters action creators.\n *\n * @group Actions\n * @category SearchParameters\n */\nexport interface SearchParametersActionCreators {\n  /**\n   * Restores the search parameters.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  restoreSearchParameters(\n    payload: RestoreSearchParametersPayload\n  ): PayloadAction<RestoreSearchParametersPayload>;\n}\n\n/**\n * Loads the commerce facet order, facet set, pagination, query, query set, and sort reducers and returns the available search parameters action creators.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the search parameters action creators.\n *\n * @group Actions\n * @category SearchParameters\n */\nexport function loadSearchParametersActions(\n  engine: CommerceEngine\n): SearchParametersActionCreators {\n  engine.addReducers({\n    facetOrder,\n    commerceFacetSet,\n    commercePagination,\n    query,\n    querySet,\n    commerceSort,\n  });\n\n  return {\n    restoreSearchParameters,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {facetOrderReducer as facetOrder} from '../../facets/facet-order/facet-order-slice.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../facets/facet-set/facet-set-slice.js';\nimport {paginationReducer as commercePagination} from '../pagination/pagination-slice.js';\nimport {sortReducer as commerceSort} from '../sort/sort-slice.js';\nimport {\n  RestoreProductListingParametersPayload,\n  restoreProductListingParameters,\n} from './product-listing-parameters-actions.js';\n\nexport type {RestoreProductListingParametersPayload};\n\n/**\n * The product listing parameters action creators.\n *\n * @group Actions\n * @category ProductListingParameters\n */\nexport interface ProductListingParametersActionCreators {\n  /**\n   * Restores the product listing parameters.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  restoreProductListingParameters(\n    payload: RestoreProductListingParametersPayload\n  ): PayloadAction<RestoreProductListingParametersPayload>;\n}\n\n/**\n * Loads the commerce facet order, facet set, pagination, and sort reducers and returns the available product listing parameters action creators.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the product listing parameters action creators.\n *\n * @group Actions\n * @category ProductListingParameters\n */\nexport function loadProductListingParametersActions(\n  engine: CommerceEngine\n): ProductListingParametersActionCreators {\n  engine.addReducers({\n    facetOrder,\n    commerceFacetSet,\n    commercePagination,\n    commerceSort,\n  });\n\n  return {\n    restoreProductListingParameters,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {ApplyQueryTriggerModificationPayload} from '../../triggers/triggers-actions.js';\nimport {\n  UpdateIgnoreQueryTriggerPayload,\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from './triggers-actions.js';\nimport {commerceTriggersReducer as triggers} from './triggers-slice.js';\n\nexport type {\n  UpdateIgnoreQueryTriggerPayload,\n  ApplyQueryTriggerModificationPayload,\n  updateIgnoreQueryTrigger,\n};\n\n/**\n * The triggers action creators.\n *\n * @group Actions\n * @category Triggers\n */\nexport interface TriggersActionCreators {\n  /**\n   * Updates the query to ignore the query trigger.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   * */\n  updateIgnoreQueryTrigger(\n    payload: UpdateIgnoreQueryTriggerPayload\n  ): PayloadAction<UpdateIgnoreQueryTriggerPayload>;\n\n  /**\n   * Applies a query trigger modification.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   * */\n  applyQueryTriggerModification(\n    payload: ApplyQueryTriggerModificationPayload\n  ): PayloadAction<ApplyQueryTriggerModificationPayload>;\n}\n\n/**\n * Loads the commerce triggers reducer and returns the available triggers action creators.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the triggers actions.\n *\n * @group Actions\n * @category Triggers\n */\nexport function loadTriggersActions(engine: CommerceEngine) {\n  engine.addReducers({triggers});\n  return {\n    updateIgnoreQueryTrigger,\n    applyQueryTriggerModification,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {\n  ClearExpiredInstantProductsPayload,\n  CoreInstantProductPayload,\n  PromoteChildToParentPayload,\n  RegisterInstantProductPayload,\n  UpdateInstantProductQueryPayload,\n  clearExpiredProducts,\n  promoteChildToParent,\n  registerInstantProducts,\n  updateInstantProductsQuery,\n} from './instant-products-actions.js';\nimport {instantProductsReducer as instantProducts} from './instant-products-slice.js';\n\nexport type {\n  ClearExpiredInstantProductsPayload,\n  CoreInstantProductPayload,\n  PromoteChildToParentPayload,\n  RegisterInstantProductPayload,\n  UpdateInstantProductQueryPayload,\n};\n\n/**\n * The instant products action creators.\n *\n * @group Actions\n * @category InstantProducts\n */\nexport interface InstantProductsActionCreators {\n  /**\n   * Clears expired instant products.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  clearExpiredProducts(\n    payload: ClearExpiredInstantProductsPayload\n  ): PayloadAction<ClearExpiredInstantProductsPayload>;\n\n  /**\n   * Promotes a child product to a parent product.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  promoteChildToParent(\n    payload: PromoteChildToParentPayload\n  ): PayloadAction<PromoteChildToParentPayload>;\n\n  /**\n   * Registers instant products.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerInstantProducts(\n    payload: RegisterInstantProductPayload\n  ): PayloadAction<RegisterInstantProductPayload>;\n\n  /**\n   * Updates the query for instant products.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateInstantProductsQuery(\n    payload: UpdateInstantProductQueryPayload\n  ): PayloadAction<UpdateInstantProductQueryPayload>;\n}\n\n/**\n * Loads the commerce instant products reducer and returns the available instant products actions.\n *\n * @param engine - The commerce engine.\n * @returns An object holding the instant products action creators.\n *\n * @group Actions\n * @category InstantProducts\n */\nexport function loadInstantProductsActions(\n  engine: CommerceEngine\n): InstantProductsActionCreators {\n  engine.addReducers({instantProducts});\n  return {\n    clearExpiredProducts,\n    promoteChildToParent,\n    registerInstantProducts,\n    updateInstantProductsQuery,\n  };\n}\n", "import {RecordValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {ChildProduct} from '../../../api/commerce/common/product.js';\nimport {\n  validatePayload,\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n} from '../../../utils/validate-payload.js';\n\nexport interface CoreInstantProductPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n}\n\nconst instantProductsIdDefinition = {\n  id: requiredNonEmptyString,\n};\n\nconst instantProductsQueryDefinition = {\n  ...instantProductsIdDefinition,\n  query: requiredEmptyAllowedString,\n};\n\nexport type ClearExpiredInstantProductsPayload = CoreInstantProductPayload;\n\nexport const clearExpiredProducts = createAction(\n  'commerce/instantProducts/clearExpired',\n  (payload: ClearExpiredInstantProductsPayload) =>\n    validatePayload(payload, instantProductsIdDefinition)\n);\n\nconst promoteChildToParentDefinition = {\n  child: new RecordValue({\n    options: {required: true},\n    values: {\n      permanentid: new StringValue({required: true}),\n    },\n  }),\n  ...instantProductsQueryDefinition,\n};\n\nexport interface PromoteChildToParentPayload\n  extends UpdateInstantProductQueryPayload {\n  child: ChildProduct;\n}\n\nexport const promoteChildToParent = createAction(\n  'commerce/instantProducts/promoteChildToParent',\n  (payload: PromoteChildToParentPayload) =>\n    validatePayload(payload, promoteChildToParentDefinition)\n);\n\nexport interface UpdateInstantProductQueryPayload\n  extends CoreInstantProductPayload {\n  /**\n   * The initial basic query expression for instant products.\n   */\n  query: string;\n}\n\nexport type RegisterInstantProductPayload = CoreInstantProductPayload;\n\nexport const registerInstantProducts = createAction(\n  'commerce/instantProducts/register',\n  (payload: RegisterInstantProductPayload) =>\n    validatePayload(payload, instantProductsIdDefinition)\n);\n\nexport const updateInstantProductsQuery = createAction(\n  'commerce/instantProducts/updateQuery',\n  (payload: UpdateInstantProductQueryPayload) =>\n    validatePayload(payload, instantProductsQueryDefinition)\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  Product,\n  BaseProduct,\n  ChildProduct,\n} from '../../../api/commerce/common/product.js';\nimport {\n  clearExpiredItems,\n  fetchItemsFulfilled,\n  fetchItemsPending,\n  fetchItemsRejected,\n  registerInstantItem,\n  updateInstantItemQuery,\n} from '../../instant-items/instant-items-slice.js';\nimport {fetchInstantProducts} from '../search/search-actions.js';\nimport {\n  clearExpiredProducts,\n  promoteChildToParent,\n  registerInstantProducts,\n  updateInstantProductsQuery,\n} from './instant-products-actions.js';\nimport {getInstantProductsInitialState} from './instant-products-state.js';\n\nexport const instantProductsReducer = createReducer(\n  getInstantProductsInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerInstantProducts, (state, action) => {\n        registerInstantItem(action.payload, state);\n      })\n      .addCase(updateInstantProductsQuery, (state, action) => {\n        updateInstantItemQuery(\n          {...action.payload, q: action.payload.query},\n          state\n        );\n      })\n      .addCase(clearExpiredProducts, (state, action) => {\n        clearExpiredItems(action.payload, state);\n      })\n      .addCase(fetchInstantProducts.pending, (state, action) => {\n        fetchItemsPending(action.meta.arg, state, {products: []});\n      })\n      .addCase(fetchInstantProducts.fulfilled, (state, action) => {\n        const {\n          response: {\n            products,\n            responseId,\n            pagination: {totalEntries},\n          },\n        } = action.payload;\n        fetchItemsFulfilled(\n          {\n            duration: 0,\n            searchUid: responseId,\n            totalCountFiltered: totalEntries,\n            ...action.meta.arg,\n          },\n          state,\n          {\n            products: products.map((product, index) =>\n              preprocessProduct(product, index + 1)\n            ),\n          }\n        );\n      })\n      .addCase(fetchInstantProducts.rejected, (state, action) => {\n        fetchItemsRejected(action.meta.arg, state);\n      })\n      .addCase(promoteChildToParent, (state, action) => {\n        const cache = state[action.payload.id].cache[action.payload.query];\n        if (!cache) {\n          return;\n        }\n        const products = cache.products;\n\n        let childToPromote;\n        const currentParentIndex = products.findIndex((product) => {\n          childToPromote = product.children.find(\n            (child) => child.permanentid === action.payload.child.permanentid\n          );\n          return !!childToPromote;\n        });\n\n        if (currentParentIndex === -1 || childToPromote === undefined) {\n          return;\n        }\n\n        const position = products[currentParentIndex].position;\n        const {children, totalNumberOfChildren} = products[currentParentIndex];\n\n        const newParent: Product = {\n          ...(childToPromote as ChildProduct),\n          children,\n          totalNumberOfChildren,\n          position,\n        };\n\n        const newProducts = [...products];\n        newProducts.splice(currentParentIndex, 1, newParent);\n\n        cache.products = newProducts;\n      });\n  }\n);\n\nfunction preprocessProduct(product: BaseProduct, position: number): Product {\n  const isParentAlreadyInChildren = product.children.some(\n    (child) => child.permanentid === product.permanentid\n  );\n  if (product.children.length === 0 || isParentAlreadyInChildren) {\n    return {...product, position};\n  }\n\n  const {children, totalNumberOfChildren, ...restOfProduct} = product;\n\n  return {\n    ...product,\n    children: [restOfProduct, ...children],\n    position,\n  };\n}\n", "import {\n  InstantItemsCache,\n  InstantItemsState,\n  hasExpired,\n} from './instant-items-state.js';\n\ntype InstantItemsStateWithCache = InstantItemsState<\n  Record<string, InstantItemsCache & {error: unknown}>\n>;\n\nexport const registerInstantItem = (\n  payload: {id: string},\n  state: InstantItemsStateWithCache\n) => {\n  const {id} = payload;\n  if (state[id]) {\n    return;\n  }\n  state[id] = {q: '', cache: {}};\n  return state;\n};\n\nexport const updateInstantItemQuery = (\n  payload: {q: string; id: string},\n  state: InstantItemsStateWithCache\n) => {\n  const {q, id} = payload;\n  if (!q) {\n    return;\n  }\n  state[id].q = q;\n};\n\nexport const clearExpiredItems = (\n  payload: {id: string},\n  state: InstantItemsStateWithCache\n) => {\n  const {id} = payload;\n  Object.entries(state[id].cache).forEach(([q, cached]) => {\n    if (hasExpired(cached)) {\n      delete state[id].cache[q];\n    }\n  });\n};\n\nexport const fetchItemsPending = (\n  payload: {id: string; q: string},\n  state: InstantItemsStateWithCache,\n  toSetEmptyIfNotFound: Record<string, unknown>\n) => {\n  for (const id in state) {\n    for (const query in state[id].cache) {\n      state[id].cache[query].isActive = false;\n    }\n  }\n\n  if (!getCached(payload, state)) {\n    makeEmptyCache(payload, state, toSetEmptyIfNotFound);\n    return;\n  }\n\n  const cached = getCached(payload, state);\n  cached!.isLoading = true;\n  cached!.isActive = true;\n  cached!.error = null;\n};\n\nexport const fetchItemsFulfilled = (\n  payload: {\n    id: string;\n    q: string;\n    searchUid: string;\n    cacheTimeout?: number;\n    totalCountFiltered: number;\n    duration: number;\n  },\n  state: InstantItemsStateWithCache,\n  toAddToCache: Record<string, unknown>\n) => {\n  const {id, q, searchUid, cacheTimeout, totalCountFiltered, duration} =\n    payload;\n  state[id].cache[q] = {\n    ...getCached(payload, state),\n    ...toAddToCache,\n    isActive: true,\n    searchUid,\n    isLoading: false,\n    error: null,\n    expiresAt: cacheTimeout ? cacheTimeout + Date.now() : 0,\n    totalCountFiltered,\n    duration,\n  };\n};\n\nexport const fetchItemsRejected = (\n  payload: {id: string; q: string; error?: unknown},\n  state: InstantItemsStateWithCache\n) => {\n  const {id, q, error} = payload;\n\n  state[id].cache[q].error = error || null;\n  state[id].cache[q].isLoading = false;\n  state[id].cache[q].isActive = false;\n};\n\nconst getCached = (\n  payload: {id: string; q: string},\n  state: InstantItemsStateWithCache\n): (InstantItemsCache & {error: unknown}) | null => {\n  const {q, id} = payload;\n  return state[id].cache[q] || null;\n};\n\nconst makeEmptyCache = (\n  payload: {id: string; q: string},\n  state: InstantItemsStateWithCache,\n  setToEmpty: Record<string, unknown>\n) => {\n  const {q, id} = payload;\n  state[id].cache[q] = {\n    isLoading: true,\n    error: null,\n    expiresAt: 0,\n    isActive: true,\n    searchUid: '',\n    totalCountFiltered: 0,\n    duration: 0,\n    ...setToEmpty,\n  };\n};\n", "export interface InstantItemsCache {\n  expiresAt: number;\n  isLoading: boolean;\n  isActive: boolean;\n  searchUid: string;\n  totalCountFiltered: number;\n  duration: number;\n}\n\nexport type InstantItemsState<Cache> = Record<\n  string,\n  {\n    /**\n     * The basic query expression (e.g., `acme tornado seeds`).\n     */\n    q: string;\n    /**\n     * The cache of instant items for each query previously requested.\n     */\n    cache: Cache;\n  }\n>;\n\nexport function hasExpired(cached: InstantItemsCache | undefined) {\n  if (!cached) {\n    return false;\n  }\n  return cached.expiresAt && Date.now() >= cached.expiresAt;\n}\n", "import {SerializedError} from '@reduxjs/toolkit';\nimport {CommerceAPIErrorResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {Product} from '../../../api/commerce/common/product.js';\nimport {\n  InstantItemsCache,\n  InstantItemsState,\n} from '../../instant-items/instant-items-state.js';\n\nexport interface InstantProductsCache extends InstantItemsCache {\n  error: CommerceAPIErrorResponse | SerializedError | null;\n  products: Product[];\n}\n\nexport type InstantProductsState = InstantItemsState<\n  Record<string, InstantProductsCache>\n>;\n\nexport function getInstantProductsInitialState(): InstantProductsState {\n  return {};\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {\n  RegisterRecentQueriesCreatorPayload,\n  registerRecentQueries,\n  clearRecentQueries,\n} from '../../recent-queries/recent-queries-actions.js';\nimport {recentQueriesReducer as recentQueries} from './recent-queries-slice.js';\n\nexport type {RegisterRecentQueriesCreatorPayload};\n\n/**\n * The commerce recent queries action creators.\n *\n * @group Actions\n * @category RecentQueries\n */\nexport interface RecentQueriesActionCreators {\n  /**\n   * Initializes the recent queries state.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerRecentQueries(\n    payload: RegisterRecentQueriesCreatorPayload\n  ): PayloadAction<RegisterRecentQueriesCreatorPayload>;\n\n  /**\n   * Clears the recent queries list.\n   *\n   * @returns A dispatchable action.\n   */\n  clearRecentQueries(): PayloadAction;\n}\n\n/**\n * Loads the recent queries reducer and returns available commerce recent queries actions.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the commerce recent queries action creators.\n *\n * @group Actions\n * @category RecentQueries\n */\nexport function loadRecentQueriesActions(\n  engine: CommerceEngine\n): RecentQueriesActionCreators {\n  engine.addReducers({recentQueries});\n\n  return {\n    registerRecentQueries,\n    clearRecentQueries,\n  };\n}\n", "import {ArrayValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload.js';\n\nexport interface RegisterRecentQueriesCreatorPayload {\n  /**\n   * The recent queries made by the user prior to instantiating the controller.\n   */\n  queries: string[];\n  /**\n   * The maximum number of queries to retain in the list.\n   */\n  maxLength: number;\n}\n\nexport const registerRecentQueriesPayloadDefinition = {\n  queries: new ArrayValue({\n    required: true,\n    each: new StringValue({emptyAllowed: false}),\n  }),\n  maxLength: new NumberValue({required: true, min: 1, default: 10}),\n};\n\nexport const registerRecentQueries = createAction(\n  'recentQueries/registerRecentQueries',\n  (payload: RegisterRecentQueriesCreatorPayload) =>\n    validatePayload(payload, registerRecentQueriesPayloadDefinition)\n);\n\nexport const clearRecentQueries = createAction(\n  'recentQueries/clearRecentQueries'\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  handleClearRecentQueries,\n  handleExecuteSearchFulfilled,\n  handleRegisterQueries,\n} from '../../recent-queries/recent-queries-slice.js';\nimport {getRecentQueriesInitialState} from '../../recent-queries/recent-queries-state.js';\nimport {executeSearch as commerceExecuteSearch} from '../search/search-actions.js';\nimport {\n  clearRecentQueries,\n  registerRecentQueries,\n} from './recent-queries-actions.js';\n\nexport const recentQueriesReducer = createReducer(\n  getRecentQueriesInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerRecentQueries, handleRegisterQueries)\n      .addCase(clearRecentQueries, handleClearRecentQueries)\n      .addCase(commerceExecuteSearch.fulfilled, (state, action) => {\n        const query = action.payload.queryExecuted?.trim() || '';\n        const products = action.payload.response.products;\n        if (!query.length || !products.length) {\n          return;\n        }\n        handleExecuteSearchFulfilled(query, state);\n      });\n  }\n);\n", "import {AnyAction, type Draft as WritableDraft} from '@reduxjs/toolkit';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {executeSearch} from '../search/search-actions.js';\nimport {\n  registerRecentQueries,\n  clearRecentQueries,\n} from './recent-queries-actions.js';\nimport {\n  RecentQueriesState,\n  getRecentQueriesInitialState,\n} from './recent-queries-state.js';\n\nexport const recentQueriesReducer = createReducer(\n  getRecentQueriesInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerRecentQueries, handleRegisterQueries)\n      .addCase(clearRecentQueries, handleClearRecentQueries)\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const query = action.payload.queryExecuted.trim();\n        const results = action.payload.response.results;\n        if (!query.length || !results.length) {\n          return;\n        }\n        handleExecuteSearchFulfilled(query, state);\n      });\n  }\n);\n\nexport function handleRegisterQueries(\n  state: WritableDraft<RecentQueriesState>,\n  action: AnyAction\n) {\n  state.queries = action.payload.queries.slice(0, action.payload.maxLength);\n  state.maxLength = action.payload.maxLength;\n}\n\nexport function handleClearRecentQueries(\n  state: WritableDraft<RecentQueriesState>\n) {\n  state.queries = [];\n}\n\nexport function handleExecuteSearchFulfilled(\n  query: string,\n  state: WritableDraft<RecentQueriesState>\n) {\n  state.queries = state.queries.filter((q) => q !== query);\n  const remaining = state.queries.slice(0, state.maxLength - 1);\n  state.queries = [query, ...remaining];\n}\n", "export interface RecentQueriesState {\n  queries: string[];\n  maxLength: number;\n}\n\nexport function getRecentQueriesInitialState(): RecentQueriesState {\n  return {\n    queries: [],\n    maxLength: 10,\n  };\n}\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload.js';\nimport {\n  RegisterRecentQueriesCreatorPayload,\n  registerRecentQueriesPayloadDefinition,\n} from '../../recent-queries/recent-queries-actions.js';\n\nexport const clearRecentQueries = createAction('commerce/recentQueries/clear');\n\nexport type RegisterRecentQueriesPayload = RegisterRecentQueriesCreatorPayload;\n\nexport const registerRecentQueries = createAction(\n  'commerce/recentQueries/register',\n  (payload: RegisterRecentQueriesPayload) =>\n    validatePayload(payload, registerRecentQueriesPayloadDefinition)\n);\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {standaloneSearchBoxSetReducer as standaloneSearchBoxSet} from '../../standalone-search-box-set/standalone-search-box-set-slice.js';\nimport {\n  FetchRedirectUrlPayload,\n  RegisterStandaloneSearchBoxPayload,\n  ResetStandaloneSearchBoxPayload,\n  StateNeededForRedirect,\n  fetchRedirectUrl,\n  registerStandaloneSearchBox,\n  resetStandaloneSearchBox,\n  updateStandaloneSearchBoxRedirectionUrl,\n} from './standalone-search-box-set-actions.js';\n\nexport type {\n  FetchRedirectUrlPayload,\n  RegisterStandaloneSearchBoxPayload,\n  ResetStandaloneSearchBoxPayload,\n};\n\n/**\n * The commerce standalone search box set action creators.\n *\n * @group Actions\n * @category StandaloneSearchBoxSet\n */\nexport interface StandaloneSearchBoxSetActionCreators {\n  /**\n   * Preprocesses the query for the current headless state, and retrieves a redirection URL if a redirect trigger was fired in the query pipeline.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  fetchRedirectUrl(\n    payload: FetchRedirectUrlPayload\n  ): AsyncThunkAction<\n    string,\n    FetchRedirectUrlPayload,\n    AsyncThunkCommerceOptions<StateNeededForRedirect>\n  >;\n\n  /**\n   * Registers a standalone search box.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerStandaloneSearchBox(\n    payload: RegisterStandaloneSearchBoxPayload\n  ): PayloadAction<RegisterStandaloneSearchBoxPayload>;\n\n  /**\n   * Resets the standalone search box state. To be dispatched on single page applications after the redirection has been triggered.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  resetStandaloneSearchBox(\n    payload: ResetStandaloneSearchBoxPayload\n  ): PayloadAction<ResetStandaloneSearchBoxPayload>;\n\n  /**\n   * Updates the redirection URL of the standalone search box.\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateStandaloneSearchBoxRedirectionUrl(\n    payload: RegisterStandaloneSearchBoxPayload\n  ): PayloadAction<RegisterStandaloneSearchBoxPayload>;\n}\n\n/**\n * Loads the standalone search box set reducer and returns the available commerce standalone search box set action creators.\n *\n * @param engine - The headless commerce engine.\n * @returns An object holding the commerce standalone search box set action creators.\n *\n * @group Actions\n * @category StandaloneSearchBoxSet\n */\nexport function loadStandaloneSearchBoxSetActions(\n  engine: CommerceEngine\n): StandaloneSearchBoxSetActionCreators {\n  engine.addReducers({standaloneSearchBoxSet});\n  return {\n    fetchRedirectUrl,\n    registerStandaloneSearchBox,\n    updateStandaloneSearchBoxRedirectionUrl,\n    resetStandaloneSearchBox,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  fetchRedirectUrl,\n  registerStandaloneSearchBox,\n  resetStandaloneSearchBox,\n  updateAnalyticsToOmniboxFromLink,\n  updateAnalyticsToSearchFromLink,\n  updateStandaloneSearchBoxRedirectionUrl,\n} from './standalone-search-box-set-actions.js';\nimport {\n  getStandaloneSearchBoxSetInitialState,\n  StandaloneSearchBoxEntry,\n} from './standalone-search-box-set-state.js';\n\nexport const standaloneSearchBoxSetReducer = createReducer(\n  getStandaloneSearchBoxSetInitialState(),\n  (builder) =>\n    builder\n      .addCase(registerStandaloneSearchBox, (state, action) => {\n        const {id, redirectionUrl, overwrite} = action.payload;\n\n        if (!overwrite && id in state) {\n          return;\n        }\n\n        state[id] = buildStandaloneSearchBoxEntry(redirectionUrl);\n      })\n      .addCase(resetStandaloneSearchBox, (state, action) => {\n        const {id} = action.payload;\n        const searchBox = state[id];\n\n        if (searchBox) {\n          state[id] = buildStandaloneSearchBoxEntry(\n            searchBox.defaultRedirectionUrl\n          );\n          return;\n        }\n      })\n      .addCase(updateStandaloneSearchBoxRedirectionUrl, (state, action) => {\n        const {id, redirectionUrl} = action.payload;\n\n        if (!(id in state)) {\n          return;\n        }\n\n        state[id] = buildStandaloneSearchBoxEntry(redirectionUrl);\n      })\n      .addCase(fetchRedirectUrl.pending, (state, action) => {\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.isLoading = true;\n      })\n      .addCase(fetchRedirectUrl.fulfilled, (state, action) => {\n        const url = action.payload;\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.redirectTo = url ? url : searchBox.defaultRedirectionUrl;\n        searchBox.isLoading = false;\n      })\n      .addCase(fetchRedirectUrl.rejected, (state, action) => {\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.isLoading = false;\n      })\n      .addCase(updateAnalyticsToSearchFromLink, (state, action) => {\n        const searchBox = state[action.payload.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.analytics.cause = 'searchFromLink';\n      })\n      .addCase(updateAnalyticsToOmniboxFromLink, (state, action) => {\n        const searchBox = state[action.payload.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.analytics.cause = 'omniboxFromLink';\n        searchBox.analytics.metadata = action.payload.metadata;\n      })\n);\n\nfunction buildStandaloneSearchBoxEntry(\n  defaultRedirectionUrl: string\n): StandaloneSearchBoxEntry {\n  return {\n    defaultRedirectionUrl,\n    redirectTo: '',\n    isLoading: false,\n    analytics: {\n      cause: '',\n      metadata: null,\n    },\n  };\n}\n", "import {BooleanValue, StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getSearchApiBaseUrl} from '../../api/platform-client.js';\nimport {ExecutionPlan} from '../../api/search/plan/plan-endpoint.js';\nimport {PlanRequest} from '../../api/search/plan/plan-request.js';\nimport {\n  AsyncThunkSearchOptions,\n  isErrorResponse,\n} from '../../api/search/search-api-client.js';\nimport {NavigatorContext} from '../../app/navigatorContextProvider.js';\nimport {\n  ConfigurationSection,\n  ContextSection,\n  PipelineSection,\n  QuerySection,\n  SearchHubSection,\n} from '../../state/state-sections.js';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../utils/validate-payload.js';\nimport {\n  CustomAction,\n  makeAnalyticsAction,\n} from '../analytics/analytics-utils.js';\nimport {fromAnalyticsStateToAnalyticsParams} from '../configuration/analytics-params.js';\nimport {fromAnalyticsStateToAnalyticsParams as legacyFromAnalyticsStateToAnalyticsParams} from '../configuration/legacy-analytics-params.js';\nimport {OmniboxSuggestionMetadata} from '../query-suggest/query-suggest-analytics-actions.js';\n\nexport interface RegisterStandaloneSearchBoxActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n\n  /**\n   * The default URL to which to redirect the user.\n   */\n  redirectionUrl: string;\n\n  /**\n   * Whether to overwrite the existing standalone search box with the same id.\n   */\n  overwrite?: boolean;\n}\n\nexport interface UpdateStandaloneSearchBoxPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n\n  /**\n   * The default URL to which to redirect the user.\n   */\n  redirectionUrl: string;\n}\n\nexport const registerStandaloneSearchBox = createAction(\n  'standaloneSearchBox/register',\n  (payload: RegisterStandaloneSearchBoxActionCreatorPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      redirectionUrl: requiredNonEmptyString,\n      overwrite: new BooleanValue({required: false}),\n    })\n);\n\nexport const updateStandaloneSearchBoxRedirectionUrl = createAction(\n  'standaloneSearchBox/updateRedirectionUrl',\n  (payload: UpdateStandaloneSearchBoxPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      redirectionUrl: requiredNonEmptyString,\n    })\n);\n\nexport interface ResetStandaloneSearchBoxActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\nexport const resetStandaloneSearchBox = createAction(\n  'standaloneSearchBox/reset',\n  (payload: ResetStandaloneSearchBoxActionCreatorPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n    })\n);\n\nexport interface UpdateAnalyticsToSearchFromLinkActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\nexport const updateAnalyticsToSearchFromLink = createAction(\n  'standaloneSearchBox/updateAnalyticsToSearchFromLink',\n  (payload: UpdateAnalyticsToSearchFromLinkActionCreatorPayload) =>\n    validatePayload(payload, {id: requiredNonEmptyString})\n);\n\nexport interface UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n\n  /**\n   * The metadata of the suggestion selected from the standalone search box.\n   */\n  metadata: OmniboxSuggestionMetadata;\n}\n\nexport const updateAnalyticsToOmniboxFromLink =\n  createAction<UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload>(\n    'standaloneSearchBox/updateAnalyticsToOmniboxFromLink'\n  );\n\nexport type StateNeededForRedirect = ConfigurationSection &\n  QuerySection &\n  Partial<ContextSection & SearchHubSection & PipelineSection>;\n\nexport interface FetchRedirectUrlActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\nexport const fetchRedirectUrl = createAsyncThunk<\n  string,\n  FetchRedirectUrlActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededForRedirect>\n>(\n  'standaloneSearchBox/fetchRedirect',\n  async (\n    payload,\n    {\n      dispatch,\n      getState,\n      rejectWithValue,\n      extra: {apiClient, validatePayload, navigatorContext},\n    }\n  ) => {\n    validatePayload(payload, {id: new StringValue({emptyAllowed: false})});\n    const request = await buildPlanRequest(getState(), navigatorContext);\n    const response = await apiClient.plan(request);\n    if (isErrorResponse(response)) {\n      return rejectWithValue(response.error);\n    }\n\n    const {redirectionUrl} = new ExecutionPlan(response.success);\n\n    if (redirectionUrl) {\n      dispatch(logRedirect(redirectionUrl));\n    }\n\n    return redirectionUrl || '';\n  }\n);\n\nconst logRedirect = (url: string): CustomAction =>\n  makeAnalyticsAction('analytics/standaloneSearchBox/redirect', (client) =>\n    client.makeTriggerRedirect({redirectedTo: url})\n  );\n\nexport const buildPlanRequest = async (\n  state: StateNeededForRedirect,\n  navigatorContext: NavigatorContext\n): Promise<PlanRequest> => {\n  return {\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    url:\n      state.configuration.search.apiBaseUrl ??\n      getSearchApiBaseUrl(\n        state.configuration.organizationId,\n        state.configuration.environment\n      ),\n    locale: state.configuration.search.locale,\n    timezone: state.configuration.search.timezone,\n    q: state.query.q,\n    ...(state.context && {context: state.context.contextValues}),\n    ...(state.pipeline && {pipeline: state.pipeline}),\n    ...(state.searchHub && {searchHub: state.searchHub}),\n    ...(state.configuration.analytics.enabled &&\n    state.configuration.analytics.analyticsMode === 'legacy'\n      ? await legacyFromAnalyticsStateToAnalyticsParams(\n          state.configuration.analytics\n        )\n      : fromAnalyticsStateToAnalyticsParams(\n          state.configuration.analytics,\n          navigatorContext\n        )),\n    ...(state.configuration.search.authenticationProviders.length && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n  };\n};\n", "import {isRedirectTrigger} from '../../common/trigger.js';\nimport {PlanResponseSuccess} from './plan-response.js';\n\n/**\n * The plan of execution of a search request.\n */\nexport class ExecutionPlan {\n  constructor(private response: PlanResponseSuccess) {}\n\n  /**\n   * Gets the final value of the basic expression (`q`) after the search request has been processed in the query pipeline, but before it is sent to the index.\n   */\n  public get basicExpression() {\n    return this.response.parsedInput.basicExpression;\n  }\n\n  /**\n   * Gets the final value of the large expression (`lq`) after the search request has been processed in the query pipeline, but before it is sent to the index.\n   */\n  public get largeExpression() {\n    return this.response.parsedInput.largeExpression;\n  }\n\n  /**\n   * Gets the URL to redirect the browser to, if the search request satisfies the condition of a `redirect` trigger rule in the query pipeline.\n   *\n   * Returns `null` otherwise.\n   */\n  public get redirectionUrl() {\n    const redirects =\n      this.response.preprocessingOutput.triggers.filter(isRedirectTrigger);\n    return redirects.length ? redirects[0].content : null;\n  }\n}\n", "/**\n * A trigger is an action that the interface will perform (show a message, execute a function, redirect users) depending on the query that was performed.<br/>\n * A trigger that can be configured in the Coveo Query Pipeline.\n */\nexport type Trigger =\n  | TriggerNotify\n  | TriggerRedirect\n  | TriggerQuery\n  | TriggerExecute;\n\n/**\n * Notify (show a message) to a user\n */\nexport interface TriggerNotify {\n  type: 'notify';\n  content: string;\n}\n\nexport function isNotifyTrigger(trigger: Trigger): trigger is TriggerNotify {\n  return trigger.type === 'notify';\n}\n\n/**\n * Redirect the user to another url\n */\nexport interface TriggerRedirect {\n  type: 'redirect';\n  content: string;\n}\n\nexport function isRedirectTrigger(\n  trigger: Trigger\n): trigger is TriggerRedirect {\n  return trigger.type === 'redirect';\n}\n\n/**\n * Perform a new query with a different query expression\n */\nexport interface TriggerQuery {\n  type: 'query';\n  content: string;\n}\n\nexport function isQueryTrigger(trigger: Trigger): trigger is TriggerQuery {\n  return trigger.type === 'query';\n}\n\n/**\n * Execute a javascript function present in the page.\n */\nexport interface TriggerExecute {\n  type: 'execute';\n  content: {name: string; params: ExecuteTriggerParams};\n}\n\n/**\n * The type of the parameters for a Trigger Execute object.\n */\nexport type ExecuteTriggerParams = (string | number | boolean)[];\n\nexport function isExecuteTrigger(trigger: Trigger): trigger is TriggerExecute {\n  return trigger.type === 'execute';\n}\n", "import {OmniboxSuggestionMetadata} from '../query-suggest/query-suggest-analytics-actions.js';\n\nexport type StandaloneSearchBoxSetState = Record<\n  string,\n  StandaloneSearchBoxEntry | undefined\n>;\n\nexport type StandaloneSearchBoxEntry = {\n  defaultRedirectionUrl: string;\n  analytics: StandaloneSearchBoxAnalytics;\n  redirectTo: string;\n  isLoading: boolean;\n};\n\nexport type StandaloneSearchBoxAnalytics =\n  | InitialData\n  | SearchFromLinkData\n  | OmniboxFromLinkData;\n\ninterface InitialData {\n  cause: '';\n  metadata: null;\n}\n\ninterface SearchFromLinkData {\n  cause: 'searchFromLink';\n  metadata: null;\n}\n\ninterface OmniboxFromLinkData {\n  cause: 'omniboxFromLink';\n  metadata: OmniboxSuggestionMetadata;\n}\n\nexport function getStandaloneSearchBoxSetInitialState(): StandaloneSearchBoxSetState {\n  return {};\n}\n", "import {BooleanValue, StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  AsyncThunkCommerceOptions,\n  isErrorResponse,\n} from '../../../api/commerce/commerce-api-client.js';\nimport {CommerceSearchRequest} from '../../../api/commerce/search/request.js';\nimport {isRedirectTrigger} from '../../../api/common/trigger.js';\nimport {NavigatorContext} from '../../../app/navigatorContextProvider.js';\nimport {\n  CartSection,\n  CommerceContextSection,\n  CommerceQuerySection,\n  CommerceConfigurationSection,\n} from '../../../state/state-sections.js';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload.js';\nimport {buildBaseCommerceAPIRequest} from '../common/actions.js';\n\nexport type StateNeededForRedirect = CommerceConfigurationSection &\n  CommerceContextSection &\n  CommerceQuerySection &\n  CartSection;\n\nexport interface FetchRedirectUrlPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\n// eslint-disable-next-line @cspell/spellchecker\n// TODO: CAPI-867 - Use Commerce API's equivalent of the /plan endpoint when it becomes available.\nexport const fetchRedirectUrl = createAsyncThunk<\n  string,\n  FetchRedirectUrlPayload,\n  AsyncThunkCommerceOptions<StateNeededForRedirect>\n>(\n  'commerce/standaloneSearchBox/fetchRedirect',\n  async (\n    payload,\n    {getState, rejectWithValue, extra: {apiClient, navigatorContext}}\n  ) => {\n    validatePayload(payload, {id: new StringValue({emptyAllowed: false})});\n    const state = getState();\n    const request = buildPlanRequest(state, navigatorContext);\n    const response = await apiClient.plan(request);\n    if (isErrorResponse(response)) {\n      return rejectWithValue(response.error);\n    }\n\n    const redirectTriggers =\n      response.success.triggers.filter(isRedirectTrigger);\n\n    return redirectTriggers.length ? redirectTriggers[0].content : '';\n  }\n);\nexport interface RegisterStandaloneSearchBoxPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n\n  /**\n   * The default URL to which to redirect the user.\n   */\n  redirectionUrl: string;\n\n  /**\n   * Whether to overwrite the existing standalone search box with the same id.\n   */\n  overwrite?: boolean;\n}\n\nexport interface UpdateStandaloneSearchBoxPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n\n  /**\n   * The default URL to which to redirect the user.\n   */\n  redirectionUrl: string;\n}\n\nexport const registerStandaloneSearchBox = createAction(\n  'commerce/standaloneSearchBox/register',\n  (payload: RegisterStandaloneSearchBoxPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      redirectionUrl: requiredNonEmptyString,\n      overwrite: new BooleanValue({required: false}),\n    })\n);\n\nexport const updateStandaloneSearchBoxRedirectionUrl = createAction(\n  'commerce/standaloneSearchBox/updateRedirectionUrl',\n  (payload: UpdateStandaloneSearchBoxPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      redirectionUrl: requiredNonEmptyString,\n    })\n);\n\nexport interface ResetStandaloneSearchBoxPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\nexport const resetStandaloneSearchBox = createAction(\n  'commerce/standaloneSearchBox/reset',\n  (payload: ResetStandaloneSearchBoxPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n    })\n);\n\nexport const buildPlanRequest = (\n  state: StateNeededForRedirect,\n  navigatorContext: NavigatorContext\n): CommerceSearchRequest => {\n  return {\n    query: state.commerceQuery.query,\n    ...buildBaseCommerceAPIRequest(state, navigatorContext),\n  };\n};\n", "import {CurrencyCodeISO4217} from '@coveo/relay-event-types';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {\n  setContext,\n  setLocation,\n  setView,\n} from '../../../features/commerce/context/context-actions.js';\nimport {contextReducer as commerceContext} from '../../../features/commerce/context/context-slice.js';\nimport {contextSchema} from '../../../features/commerce/context/context-validation.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {validateOptions} from '../../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\n\nexport interface ContextOptions {\n  language: string;\n  country: string;\n  currency: CurrencyCodeISO4217;\n  view: View;\n  location?: UserLocation;\n}\n\nexport interface View {\n  url: string;\n}\n\nexport interface UserLocation {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface ContextProps {\n  /**\n   * The initial options that should be applied to this `Context` controller.\n   */\n  options?: ContextOptions;\n}\n\n/**\n * The `Context` controller exposes methods for managing the global context in a commerce interface.\n *\n * @group Buildable controllers\n * @category Context\n */\nexport interface Context extends Controller {\n  /**\n   * Sets the language.\n   * @param language - The new language.\n   */\n  setLanguage(language: string): void;\n\n  /**\n   * Sets the country.\n   * @param country - The new country.\n   */\n  setCountry(country: string): void;\n\n  /**\n   * Sets the currency.\n   * @param currency - The new currency.\n   */\n  setCurrency(currency: CurrencyCodeISO4217): void;\n\n  /**\n   * Sets the view.\n   * @param view - The new view.\n   */\n  setView(view: View): void;\n\n  /**\n   * Sets the location.\n   * @param location - The new location.\n   */\n  setLocation(location: UserLocation): void;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `Context` controller.\n   */\n  state: ContextState;\n}\n\n/**\n * The state of the `Context` controller.\n *\n * @group Buildable controllers\n * @category Context\n */\nexport interface ContextState {\n  language: string;\n  country: string;\n  currency: CurrencyCodeISO4217;\n  view: View;\n  location?: UserLocation;\n}\n\n/**\n * Creates a `Context` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `Context` properties.\n * @returns A `Context` controller instance.\n *\n * @group Buildable controllers\n * @category Context\n */\nexport function buildContext(\n  engine: CommerceEngine,\n  props: ContextProps = {}\n): Context {\n  if (!loadBaseContextReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine[stateKey];\n\n  if (props.options) {\n    validateOptions(engine, contextSchema, props.options, 'buildContext');\n    dispatch(setContext(props.options));\n  }\n\n  return {\n    ...controller,\n\n    get state() {\n      return getState().commerceContext;\n    },\n\n    setLanguage: (language: string) =>\n      dispatch(\n        setContext({\n          ...getState().commerceContext,\n          language,\n        })\n      ),\n\n    setCountry: (country: string) =>\n      dispatch(\n        setContext({\n          ...getState().commerceContext,\n          country,\n        })\n      ),\n\n    setCurrency: (currency: CurrencyCodeISO4217) =>\n      dispatch(\n        setContext({\n          ...getState().commerceContext,\n          currency,\n        })\n      ),\n\n    setView: (view: View) => dispatch(setView(view)),\n\n    setLocation: (location: UserLocation) => dispatch(setLocation(location)),\n  };\n}\n\nfunction loadBaseContextReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine {\n  engine.addReducers({commerceContext});\n  return true;\n}\n", "import {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {ChildProduct, Product} from '../../../api/commerce/common/product.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {configuration} from '../../../app/common-reducers.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {contextReducer as commerceContext} from '../../../features/commerce/context/context-slice.js';\nimport {\n  pagePrincipalSelector,\n  perPagePrincipalSelector,\n  totalEntriesPrincipalSelector,\n} from '../../../features/commerce/pagination/pagination-selectors.js';\nimport {searchSerializer} from '../../../features/commerce/parameters/parameters-serializer.js';\nimport {queryReducer as commerceQuery} from '../../../features/commerce/query/query-slice.js';\nimport {restoreSearchParameters} from '../../../features/commerce/search-parameters/search-parameters-actions.js';\nimport {searchParametersDefinition} from '../../../features/commerce/search-parameters/search-parameters-schema.js';\nimport {\n  executeSearch,\n  fetchMoreProducts,\n  promoteChildToParent,\n} from '../../../features/commerce/search/search-actions.js';\nimport {\n  activeParametersSelector,\n  enrichedParametersSelector,\n  enrichedSummarySelector,\n  errorSelector,\n  isLoadingSelector,\n  numberOfProductsSelector,\n  requestIdSelector,\n  responseIdSelector,\n} from '../../../features/commerce/search/search-selectors.js';\nimport {commerceSearchReducer as commerceSearch} from '../../../features/commerce/search/search-slice.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport {\n  buildSearchSubControllers,\n  SearchSubControllers,\n} from '../core/sub-controller/headless-sub-controller.js';\nimport {\n  facetResponseSelector,\n  isFacetLoadingResponseSelector,\n} from './facets/headless-search-facet-options.js';\n\n/**\n * The `Search` controller lets you create a commerce search page.\n *\n * @group Buildable controllers\n * @category Search\n */\nexport interface Search extends Controller, SearchSubControllers {\n  /**\n   * Executes the first search.\n   */\n  executeFirstSearch(): void;\n\n  /**\n   * Finds the specified parent product and the specified child product of that parent, and makes that child the new\n   * parent. The `children` and `totalNumberOfChildren` properties of the original parent are preserved in the new\n   * parent.\n   *\n   * This method is useful when leveraging the product grouping feature to allow users to select nested products.\n   *\n   * E.g., if a product has children (such as color variations), you can call this method when the user selects a child\n   * to make that child the new parent product, and re-render the product as such in the storefront.\n   *\n   * **Note:** In the controller state, a product that has children will always include itself as its own child so that\n   * it can be rendered as a nested product, and restored as the parent product through this method as needed.\n   *\n   * @param child The child product that will become the new parent.\n   */\n  promoteChildToParent(child: ChildProduct): void;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `Search` controller.\n   */\n  state: SearchState;\n}\n\n/**\n * @group Buildable controllers\n * @category Search\n */\nexport interface SearchState {\n  products: Product[];\n  error: CommerceAPIErrorStatusResponse | null;\n  isLoading: boolean;\n  responseId: string;\n}\n\n/**\n * Builds a `Search` controller for the given commerce engine.\n * @param engine - The commerce engine.\n * @returns A `Search` controller.\n *\n * @group Buildable controllers\n * @category Search\n */\nexport function buildSearch(engine: CommerceEngine): Search {\n  if (!loadBaseSearchReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine[stateKey];\n  const subControllers = buildSearchSubControllers(engine, {\n    responseIdSelector,\n    fetchProductsActionCreator: executeSearch,\n    fetchMoreProductsActionCreator: fetchMoreProducts,\n    facetResponseSelector,\n    isFacetLoadingResponseSelector,\n    requestIdSelector,\n    serializer: searchSerializer,\n    parametersDefinition: searchParametersDefinition,\n    restoreActionCreator: restoreSearchParameters,\n    activeParametersSelector,\n    enrichParameters: enrichedParametersSelector,\n    isLoadingSelector,\n    errorSelector,\n    pageSelector: pagePrincipalSelector,\n    perPageSelector: perPagePrincipalSelector,\n    totalEntriesSelector: totalEntriesPrincipalSelector,\n    numberOfProductsSelector,\n    enrichSummary: enrichedSummarySelector,\n  });\n\n  return {\n    ...controller,\n    ...subControllers,\n\n    get state() {\n      return getState().commerceSearch;\n    },\n\n    promoteChildToParent(child: ChildProduct) {\n      dispatch(promoteChildToParent({child}));\n    },\n\n    executeFirstSearch() {\n      const firstSearchExecuted = responseIdSelector(getState()) !== '';\n\n      if (firstSearchExecuted) {\n        return;\n      }\n\n      dispatch(executeSearch());\n    },\n  };\n}\n\nfunction loadBaseSearchReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine {\n  engine.addReducers({\n    commerceContext,\n    configuration,\n    commerceSearch,\n    commerceQuery,\n  });\n  return true;\n}\n", "import {isArray} from '../../../utils/utils.js';\nimport {\n  castUnknownObject,\n  delimiter,\n  isFacetObject,\n  isObject,\n  isRangeFacetKey,\n  isRangeFacetObject,\n  preprocessObjectPairs,\n  SearchParameterKey,\n  serialize as coreSerialize,\n  serializeFacets,\n  serializeRangeFacets,\n  serializeSpecialCharacters,\n  splitOnFirstEqual,\n} from '../../search-parameters/search-parameter-serializer.js';\nimport {ProductListingParameters} from '../product-listing-parameters/product-listing-parameters-actions.js';\nimport {CommerceSearchParameters} from '../search-parameters/search-parameters-actions.js';\nimport {\n  buildFieldsSortCriterion,\n  buildRelevanceSortCriterion,\n  SortBy,\n  SortCriterion,\n  SortDirection,\n} from '../sort/sort.js';\nimport {Parameters} from './parameters-actions.js';\n\nconst sortFieldAndDirectionSeparator = ' ';\nconst sortFieldsJoiner = ',';\nconst commerceFacetsRegex = /^(f|fExcluded|cf|nf|df|sf|af|mnf|lf)-(.+)$/;\n\nexport interface Serializer<T extends Parameters> {\n  serialize: (parameters: T) => string;\n  deserialize: (fragment: string) => T;\n}\n\nexport const searchSerializer: Serializer<CommerceSearchParameters> = {\n  serialize,\n  deserialize,\n};\n\n// TODO KIT-3462: add/export commerce SSR parameter serializer\n\nexport const productListingSerializer = {\n  serialize,\n  deserialize,\n} as Serializer<ProductListingParameters>;\n\ntype ParametersKey = keyof CommerceSearchParameters;\ntype FacetParameters = keyof Pick<\n  Parameters,\n  'f' | 'lf' | 'cf' | 'nf' | 'df' | 'mnf'\n>;\n\ntype FacetKey = keyof typeof supportedFacetParameters;\nconst supportedFacetParameters: Record<FacetParameters, boolean> = {\n  f: true,\n  lf: true,\n  cf: true,\n  nf: true,\n  df: true,\n  mnf: true,\n};\n\nfunction serialize(parameters: CommerceSearchParameters): string {\n  return coreSerialize(serializePair)(parameters);\n}\n\nfunction serializePair(pair: [string, unknown]) {\n  const [key, val] = pair;\n\n  if (!isValidKey(key)) {\n    return '';\n  }\n\n  if (key === 'sortCriteria') {\n    return isSortCriteriaObject(val) ? serializeSortCriteria(key, val) : '';\n  }\n\n  if (keyHasObjectValue(key) && !isRangeFacetKey(key)) {\n    return isFacetObject(val) ? serializeFacets(key, val) : '';\n  }\n\n  if (key === 'nf' || key === 'df' || key === 'mnf') {\n    return isRangeFacetObject(val) ? serializeRangeFacets(key, val) : '';\n  }\n\n  return serializeSpecialCharacters(key, val);\n}\n\nfunction serializeSortCriteria(key: string, val: SortCriterion | undefined) {\n  return serializeSpecialCharacters(key, buildCriterionExpression(val));\n}\n\nfunction buildCriterionExpression(criterion: SortCriterion | undefined) {\n  if (!criterion) {\n    return '';\n  }\n\n  if (criterion.by === SortBy.Relevance) {\n    return 'relevance';\n  }\n\n  return criterion.fields\n    .map(\n      (field) =>\n        `${field.name}${sortFieldAndDirectionSeparator}${field.direction}`\n    )\n    .join(sortFieldsJoiner);\n}\n\nfunction isValidKey(key: string): key is ParametersKey {\n  return isValidBasicKey(key) || keyHasObjectValue(key);\n}\n\nfunction isSortCriteriaObject(obj: unknown): obj is SortCriterion | undefined {\n  if (!isObject(obj) || !('by' in obj)) {\n    return false;\n  }\n\n  if (obj.by === 'relevance') {\n    return true;\n  }\n\n  if (obj.by === 'fields' && 'fields' in obj && isArray(obj.fields)) {\n    return obj.fields.every((field) => {\n      return (\n        isObject(field) &&\n        'name' in field &&\n        typeof field.name === 'string' &&\n        (('direction' in field &&\n          (field.direction === SortDirection.Ascending ||\n            field.direction === SortDirection.Descending)) ||\n          !('direction' in field))\n      );\n    });\n  }\n\n  return false;\n}\n\nexport function isValidBasicKey(\n  key: string\n): key is Exclude<SearchParameterKey, FacetKey> {\n  const supportedBasicParameters: Record<\n    Exclude<keyof CommerceSearchParameters, FacetParameters>,\n    boolean\n  > = {\n    q: true,\n    sortCriteria: true,\n    page: true,\n    perPage: true,\n  };\n  return key in supportedBasicParameters;\n}\n\nfunction deserialize<T extends Parameters>(fragment: string): T {\n  const parts = fragment.split(delimiter);\n  const keyValuePairs = parts\n    .map(splitOnFirstEqual)\n    .map((parts) => preprocessObjectPairs(parts, commerceFacetsRegex))\n    .filter(isValidPair)\n    .map(cast);\n\n  return keyValuePairs.reduce((acc: Partial<T>, pair) => {\n    const [key, val] = pair;\n\n    if (keyHasObjectValue(key)) {\n      const mergedValues = {...acc[key], ...(val as object)};\n      return {...acc, [key]: mergedValues};\n    }\n\n    if (key === 'sortCriteria') {\n      const sortCriteria = deserializeSortCriteria(val as string);\n      return {...acc, [key]: sortCriteria};\n    }\n\n    return {...acc, [key]: val};\n  }, {}) as T;\n}\n\nexport function keyHasObjectValue(key: string): key is FacetKey {\n  return key in supportedFacetParameters;\n}\n\nfunction isValidPair<K extends keyof Parameters>(\n  pair: string[]\n): pair is [K, string] {\n  const validKey = isValidKey(pair[0]);\n  const lengthOfTwo = pair.length === 2;\n  return validKey && lengthOfTwo;\n}\n\nfunction cast<K extends keyof Parameters>(pair: [K, string]): [K, unknown] {\n  const [key, value] = pair;\n\n  if (key === 'page' || key === 'perPage') {\n    return [key, parseInt(value)];\n  }\n\n  if (keyHasObjectValue(key)) {\n    return [key, castUnknownObject(value)];\n  }\n\n  return [key, decodeURIComponent(value)];\n}\n\nfunction deserializeSortCriteria(value: string): SortCriterion | undefined {\n  if (value === 'relevance') {\n    return buildRelevanceSortCriterion();\n  }\n\n  const criteria = value.split(sortFieldsJoiner);\n  if (!criteria.length) {\n    return undefined;\n  }\n\n  return criteria.reduce((acc, joinedFieldAndDirection) => {\n    const fieldAndDirection = joinedFieldAndDirection\n      .trim()\n      .split(sortFieldAndDirectionSeparator);\n\n    if (fieldAndDirection.length !== 2) {\n      return acc;\n    }\n\n    const field = fieldAndDirection[0].toLowerCase();\n    const direction = fieldAndDirection[1].toLowerCase();\n\n    return {\n      ...acc,\n      fields: [\n        ...acc.fields,\n        {name: field, direction: direction as SortDirection},\n      ],\n    };\n  }, buildFieldsSortCriterion([]));\n}\n", "import {isString} from '@coveo/bueno';\nimport {\n  API_DATE_FORMAT,\n  isSearchApiDate,\n  validateAbsoluteDate,\n} from '../../api/search/date/date-format.js';\nimport {\n  isRelativeDateFormat,\n  validateRelativeDate,\n} from '../../api/search/date/relative-date.js';\nimport {buildDateRange} from '../../controllers/facets/range-facet/date-facet/headless-date-facet.js';\nimport {buildNumericRange} from '../../controllers/facets/range-facet/numeric-facet/headless-numeric-facet.js';\nimport {RangeValueRequest} from '../facets/range-facets/generic/interfaces/range-facet.js';\nimport {SearchParameters} from './search-parameter-actions.js';\n\nexport const rangeDelimiterExclusive = '..';\nexport const rangeDelimiterInclusive = '...';\nexport const facetSearchParamRegex = /^(f|fExcluded|cf|nf|df|sf|af|mnf)-(.+)$/;\nexport type SearchParameterKey = keyof SearchParameters;\ntype UnknownObject = {[field: string]: unknown[]};\n\ntype FacetSearchParameters = keyof Pick<\n  SearchParameters,\n  'f' | 'fExcluded' | 'cf' | 'sf' | 'af' | 'nf' | 'df' | 'mnf'\n>;\n\ntype FacetKey = keyof typeof supportedFacetParameters;\n\nconst supportedFacetParameters: Record<FacetSearchParameters, boolean> = {\n  f: true,\n  fExcluded: true,\n  cf: true,\n  sf: true,\n  af: true,\n  nf: true,\n  df: true,\n  mnf: true,\n};\n\nexport const delimiter = '&';\nexport const equal = '=';\n\nexport function buildSearchParameterSerializer() {\n  return {serialize: serialize(serializePair), deserialize: deserialize};\n}\n\nexport function keyHasObjectValue(key: string): key is FacetKey {\n  return key in supportedFacetParameters;\n}\n\nexport function isValidBasicKey(\n  key: string\n): key is Exclude<SearchParameterKey, FacetKey> {\n  const supportedBasicParameters: Record<\n    Exclude<keyof SearchParameters, FacetSearchParameters>,\n    boolean\n  > = {\n    q: true,\n    aq: true,\n    cq: true,\n    enableQuerySyntax: true,\n    firstResult: true,\n    numberOfResults: true,\n    sortCriteria: true,\n    debug: true,\n    tab: true,\n  };\n  return key in supportedBasicParameters;\n}\n\nexport function isRangeFacetKey(\n  key: string\n): key is Extract<FacetKey, 'nf' | 'df' | 'mnf'> {\n  const supportedRangeFacetParameters: Pick<\n    typeof supportedFacetParameters,\n    'df' | 'nf' | 'mnf'\n  > = {\n    nf: true,\n    df: true,\n    mnf: true,\n  };\n  const isRangeFacet = key in supportedRangeFacetParameters;\n  return keyHasObjectValue(key) && isRangeFacet;\n}\n\nexport function isValidKey(key: string): key is SearchParameterKey {\n  return isValidBasicKey(key) || keyHasObjectValue(key);\n}\n\nexport const serialize =\n  <T extends {}>(pairSerializer: (pair: [string, unknown]) => string) =>\n  (obj: T) => {\n    return Object.entries(obj)\n      .map(pairSerializer)\n      .filter((str) => str)\n      .join(delimiter);\n  };\n\nexport function serializePair(pair: [string, unknown]) {\n  const [key, val] = pair;\n\n  if (!isValidKey(key)) {\n    return '';\n  }\n\n  if (keyHasObjectValue(key) && !isRangeFacetKey(key)) {\n    return isFacetObject(val) ? serializeFacets(key, val) : '';\n  }\n\n  if (key === 'nf' || key === 'df') {\n    return isRangeFacetObject(val) ? serializeRangeFacets(key, val) : '';\n  }\n\n  return serializeSpecialCharacters(key, val);\n}\n\nexport function serializeSpecialCharacters(key: string, val: unknown) {\n  return `${key}${equal}${encodeURIComponent(\n    val as string | number | boolean\n  )}`;\n}\n\nexport function isFacetObject(obj: unknown): obj is Record<string, string[]> {\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  const isValidValue = (v: unknown) => typeof v === 'string';\n  return allEntriesAreValid(obj, isValidValue);\n}\n\nexport function isRangeFacetObject(\n  obj: unknown\n): obj is Record<string, RangeValueRequest[]> {\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  const isRangeValue = (v: unknown) =>\n    isObject(v) && 'start' in v && 'end' in v;\n  return allEntriesAreValid(obj, isRangeValue);\n}\n\nexport function isObject(obj: unknown): obj is object {\n  return obj && typeof obj === 'object' ? true : false;\n}\n\nfunction allEntriesAreValid(\n  obj: object,\n  isValidValue: (v: unknown) => boolean\n) {\n  const invalidEntries = Object.entries(obj).filter((entry) => {\n    const values = entry[1];\n    return !Array.isArray(values) || !values.every(isValidValue);\n  });\n\n  return invalidEntries.length === 0;\n}\n\nexport function serializeFacets(key: string, facets: Record<string, string[]>) {\n  return Object.entries(facets)\n    .map(\n      ([facetId, values]) =>\n        `${key}-${facetId}${equal}${values\n          .map((value) => encodeURIComponent(value))\n          .join(',')}`\n    )\n    .join(delimiter);\n}\n\nexport function serializeRangeFacets(\n  key: string,\n  facets: Record<string, RangeValueRequest[]>\n) {\n  return Object.entries(facets)\n    .map(([facetId, ranges]) => {\n      const value = ranges\n        .map(\n          ({start, end, endInclusive}) =>\n            `${start}${\n              endInclusive ? rangeDelimiterInclusive : rangeDelimiterExclusive\n            }${end}`\n        )\n        .join(',');\n      return `${key}-${facetId}${equal}${value}`;\n    })\n    .join(delimiter);\n}\n\nfunction deserialize(fragment: string): SearchParameters {\n  const parts = fragment.split(delimiter);\n  const keyValuePairs = parts\n    .map((part) => splitOnFirstEqual(part))\n    .map((parts) => preprocessObjectPairs(parts))\n    .filter(isValidPair)\n    .map((pair) => cast(pair));\n\n  return keyValuePairs.reduce((acc: SearchParameters, pair) => {\n    const [key, val] = pair;\n\n    if (keyHasObjectValue(key)) {\n      const mergedValues = {...acc[key], ...(val as object)};\n      return {...acc, [key]: mergedValues};\n    }\n\n    return {...acc, [key]: val};\n  }, {});\n}\n\nexport function splitOnFirstEqual(str: string) {\n  const [first, ...rest] = str.split(equal);\n  const second = rest.join(equal);\n\n  return [first, second];\n}\n\nexport function preprocessObjectPairs(\n  pair: string[],\n  regex = facetSearchParamRegex\n) {\n  const [key, val] = pair;\n  const result = regex.exec(key);\n\n  if (!result) {\n    return pair;\n  }\n\n  const paramKey = result[1];\n  const id = result[2];\n  const values = val.split(',');\n  const processedValues = processObjectValues(paramKey, values);\n  const obj = {[id]: processedValues};\n\n  return [paramKey, JSON.stringify(obj)];\n}\n\nfunction processObjectValues(key: string, values: string[]) {\n  if (key === 'nf' || key === 'mnf') {\n    return buildNumericRanges(values);\n  }\n\n  if (key === 'df') {\n    return buildDateRanges(values);\n  }\n\n  return values;\n}\n\nexport function buildNumericRanges(ranges: string[]) {\n  return ranges\n    .map((str) => {\n      const {startAsString, endAsString, isEndInclusive} =\n        splitRangeValueAsStringByDelimiter(str);\n\n      return {\n        start: parseFloat(startAsString),\n        end: parseFloat(endAsString),\n        endInclusive: isEndInclusive,\n      };\n    })\n    .filter(({start, end}) => Number.isFinite(start) && Number.isFinite(end))\n    .map(({start, end, endInclusive}) =>\n      buildNumericRange({start, end, state: 'selected', endInclusive})\n    );\n}\n\nfunction isValidDateRangeValue(date: string) {\n  try {\n    if (isSearchApiDate(date)) {\n      validateAbsoluteDate(date, API_DATE_FORMAT);\n      return true;\n    }\n    if (isRelativeDateFormat(date)) {\n      validateRelativeDate(date);\n      return true;\n    }\n\n    return false;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport function buildDateRanges(ranges: string[]) {\n  return ranges\n    .map((str) => {\n      const {isEndInclusive, startAsString, endAsString} =\n        splitRangeValueAsStringByDelimiter(str);\n\n      return {\n        start: startAsString,\n        end: endAsString,\n        endInclusive: isEndInclusive,\n      };\n    })\n    .filter(\n      ({start, end}) =>\n        isValidDateRangeValue(start) && isValidDateRangeValue(end)\n    )\n    .map(({start, end, endInclusive}) =>\n      buildDateRange({start, end, state: 'selected', endInclusive})\n    );\n}\n\nfunction isValidPair<K extends SearchParameterKey>(\n  pair: string[]\n): pair is [K, string] {\n  const validKey = isValidKey(pair[0]);\n  const lengthOfTwo = pair.length === 2;\n  return validKey && lengthOfTwo;\n}\n\nexport function cast<K extends SearchParameterKey>(\n  pair: [K, string],\n  decode = true\n): [K, unknown] {\n  const [key, value] = pair;\n\n  if (key === 'enableQuerySyntax') {\n    return [key, value === 'true'];\n  }\n\n  if (key === 'debug') {\n    return [key, value === 'true'];\n  }\n\n  if (key === 'firstResult') {\n    return [key, parseInt(value)];\n  }\n\n  if (key === 'numberOfResults') {\n    return [key, parseInt(value)];\n  }\n\n  if (keyHasObjectValue(key)) {\n    return [key, castUnknownObject(value)];\n  }\n\n  return [key, decode ? decodeURIComponent(value) : value];\n}\n\nexport function castUnknownObject(value: string) {\n  const jsonParsed: UnknownObject = JSON.parse(value);\n  const ret: UnknownObject = {};\n  Object.entries(jsonParsed).forEach((entry) => {\n    const [id, values] = entry;\n    ret[id] = values.map((v) => (isString(v) ? decodeURIComponent(v) : v));\n  });\n\n  return ret;\n}\n\nfunction splitRangeValueAsStringByDelimiter(str: string) {\n  const isEndInclusive = str.indexOf(rangeDelimiterInclusive) !== -1;\n  const [startAsString, endAsString] = str.split(\n    isEndInclusive ? rangeDelimiterInclusive : rangeDelimiterExclusive\n  );\n  return {\n    isEndInclusive,\n    startAsString,\n    endAsString,\n  };\n}\n", "import {SearchEngine} from '../../../../app/search-engine/search-engine.js';\nimport {\n  facetClearAll,\n  facetUpdateSort,\n  logFacetClearAll,\n  logFacetUpdateSort,\n} from '../../../../features/facets/facet-set/facet-set-analytics-actions.js';\nimport {DateRangeRequest} from '../../../../features/facets/range-facets/date-facet-set/interfaces/request.js';\nimport {DateFacetValue} from '../../../../features/facets/range-facets/date-facet-set/interfaces/response.js';\nimport {RangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/interfaces/request.js';\nimport {\n  getLegacyAnalyticsActionForToggleRangeFacetExclude,\n  getLegacyAnalyticsActionForToggleRangeFacetSelect,\n  getAnalyticsActionForToggleFacetSelect,\n} from '../../../../features/facets/range-facets/generic/range-facet-utils.js';\nimport {executeSearch} from '../../../../features/search/search-actions.js';\nimport {\n  buildCoreDateFacet,\n  buildDateRange,\n  DateFacet,\n  DateFacetProps,\n  DateFacetState,\n  DateRangeInput,\n  DateRangeOptions,\n} from '../../../core/facets/range-facet/date-facet/headless-core-date-facet.js';\nimport {DateFacetOptions} from '../../../core/facets/range-facet/date-facet/headless-date-facet-options.js';\n\nexport type {\n  DateFacetOptions,\n  DateRangeInput,\n  DateRangeOptions,\n  DateRangeRequest,\n  DateFacetProps,\n  DateFacet,\n  DateFacetState,\n};\nexport {buildDateRange};\n\n/**\n * Creates a `DateFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `DateFacet` controller properties.\n * @returns A `DateFacet` controller instance.\n *\n * @group Controllers\n * @category DateFacet\n */\nexport function buildDateFacet(\n  engine: SearchEngine,\n  props: DateFacetProps\n): DateFacet {\n  const coreController = buildCoreDateFacet(engine, props);\n  const dispatch = engine.dispatch;\n  const getFacetId = () => coreController.state.facetId;\n\n  return {\n    ...coreController,\n\n    deselectAll() {\n      coreController.deselectAll();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: facetClearAll(),\n        })\n      );\n    },\n\n    sortBy(criterion: RangeFacetSortCriterion) {\n      coreController.sortBy(criterion);\n      dispatch(\n        executeSearch({\n          legacy: logFacetUpdateSort({facetId: getFacetId(), criterion}),\n          next: facetUpdateSort(),\n        })\n      );\n    },\n\n    toggleSelect: (selection: DateFacetValue) => {\n      coreController.toggleSelect(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleRangeFacetSelect(\n            getFacetId(),\n            selection\n          ),\n          next: getAnalyticsActionForToggleFacetSelect(selection),\n        })\n      );\n    },\n\n    toggleExclude: (selection: DateFacetValue) => {\n      coreController.toggleExclude(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleRangeFacetExclude(\n            getFacetId(),\n            selection\n          ),\n        })\n      );\n    },\n\n    get state() {\n      return coreController.state;\n    },\n  };\n}\n", "import {Value} from '@coveo/bueno';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n} from '../../../utils/validate-payload.js';\nimport {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../../analytics/search-action-cause.js';\nimport {SearchAction} from '../../search/search-actions.js';\nimport {facetIdDefinition} from '../generic/facet-actions-validation.js';\nimport {RangeFacetSortCriterion} from '../range-facets/generic/interfaces/request.js';\nimport {\n  buildFacetBaseMetadata,\n  getStateNeededForFacetMetadata,\n  buildFacetSelectionChangeMetadata,\n} from './facet-set-analytics-actions-utils.js';\nimport {FacetSortCriterion} from './interfaces/request.js';\n\nexport const logFacetShowMore = (facetId: string): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/showMore', (client, state) => {\n    validatePayload(facetId, facetIdDefinition);\n    const metadata = buildFacetBaseMetadata(\n      facetId,\n      getStateNeededForFacetMetadata(state)\n    );\n    return client.makeFacetShowMore(metadata);\n  });\n\nexport const logFacetShowLess = (facetId: string): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/showLess', (client, state) => {\n    validatePayload(facetId, facetIdDefinition);\n    const metadata = buildFacetBaseMetadata(\n      facetId,\n      getStateNeededForFacetMetadata(state)\n    );\n\n    return client.makeFacetShowLess(metadata);\n  });\n\nexport interface LogFacetUpdateSortActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The updated sort criterion.\n   */\n  criterion: FacetSortCriterion | RangeFacetSortCriterion;\n}\n\n//TODO: KIT-2859\nexport const logFacetUpdateSort = (\n  payload: LogFacetUpdateSortActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/sortChange', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      criterion: new Value<FacetSortCriterion | RangeFacetSortCriterion>({\n        required: true,\n      }),\n    });\n\n    const {facetId, criterion} = payload;\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n\n    const base = buildFacetBaseMetadata(facetId, stateForAnalytics);\n    const metadata = {...base, criteria: criterion};\n\n    return client.makeFacetUpdateSort(metadata);\n  });\n\n//TODO: KIT-2859\nexport const logFacetClearAll = (facetId: string): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/reset', (client, state) => {\n    validatePayload(facetId, facetIdDefinition);\n\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetBaseMetadata(facetId, stateForAnalytics);\n\n    return client.makeFacetClearAll(metadata);\n  });\n\nexport interface LogFacetSelectActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The facet value that was selected.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetSelect = (\n  payload: LogFacetSelectActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/select', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      stateForAnalytics\n    );\n\n    return client.makeFacetSelect(metadata);\n  });\n\nexport interface LogFacetExcludeActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The facet value that was excluded.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetExclude = (\n  payload: LogFacetExcludeActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/exclude', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      stateForAnalytics\n    );\n\n    return client.makeFacetExclude(metadata);\n  });\n\nexport interface LogFacetDeselectActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The facet value that was deselected.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetDeselect = (\n  payload: LogFacetDeselectActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/deselect', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      stateForAnalytics\n    );\n\n    return client.makeFacetDeselect(metadata);\n  });\n\nexport interface LogFacetUnexcludeActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The facet value that was unexcluded.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetUnexclude = (\n  payload: LogFacetUnexcludeActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/unexclude', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      stateForAnalytics\n    );\n\n    return client.makeFacetUnexclude(metadata);\n  });\n\nexport interface LogFacetBreadcrumbActionCreatorPayload {\n  /**\n   * The facet id associated with the breadcrumb.\n   */\n  facetId: string;\n\n  /**\n   * The facet value displayed in the breadcrumb.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetBreadcrumb = (\n  payload: LogFacetBreadcrumbActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/facet/breadcrumb', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      getStateNeededForFacetMetadata(state)\n    );\n\n    return client.makeBreadcrumbFacet(metadata);\n  });\n\n// --------------------- KIT-2859 : Everything above this will get deleted ! :) ---------------------\nexport const facetUpdateSort = (): SearchAction => ({\n  actionCause: SearchPageEvents.facetUpdateSort,\n});\n\nexport const facetClearAll = (): SearchAction => {\n  return {\n    actionCause: SearchPageEvents.facetClearAll,\n  };\n};\n\nexport const facetSelect = (): SearchAction => ({\n  actionCause: SearchPageEvents.facetSelect,\n});\n\nexport const facetExclude = (): SearchAction => ({\n  actionCause: SearchPageEvents.facetExclude,\n});\n\nexport const facetDeselect = (): SearchAction => ({\n  actionCause: SearchPageEvents.facetDeselect,\n});\n\nexport const facetUnexclude = (): SearchAction => ({\n  actionCause: SearchPageEvents.facetUnexclude,\n});\n\nexport const breadcrumbFacet = (): SearchAction => ({\n  actionCause: SearchPageEvents.breadcrumbFacet,\n});\n", "import {SearchAction} from '../../../search/search-actions.js';\nimport {FacetSelectionChangeMetadata} from '../../facet-set/facet-set-analytics-actions-utils.js';\nimport {\n  facetDeselect,\n  facetExclude,\n  facetSelect,\n  facetUnexclude,\n  logFacetDeselect,\n  logFacetExclude,\n  logFacetSelect,\n  logFacetUnexclude,\n} from '../../facet-set/facet-set-analytics-actions.js';\nimport {RangeFacetValue} from './interfaces/range-facet.js';\n\nexport const isRangeFacetValueSelected = (selection: RangeFacetValue) => {\n  return selection.state === 'selected';\n};\n\nexport const isRangeFacetValueExcluded = (selection: RangeFacetValue) => {\n  return selection.state === 'excluded';\n};\n\nexport const getLegacyAnalyticsActionForToggleRangeFacetSelect = (\n  facetId: string,\n  selection: RangeFacetValue\n) => {\n  const facetValue = `${selection.start}..${selection.end}`;\n  const payload: FacetSelectionChangeMetadata = {facetId, facetValue};\n\n  return isRangeFacetValueSelected(selection)\n    ? logFacetDeselect(payload)\n    : logFacetSelect(payload);\n};\n\nexport const getAnalyticsActionForToggleFacetSelect = (\n  selection: RangeFacetValue\n): SearchAction => {\n  return isRangeFacetValueSelected(selection) ? facetDeselect() : facetSelect();\n};\n\nexport const getLegacyAnalyticsActionForToggleRangeFacetExclude = (\n  facetId: string,\n  selection: RangeFacetValue\n) => {\n  const facetValue = `${selection.start}..${selection.end}`;\n  const payload: FacetSelectionChangeMetadata = {facetId, facetValue};\n\n  return isRangeFacetValueExcluded(selection)\n    ? logFacetUnexclude(payload)\n    : logFacetExclude(payload);\n};\n\nexport const getAnalyticsActionForToggleRangeFacetExclude = (\n  selection: RangeFacetValue\n): SearchAction => {\n  return isRangeFacetValueExcluded(selection)\n    ? facetUnexclude()\n    : facetExclude();\n};\n", "import {configuration} from '../../../../../app/common-reducers.js';\nimport {CoreEngine} from '../../../../../app/engine.js';\nimport {facetOptionsReducer as facetOptions} from '../../../../../features/facet-options/facet-options-slice.js';\nimport {deselectAllFacetValues} from '../../../../../features/facets/facet-set/facet-set-actions.js';\nimport {\n  RegisterDateFacetActionCreatorPayload,\n  registerDateFacet,\n} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-actions.js';\nimport {\n  executeToggleDateFacetExclude,\n  executeToggleDateFacetSelect,\n} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-controller-actions.js';\nimport {dateFacetSetReducer as dateFacetSet} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-set-slice.js';\nimport {\n  DateFacetRequest,\n  DateRangeRequest,\n} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/request.js';\nimport {\n  DateFacetResponse,\n  DateFacetValue,\n} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/response.js';\nimport {RangeFacetSortCriterion} from '../../../../../features/facets/range-facets/generic/interfaces/request.js';\nimport {searchReducer as search} from '../../../../../features/search/search-slice.js';\nimport {selectActiveTab} from '../../../../../features/tab-set/tab-set-selectors.js';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n  FacetOptionsSection,\n  SearchSection,\n} from '../../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../../utils/errors.js';\nimport {Controller} from '../../../../controller/headless-controller.js';\nimport {determineFacetId} from '../../_common/facet-id-determinor.js';\nimport {\n  assertRangeFacetOptions,\n  buildCoreRangeFacet,\n} from '../headless-core-range-facet.js';\nimport {\n  DateRangeOptions,\n  DateRangeInput,\n  buildDateRange,\n} from './date-range.js';\nimport {\n  DateFacetOptions,\n  validateDateFacetOptions,\n} from './headless-date-facet-options.js';\n\nexport type {\n  DateFacetOptions,\n  DateRangeInput,\n  DateRangeOptions,\n  DateRangeRequest,\n};\nexport {buildDateRange};\n\nexport interface DateFacetProps {\n  /**\n   * The options for the `DateFacet` controller.\n   * */\n  options: DateFacetOptions;\n}\n\n/**\n * The `DateFacet` controller makes it possible to create a facet with date ranges.\n *\n * Examples:\n * - [date-facet.fn.tsx](https://github.com/coveo/ui-kit/blob/master/packages/samples/headless-react/src/components/date-facet/date-facet.fn.tsx)\n * - [relative-date-facet.fn.tsx](https://github.com/coveo/ui-kit/blob/master/packages/samples/headless-react/src/components/relative-date-facet/relative-date-facet.fn.tsx)\n *\n * @document relative-date-format.md\n *\n * @group Controllers\n * @category DateFacet\n * */\nexport interface DateFacet extends Controller {\n  /**\n   * Deselects all facet values.\n   */\n  deselectAll(): void;\n\n  /**\n   * Checks whether the facet values are sorted according to the specified criterion.\n   *\n   * @param criterion - The criterion to compare.\n   * @returns Whether the facet values are sorted according to the specified criterion.\n   */\n  isSortedBy(criterion: RangeFacetSortCriterion): boolean;\n\n  /**\n   * Checks whether the specified facet value is selected.\n   *\n   * @param selection - The facet value to check.\n   * @returns Whether the specified facet value is selected.\n   */\n  isValueSelected(selection: DateFacetValue): boolean;\n\n  /** Sorts the facet values according to the specified criterion.\n   *\n   * @param criterion - The criterion by which to sort values.\n   */\n  sortBy(criterion: RangeFacetSortCriterion): void;\n\n  /**\n   * Toggles the specified facet value.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSelect(selection: DateFacetValue): void;\n\n  /**\n   * Toggles exclusion of the specified facet value\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleExclude(selection: DateFacetValue): void;\n\n  /**\n   * Toggles the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSingleSelect(selection: DateFacetValue): void;\n\n  /**\n   * Toggles exclusion of the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSingleExclude(selection: DateFacetValue): void;\n\n  /**\n   * Enables the facet. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the facet. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `DateFacet` controller.\n   */\n  state: DateFacetState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `DateFacet` controller.\n *\n * @group Controllers\n * @category DateFacet\n */\nexport interface DateFacetState {\n  /**\n   * The facet ID.\n   * */\n  facetId: string;\n\n  /**\n   * The values of the facet.\n   */\n  values: DateFacetValue[];\n\n  /**\n   * The active sortCriterion of the facet.\n   */\n  sortCriterion: RangeFacetSortCriterion;\n\n  /**\n   * `true` if a search is in progress and `false` otherwise.\n   */\n  isLoading: boolean;\n\n  /**\n   * `true` if there is at least one non-idle value and `false` otherwise.\n   */\n  hasActiveValues: boolean;\n\n  /**\n   * Whether the facet is enabled and its values are used to filter search results.\n   */\n  enabled: boolean;\n}\n\n/**\n * Creates a `DateFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `DateFacet` controller properties.\n * @returns A `DateFacet` controller instance.\n *\n * @group Controllers\n * @category DateFacet\n */\nexport function buildCoreDateFacet(\n  engine: CoreEngine,\n  props: DateFacetProps\n): DateFacet {\n  if (!loadDateFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  assertRangeFacetOptions(props.options, 'buildDateFacet');\n\n  const dispatch = engine.dispatch;\n\n  const facetId = determineFacetId(engine, props.options);\n  const tabs = props.options.tabs ?? {};\n  const activeTab = selectActiveTab(engine.state.tabSet);\n  const options: RegisterDateFacetActionCreatorPayload = {\n    currentValues: [],\n    ...props.options,\n    facetId,\n    tabs,\n    activeTab,\n  };\n\n  validateDateFacetOptions(engine, options);\n\n  dispatch(registerDateFacet(options));\n\n  const rangeFacet = buildCoreRangeFacet<DateFacetRequest, DateFacetResponse>(\n    engine,\n    {\n      facetId,\n      getRequest: () => engine.state.dateFacetSet[facetId]!.request,\n    }\n  );\n\n  return {\n    ...rangeFacet,\n\n    toggleSelect: (selection: DateFacetValue) =>\n      dispatch(executeToggleDateFacetSelect({facetId, selection})),\n\n    toggleSingleSelect: function (selection: DateFacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleSelect(selection);\n    },\n\n    toggleExclude: (selection: DateFacetValue) =>\n      dispatch(executeToggleDateFacetExclude({facetId, selection})),\n\n    toggleSingleExclude: function (selection: DateFacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleExclude(selection);\n    },\n\n    get state() {\n      return rangeFacet.state;\n    },\n  };\n}\n\nfunction loadDateFacetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  ConfigurationSection & SearchSection & DateFacetSection & FacetOptionsSection\n> {\n  engine.addReducers({configuration, search, dateFacetSet, facetOptions});\n  return true;\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {registerCategoryFacet} from '../facets/category-facet-set/category-facet-set-actions.js';\nimport {registerFacet} from '../facets/facet-set/facet-set-actions.js';\nimport {registerDateFacet} from '../facets/range-facets/date-facet-set/date-facet-actions.js';\nimport {registerNumericFacet} from '../facets/range-facets/numeric-facet-set/numeric-facet-actions.js';\nimport {change} from '../history/history-actions.js';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions.js';\nimport {executeSearch} from '../search/search-actions.js';\nimport {updateActiveTab} from '../tab-set/tab-set-actions.js';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from './facet-options-actions.js';\nimport {\n  getFacetOptionsSliceInitialState,\n  getFacetOptionsInitialState,\n  FacetOptionsState,\n} from './facet-options-state.js';\nimport {isFacetIncludedOnTab} from './facet-options-utils.js';\n\nexport const facetOptionsReducer = createReducer(\n  getFacetOptionsInitialState(),\n  (builder) => {\n    builder\n      .addCase(updateFacetOptions, (state, action) => {\n        return {...state, ...action.payload};\n      })\n      .addCase(executeSearch.fulfilled, (state) => {\n        state.freezeFacetOrder = false;\n      })\n      .addCase(executeSearch.rejected, (state) => {\n        state.freezeFacetOrder = false;\n      })\n      .addCase(updateActiveTab, (state, action) => {\n        for (const facetId in state.facets) {\n          const facet = state.facets[facetId];\n\n          if (Object.keys({...facet.tabs}).length > 0) {\n            facet.enabled = isFacetIncludedOnTab(facet.tabs, action.payload);\n          }\n        }\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.facetOptions ?? state\n      )\n      .addCase(registerCategoryFacet, (state, action) => {\n        const {facetId, tabs, activeTab} = action.payload;\n\n        handleRegisterFacetTabs(tabs, activeTab, state, facetId);\n      })\n      .addCase(registerFacet, (state, action) => {\n        const {facetId, tabs, activeTab} = action.payload;\n\n        handleRegisterFacetTabs(tabs, activeTab, state, facetId);\n      })\n      .addCase(registerDateFacet, (state, action) => {\n        const {facetId, tabs, activeTab} = action.payload;\n\n        handleRegisterFacetTabs(tabs, activeTab, state, facetId);\n      })\n      .addCase(registerNumericFacet, (state, action) => {\n        const {facetId, tabs, activeTab} = action.payload;\n\n        handleRegisterFacetTabs(tabs, activeTab, state, facetId);\n      })\n      .addCase(enableFacet, (state, action) => {\n        state.facets[action.payload].enabled = true;\n      })\n      .addCase(disableFacet, (state, action) => {\n        state.facets[action.payload].enabled = false;\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        if (action.payload.tab) {\n          Object.entries(state.facets).forEach(([, facet]) => {\n            if (Object.keys(facet.tabs ?? {}).length > 0) {\n              facet.enabled = isFacetIncludedOnTab(\n                facet.tabs,\n                action.payload.tab\n              );\n            }\n          });\n        }\n        [\n          ...Object.keys(action.payload.f ?? {}),\n          ...Object.keys(action.payload.fExcluded ?? {}),\n          ...Object.keys(action.payload.cf ?? {}),\n          ...Object.keys(action.payload.nf ?? {}),\n          ...Object.keys(action.payload.df ?? {}),\n        ].forEach((facetId) => {\n          if (!(facetId in state)) {\n            state.facets[facetId] = getFacetOptionsSliceInitialState();\n          }\n          state.facets[facetId].enabled = true;\n        });\n      });\n  }\n);\n\nfunction handleRegisterFacetTabs(\n  tabs: {included?: string[]; excluded?: string[]} | undefined,\n  activeTab: string | undefined,\n  state: FacetOptionsState,\n  facetId: string\n) {\n  const newFacetState = {\n    ...getFacetOptionsSliceInitialState(),\n    tabs: tabs ?? {},\n  };\n\n  if (tabs && Object.keys(tabs).length > 0) {\n    newFacetState.enabled = isFacetIncludedOnTab(tabs, activeTab);\n  }\n\n  state.facets[facetId] = newFacetState;\n}\n", "export const isFacetIncludedOnTab = (\n  facetTabs: {excluded?: string[]; included?: string[]} | undefined,\n  activeTab: string | undefined\n) => {\n  if (\n    ({...facetTabs} && Object.keys({...facetTabs}).length === 0) ||\n    !activeTab ||\n    !facetTabs\n  ) {\n    return true;\n  }\n\n  if (facetTabs.excluded && facetTabs.excluded.includes(activeTab)) {\n    return false;\n  }\n\n  if (\n    facetTabs.included &&\n    (facetTabs.included.length === 0 || facetTabs.included.includes(activeTab))\n  ) {\n    return true;\n  }\n\n  return false;\n};\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options.js';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n} from '../../../../state/state-sections.js';\nimport {updateFacetOptions} from '../../../facet-options/facet-options-actions.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {\n  executeToggleRangeFacetExclude,\n  executeToggleRangeFacetSelect,\n} from '../generic/range-facet-controller-actions.js';\nimport {dateFacetValueDefinition} from '../generic/range-facet-validate-payload.js';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n} from './date-facet-actions.js';\nimport {DateFacetValue} from './interfaces/response.js';\n\nconst definition = {\n  facetId: facetIdDefinition,\n  selection: new RecordValue({values: dateFacetValueDefinition}),\n};\n\nexport const executeToggleDateFacetSelect = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: DateFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & DateFacetSection>\n>(\n  'dateFacet/executeToggleSelect',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleSelectDateFacetValue(payload));\n    dispatch(executeToggleRangeFacetSelect(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n\nexport const executeToggleDateFacetExclude = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: DateFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & DateFacetSection>\n>(\n  'dateFacet/executeToggleExclude',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleExcludeDateFacetValue(payload));\n    dispatch(executeToggleRangeFacetExclude(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../../utils/validate-payload.js';\nimport {\n  RangeFacetSelectionPayload,\n  rangeFacetSelectionPayloadDefinition,\n} from './range-facet-validate-payload.js';\n\nexport const executeToggleRangeFacetSelect = createAction(\n  'rangeFacet/executeToggleSelect',\n  (payload: RangeFacetSelectionPayload) =>\n    validatePayload(\n      payload,\n      rangeFacetSelectionPayloadDefinition(payload.selection)\n    )\n);\n\nexport const executeToggleRangeFacetExclude = createAction(\n  'rangeFacet/executeToggleExclude',\n  (payload: RangeFacetSelectionPayload) =>\n    validatePayload(\n      payload,\n      rangeFacetSelectionPayloadDefinition(payload.selection)\n    )\n);\n", "import {createReducer, PayloadAction} from '@reduxjs/toolkit';\nimport {\n  executeSearch,\n  fetchFacetValues,\n  fetchMoreResults,\n  fetchPage,\n} from './legacy/search-actions.js';\nimport {\n  emptyQuestionAnswer,\n  getSearchInitialState,\n  SearchState,\n} from './search-state.js';\n\ntype SearchAction = typeof executeSearch | typeof fetchMoreResults;\n\nfunction handleRejectedSearch(\n  state: SearchState,\n  action: ReturnType<SearchAction['rejected']>\n) {\n  const error = action.payload ?? null;\n  if (error) {\n    state.response = getSearchInitialState().response;\n    state.results = [];\n    state.questionAnswer = emptyQuestionAnswer();\n  }\n\n  state.error = error;\n  state.isLoading = false;\n}\n\nfunction handleFulfilledSearch(\n  state: SearchState,\n  action: ReturnType<SearchAction['fulfilled']>\n) {\n  state.error = null;\n  state.response = action.payload.response;\n  state.queryExecuted = action.payload.queryExecuted;\n  state.duration = action.payload.duration;\n  state.isLoading = false;\n}\n\nfunction handleFulfilledNewSearch(\n  state: SearchState,\n  action: ReturnType<SearchAction['fulfilled']>\n) {\n  handleFulfilledSearch(state, action);\n  state.results = action.payload.response.results.map((result) => ({\n    ...result,\n    searchUid: action.payload.response.searchUid,\n  }));\n  state.searchResponseId = action.payload.response.searchUid;\n  state.questionAnswer = action.payload.response.questionAnswer;\n  state.extendedResults = action.payload.response.extendedResults;\n}\n\nfunction handlePendingSearch(\n  state: SearchState,\n  action: PayloadAction<\n    void,\n    string,\n    {\n      requestId: string;\n    }\n  >\n) {\n  state.isLoading = true;\n  state.requestId = action.meta.requestId;\n}\n\nexport const searchReducer = createReducer(\n  getSearchInitialState(),\n  (builder) => {\n    builder.addCase(executeSearch.rejected, (state, action) =>\n      handleRejectedSearch(state, action)\n    );\n    builder.addCase(fetchMoreResults.rejected, (state, action) =>\n      handleRejectedSearch(state, action)\n    );\n    builder.addCase(fetchPage.rejected, (state, action) =>\n      handleRejectedSearch(state, action)\n    );\n    builder.addCase(executeSearch.fulfilled, (state, action) => {\n      handleFulfilledNewSearch(state, action);\n    });\n    builder.addCase(fetchMoreResults.fulfilled, (state, action) => {\n      handleFulfilledSearch(state, action);\n      state.results = [\n        ...state.results,\n        ...action.payload.response.results.map((result) => ({\n          ...result,\n          searchUid: action.payload.response.searchUid,\n        })),\n      ];\n    });\n    builder.addCase(fetchPage.fulfilled, (state, action) => {\n      handleFulfilledSearch(state, action);\n      state.results = action.payload.response.results;\n    });\n    builder.addCase(fetchFacetValues.fulfilled, (state, action) => {\n      state.response.facets = action.payload.response.facets;\n      state.response.searchUid = action.payload.response.searchUid;\n    });\n    builder.addCase(executeSearch.pending, handlePendingSearch);\n    builder.addCase(fetchMoreResults.pending, handlePendingSearch);\n    builder.addCase(fetchPage.pending, handlePendingSearch);\n  }\n);\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {TabSetState} from './tab-set-state.js';\n\nexport const selectActiveTab = createSelector(\n  (state?: TabSetState) => state,\n  (tabSetState?: TabSetState): string => {\n    if (!tabSetState) {\n      return '';\n    }\n\n    for (const tabId in tabSetState) {\n      if (tabSetState[tabId].isActive) {\n        return tabSetState[tabId].id;\n      }\n    }\n    return '';\n  }\n);\n", "import {CoreEngine} from '../../../../app/engine.js';\nimport {AllFacetSections} from '../../../../features/facets/generic/interfaces/generic-facet-section.js';\nimport {generateFacetId} from './facet-id-generator.js';\n\ninterface FacetIdConfig {\n  facetId?: string;\n  field: string;\n}\n\nexport function determineFacetId(\n  engine: CoreEngine<Partial<AllFacetSections>>,\n  config: FacetIdConfig\n) {\n  const {state, logger} = engine;\n  const {field, facetId} = config;\n  return facetId || generateFacetId({field, state}, logger);\n}\n", "import {Logger} from 'pino';\nimport {AllFacetSections} from '../../../../features/facets/generic/interfaces/generic-facet-section.js';\n\nexport interface FacetIdConfig {\n  field: string;\n  state: Partial<AllFacetSections>;\n}\n\nexport function generateFacetId(config: FacetIdConfig, logger: Logger) {\n  const {field, state} = config;\n\n  if (!isFieldUsedAsFacetId(config)) {\n    return field;\n  }\n\n  const prefix = `${field}_`;\n  const id = calculateId(prefix, state);\n\n  logWarningMessage(field, logger);\n\n  return `${prefix}${id}`;\n}\n\nfunction isFieldUsedAsFacetId(config: FacetIdConfig) {\n  const {field, state} = config;\n  const sets = extractFacetSets(state);\n\n  return sets.some((set) => set && field in set);\n}\n\nfunction calculateId(prefix: string, state: Partial<AllFacetSections>) {\n  const sets = extractFacetSets(state);\n  const keys = sets\n    .map((set) => Object.keys(set || {}))\n    .reduce((all, current) => all.concat(current), []);\n\n  return findMaxId(keys, prefix) + 1;\n}\n\nfunction extractFacetSets(state: Partial<AllFacetSections>) {\n  const {facetSet, numericFacetSet, dateFacetSet, categoryFacetSet} = state;\n  return [facetSet, numericFacetSet, dateFacetSet, categoryFacetSet];\n}\n\nfunction findMaxId(keys: string[], prefix: string) {\n  const defaultId = 0;\n  const ids = keys.map((key) => {\n    const stringId = key.split(prefix)[1];\n    const id = parseInt(stringId, 10);\n    return Number.isNaN(id) ? defaultId : id;\n  });\n\n  const lastNumber = ids.sort().pop();\n  return lastNumber ?? defaultId;\n}\n\nfunction logWarningMessage(field: string, logger: Logger) {\n  const message = `A facet with field \"${field}\" already exists.\n  To avoid unexpected behaviour, configure the #id option on the facet controller.`;\n\n  logger.warn(message);\n}\n", "import {CoreEngine} from '../../../../app/engine.js';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from '../../../../features/facet-options/facet-options-actions.js';\nimport {isFacetEnabledSelector} from '../../../../features/facet-options/facet-options-selectors.js';\nimport {deselectAllFacetValues} from '../../../../features/facets/facet-set/facet-set-actions.js';\nimport {\n  baseFacetResponseSelector,\n  isFacetLoadingResponseSelector,\n} from '../../../../features/facets/facet-set/facet-set-selectors.js';\nimport {\n  RangeFacetResponse,\n  RangeFacetRequest,\n} from '../../../../features/facets/range-facets/generic/interfaces/range-facet.js';\nimport {RangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/interfaces/request.js';\nimport {updateRangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/range-facet-actions.js';\nimport {\n  isRangeFacetValueExcluded,\n  isRangeFacetValueSelected,\n} from '../../../../features/facets/range-facets/generic/range-facet-utils.js';\nimport {\n  ConfigurationSection,\n  FacetOptionsSection,\n  SearchSection,\n} from '../../../../state/state-sections.js';\nimport {buildController} from '../../../controller/headless-controller.js';\n\nexport type RangeFacet = ReturnType<typeof buildCoreRangeFacet>;\n\nexport type RangeFacetProps<T extends RangeFacetRequest> = {\n  facetId: string;\n  getRequest: () => T;\n};\n\nexport function buildCoreRangeFacet<\n  T extends RangeFacetRequest,\n  R extends RangeFacetResponse,\n>(\n  engine: CoreEngine<\n    ConfigurationSection & SearchSection & FacetOptionsSection\n  >,\n  props: RangeFacetProps<T>\n) {\n  type RangeFacetValue = R['values'][0];\n\n  const {facetId, getRequest} = props;\n  const controller = buildController(engine);\n  const dispatch = engine.dispatch;\n\n  const getIsEnabled = () => isFacetEnabledSelector(engine.state, facetId);\n\n  return {\n    ...controller,\n\n    isValueSelected: isRangeFacetValueSelected,\n\n    isValueExcluded: isRangeFacetValueExcluded,\n\n    deselectAll() {\n      dispatch(deselectAllFacetValues(facetId));\n      dispatch(updateFacetOptions());\n    },\n\n    sortBy(criterion: RangeFacetSortCriterion) {\n      dispatch(updateRangeFacetSortCriterion({facetId, criterion}));\n      dispatch(updateFacetOptions());\n    },\n\n    isSortedBy(criterion: RangeFacetSortCriterion) {\n      return this.state.sortCriterion === criterion;\n    },\n\n    enable() {\n      dispatch(enableFacet(facetId));\n    },\n\n    disable() {\n      dispatch(disableFacet(facetId));\n    },\n\n    get state() {\n      const request = getRequest();\n      const response = baseFacetResponseSelector(engine.state, facetId) as\n        | R\n        | undefined;\n\n      const sortCriterion = request.sortCriteria;\n      const resultsMustMatch = request.resultsMustMatch;\n      const values: R['values'] = response ? response.values : [];\n      const isLoading = isFacetLoadingResponseSelector(engine.state);\n      const enabled = getIsEnabled();\n      const hasActiveValues = values.some(\n        (facetValue: RangeFacetValue) => facetValue.state !== 'idle'\n      );\n\n      return {\n        facetId,\n        values,\n        sortCriterion,\n        resultsMustMatch,\n        hasActiveValues,\n        isLoading,\n        enabled,\n      };\n    },\n  };\n}\n\ninterface AssertRangeFacetOptions {\n  generateAutomaticRanges: boolean;\n  currentValues?: unknown[];\n}\n\nexport function assertRangeFacetOptions(\n  options: AssertRangeFacetOptions,\n  controllerName: 'buildNumericFacet' | 'buildDateFacet'\n) {\n  if (!options.generateAutomaticRanges && options.currentValues === undefined) {\n    const message = `currentValues should be specified for ${controllerName} when generateAutomaticRanges is false.`;\n    throw new Error(message);\n  }\n}\n", "import {FacetOptionsSection} from '../../state/state-sections.js';\n\nexport const isFacetEnabledSelector = (\n  state: FacetOptionsSection,\n  id: string\n) => {\n  return state.facetOptions.facets[id]?.enabled ?? true;\n};\n", "import {\n  ArrayValue,\n  BooleanValue,\n  RecordValue,\n  Schema,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {CoreEngine} from '../../../../../app/engine.js';\nimport {facetValueStates} from '../../../../../features/facets/facet-api/value.js';\nimport {validateManualDateRanges} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-actions.js';\nimport {DateRangeRequest} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/request.js';\nimport {\n  rangeFacetRangeAlgorithm,\n  RangeFacetRangeAlgorithm,\n  rangeFacetSortCriteria,\n  RangeFacetSortCriterion,\n} from '../../../../../features/facets/range-facets/generic/interfaces/request.js';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n  SearchSection,\n} from '../../../../../state/state-sections.js';\nimport {validateOptions} from '../../../../../utils/validate-payload.js';\nimport {\n  field,\n  facetId,\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n} from '../../../../core/facets/_common/facet-option-definitions.js';\n\nexport interface DateFacetOptions {\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * The tabs on which the facet should be enabled or disabled.\n   */\n  tabs?: {included?: string[]; excluded?: string[]};\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: DateRangeRequest[];\n\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  facetId?: string;\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The algorithm that's used for generating the ranges of this facet when they aren't manually defined. The default value of `\"even\"` generates equally sized facet ranges across all of the results. The value `\"equiprobable\"` generates facet ranges which vary in size but have a more balanced number of results within each range.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst dateRangeRequestDefinition: SchemaDefinition<DateRangeRequest> = {\n  start: new StringValue(),\n  end: new StringValue(),\n  endInclusive: new BooleanValue(),\n  state: new StringValue({constrainTo: facetValueStates}),\n};\n\nexport const dateFacetOptionsSchema = new Schema<Required<DateFacetOptions>>({\n  facetId,\n  field,\n  tabs: new RecordValue({\n    options: {\n      required: false,\n    },\n    values: {\n      included: new ArrayValue({each: new StringValue()}),\n      excluded: new ArrayValue({each: new StringValue()}),\n    },\n  }),\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  currentValues: new ArrayValue({\n    each: new RecordValue({values: dateRangeRequestDefinition}),\n  }),\n  sortCriteria: new StringValue({constrainTo: rangeFacetSortCriteria}),\n  rangeAlgorithm: new StringValue({constrainTo: rangeFacetRangeAlgorithm}),\n});\n\nexport function validateDateFacetOptions(\n  engine: CoreEngine<ConfigurationSection & SearchSection & DateFacetSection>,\n  options: DateFacetOptions\n) {\n  validateOptions(engine, dateFacetOptionsSchema, options, 'buildDateFacet');\n  validateManualDateRanges(options);\n}\n", "export const facetValueStates: FacetValueState[] = [\n  'idle',\n  'selected',\n  'excluded',\n];\nexport type FacetValueState = 'idle' | 'selected' | 'excluded';\n", "import {\n  BaseFacetRequest,\n  SortCriteria,\n  BaseFacetValueRequest,\n  RangeAlgorithm,\n} from '../../../facet-api/request.js';\n\nexport const rangeFacetSortCriteria: RangeFacetSortCriterion[] = [\n  'ascending',\n  'descending',\n];\n/**\n * Whether the range algorithm proposes ranges based on an even split of the interval or equiprobable intervals that each contain the same amount of results.\n */\nexport const rangeFacetRangeAlgorithm: RangeFacetRangeAlgorithm[] = [\n  'even',\n  'equiprobable',\n];\n\nexport type RangeFacetSortCriterion = 'ascending' | 'descending';\nexport type RangeFacetRangeAlgorithm = 'even' | 'equiprobable';\n\nexport interface AutomaticRanges<T extends boolean> {\n  /** Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the Use cache for numeric queries option is enabled for the Facet field in your index in order to speed up automatic range evaluation (see [Add or Edit Fields](https://docs.coveo.com/en/1982/index-content/add-or-edit-a-field)).\n   */\n  generateAutomaticRanges: T;\n}\n\nexport interface RangeRequest<T extends string | number>\n  extends BaseFacetValueRequest {\n  /** The start value of the range.*/\n  start: T;\n  /** The end value of the range.*/\n  end: T;\n  /** Whether to include the `end` value in the range.\n   * @defaultValue `false`\n   */\n  endInclusive: boolean;\n}\n\nexport interface BaseRangeFacetRequest\n  extends BaseFacetRequest,\n    AutomaticRanges<boolean>,\n    SortCriteria<RangeFacetSortCriterion>,\n    RangeAlgorithm<RangeFacetRangeAlgorithm> {\n  /** @defaultValue `ascending` */\n  sortCriteria: RangeFacetSortCriterion;\n  /** @defaultValue `even` */\n  rangeAlgorithm: RangeFacetRangeAlgorithm;\n}\n", "import {configuration} from '../../../../app/common-reducers.js';\nimport {SearchEngine} from '../../../../app/search-engine/search-engine.js';\nimport {\n  facetClearAll,\n  facetUpdateSort,\n  logFacetClearAll,\n  logFacetUpdateSort,\n} from '../../../../features/facets/facet-set/facet-set-analytics-actions.js';\nimport {RangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/interfaces/request.js';\nimport {\n  getLegacyAnalyticsActionForToggleRangeFacetSelect,\n  getAnalyticsActionForToggleFacetSelect,\n} from '../../../../features/facets/range-facets/generic/range-facet-utils.js';\nimport {NumericRangeRequest} from '../../../../features/facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {NumericFacetValue} from '../../../../features/facets/range-facets/numeric-facet-set/interfaces/response.js';\nimport {numericFacetSetReducer as numericFacetSet} from '../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice.js';\nimport {executeSearch} from '../../../../features/search/search-actions.js';\nimport {searchReducer as search} from '../../../../features/search/search-slice.js';\nimport {\n  ConfigurationSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../utils/errors.js';\nimport {\n  buildCoreNumericFacet,\n  buildNumericRange,\n  NumericFacet,\n  NumericFacetOptions,\n  NumericFacetProps,\n  NumericFacetState,\n  NumericRangeOptions,\n} from '../../../core/facets/range-facet/numeric-facet/headless-core-numeric-facet.js';\n\nexport type {\n  NumericRangeOptions,\n  NumericRangeRequest,\n  NumericFacetValue,\n  NumericFacetOptions,\n  NumericFacetProps,\n  NumericFacet,\n  NumericFacetState,\n};\nexport {buildNumericRange};\n\n/**\n * Creates a `NumericFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `NumericFacet` properties.\n * @returns A `NumericFacet` controller instance.\n *\n * @group Controllers\n * @category NumericFacet\n */\nexport function buildNumericFacet(\n  engine: SearchEngine,\n  props: NumericFacetProps\n): NumericFacet {\n  if (!loadNumericFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const coreController = buildCoreNumericFacet(engine, props);\n  const dispatch = engine.dispatch;\n  const getFacetId = () => coreController.state.facetId;\n\n  return {\n    ...coreController,\n\n    deselectAll() {\n      coreController.deselectAll();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: facetClearAll(),\n        })\n      );\n    },\n\n    sortBy(criterion: RangeFacetSortCriterion) {\n      coreController.sortBy(criterion);\n      dispatch(\n        executeSearch({\n          legacy: logFacetUpdateSort({facetId: getFacetId(), criterion}),\n          next: facetUpdateSort(),\n        })\n      );\n    },\n\n    toggleSelect: (selection: NumericFacetValue) => {\n      coreController.toggleSelect(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleRangeFacetSelect(\n            getFacetId(),\n            selection\n          ),\n          next: getAnalyticsActionForToggleFacetSelect(selection),\n        })\n      );\n    },\n\n    get state() {\n      return {\n        ...coreController.state,\n      };\n    },\n  };\n}\n\nfunction loadNumericFacetReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  NumericFacetSection & ConfigurationSection & SearchSection\n> {\n  engine.addReducers({numericFacetSet, configuration, search});\n  return true;\n}\n", "import {configuration} from '../../../../../app/common-reducers.js';\nimport {CoreEngine} from '../../../../../app/engine.js';\nimport {facetOptionsReducer as facetOptions} from '../../../../../features/facet-options/facet-options-slice.js';\nimport {deselectAllFacetValues} from '../../../../../features/facets/facet-set/facet-set-actions.js';\nimport {RangeFacetSortCriterion} from '../../../../../features/facets/range-facets/generic/interfaces/request.js';\nimport {\n  NumericFacetRequest,\n  NumericRangeRequest,\n} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {\n  NumericFacetResponse,\n  NumericFacetValue,\n} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/response.js';\nimport {\n  RegisterNumericFacetActionCreatorPayload,\n  registerNumericFacet,\n} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-actions.js';\nimport {executeToggleNumericFacetSelect} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-controller-actions.js';\nimport {numericFacetSetReducer as numericFacetSet} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice.js';\nimport {searchReducer as search} from '../../../../../features/search/search-slice.js';\nimport {selectActiveTab} from '../../../../../features/tab-set/tab-set-selectors.js';\nimport {\n  ConfigurationSection,\n  FacetOptionsSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../../utils/errors.js';\nimport {Controller} from '../../../../controller/headless-controller.js';\nimport {determineFacetId} from '../../_common/facet-id-determinor.js';\nimport {\n  assertRangeFacetOptions,\n  buildCoreRangeFacet,\n} from '../headless-core-range-facet.js';\nimport {\n  NumericFacetOptions,\n  validateNumericFacetOptions,\n} from './headless-numeric-facet-options.js';\nimport {buildNumericRange, NumericRangeOptions} from './numeric-range.js';\n\nexport type {\n  NumericRangeOptions,\n  NumericRangeRequest,\n  NumericFacetValue,\n  NumericFacetOptions,\n};\nexport {buildNumericRange};\n\nexport interface NumericFacetProps {\n  /**\n   * The options for the `NumericFacet` controller.\n   */\n  options: NumericFacetOptions;\n}\n\n/**\n * The `NumericFacet` controller makes it possible to create a facet with numeric ranges.\n *\n * Example: [numeric-facet.fn.tsx](https://github.com/coveo/ui-kit/blob/master/packages/samples/headless-react/src/components/numeric-facet/numeric-facet.fn.tsx)\n *\n * @group Controllers\n * @category NumericFacet\n */\nexport interface NumericFacet extends Controller {\n  /**\n   * Deselects all facet values.\n   */\n  deselectAll(): void;\n\n  /**\n   * Checks whether the facet values are sorted according to the specified criterion.\n   *\n   * @param criterion - The criterion to compare.\n   * @returns Whether the facet values are sorted according to the specified criterion.\n   */\n  isSortedBy(criterion: RangeFacetSortCriterion): boolean;\n\n  /**\n   * Checks whether the specified facet value is selected.\n   *\n   * @param selection - The facet value to check.\n   * @returns Whether the specified facet value is selected.\n   */\n  isValueSelected(selection: NumericFacetValue): boolean;\n\n  /** Sorts the facet values according to the specified criterion.\n   *\n   * @param criterion - The criterion to sort values by.\n   */\n  sortBy(criterion: RangeFacetSortCriterion): void;\n\n  /**\n   * Toggles the specified facet value.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSelect(selection: NumericFacetValue): void;\n\n  /**\n   * Toggles the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSingleSelect(selection: NumericFacetValue): void;\n\n  /**\n   * Enables the facet. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the facet. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `NumericFacet` controller.\n   */\n  state: NumericFacetState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `NumericFacet` controller.\n *\n * @group Controllers\n * @category NumericFacet\n */\nexport interface NumericFacetState {\n  /**\n   * The facet ID.\n   * */\n  facetId: string;\n\n  /**\n   * The values of the facet.\n   */\n  values: NumericFacetValue[];\n\n  /**\n   * The active sortCriterion of the facet.\n   */\n  sortCriterion: RangeFacetSortCriterion;\n\n  /**\n   * `true` if a search is in progress and `false` otherwise.\n   */\n  isLoading: boolean;\n\n  /**\n   * `true` if there is at least one non-idle value and `false` otherwise.\n   */\n  hasActiveValues: boolean;\n\n  /**\n   * Whether the facet is enabled and its values are used to filter search results.\n   */\n  enabled: boolean;\n}\n\n/**\n * Creates a `NumericFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `NumericFacet` properties.\n * @returns A `NumericFacet` controller instance.\n *\n * @group Controllers\n * @category NumericFacet\n */\nexport function buildCoreNumericFacet(\n  engine: CoreEngine,\n  props: NumericFacetProps\n): NumericFacet {\n  if (!loadNumericFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  assertRangeFacetOptions(props.options, 'buildNumericFacet');\n\n  const dispatch = engine.dispatch;\n\n  const facetId = determineFacetId(engine, props.options);\n  const tabs = props.options.tabs ?? {};\n  const activeTab = selectActiveTab(engine.state.tabSet);\n  const options: RegisterNumericFacetActionCreatorPayload = {\n    currentValues: [],\n    ...props.options,\n    facetId,\n    tabs,\n    activeTab,\n  };\n\n  validateNumericFacetOptions(engine, options);\n\n  dispatch(registerNumericFacet(options));\n\n  const rangeFacet = buildCoreRangeFacet<\n    NumericFacetRequest,\n    NumericFacetResponse\n  >(engine, {\n    facetId,\n    getRequest: () => engine.state.numericFacetSet[facetId]!.request,\n  });\n\n  return {\n    ...rangeFacet,\n    toggleSelect: (selection: NumericFacetValue) =>\n      dispatch(executeToggleNumericFacetSelect({facetId, selection})),\n\n    toggleSingleSelect(selection: NumericFacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleSelect(selection);\n    },\n\n    get state() {\n      return rangeFacet.state;\n    },\n  };\n}\n\nfunction loadNumericFacetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  NumericFacetSection &\n    FacetOptionsSection &\n    ConfigurationSection &\n    SearchSection\n> {\n  engine.addReducers({numericFacetSet, facetOptions, configuration, search});\n  return true;\n}\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options.js';\nimport {\n  ConfigurationSection,\n  NumericFacetSection,\n} from '../../../../state/state-sections.js';\nimport {updateFacetOptions} from '../../../facet-options/facet-options-actions.js';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation.js';\nimport {\n  executeToggleRangeFacetExclude,\n  executeToggleRangeFacetSelect,\n} from '../generic/range-facet-controller-actions.js';\nimport {numericFacetValueDefinition} from '../generic/range-facet-validate-payload.js';\nimport {NumericFacetValue} from './interfaces/response.js';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n} from './numeric-facet-actions.js';\n\nconst definition = {\n  facetId: facetIdDefinition,\n  selection: new RecordValue({values: numericFacetValueDefinition}),\n};\n\nexport const executeToggleNumericFacetSelect = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: NumericFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & NumericFacetSection>\n>(\n  'numericFacet/executeToggleSelect',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleSelectNumericFacetValue(payload));\n    dispatch(executeToggleRangeFacetSelect(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n\nexport const executeToggleNumericFacetExclude = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: NumericFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & NumericFacetSection>\n>(\n  'numericFacet/executeToggleExclude',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleExcludeNumericFacetValue(payload));\n    dispatch(executeToggleRangeFacetExclude(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n", "import {\n  ArrayValue,\n  BooleanValue,\n  NumberValue,\n  RecordValue,\n  Schema,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {CoreEngine} from '../../../../../app/engine.js';\nimport {\n  FacetResultsMustMatch,\n  facetResultsMustMatch,\n} from '../../../../../features/facets/facet-api/request.js';\nimport {facetValueStates} from '../../../../../features/facets/facet-api/value.js';\nimport {\n  rangeFacetRangeAlgorithm,\n  RangeFacetRangeAlgorithm,\n  rangeFacetSortCriteria,\n  RangeFacetSortCriterion,\n} from '../../../../../features/facets/range-facets/generic/interfaces/request.js';\nimport {NumericRangeRequest} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {validateManualNumericRanges} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-actions.js';\nimport {\n  ConfigurationSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../../state/state-sections.js';\nimport {validateOptions} from '../../../../../utils/validate-payload.js';\nimport {\n  facetId,\n  field,\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n} from '../../../../core/facets/_common/facet-option-definitions.js';\n\n/**\n * The options defining a `NumericFacet`.\n */\nexport interface NumericFacetOptions {\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * The tabs on which the facet should be enabled or disabled.\n   */\n  tabs?: {included?: string[]; excluded?: string[]};\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: NumericRangeRequest[];\n\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  facetId?: string;\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch?: FacetResultsMustMatch;\n\n  /**\n   * The algorithm that's used for generating the ranges of this facet when they aren't manually defined. The default value of `\"even\"` generates equally sized facet ranges across all of the results. The value `\"equiprobable\"` generates facet ranges which vary in size but have a more balanced number of results within each range.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst numericRangeRequestDefinition: SchemaDefinition<NumericRangeRequest> = {\n  start: new NumberValue(),\n  end: new NumberValue(),\n  endInclusive: new BooleanValue(),\n  state: new StringValue({constrainTo: facetValueStates}),\n};\n\nexport const numericFacetOptionsSchema = new Schema<\n  Required<NumericFacetOptions>\n>({\n  facetId,\n  tabs: new RecordValue({\n    options: {\n      required: false,\n    },\n    values: {\n      included: new ArrayValue({each: new StringValue()}),\n      excluded: new ArrayValue({each: new StringValue()}),\n    },\n  }),\n  field,\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  currentValues: new ArrayValue({\n    each: new RecordValue({values: numericRangeRequestDefinition}),\n  }),\n  sortCriteria: new StringValue({constrainTo: rangeFacetSortCriteria}),\n  resultsMustMatch: new StringValue({constrainTo: facetResultsMustMatch}),\n  rangeAlgorithm: new StringValue({constrainTo: rangeFacetRangeAlgorithm}),\n});\n\nexport function validateNumericFacetOptions(\n  engine: CoreEngine<\n    NumericFacetSection & ConfigurationSection & SearchSection\n  >,\n  options: NumericFacetOptions\n) {\n  validateOptions(\n    engine,\n    numericFacetOptionsSchema,\n    options,\n    'buildNumericFacet'\n  );\n  validateManualNumericRanges(options);\n}\n", "import {FacetSortOrder} from '../facet-set/interfaces/request.js';\nimport {FacetValueState} from './value.js';\n\nexport interface BaseFacetRequest {\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  facetId: string;\n  /** The field whose values you want to display in the facet.*/\n  field: string;\n  /** Whether to exclude folded result parents when estimating the result count for each facet value.\n   * @defaultValue `true`\n   */\n  filterFacetCount: boolean;\n  /** The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth: number;\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   * Minimum: `1`\n   * @defaultValue `8`\n   */\n  numberOfValues: number;\n  /** Whether to prevent Coveo ML from automatically selecting values.\n   * @defaultValue `false`\n   */\n  preventAutoSelect: boolean;\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch: FacetResultsMustMatch;\n}\n\nexport interface BaseFacetValueRequest {\n  /** The current facet value state.\n   * @defaultValue `idle`\n   */\n  state: FacetValueState;\n}\n\nexport interface CurrentValues<T> {\n  /** The values displayed by the facet in the search interface at the moment of the request.\n   * @defaultValue `[]`\n   */\n  currentValues: T[];\n}\n\nexport interface Freezable {\n  /** Setting this to true is ensures that the facet does not move around while the end-user is interacting with it in the search interface.\n   * @defaultValue `false`\n   */\n  freezeCurrentValues: boolean;\n}\n\nexport interface Delimitable {\n  /** The character that specifies the hierarchical dependency.\n   * @defaultValue `>`\n   */\n  delimitingCharacter: string;\n}\n\nexport interface Expandable {\n  /** Whether the facet is expanded in the search interface at the moment of the request.\n   * @defaultValue `false`\n   */\n  isFieldExpanded: boolean;\n}\n\nexport interface Type<T extends FacetType> {\n  type: T;\n}\n\nexport type FacetType =\n  | 'specific'\n  | 'dateRange'\n  | 'numericalRange'\n  | 'hierarchical';\n\nexport interface SortCriteria<\n  T extends\n    | 'score'\n    | 'alphanumeric'\n    | 'alphanumericDescending'\n    | 'ascending'\n    | 'descending'\n    | 'occurrences'\n    | 'automatic'\n    | SpecificSortCriteriaExplicitAlphanumeric,\n> {\n  /** The sort criterion to apply to the returned facet values. */\n  sortCriteria: T;\n}\n\nexport interface SpecificSortCriteriaExplicitAlphanumeric {\n  type: 'alphanumeric';\n  order: FacetSortOrder;\n}\n\nexport interface RangeAlgorithm<T extends 'even' | 'equiprobable'> {\n  /** The range algorithm to apply to automatically generated ranges for range facet. */\n  rangeAlgorithm: T;\n}\n\nexport type FacetResultsMustMatch = 'allValues' | 'atLeastOneValue';\n\nexport const facetResultsMustMatch: FacetResultsMustMatch[] = [\n  'allValues',\n  'atLeastOneValue',\n];\n\nexport interface AllowedValues {\n  /**\n   *  Specifies an explicit list of `allowedValues` in the Search API request.\n   *\n   * If you specify a list of values for this option, the facet uses only these values (if they are available in\n   * the current result set).\n   */\n  allowedValues?: {\n    type: 'simple';\n    values: string[];\n  };\n}\n\nexport interface CustomSort {\n  /**\n   * Identifies the facet values that must appear at the top, in this order.\n   * This parameter can be used in conjunction with the `sortCriteria` parameter.\n   *\n   * Facet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n   *\n   * The maximum amount of custom sort values is 25.\n   *\n   * The default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`.\n   */\n  customSort?: string[];\n}\n", "import {NumericRangeRequest} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/request.js';\nimport {FacetValueState} from '../../facet/headless-core-facet.js';\n\nexport interface NumericRangeOptions {\n  /**\n   * The starting value of the numeric range.\n   */\n  start: number;\n\n  /**\n   * The ending value of the numeric range.\n   */\n  end: number;\n\n  /**\n   * Whether to include the `end` value in the range.\n   *\n   * @defaultValue `false`\n   */\n  endInclusive?: boolean;\n\n  /**\n   * The current facet value state.\n   *\n   * @defaultValue `idle`\n   */\n  state?: FacetValueState;\n}\n\n/**\n * Creates a `NumericRangeRequest`.\n *\n * @param config - The options with which to create a `NumericRangeRequest`.\n * @returns A new `NumericRangeRequest`.\n */\nexport function buildNumericRange(\n  config: NumericRangeOptions\n): NumericRangeRequest {\n  return {\n    endInclusive: false,\n    state: 'idle',\n    ...config,\n  };\n}\n", "import {SchemaDefinition} from '@coveo/bueno';\nimport {UnknownAction} from '@reduxjs/toolkit';\nimport {CommerceAPIErrorStatusResponse} from '../../../../api/commerce/commerce-api-error-response.js';\nimport {FacetSearchType} from '../../../../api/commerce/facet-search/facet-search-request.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {AnyFacetResponse} from '../../../../features/commerce/facets/facet-set/interfaces/response.js';\nimport {Parameters} from '../../../../features/commerce/parameters/parameters-actions.js';\nimport {Serializer} from '../../../../features/commerce/parameters/parameters-serializer.js';\nimport {ProductListingParameters} from '../../../../features/commerce/product-listing-parameters/product-listing-parameters-actions.js';\nimport {CommerceSearchParameters} from '../../../../features/commerce/search-parameters/search-parameters-actions.js';\nimport {ProductListingSummaryState} from '../../product-listing/summary/headless-product-listing-summary.js';\nimport {\n  buildDidYouMean,\n  DidYouMean,\n} from '../../search/did-you-mean/headless-did-you-mean.js';\nimport {SearchSummaryState} from '../../search/summary/headless-search-summary.js';\nimport {\n  BreadcrumbManager,\n  buildCoreBreadcrumbManager,\n} from '../breadcrumb-manager/headless-core-breadcrumb-manager.js';\nimport {FetchProductsActionCreator} from '../common.js';\nimport {buildCategoryFacet} from '../facets/category/headless-commerce-category-facet.js';\nimport {buildCommerceDateFacet} from '../facets/date/headless-commerce-date-facet.js';\nimport {\n  buildFacetGenerator,\n  FacetGenerator,\n} from '../facets/generator/headless-commerce-facet-generator.js';\nimport {buildCommerceLocationFacet} from '../facets/location/headless-commerce-location-facet.js';\nimport {buildCommerceNumericFacet} from '../facets/numeric/headless-commerce-numeric-facet.js';\nimport {buildCommerceRegularFacet} from '../facets/regular/headless-commerce-regular-facet.js';\nimport {\n  buildCoreInteractiveProduct,\n  InteractiveProduct,\n  InteractiveProductProps,\n} from '../interactive-product/headless-core-interactive-product.js';\nimport {\n  buildCorePagination,\n  Pagination,\n  PaginationProps,\n} from '../pagination/headless-core-commerce-pagination.js';\nimport {\n  buildCoreParameterManager,\n  ParameterManager,\n  ParameterManagerProps,\n} from '../parameter-manager/headless-core-parameter-manager.js';\nimport {\n  buildCoreSort,\n  Sort,\n  SortProps,\n} from '../sort/headless-core-commerce-sort.js';\nimport {\n  buildCoreSummary,\n  Summary,\n  SummaryState,\n} from '../summary/headless-core-summary.js';\nimport {\n  buildCoreUrlManager,\n  UrlManager,\n  type UrlManagerProps,\n} from '../url-manager/headless-core-url-manager.js';\n\nexport interface BaseSolutionTypeSubControllers<S extends SummaryState> {\n  /**\n   * Creates an `InteractiveProduct` sub-controller.\n   * @param props - The properties for the `InteractiveProduct` sub-controller.\n   * @returns An `InteractiveProduct` sub-controller.\n   */\n  interactiveProduct(props: InteractiveProductProps): InteractiveProduct;\n\n  /**\n   * Creates a `Pagination` sub-controller.\n   * @param props - The optional properties for the `Pagination` sub-controller.\n   * @returns A `Pagination` sub-controller.\n   */\n  pagination(props?: PaginationProps): Pagination;\n\n  /**\n   * Creates a `Summary` sub-controller.\n   * @returns A `Summary` sub-controller.\n   */\n  summary(): Summary<S>;\n}\n\nexport interface SearchAndListingSubControllers<\n  P extends Parameters,\n  S extends SummaryState,\n> extends BaseSolutionTypeSubControllers<S> {\n  /**\n   * Creates a `Sort` sub-controller.\n   * @param props - Optional properties for the `Sort` sub-controller.\n   * @returns A `Sort` sub-controller.\n   */\n  sort(props?: SortProps): Sort;\n\n  /**\n   * Creates a `FacetGenerator` sub-controller.\n   * @returns A `FacetGenerator` sub-controller.\n   */\n  facetGenerator(): FacetGenerator;\n\n  /**\n   * Creates a `BreadcrumbManager` sub-controller.\n   * @returns A `BreadcrumbManager` sub-controller.\n   */\n  breadcrumbManager(): BreadcrumbManager;\n\n  /**\n   * Creates a `UrlManager` sub-controller with the specified properties.\n   * @param props - Properties for the `UrlManager` sub-controller.\n   * @returns A `UrlManager` sub-controller.\n   */\n  urlManager(props: UrlManagerProps): UrlManager;\n\n  /**\n   * Creates a `ParameterManager` sub-controller with the specified properties.\n   * @param props - Properties for the `ParameterManager` sub-controller.\n   * @returns A `ParameterManager` sub-controller.\n   */\n  parameterManager(props: ParameterManagerProps<P>): ParameterManager<P>;\n}\n\nexport interface SearchSubControllers\n  extends SearchAndListingSubControllers<\n    CommerceSearchParameters,\n    SearchSummaryState\n  > {\n  /**\n   * Creates a `DidYouMean` sub-controller.\n   * @returns A `DidYouMean` sub-controller.\n   */\n  didYouMean(): DidYouMean;\n}\n\ninterface BaseSubControllerProps<S extends SummaryState> {\n  responseIdSelector: (state: CommerceEngineState) => string;\n  isLoadingSelector: (state: CommerceEngineState) => boolean;\n  numberOfProductsSelector: (state: CommerceEngineState) => number;\n  errorSelector: (\n    state: CommerceEngineState\n  ) => CommerceAPIErrorStatusResponse | null;\n  pageSelector: (state: CommerceEngineState) => number;\n  perPageSelector: (state: CommerceEngineState) => number;\n  totalEntriesSelector: (state: CommerceEngineState) => number;\n  fetchProductsActionCreator: FetchProductsActionCreator;\n  fetchMoreProductsActionCreator: FetchProductsActionCreator;\n  enrichSummary?: (state: CommerceEngineState) => Partial<S>;\n  slotId?: string;\n}\n\nexport interface SearchAndListingSubControllerProps<\n  P extends Parameters,\n  S extends SummaryState,\n> extends BaseSubControllerProps<S> {\n  facetResponseSelector: (\n    state: CommerceEngine[typeof stateKey],\n    facetId: string\n  ) => AnyFacetResponse | undefined;\n  isFacetLoadingResponseSelector: (\n    state: CommerceEngine[typeof stateKey]\n  ) => boolean;\n  requestIdSelector: (state: CommerceEngine[typeof stateKey]) => string;\n  serializer: Serializer<P>;\n  parametersDefinition: SchemaDefinition<Required<P>>;\n  activeParametersSelector: (state: CommerceEngine[typeof stateKey]) => P;\n  restoreActionCreator: (parameters: P) => UnknownAction;\n  enrichParameters: (\n    state: CommerceEngine[typeof stateKey],\n    activeParams: P\n  ) => Required<P>;\n  facetSearchType: FacetSearchType;\n}\n\n/**\n * Builds the sub-controllers for the commerce search use case.\n *\n * @param engine - The commerce engine.\n * @param subControllerProps - The properties for the search sub-controllers.\n * @returns The search sub-controllers.\n */\nexport function buildSearchSubControllers(\n  engine: CommerceEngine,\n  subControllerProps: Omit<\n    SearchAndListingSubControllerProps<\n      CommerceSearchParameters,\n      SearchSummaryState\n    >,\n    'facetSearchType'\n  >\n): SearchSubControllers {\n  return {\n    ...buildSearchAndListingsSubControllers(engine, {\n      ...subControllerProps,\n      facetSearchType: 'SEARCH',\n    }),\n    didYouMean() {\n      return buildDidYouMean(engine);\n    },\n  };\n}\n\n/**\n * Builds the sub-controllers for the commerce product listing use case.\n *\n * @param engine - The commerce engine.\n * @param subControllerProps - The properties for the listing sub-controllers.\n * @returns The product listing sub-controllers.\n */\nexport function buildProductListingSubControllers(\n  engine: CommerceEngine,\n  subControllerProps: Omit<\n    SearchAndListingSubControllerProps<\n      ProductListingParameters,\n      ProductListingSummaryState\n    >,\n    'facetSearchType'\n  >\n): SearchAndListingSubControllers<\n  ProductListingParameters,\n  ProductListingSummaryState\n> {\n  return buildSearchAndListingsSubControllers(engine, {\n    ...subControllerProps,\n    facetSearchType: 'LISTING',\n  });\n}\n\n/**\n * Builds the sub-controllers for the commerce search and product listing use cases.\n *\n * @param engine - The commerce engine.\n * @param subControllerProps - The properties for the search and product listing sub-controllers.\n * @returns The search and product listing sub-controllers.\n */\nexport function buildSearchAndListingsSubControllers<\n  P extends Parameters,\n  S extends SummaryState,\n>(\n  engine: CommerceEngine,\n  subControllerProps: SearchAndListingSubControllerProps<P, S>\n): SearchAndListingSubControllers<P, S> {\n  const {\n    fetchProductsActionCreator,\n    facetResponseSelector,\n    isFacetLoadingResponseSelector,\n    requestIdSelector,\n    serializer,\n    parametersDefinition,\n    activeParametersSelector,\n    restoreActionCreator,\n    enrichParameters,\n    facetSearchType,\n  } = subControllerProps;\n  return {\n    ...buildBaseSubControllers(engine, subControllerProps),\n    sort(props?: SortProps) {\n      return buildCoreSort(engine, {\n        ...props,\n        fetchProductsActionCreator,\n      });\n    },\n    facetGenerator() {\n      const commonOptions = {\n        fetchProductsActionCreator,\n        facetResponseSelector,\n        isFacetLoadingResponseSelector,\n        facetSearch: {type: facetSearchType},\n      };\n      return buildFacetGenerator(engine, {\n        buildRegularFacet: (_engine, options) =>\n          buildCommerceRegularFacet(engine, {...options, ...commonOptions}),\n        buildNumericFacet: (_engine, options) =>\n          buildCommerceNumericFacet(engine, {...options, ...commonOptions}),\n        buildDateFacet: (_engine, options) =>\n          buildCommerceDateFacet(engine, {...options, ...commonOptions}),\n        buildCategoryFacet: (_engine, options) =>\n          buildCategoryFacet(engine, {...options, ...commonOptions}),\n        buildLocationFacet: (_engine, options) =>\n          buildCommerceLocationFacet(engine, {...options, ...commonOptions}),\n        fetchProductsActionCreator,\n      });\n    },\n    breadcrumbManager() {\n      return buildCoreBreadcrumbManager(engine, {\n        facetResponseSelector,\n        fetchProductsActionCreator,\n      });\n    },\n    urlManager(props: UrlManagerProps) {\n      return buildCoreUrlManager(engine, {\n        ...props,\n        requestIdSelector,\n        parameterManagerBuilder: (_engine, props) =>\n          this.parameterManager(props),\n        serializer,\n      });\n    },\n    parameterManager(props: ParameterManagerProps<P>) {\n      return buildCoreParameterManager(engine, {\n        ...props,\n        parametersDefinition,\n        activeParametersSelector,\n        restoreActionCreator,\n        fetchProductsActionCreator,\n        enrichParameters,\n      });\n    },\n  };\n}\n\n/**\n * Builds the `InteractiveProduct` and `Pagination` sub-controllers for a commerce engine.\n * @param engine - The commerce engine.\n * @param subControllerProps - The properties for the `InteractiveProduct` and `Pagination` sub-controllers.\n * @returns The `InteractiveProduct` and `Pagination` sub-controllers.\n */\nexport function buildBaseSubControllers<S extends SummaryState>(\n  engine: CommerceEngine,\n  subControllerProps: BaseSubControllerProps<S>\n): BaseSolutionTypeSubControllers<S> {\n  const {\n    responseIdSelector,\n    isLoadingSelector,\n    errorSelector,\n    numberOfProductsSelector,\n    fetchProductsActionCreator,\n    fetchMoreProductsActionCreator,\n    slotId,\n    pageSelector,\n    perPageSelector,\n    totalEntriesSelector,\n    enrichSummary,\n  } = subControllerProps;\n  return {\n    interactiveProduct(props: InteractiveProductProps) {\n      return buildCoreInteractiveProduct(engine, {\n        ...props,\n        responseIdSelector,\n      });\n    },\n    pagination(props?: PaginationProps) {\n      return buildCorePagination(engine, {\n        ...props,\n        options: {\n          ...props?.options,\n          slotId,\n        },\n        fetchProductsActionCreator,\n        fetchMoreProductsActionCreator,\n      });\n    },\n    summary(): Summary<S> {\n      return buildCoreSummary(engine, {\n        options: {\n          responseIdSelector,\n          isLoadingSelector,\n          errorSelector,\n          numberOfProductsSelector,\n          pageSelector,\n          perPageSelector,\n          totalEntriesSelector,\n          enrichSummary,\n        },\n      });\n    },\n  };\n}\n", "import {\n  QueryCorrection,\n  WordCorrection,\n} from '../../../../api/search/search/query-corrections.js';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {didYouMeanReducer as didYouMean} from '../../../../features/commerce/did-you-mean/did-you-mean-slice.js';\nimport {CommerceDidYouMeanSection} from '../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../utils/errors.js';\nimport {\n  buildController,\n  Controller,\n} from '../../../controller/headless-controller.js';\nimport {DidYouMeanState} from '../../../did-you-mean/headless-did-you-mean.js';\n\nexport type {QueryCorrection, WordCorrection, DidYouMeanState};\n\n/**\n * The `DidYouMean` controller is responsible for handling query corrections.\n *\n * @group Sub-controllers\n * @category DidYouMean\n */\nexport interface DidYouMean extends Controller {\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `DidYouMean` controller.\n   */\n  state: DidYouMeanState;\n}\n\n/**\n * The `DidYouMean` controller is responsible for handling query corrections.\n *\n * @param engine - The commerce engine.\n * @returns A `DidYouMean` controller.\n *\n * @group Sub-controllers\n * @category DidYouMean\n */\nexport function buildDidYouMean(engine: CommerceEngine): DidYouMean {\n  if (!loadDidYouMeanReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const getState = () => engine[stateKey].didYouMean;\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        originalQuery: state.originalQuery,\n        wasCorrectedTo: state.wasCorrectedTo,\n        queryCorrection: state.queryCorrection,\n        hasQueryCorrection: state.queryCorrection.correctedQuery !== '',\n        wasAutomaticallyCorrected: state.wasCorrectedTo !== '',\n      };\n    },\n  };\n}\n\nfunction loadDidYouMeanReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<CommerceDidYouMeanSection> {\n  engine.addReducers({\n    didYouMean,\n  });\n  return true;\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {\n  clearAllCoreFacets,\n  deselectAllValuesInCoreFacet,\n  updateCoreFacetFreezeCurrentValues,\n} from '../../../../features/commerce/facets/core-facet/core-facet-actions.js';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n} from '../../../../features/commerce/facets/date-facet/date-facet-actions.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../../../../features/commerce/facets/facet-set/facet-set-slice.js';\nimport {FacetType} from '../../../../features/commerce/facets/facet-set/interfaces/common.js';\nimport {\n  AnyFacetResponse,\n  AnyFacetValueResponse,\n  BaseFacetValue,\n  CategoryFacetResponse,\n  DateFacetResponse,\n  LocationFacetResponse,\n  NumericFacetResponse,\n  RegularFacetResponse,\n} from '../../../../features/commerce/facets/facet-set/interfaces/response.js';\nimport {toggleSelectLocationFacetValue} from '../../../../features/commerce/facets/location-facet/location-facet-actions.js';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n} from '../../../../features/commerce/facets/numeric-facet/numeric-facet-actions.js';\nimport {\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n} from '../../../../features/commerce/facets/regular-facet/regular-facet-actions.js';\nimport {findActiveValueAncestry} from '../../../../features/facets/category-facet-set/category-facet-utils.js';\nimport {facetOrderReducer as facetOrder} from '../../../../features/facets/facet-order/facet-order-slice.js';\nimport {\n  CommerceFacetSetSection,\n  FacetOrderSection,\n} from '../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../utils/errors.js';\nimport {\n  BreadcrumbValue,\n  CoreBreadcrumbManager,\n  DeselectableValue,\n} from '../../../breadcrumb-manager/headless-breadcrumb-manager.js';\nimport {buildController} from '../../../controller/headless-controller.js';\nimport {ToggleActionCreator} from '../common.js';\nimport {CoreCommerceFacetOptions} from '../facets/headless-core-commerce-facet.js';\n\nexport type {BreadcrumbValue, DeselectableValue};\n\n/**\n * Represents a generic breadcrumb type.\n *\n * @group Sub-controllers\n * @category BreadcrumbManager\n */\nexport interface Breadcrumb<Value extends BaseFacetValue> {\n  /**\n   * The ID of the underlying facet.\n   */\n  facetId: string;\n  /**\n   * The display name of the underlying facet.\n   */\n  facetDisplayName: string;\n  /**\n   * The field on which the underlying facet is configured.\n   */\n  field: string;\n  /**\n   * The type of the underlying facet.\n   */\n  type: string;\n  /**\n   * The list of facet values currently selected.\n   */\n  values: BreadcrumbValue<Value>[];\n}\n\nexport type CoreBreadcrumbManagerOptions = Pick<\n  CoreCommerceFacetOptions,\n  'facetResponseSelector' | 'fetchProductsActionCreator'\n>;\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `BreadcrumbManager` sub-controller.\n *\n * @group Sub-controllers\n * @category BreadcrumbManager\n */\nexport interface BreadcrumbManagerState {\n  /**\n   * The list of facet breadcrumbs.\n   */\n  facetBreadcrumbs: Breadcrumb<AnyFacetValueResponse>[];\n\n  /**\n   * Whether any breadcrumbs are available (i.e., if any facet values are currently active).\n   */\n  hasBreadcrumbs: boolean;\n}\n\n/**\n * The `BreadcrumbManager` sub-controller manages a summary of the currently active facet filters.\n */\nexport type BreadcrumbManager = Omit<\n  CoreBreadcrumbManager,\n  'deselectBreadcrumb' | 'state'\n> & {\n  /**\n   * The state of the `BreadcrumbManager` sub-controller.\n   */\n  state: BreadcrumbManagerState;\n};\n\ninterface ActionCreators {\n  toggleSelectActionCreator: ToggleActionCreator;\n  toggleExcludeActionCreator?: ToggleActionCreator;\n}\n\nconst actions: Record<FacetType, ActionCreators> = {\n  regular: {\n    toggleSelectActionCreator: toggleSelectFacetValue,\n    toggleExcludeActionCreator: toggleExcludeFacetValue,\n  },\n  numericalRange: {\n    toggleSelectActionCreator: toggleSelectNumericFacetValue,\n    toggleExcludeActionCreator: toggleExcludeNumericFacetValue,\n  },\n  dateRange: {\n    toggleSelectActionCreator: toggleSelectDateFacetValue,\n    toggleExcludeActionCreator: toggleExcludeDateFacetValue,\n  },\n  location: {\n    toggleSelectActionCreator: toggleSelectLocationFacetValue,\n  },\n  hierarchical: {\n    toggleSelectActionCreator: deselectAllValuesInCoreFacet,\n  },\n};\n\n/**\n * @internal\n * Creates a `BreadcrumbManager` sub-controller.\n *\n * @param engine - The headless commerce engine.\n * @param options - The `BreadcrumbManager` options used internally.\n * @returns A `BreadcrumbManager` sub-controller.\n **/\nexport function buildCoreBreadcrumbManager(\n  engine: CommerceEngine,\n  options: CoreBreadcrumbManagerOptions\n): BreadcrumbManager {\n  if (!loadCommerceBreadcrumbManagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const createBreadcrumb = (facet: AnyFacetResponse) => ({\n    facetId: facet.facetId,\n    facetDisplayName: facet.displayName,\n    field: facet.field,\n    type: facet.type,\n    values:\n      facet.type === 'hierarchical'\n        ? getValuesForCategoryFacet(facet)\n        : getValuesForNonCategoryFacet(facet),\n  });\n\n  const getValuesForNonCategoryFacet = (\n    facet:\n      | RegularFacetResponse\n      | NumericFacetResponse\n      | DateFacetResponse\n      | LocationFacetResponse\n  ) => {\n    return facet.values\n      .filter((value) => value.state !== 'idle')\n      .map((selection) => ({\n        value: selection,\n        deselect: () => {\n          if (selection.state === 'selected') {\n            dispatch(\n              actions[facet.type].toggleSelectActionCreator({\n                facetId: facet.facetId,\n                selection,\n              })\n            );\n\n            if (facet.type !== 'location') {\n              dispatch(\n                updateCoreFacetFreezeCurrentValues({\n                  facetId: facet.facetId,\n                  freezeCurrentValues: false,\n                })\n              );\n            }\n            dispatch(options.fetchProductsActionCreator());\n          } else if (\n            selection.state === 'excluded' &&\n            facet.type !== 'location'\n          ) {\n            dispatch(\n              actions[facet.type].toggleExcludeActionCreator!({\n                facetId: facet.facetId,\n                selection,\n              })\n            );\n            dispatch(\n              updateCoreFacetFreezeCurrentValues({\n                facetId: facet.facetId,\n                freezeCurrentValues: false,\n              })\n            );\n            dispatch(options.fetchProductsActionCreator());\n          }\n        },\n      }));\n  };\n\n  const getValuesForCategoryFacet = (facet: CategoryFacetResponse) => {\n    const ancestry = findActiveValueAncestry(facet.values);\n    const activeValue =\n      ancestry.length > 0 ? ancestry[ancestry.length - 1] : undefined;\n\n    if (activeValue === undefined) {\n      return [];\n    }\n\n    return [\n      {\n        value: activeValue,\n        deselect: () => {\n          dispatch(\n            actions['hierarchical'].toggleSelectActionCreator({\n              facetId: facet.facetId,\n            })\n          );\n          dispatch(options.fetchProductsActionCreator());\n        },\n      },\n    ];\n  };\n\n  const hasActiveValue = (\n    facet: AnyFacetResponse | undefined\n  ): facet is AnyFacetResponse => {\n    if (!facet) {\n      return false;\n    }\n    if (facet.values.length === 0) {\n      return false;\n    }\n    if (facet.type === 'hierarchical') {\n      return findActiveValueAncestry(facet.values).length > 0;\n    }\n\n    return facet.values.some((value) => value.state !== 'idle');\n  };\n\n  const commerceFacetSelector = createSelector(\n    (state: CommerceEngineState) => state.facetOrder,\n    (facetOrder): BreadcrumbManagerState => {\n      const breadcrumbs = facetOrder.flatMap((facetId) => {\n        const facet = options.facetResponseSelector(engine[stateKey], facetId);\n\n        if (hasActiveValue(facet)) {\n          return [createBreadcrumb(facet)];\n        }\n        return [];\n      });\n\n      return {\n        facetBreadcrumbs: breadcrumbs,\n        hasBreadcrumbs: breadcrumbs.length > 0,\n      };\n    }\n  );\n\n  return {\n    ...controller,\n\n    deselectAll: () => {\n      dispatch(clearAllCoreFacets());\n      dispatch(options.fetchProductsActionCreator());\n    },\n\n    get state() {\n      return commerceFacetSelector(engine[stateKey]);\n    },\n  };\n}\n\nfunction loadCommerceBreadcrumbManagerReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<FacetOrderSection & CommerceFacetSetSection> {\n  engine.addReducers({facetOrder, commerceFacetSet});\n  return true;\n}\n", "import {CommerceEngine} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../../app/state-key.js';\nimport {\n  toggleSelectCategoryFacetValue,\n  updateCategoryFacetNumberOfValues,\n} from '../../../../../features/commerce/facets/category-facet/category-facet-actions.js';\nimport {CategoryFacetValueRequest} from '../../../../../features/commerce/facets/facet-set/interfaces/request.js';\nimport {defaultNumberOfValuesIncrement} from '../../../../../features/facets/category-facet-set/category-facet-set-actions.js';\nimport {findActiveValueAncestry} from '../../../../../features/facets/category-facet-set/category-facet-utils.js';\nimport {categoryFacetSearchStateSelector} from '../../../../../features/facets/facet-search-set/category/category-facet-search-state-selector.js';\nimport {\n  CategoryFacetValue,\n  CoreCommerceFacet,\n  CoreCommerceFacetOptions,\n  CoreCommerceFacetState,\n  FacetControllerType,\n  buildCoreCommerceFacet,\n} from '../headless-core-commerce-facet.js';\nimport {SearchableFacetOptions} from '../searchable/headless-commerce-searchable-facet.js';\nimport {\n  CategoryFacetSearch,\n  CategoryFacetSearchState,\n  buildCategoryFacetSearch,\n} from './headless-commerce-category-facet-search.js';\n\nexport type CategoryFacetOptions = Omit<\n  CoreCommerceFacetOptions,\n  'toggleExcludeActionCreator' | 'toggleSelectActionCreator'\n> &\n  SearchableFacetOptions;\n\n/**\n * The state of the `CategoryFacet` sub-controller.\n *\n * @group Sub-controllers\n * @category CategoryFacet\n * */\nexport type CategoryFacetState = Omit<\n  CoreCommerceFacetState<CategoryFacetValue>,\n  'type'\n> & {\n  activeValue?: CategoryFacetValue;\n  canShowLessValues: boolean;\n  canShowMoreValues: boolean;\n  hasActiveValues: boolean;\n  selectedValueAncestry?: CategoryFacetValue[];\n  facetSearch: CategoryFacetSearchState;\n  type: 'hierarchical';\n};\n\n/**\n * The `CategoryFacet` sub-controller offers a high-level programming interface for implementing a commerce category\n * facet UI component.\n *\n * @group Sub-controllers\n * @category CategoryFacet\n */\nexport type CategoryFacet = Omit<\n  CoreCommerceFacet<CategoryFacetValueRequest, CategoryFacetValue>,\n  | 'isValueExcluded'\n  | 'toggleExclude'\n  | 'toggleSingleExclude'\n  | 'toggleSingleSelect'\n> & {\n  facetSearch: Omit<CategoryFacetSearch, 'state'>;\n  state: CategoryFacetState;\n} & FacetControllerType<'hierarchical'>;\n\n/**\n * @internal\n *\n * **Important:** This initializer is meant for internal use by headless only.\n * As an implementer, you must not import or use this initializer directly in your code.\n * You will instead interact with `CategoryFacet` sub-controller instances through the state of a `FacetGenerator`\n * sub-controller.\n *\n * @param engine - The headless commerce engine.\n * @param options - The `CategoryFacet` options used internally.\n * @returns A `CategoryFacet` sub-controller instance.\n * */\nexport function buildCategoryFacet(\n  engine: CommerceEngine,\n  options: CategoryFacetOptions\n): CategoryFacet {\n  const coreController = buildCoreCommerceFacet<\n    CategoryFacetValueRequest,\n    CategoryFacetValue\n  >(engine, {\n    options: {\n      ...options,\n      toggleSelectActionCreator: toggleSelectCategoryFacetValue,\n    },\n  });\n  const {deselectAll, isValueSelected, subscribe, toggleSelect} =\n    coreController;\n  const {dispatch} = engine;\n  const getFacetId = () => coreController.state.facetId;\n  const facetSearch = buildCategoryFacetSearch(engine, {\n    options: {facetId: getFacetId(), ...options.facetSearch},\n    select: () => {\n      dispatch(options.fetchProductsActionCreator());\n    },\n    isForFieldSuggestions: false,\n  });\n\n  return {\n    deselectAll,\n    isValueSelected,\n    subscribe,\n    toggleSelect,\n\n    showMoreValues() {\n      const {facetId} = options;\n      const {activeValue, values} = this.state;\n      const numberOfValues =\n        (activeValue?.children.length ?? values.length) +\n        defaultNumberOfValuesIncrement;\n\n      dispatch(updateCategoryFacetNumberOfValues({facetId, numberOfValues}));\n      dispatch(options.fetchProductsActionCreator());\n    },\n\n    showLessValues() {\n      const {facetId} = options;\n\n      dispatch(\n        updateCategoryFacetNumberOfValues({\n          facetId,\n          numberOfValues: defaultNumberOfValuesIncrement,\n        })\n      );\n      dispatch(options.fetchProductsActionCreator());\n    },\n\n    facetSearch,\n\n    get state() {\n      return getCategoryFacetState(\n        coreController.state,\n        categoryFacetSearchStateSelector(engine[stateKey], getFacetId())\n      );\n    },\n\n    type: 'hierarchical',\n  };\n}\n\nexport const getCategoryFacetState = (\n  coreState: CoreCommerceFacetState<CategoryFacetValue>,\n  facetSearchSelector: ReturnType<typeof categoryFacetSearchStateSelector>\n): CategoryFacetState => {\n  const {values} = coreState;\n  const selectedValueAncestry = findActiveValueAncestry(values);\n  const activeValue = selectedValueAncestry.length\n    ? selectedValueAncestry[selectedValueAncestry.length - 1]\n    : undefined;\n  const canShowLessValues = activeValue\n    ? activeValue.children.length > defaultNumberOfValuesIncrement\n    : false;\n  const canShowMoreValues =\n    activeValue?.moreValuesAvailable ?? coreState.canShowMoreValues ?? false;\n  const hasActiveValues = !!activeValue;\n  return {\n    ...coreState,\n    activeValue,\n    canShowLessValues,\n    canShowMoreValues,\n    facetSearch: {\n      isLoading: facetSearchSelector?.isLoading ?? false,\n      moreValuesAvailable:\n        facetSearchSelector?.response.moreValuesAvailable ?? false,\n      query: facetSearchSelector?.options.query ?? '',\n      values: facetSearchSelector?.response.values ?? [],\n    },\n    hasActiveValues,\n    selectedValueAncestry,\n    type: 'hierarchical',\n    values,\n  };\n};\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchSection} from '../../../../state/state-sections.js';\nimport {CategoryFacetSearchState} from './category-facet-search-set-state.js';\n\nexport const categoryFacetSearchStateSelector = createSelector(\n  (state: CategoryFacetSearchSection, facetId: string) => ({\n    facetSearchSelector: state.categoryFacetSearchSet[facetId],\n  }),\n  ({facetSearchSelector}): CategoryFacetSearchState | undefined => {\n    return facetSearchSelector;\n  }\n);\n", "import {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {\n  deselectAllValuesInCoreFacet,\n  updateCoreFacetIsFieldExpanded,\n  updateCoreFacetNumberOfValues,\n} from '../../../../features/commerce/facets/core-facet/core-facet-actions.js';\nimport {facetRequestSelector} from '../../../../features/commerce/facets/facet-set/facet-set-selector.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../../../../features/commerce/facets/facet-set/facet-set-slice.js';\nimport {FacetType} from '../../../../features/commerce/facets/facet-set/interfaces/common.js';\nimport {\n  AnyFacetRequest,\n  CategoryFacetValueRequest,\n  LocationFacetValueRequest,\n} from '../../../../features/commerce/facets/facet-set/interfaces/request.js';\nimport {\n  AnyFacetResponse,\n  AnyFacetValueResponse,\n  BaseFacetValue,\n  CategoryFacetValue,\n  DateFacetValue,\n  LocationFacetValue,\n  NumericFacetValue,\n  RegularFacetValue,\n} from '../../../../features/commerce/facets/facet-set/interfaces/response.js';\nimport {FacetValueRequest} from '../../../../features/facets/facet-set/interfaces/request.js';\nimport {AnyFacetValueRequest} from '../../../../features/facets/generic/interfaces/generic-facet-request.js';\nimport {CommerceFacetSetSection} from '../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../utils/errors.js';\nimport {buildController} from '../../../controller/headless-controller.js';\nimport {\n  CoreFacet as HeadlessCoreFacet,\n  CoreFacetState,\n} from '../../../core/facets/facet/headless-core-facet.js';\nimport {DateRangeRequest} from '../../../core/facets/range-facet/date-facet/headless-core-date-facet.js';\nimport {NumericRangeRequest} from '../../../core/facets/range-facet/numeric-facet/headless-core-numeric-facet.js';\nimport {FetchProductsActionCreator, ToggleActionCreator} from '../common.js';\n\nexport type {\n  FacetType,\n  FacetValueRequest,\n  RegularFacetValue,\n  LocationFacetValueRequest,\n  LocationFacetValue,\n  NumericRangeRequest,\n  NumericFacetValue,\n  DateRangeRequest,\n  DateFacetValue,\n  CategoryFacetValueRequest,\n  CategoryFacetValue,\n  BaseFacetValue,\n};\n\nexport interface FacetControllerType<T extends FacetType> {\n  type: T;\n}\n\n/**\n * @internal\n *\n * The configurable `CoreCommerceFacet` properties used internally.\n */\nexport interface CoreCommerceFacetProps {\n  options: CoreCommerceFacetOptions;\n}\n\nexport interface CoreCommerceFacetOptions {\n  facetId: string;\n  toggleSelectActionCreator: ToggleActionCreator;\n  toggleExcludeActionCreator?: ToggleActionCreator;\n  fetchProductsActionCreator: FetchProductsActionCreator;\n  facetResponseSelector: (\n    state: CommerceEngine[typeof stateKey],\n    facetId: string\n  ) => AnyFacetResponse | undefined;\n  isFacetLoadingResponseSelector: (\n    state: CommerceEngine[typeof stateKey]\n  ) => boolean;\n}\n\nexport type CommerceFacetOptions = Omit<\n  CoreCommerceFacetOptions,\n  | 'fetchProductsActionCreator'\n  | 'toggleSelectActionCreator'\n  | 'toggleExcludeActionCreator'\n  | 'facetResponseSelector'\n  | 'isFacetLoadingResponseSelector'\n>;\n\nexport type CoreCommerceFacet<\n  ValueRequest extends AnyFacetValueRequest,\n  ValueResponse extends AnyFacetValueResponse,\n> = Pick<\n  HeadlessCoreFacet,\n  'deselectAll' | 'showLessValues' | 'showMoreValues' | 'subscribe'\n> & {\n  /**\n   * Toggles selection of the specified facet value.\n   *\n   * @param selection - The facet value to select.\n   */\n  toggleSelect(selection: ValueRequest): void;\n  /**\n   * Toggles exclusion of the specified facet value.\n   *\n   * @param selection - The facet value to exclude.\n   */\n  toggleExclude(selection: ValueRequest): void;\n  /**\n   * Toggles selection of the specified facet value, deselecting all others.\n   *\n   * @param selection - The facet value to single select.\n   */\n  toggleSingleSelect(selection: ValueRequest): void;\n  /**\n   * Toggles exclusion of the specified facet value, deselecting all others.\n   *\n   * @param selection - The facet value to single exclude.\n   */\n  toggleSingleExclude(selection: ValueRequest): void;\n  /**\n   * Whether the specified facet value is selected.\n   *\n   * @param value - The facet value to evaluate.\n   */\n  isValueSelected(value: ValueResponse): boolean;\n  /**\n   * Whether the specified facet value is excluded.\n   *\n   * @param value - The facet value to evaluate.\n   */\n  isValueExcluded(value: ValueResponse): boolean;\n};\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `CoreCommerceFacet` controller.\n */\nexport type CoreCommerceFacetState<\n  ValueResponse extends AnyFacetValueResponse,\n> = Omit<CoreFacetState, 'enabled' | 'sortCriterion' | 'values' | 'label'> & {\n  /**\n   * The type of facet.\n   */\n  type: FacetType;\n  /**\n   * The facet field.\n   */\n  field: string;\n  /**\n   * The facet display name.\n   */\n  displayName?: string;\n  /**\n   * The facet values\n   */\n  values: ValueResponse[];\n};\n\nexport type CoreCommerceFacetBuilder = typeof buildCoreCommerceFacet;\n\nexport function buildCoreCommerceFacet<\n  ValueRequest extends AnyFacetValueRequest,\n  ValueResponse extends AnyFacetValueResponse,\n>(engine: CommerceEngine, props: CoreCommerceFacetProps) {\n  if (!loadCommerceFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n\n  const facetId = props.options.facetId;\n\n  const getEngineState = () => engine[stateKey];\n\n  const getRequest = (): AnyFacetRequest | undefined =>\n    facetRequestSelector(getEngineState(), facetId);\n  const getResponse = () =>\n    props.options.facetResponseSelector(getEngineState(), facetId);\n  const getIsLoading = () =>\n    props.options.isFacetLoadingResponseSelector(getEngineState());\n\n  const getNumberOfActiveValues = () => {\n    return getRequest()?.values?.filter((v) => v.state !== 'idle').length ?? 0;\n  };\n\n  return {\n    ...controller,\n\n    toggleSelect: (selection: ValueRequest) => {\n      dispatch(\n        props.options.toggleSelectActionCreator({\n          selection,\n          facetId,\n          ...('retrieveCount' in selection\n            ? {retrieveCount: selection.retrieveCount}\n            : {}),\n        })\n      );\n      dispatch(props.options.fetchProductsActionCreator());\n    },\n\n    toggleExclude: (selection: ValueRequest) => {\n      // TODO CAPI-409: Rework facet type definitions\n      if (!props.options.toggleExcludeActionCreator) {\n        engine.logger.warn(\n          'No toggle exclude action creator provided; calling #toggleExclude had no effect.'\n        );\n        return;\n      }\n\n      dispatch(props.options.toggleExcludeActionCreator({selection, facetId}));\n      dispatch(props.options.fetchProductsActionCreator());\n    },\n\n    // Must use a function here to properly support inheritance with `this`.\n    toggleSingleSelect: function (selection: ValueRequest) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllValuesInCoreFacet({facetId}));\n      }\n\n      this.toggleSelect(selection);\n    },\n\n    // Must use a function here to properly support inheritance with `this`.\n    toggleSingleExclude: function (selection: ValueRequest) {\n      // TODO CAPI-409: Rework facet type definitions\n      if (!props.options.toggleExcludeActionCreator) {\n        engine.logger.warn(\n          'No toggle exclude action creator provided; calling #toggleSingleExclude had no effect.'\n        );\n        return;\n      }\n\n      if (selection.state === 'idle') {\n        dispatch(deselectAllValuesInCoreFacet({facetId}));\n      }\n\n      this.toggleExclude(selection);\n    },\n\n    isValueSelected: (value: ValueResponse) => {\n      return value.state === 'selected';\n    },\n\n    isValueExcluded: (value: ValueResponse) => {\n      return value.state === 'excluded';\n    },\n\n    deselectAll() {\n      dispatch(deselectAllValuesInCoreFacet({facetId}));\n      dispatch(props.options.fetchProductsActionCreator());\n    },\n\n    showMoreValues() {\n      const numberInState = getRequest()?.numberOfValues ?? 0;\n      const initialNumberOfValues = getRequest()?.initialNumberOfValues ?? 0;\n      const numberToNextMultipleOfConfigured =\n        initialNumberOfValues - (numberInState % initialNumberOfValues);\n      const numberOfValues = numberInState + numberToNextMultipleOfConfigured;\n\n      dispatch(updateCoreFacetNumberOfValues({facetId, numberOfValues}));\n      dispatch(\n        updateCoreFacetIsFieldExpanded({facetId, isFieldExpanded: true})\n      );\n      dispatch(props.options.fetchProductsActionCreator());\n    },\n\n    showLessValues() {\n      const initialNumberOfValues = getRequest()?.initialNumberOfValues ?? 0;\n      const newNumberOfValues = Math.max(\n        initialNumberOfValues,\n        getNumberOfActiveValues()\n      );\n\n      dispatch(\n        updateCoreFacetNumberOfValues({\n          facetId,\n          numberOfValues: newNumberOfValues,\n        })\n      );\n      dispatch(\n        updateCoreFacetIsFieldExpanded({facetId, isFieldExpanded: false})\n      );\n      dispatch(props.options.fetchProductsActionCreator());\n    },\n\n    get state(): CoreCommerceFacetState<ValueResponse> {\n      return getCoreFacetState(\n        facetId,\n        getRequest(),\n        getResponse(),\n        getIsLoading()\n      );\n    },\n  };\n}\n\nfunction loadCommerceFacetReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<CommerceFacetSetSection> {\n  engine.addReducers({commerceFacetSet});\n  return true;\n}\n\nconst canShowLessValues = (request: AnyFacetRequest | undefined) => {\n  if (!request) {\n    return false;\n  }\n\n  const initialNumberOfValues = request.initialNumberOfValues;\n  const hasIdleValues = !!request.values.find((v) => v.state === 'idle');\n\n  return (\n    (initialNumberOfValues ?? 0) < (request.numberOfValues ?? 0) &&\n    hasIdleValues\n  );\n};\n\nexport const getCoreFacetState = <T extends AnyFacetValueResponse>(\n  facetId: string,\n  request: AnyFacetRequest | undefined,\n  response: AnyFacetResponse | undefined,\n  isLoading: boolean\n): CoreCommerceFacetState<T> => {\n  return {\n    canShowLessValues: canShowLessValues(request),\n    canShowMoreValues: response?.moreValuesAvailable ?? false,\n    displayName: response?.displayName ?? '',\n    facetId: facetId,\n    field: response?.field ?? '',\n    hasActiveValues:\n      !response || response.type === 'hierarchical'\n        ? false\n        : response.values.some((v) => v.state !== 'idle'),\n    isLoading,\n    type: response?.type ?? 'regular',\n    values: response?.values ? (response.values as T[]) : [],\n  };\n};\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {CommerceFacetSetSection} from '../../../../state/state-sections.js';\nimport {AnyFacetRequest} from './interfaces/request.js';\n\nexport const facetRequestSelector = createSelector(\n  (state: CommerceFacetSetSection, facetId: string) => ({\n    facetRequestSelector: state.commerceFacetSet[facetId],\n  }),\n  ({facetRequestSelector}): AnyFacetRequest | undefined => {\n    return facetRequestSelector?.request;\n  }\n);\n", "import {FacetSearchType} from '../../../../../api/commerce/facet-search/facet-search-request.js';\nimport {CategoryFacetSearchResult} from '../../../../../api/search/facet-search/category-facet-search/category-facet-search-response.js';\nimport {CommerceEngine} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {\n  executeCommerceFacetSearch,\n  executeCommerceFieldSuggest,\n} from '../../../../../features/commerce/facets/facet-search-set/commerce-facet-search-actions.js';\nimport {categoryFacetSearchSetReducer as categoryFacetSearchSet} from '../../../../../features/facets/facet-search-set/category/category-facet-search-set-slice.js';\nimport {FacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-request-options.js';\nimport {CategoryFacetSearchSection} from '../../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../../utils/errors.js';\nimport {\n  CategoryFacetSearchProps as CoreCategoryFacetSearchProps,\n  buildCoreCategoryFacetSearch,\n} from '../../../../core/facets/facet-search/category/headless-category-facet-search.js';\nimport {CoreFacetSearchState} from '../searchable/headless-commerce-searchable-facet.js';\n\nexport type CategoryFacetSearchProps = Omit<\n  CoreCategoryFacetSearchProps,\n  'executeFacetSearchActionCreator' | 'executeFieldSuggestActionCreator'\n> & {\n  options: FacetSearchOptions & {type: FacetSearchType};\n};\n\nexport type CategoryFacetSearchState =\n  CoreFacetSearchState<CategoryFacetSearchResult>;\n\nexport type CategoryFacetSearch = Omit<\n  ReturnType<typeof buildCoreCategoryFacetSearch>,\n  'showMoreResults' | 'updateCaptions' | 'state'\n>;\n\nexport function buildCategoryFacetSearch(\n  engine: CommerceEngine,\n  props: CategoryFacetSearchProps\n): CategoryFacetSearch {\n  if (!loadCategoryFacetSearchReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {showMoreResults, state, updateCaptions, ...restOfFacetSearch} =\n    buildCoreCategoryFacetSearch(engine, {\n      ...props,\n      executeFacetSearchActionCreator: (facetId: string) =>\n        executeCommerceFacetSearch({\n          facetId,\n          facetSearchType: props.options.type,\n        }),\n      executeFieldSuggestActionCreator: (facetId: string) =>\n        executeCommerceFieldSuggest({\n          facetId,\n          facetSearchType: props.options.type,\n        }),\n    });\n\n  return restOfFacetSearch;\n}\n\nfunction loadCategoryFacetSearchReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<CategoryFacetSearchSection> {\n  engine.addReducers({categoryFacetSearchSet});\n  return true;\n}\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchResult} from '../../../../../api/search/facet-search/category-facet-search/category-facet-search-response.js';\nimport {AsyncThunkOptions} from '../../../../../app/async-thunk-options.js';\nimport {CoreEngine, CoreEngineNext} from '../../../../../app/engine.js';\nimport {stateKey} from '../../../../../app/state-key.js';\nimport {ThunkExtraArguments} from '../../../../../app/thunk-extra-arguments.js';\nimport {\n  registerCategoryFacetSearch,\n  selectCategoryFacetSearchResult,\n} from '../../../../../features/facets/facet-search-set/category/category-facet-search-actions.js';\nimport {defaultFacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-reducer-helpers.js';\nimport {FacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-request-options.js';\nimport {\n  CategoryFacetSearchSection,\n  ConfigurationSection,\n} from '../../../../../state/state-sections.js';\nimport {buildGenericFacetSearch} from '../facet-search.js';\n\nexport interface CategoryFacetSearchProps {\n  options: FacetSearchOptions;\n  isForFieldSuggestions: boolean;\n  select: (value: CategoryFacetSearchResult) => void;\n  executeFacetSearchActionCreator: (\n    facetId: string\n  ) => AsyncThunkAction<\n    unknown,\n    unknown,\n    AsyncThunkOptions<unknown, ThunkExtraArguments>\n  >;\n  executeFieldSuggestActionCreator: (\n    facetId: string\n  ) => AsyncThunkAction<\n    unknown,\n    unknown,\n    AsyncThunkOptions<unknown, ThunkExtraArguments>\n  >;\n}\n\nexport type CategoryFacetSearch = ReturnType<\n  typeof buildCoreCategoryFacetSearch\n>;\n\nexport function buildCoreCategoryFacetSearch(\n  engine:\n    | CoreEngine<CategoryFacetSearchSection & ConfigurationSection>\n    | CoreEngineNext<CategoryFacetSearchSection>,\n  props: CategoryFacetSearchProps\n) {\n  const {dispatch} = engine;\n  const options = {...defaultFacetSearchOptions, ...props.options};\n  const {facetId} = options;\n  const getFacetSearch = () =>\n    'state' in engine\n      ? engine.state.categoryFacetSearchSet[facetId]\n      : engine[stateKey].categoryFacetSearchSet[facetId];\n\n  dispatch(registerCategoryFacetSearch(options));\n\n  const genericFacetSearch = buildGenericFacetSearch(engine, {\n    options,\n    getFacetSearch,\n    isForFieldSuggestions: props.isForFieldSuggestions,\n    executeFacetSearchActionCreator: props.executeFacetSearchActionCreator,\n    executeFieldSuggestActionCreator: props.executeFieldSuggestActionCreator,\n  });\n\n  return {\n    ...genericFacetSearch,\n\n    select(value: CategoryFacetSearchResult) {\n      dispatch(\n        selectCategoryFacetSearchResult({\n          facetId,\n          value,\n        })\n      );\n      props.select(value);\n    },\n\n    get state() {\n      return genericFacetSearch.state;\n    },\n  };\n}\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {FacetSearchAPIClient} from '../../../../api/search/search-api-client.js';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options.js';\nimport {CoreEngine, CoreEngineNext} from '../../../../app/engine.js';\nimport {\n  ClientThunkExtraArguments,\n  ThunkExtraArguments,\n} from '../../../../app/thunk-extra-arguments.js';\nimport {CategoryFacetSearchState} from '../../../../features/facets/facet-search-set/category/category-facet-search-set-state.js';\nimport {FacetSearchOptions} from '../../../../features/facets/facet-search-set/facet-search-request-options.js';\nimport {clearFacetSearch} from '../../../../features/facets/facet-search-set/generic/generic-facet-search-actions.js';\nimport {updateFacetSearch} from '../../../../features/facets/facet-search-set/specific/specific-facet-search-actions.js';\nimport {SpecificFacetSearchState} from '../../../../features/facets/facet-search-set/specific/specific-facet-search-set-state.js';\nimport {\n  CategoryFacetSearchSection,\n  FacetSearchSection,\n} from '../../../../state/state-sections.js';\n\ntype FacetSearchState = SpecificFacetSearchState | CategoryFacetSearchState;\n\nexport interface GenericFacetSearchProps<T extends FacetSearchState> {\n  options: FacetSearchOptions;\n  getFacetSearch: () => T;\n  isForFieldSuggestions: boolean;\n\n  executeFacetSearchActionCreator: (\n    facetId: string\n  ) => AsyncThunkAction<\n    unknown,\n    unknown,\n    AsyncThunkOptions<unknown, ThunkExtraArguments>\n  >;\n  executeFieldSuggestActionCreator: (\n    facetId: string\n  ) => AsyncThunkAction<\n    unknown,\n    unknown,\n    AsyncThunkOptions<unknown, ThunkExtraArguments>\n  >;\n}\n\nexport type GenericFacetSearch = ReturnType<typeof buildGenericFacetSearch>;\n\nexport function buildGenericFacetSearch<T extends FacetSearchState>(\n  engine:\n    | CoreEngine<\n        FacetSearchSection | CategoryFacetSearchSection,\n        ClientThunkExtraArguments<FacetSearchAPIClient>\n      >\n    | CoreEngineNext<\n        FacetSearchSection | CategoryFacetSearchSection,\n        ClientThunkExtraArguments<FacetSearchAPIClient>\n      >,\n  props: GenericFacetSearchProps<T>\n) {\n  const dispatch = engine.dispatch;\n  const {\n    options,\n    getFacetSearch,\n    executeFacetSearchActionCreator,\n    executeFieldSuggestActionCreator,\n  } = props;\n  const {facetId} = options;\n\n  return {\n    /** Updates the facet search query.\n     * @param text The new query.\n     */\n    updateText(text: string) {\n      dispatch(\n        updateFacetSearch({\n          facetId,\n          query: text,\n          numberOfValues: getFacetSearch().initialNumberOfValues,\n        })\n      );\n    },\n\n    /** Increases number of results returned by numberOfResults */\n    showMoreResults() {\n      const {initialNumberOfValues, options} = getFacetSearch();\n      dispatch(\n        updateFacetSearch({\n          facetId,\n          numberOfValues: options.numberOfValues + initialNumberOfValues,\n        })\n      );\n      dispatch(\n        props.isForFieldSuggestions\n          ? executeFieldSuggestActionCreator(facetId)\n          : executeFacetSearchActionCreator(facetId)\n      );\n    },\n\n    /** Executes a facet search to update the values.*/\n    search() {\n      dispatch(\n        props.isForFieldSuggestions\n          ? executeFieldSuggestActionCreator(facetId)\n          : executeFacetSearchActionCreator(facetId)\n      );\n    },\n\n    /** Resets the query and empties the values. */\n    clear() {\n      dispatch(clearFacetSearch({facetId}));\n    },\n\n    /**\n     * Updates the facet value captions.\n     * @param captions - A dictionary that maps index field values to facet value display names.\n     */\n    updateCaptions(captions: Record<string, string>) {\n      dispatch(\n        updateFacetSearch({\n          facetId,\n          captions,\n        })\n      );\n    },\n\n    get state() {\n      const {response, isLoading, options} = getFacetSearch();\n      const {query} = options;\n      const values: T['response']['values'] = response.values;\n\n      return {\n        ...response,\n        values,\n        isLoading,\n        query,\n      };\n    },\n  };\n}\n", "import {CommerceEngine} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n  updateDateFacetValues,\n} from '../../../../../features/commerce/facets/date-facet/date-facet-actions.js';\nimport {buildDateRange} from '../../../../core/facets/range-facet/date-facet/date-range.js';\nimport {\n  CoreCommerceFacet,\n  CoreCommerceFacetOptions,\n  CoreCommerceFacetState,\n  DateFacetValue,\n  DateRangeRequest,\n  FacetControllerType,\n  buildCoreCommerceFacet,\n} from '../headless-core-commerce-facet.js';\n\nexport type {DateFacetValue};\n\nexport type DateFacetOptions = Omit<\n  CoreCommerceFacetOptions,\n  'toggleSelectActionCreator' | 'toggleExcludeActionCreator'\n>;\n\n/**\n * The state of the `DateFacet` sub-controller.\n *\n * @group Sub-controllers\n * @category DateFacet\n */\nexport type DateFacetState = Omit<\n  CoreCommerceFacetState<DateFacetValue>,\n  'type'\n> & {\n  type: 'dateRange';\n};\n\n/**\n * The `DateFacet` sub-controller offers a high-level programming interface for implementing date commerce\n * facet UI component.\n *\n * @group Sub-controllers\n * @category DateFacet\n */\nexport type DateFacet = CoreCommerceFacet<DateRangeRequest, DateFacetValue> & {\n  /**\n   * Replaces the current range values with the specified ones.\n   *\n   * @param ranges - The new ranges to set.\n   */\n  setRanges: (ranges: DateRangeRequest[]) => void;\n  /**\n   * The state of the `DateFacet` sub-controller.\n   */\n  state: DateFacetState;\n} & FacetControllerType<'dateRange'>;\n\nexport {buildDateRange};\n\n/**\n * @internal\n *\n * **Important:** This initializer is meant for internal use by headless only.\n * As an implementer, you must not import or use this initializer directly in your code.\n * You will instead interact with `DateFacet` sub-controller instances through the state of a `FacetGenerator`\n * sub-controller.\n *\n * @param engine - The headless commerce engine.\n * @param options - The `DateFacet` options used internally.\n * @returns A `DateFacet` sub-controller instance.\n */\nexport function buildCommerceDateFacet(\n  engine: CommerceEngine,\n  options: DateFacetOptions\n): DateFacet {\n  const coreController = buildCoreCommerceFacet<\n    DateRangeRequest,\n    DateFacetValue\n  >(engine, {\n    options: {\n      ...options,\n      toggleSelectActionCreator: toggleSelectDateFacetValue,\n      toggleExcludeActionCreator: toggleExcludeDateFacetValue,\n    },\n  });\n\n  const {dispatch} = engine;\n  const {facetId, fetchProductsActionCreator: fetchProductsActionCreator} =\n    options;\n\n  return {\n    ...coreController,\n\n    setRanges(ranges: DateRangeRequest[]) {\n      dispatch(\n        updateDateFacetValues({\n          facetId,\n          values: ranges.map((range) => ({...range, numberOfResults: 0})),\n        })\n      );\n      dispatch(fetchProductsActionCreator());\n    },\n\n    get state() {\n      return getDateFacetState(coreController.state);\n    },\n\n    type: 'dateRange',\n  };\n}\n\nexport const getDateFacetState = (\n  coreState: CoreCommerceFacetState<DateFacetValue>\n): DateFacetState => {\n  return {\n    ...coreState,\n    type: 'dateRange',\n  };\n};\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../../app/state-key.js';\nimport {clearAllCoreFacets} from '../../../../../features/commerce/facets/core-facet/core-facet-actions.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../../../../../features/commerce/facets/facet-set/facet-set-slice.js';\nimport {CommerceFacetSetState} from '../../../../../features/commerce/facets/facet-set/facet-set-state.js';\nimport {FacetType} from '../../../../../features/commerce/facets/facet-set/interfaces/common.js';\nimport {AnyFacetValueResponse} from '../../../../../features/commerce/facets/facet-set/interfaces/response.js';\nimport {facetOrderReducer as facetOrder} from '../../../../../features/facets/facet-order/facet-order-slice.js';\nimport {AnyFacetValueRequest} from '../../../../../features/facets/generic/interfaces/generic-facet-request.js';\nimport {\n  CommerceFacetSetSection,\n  FacetOrderSection,\n} from '../../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../../utils/errors.js';\nimport {\n  Controller,\n  buildController,\n} from '../../../../controller/headless-controller.js';\nimport {FetchProductsActionCreator} from '../../common.js';\nimport {CategoryFacet} from '../category/headless-commerce-category-facet.js';\nimport {DateFacet} from '../date/headless-commerce-date-facet.js';\nimport {\n  CommerceFacetOptions,\n  CoreCommerceFacet,\n} from '../headless-core-commerce-facet.js';\nimport {LocationFacet} from '../location/headless-commerce-location-facet.js';\nimport {NumericFacet} from '../numeric/headless-commerce-numeric-facet.js';\nimport {RegularFacet} from '../regular/headless-commerce-regular-facet.js';\nimport {SearchableFacetOptions} from '../searchable/headless-commerce-searchable-facet.js';\n\n/**\n * The `FacetGenerator` headless sub-controller creates commerce facet sub-controllers from the Commerce API search or\n * product listing response.\n *\n * Commerce facets are not requested by the implementer, but rather pre-configured through the Coveo Merchandising Hub\n * (CMH). The implementer is only responsible for leveraging the facet controllers created by this sub-controller to\n * properly render facets in their application.\n *\n * @group Sub-controllers\n * @category FacetGenerator\n */\nexport interface FacetGenerator extends Controller {\n  /**\n   * The ordered list of facet IDs for which sub-controllers will be created and returned when the `facets` getter is called.\n   */\n  state: string[];\n\n  /**\n   * The facet sub-controllers created by the facet generator.\n   * Array of [RegularFacet](./regular-facet), [DateRangeFacet](./date-range-facet), [NumericFacet](./numeric-facet), [CategoryFacet](./category-facet), and [LocationFacet](./location-facet).\n   */\n  facets: GeneratedFacetControllers;\n\n  /**\n   * Deselects all values in all facets.\n   * */\n  deselectAll(): void;\n}\n\n/**\n * Represents the state of a facet generator.\n *\n * @group Sub-controllers\n * @category FacetGenerator\n */\nexport type FacetGeneratorState = FacetGenerator['state'];\n\n/**\n * Represents an array of generated facet sub-controllers.\n * Each sub-controller is mapped to a specific facet type.\n */\nexport type GeneratedFacetControllers = Array<\n  MappedGeneratedFacetController[FacetType]\n>;\n\nexport type MappedGeneratedFacetController = {\n  [T in FacetType]: T extends 'numericalRange'\n    ? NumericFacet\n    : T extends 'regular'\n      ? RegularFacet\n      : T extends 'dateRange'\n        ? DateFacet\n        : T extends 'hierarchical'\n          ? CategoryFacet\n          : T extends 'location'\n            ? LocationFacet\n            : never;\n};\n\ntype CommerceFacetBuilder<\n  Facet extends Omit<\n    CoreCommerceFacet<AnyFacetValueRequest, AnyFacetValueResponse>,\n    | 'isValueExcluded'\n    | 'toggleExclude'\n    | 'toggleSingleExclude'\n    | 'toggleSingleSelect'\n  >,\n> = (engine: CommerceEngine, options: CommerceFacetOptions) => Facet;\n\nexport type CommerceSearchableFacetBuilder<\n  Facet extends CoreCommerceFacet<AnyFacetValueRequest, AnyFacetValueResponse>,\n> = (\n  engine: CommerceEngine,\n  options: CommerceFacetOptions & SearchableFacetOptions\n) => Facet;\n/**\n * @internal\n *\n * The `FacetGenerator` options used internally.\n */\nexport interface FacetGeneratorOptions {\n  buildRegularFacet: CommerceFacetBuilder<RegularFacet>;\n  buildNumericFacet: CommerceFacetBuilder<NumericFacet>;\n  buildDateFacet: CommerceFacetBuilder<DateFacet>;\n  buildCategoryFacet: CommerceFacetBuilder<CategoryFacet>;\n  buildLocationFacet: CommerceFacetBuilder<LocationFacet>;\n  fetchProductsActionCreator: FetchProductsActionCreator;\n}\n\n/**\n * @internal\n *\n * Creates a `FacetGenerator` sub-controller.\n *\n * @param engine - The commerce engine.\n * @param options - The facet generator options used internally.\n * @returns A `FacetGenerator` sub-controller.\n */\nexport function buildFacetGenerator(\n  engine: CommerceEngine,\n  options: FacetGeneratorOptions\n): FacetGenerator {\n  if (!loadCommerceFacetGeneratorReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const createFacetControllers = createSelector(\n    [\n      (state: CommerceEngineState) => state.facetOrder,\n      (state: CommerceEngineState) => state.commerceFacetSet,\n    ],\n\n    (facetOrder, commerceFacetSet) =>\n      facetOrder.map((facetId: string) =>\n        createFacetController(commerceFacetSet, facetId)\n      )\n  );\n\n  const createFacetController = createSelector(\n    (commerceFacetSet: CommerceFacetSetState, facetId: string) => ({\n      facetId,\n      type: commerceFacetSet[facetId].request.type,\n    }),\n\n    ({type, facetId}) => {\n      switch (type) {\n        case 'dateRange':\n          return options.buildDateFacet(engine, {facetId});\n        case 'hierarchical':\n          return options.buildCategoryFacet(engine, {facetId});\n        case 'numericalRange':\n          return options.buildNumericFacet(engine, {facetId});\n        case 'regular':\n          return options.buildRegularFacet(engine, {facetId});\n        case 'location':\n          return options.buildLocationFacet(engine, {facetId});\n      }\n    }\n  );\n\n  return {\n    ...controller,\n\n    deselectAll: () => {\n      dispatch(clearAllCoreFacets());\n      dispatch(options.fetchProductsActionCreator());\n    },\n\n    get facets() {\n      return createFacetControllers(engine[stateKey]);\n    },\n\n    get state() {\n      return engine[stateKey].facetOrder;\n    },\n  };\n}\n\nfunction loadCommerceFacetGeneratorReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<FacetOrderSection & CommerceFacetSetSection> {\n  engine.addReducers({facetOrder, commerceFacetSet});\n  return true;\n}\n", "import {CommerceEngine} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {LocationFacetValue} from '../../../../../features/commerce/facets/facet-set/interfaces/response.js';\nimport {toggleSelectLocationFacetValue} from '../../../../../features/commerce/facets/location-facet/location-facet-actions.js';\nimport {\n  CoreCommerceFacet,\n  CoreCommerceFacetOptions,\n  CoreCommerceFacetState,\n  FacetControllerType,\n  FacetValueRequest,\n  buildCoreCommerceFacet,\n} from '../headless-core-commerce-facet.js';\n\nexport type LocationFacetOptions = Omit<\n  CoreCommerceFacetOptions,\n  'toggleSelectActionCreator' | 'toggleExcludeActionCreator'\n>;\n\nexport type LocationFacetState = Omit<\n  CoreCommerceFacetState<LocationFacetValue>,\n  'type'\n> & {\n  type: 'location';\n};\n\n/**\n * The `LocationFacet` sub-controller offers a high-level programming interface for implementing a location commerce\n * facet UI component.\n */\nexport type LocationFacet = Omit<\n  CoreCommerceFacet<FacetValueRequest, LocationFacetValue>,\n  'isValueExcluded' | 'toggleExclude' | 'toggleSingleExclude'\n> & {\n  state: LocationFacetState;\n} & FacetControllerType<'location'>;\n\n/**\n * @internal\n *\n * **Important:** This initializer is meant for internal use by headless only.\n * As an implementer, you must not import or use this initializer directly in your code.\n * You will instead interact with `LocationFacet` sub-controller instances through the state of a `FacetGenerator`\n * sub-controller.\n *\n * @param engine - The headless commerce engine.\n * @param options - The `LocationFacet` options used internally.\n * @returns A `LocationFacet` sub-controller instance.\n * */\nexport function buildCommerceLocationFacet(\n  engine: CommerceEngine,\n  options: LocationFacetOptions\n): LocationFacet {\n  const {\n    toggleSingleExclude,\n    toggleExclude,\n    isValueExcluded,\n    ...coreController\n  } = buildCoreCommerceFacet<FacetValueRequest, LocationFacetValue>(engine, {\n    options: {\n      ...options,\n      toggleSelectActionCreator: toggleSelectLocationFacetValue,\n    },\n  });\n\n  return {\n    ...coreController,\n\n    get state() {\n      return getLocationFacetState(coreController.state);\n    },\n\n    type: 'location',\n  };\n}\n\nexport const getLocationFacetState = (\n  coreState: CoreCommerceFacetState<LocationFacetValue>\n): LocationFacetState => {\n  return {\n    ...coreState,\n    type: 'location',\n  };\n};\n", "import {CommerceEngine} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../../app/state-key.js';\nimport {NumericFacetResponse} from '../../../../../features/commerce/facets/facet-set/interfaces/response.js';\nimport {manualNumericFacetSelector} from '../../../../../features/commerce/facets/numeric-facet/manual-numeric-facet-selectors.js';\nimport {manualNumericFacetReducer as manualNumericFacetSet} from '../../../../../features/commerce/facets/numeric-facet/manual-numeric-facet-slice.js';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n  updateManualNumericFacetRange,\n} from '../../../../../features/commerce/facets/numeric-facet/numeric-facet-actions.js';\nimport {ManualRangeSection} from '../../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../../utils/errors.js';\nimport {\n  CoreCommerceFacet,\n  CoreCommerceFacetOptions,\n  CoreCommerceFacetState,\n  FacetControllerType,\n  NumericFacetValue,\n  NumericRangeRequest,\n  buildCoreCommerceFacet,\n} from '../headless-core-commerce-facet.js';\n\nexport type {NumericFacetValue};\n\nexport type NumericFacetOptions = Omit<\n  CoreCommerceFacetOptions,\n  'toggleSelectActionCreator' | 'toggleExcludeActionCreator'\n>;\n\n/**\n * The state of the `NumericFacet` sub-controller.\n *\n * @group Sub-controllers\n * @category NumericFacet\n */\nexport type NumericFacetState = Omit<\n  CoreCommerceFacetState<NumericFacetValue>,\n  'type'\n> & {\n  /**\n   * The domain of the numeric facet.\n   */\n  domain?: NumericFacetDomain;\n  manualRange?: NumericRangeRequest;\n  type: 'numericalRange';\n};\n\ntype NumericFacetDomain = {\n  /**\n   * The minimum value that the continuous range can have.\n   *\n   * No products will be returned if the `start` property of a selected range is set to a value lower than this.\n   */\n  min: number;\n  /**\n   * The maximum value that the continuous range can have.\n   *\n   * No products will be returned if the `end` property of a selected range is set to a value higher than this.\n   */\n  max: number;\n};\n\n/**\n * The `NumericFacet` sub-controller offers a high-level programming interface for implementing numeric commerce\n * facet UI component.\n *\n * @group Sub-controllers\n * @category NumericFacet\n */\nexport type NumericFacet = CoreCommerceFacet<\n  NumericRangeRequest,\n  NumericFacetValue\n> & {\n  /**\n   * Replaces the current range values with the specified ones.\n   *\n   * @param ranges - The new ranges to set.\n   */\n  setRanges: (ranges: NumericRangeRequest[]) => void;\n  /**\n   * The state of the `NumericFacet` sub-controller.\n   */\n  state: NumericFacetState;\n} & FacetControllerType<'numericalRange'>;\n\n/**\n * @internal\n *\n * **Important:** This initializer is meant for internal use by headless only.\n * As an implementer, you must not import or use this initializer directly in your code.\n * You will instead interact with `NumericFacet` sub-controller instances through the state of a `FacetGenerator`\n * sub-controller.\n *\n * @param engine - The headless commerce engine.\n * @param options - The `NumericFacet` options used internally.\n * @returns A `NumericFacet` sub-controller instance.\n */\nexport function buildCommerceNumericFacet(\n  engine: CommerceEngine,\n  options: NumericFacetOptions\n): NumericFacet {\n  const coreController = buildCoreCommerceFacet<\n    NumericRangeRequest,\n    NumericFacetValue\n  >(engine, {\n    options: {\n      ...options,\n      toggleSelectActionCreator: toggleSelectNumericFacetValue,\n      toggleExcludeActionCreator: toggleExcludeNumericFacetValue,\n    },\n  });\n\n  if (!loadCommerceNumericFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const {facetId, fetchProductsActionCreator: fetchProductsActionCreator} =\n    options;\n\n  return {\n    ...coreController,\n\n    setRanges(ranges: NumericRangeRequest[]) {\n      ranges.forEach((range) => {\n        dispatch(updateManualNumericFacetRange({facetId, ...range}));\n      });\n      dispatch(fetchProductsActionCreator());\n    },\n\n    get state(): NumericFacetState {\n      const response = options.facetResponseSelector(engine[stateKey], facetId);\n\n      return getNumericFacetState(\n        coreController.state,\n        response?.type === 'numericalRange' ? response : undefined,\n        manualNumericFacetSelector(engine[stateKey], facetId)\n      );\n    },\n\n    type: 'numericalRange',\n  };\n}\n\nfunction loadCommerceNumericFacetReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<ManualRangeSection> {\n  engine.addReducers({manualNumericFacetSet});\n  return true;\n}\n\nexport const getNumericFacetState = (\n  coreState: CoreCommerceFacetState<NumericFacetValue>,\n  facetResponseSelector: NumericFacetResponse | undefined,\n  manualFacetRangeSelector: NumericRangeRequest | undefined\n): NumericFacetState => {\n  const response =\n    facetResponseSelector?.type === 'numericalRange'\n      ? facetResponseSelector\n      : undefined;\n  return {\n    ...coreState,\n    ...(response?.domain && {\n      domain: {\n        min: response.domain.min,\n        max: response.domain.max,\n      },\n    }),\n    ...(manualFacetRangeSelector && {manualRange: manualFacetRangeSelector}),\n    type: 'numericalRange',\n  };\n};\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {ManualRangeSection} from '../../../../state/state-sections.js';\n\nexport const manualNumericFacetSelector = createSelector(\n  (state: ManualRangeSection, facetId: string) =>\n    state.manualNumericFacetSet[facetId]?.manualRange,\n  (manualRange) => manualRange\n);\n", "import {CommerceEngine} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../../app/state-key.js';\nimport {\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n} from '../../../../../features/commerce/facets/regular-facet/regular-facet-actions.js';\nimport {specificFacetSearchStateSelector} from '../../../../../features/facets/facet-search-set/specific/specific-facet-search-state-selector.js';\nimport {\n  CoreCommerceFacet,\n  CoreCommerceFacetOptions,\n  CoreCommerceFacetState,\n  FacetControllerType,\n  FacetValueRequest,\n  RegularFacetValue,\n  buildCoreCommerceFacet,\n} from '../headless-core-commerce-facet.js';\nimport {SearchableFacetOptions} from '../searchable/headless-commerce-searchable-facet.js';\nimport {\n  RegularFacetSearch,\n  RegularFacetSearchState,\n  buildRegularFacetSearch,\n} from './headless-commerce-regular-facet-search.js';\n\nexport type RegularFacetOptions = Omit<\n  CoreCommerceFacetOptions,\n  'toggleSelectActionCreator' | 'toggleExcludeActionCreator'\n> &\n  SearchableFacetOptions;\n\nexport type RegularFacetState = Omit<\n  CoreCommerceFacetState<RegularFacetValue>,\n  'type'\n> & {\n  facetSearch: RegularFacetSearchState;\n  type: 'regular';\n};\n\n/**\n * The `RegularFacet` sub-controller offers a high-level programming interface for implementing a regular commerce\n * facet UI component.\n *\n * @group Sub-controllers\n * @category RegularFacet\n */\nexport type RegularFacet = CoreCommerceFacet<\n  FacetValueRequest,\n  RegularFacetValue\n> & {\n  facetSearch: Omit<RegularFacetSearch, 'state'>;\n  state: RegularFacetState;\n} & FacetControllerType<'regular'>;\n\n/**\n * @internal\n *\n * **Important:** This initializer is meant for internal use by headless only.\n * As an implementer, you must not import or use this initializer directly in your code.\n * You will instead interact with `RegularFacet` sub-controller instances through the state of a `FacetGenerator`\n * sub-controller.\n *\n * @param engine - The headless commerce engine.\n * @param options - The `RegularFacet` options used internally.\n * @returns A `RegularFacet` sub-controller instance.\n * */\nexport function buildCommerceRegularFacet(\n  engine: CommerceEngine,\n  options: RegularFacetOptions\n): RegularFacet {\n  const coreController = buildCoreCommerceFacet<\n    FacetValueRequest,\n    RegularFacetValue\n  >(engine, {\n    options: {\n      ...options,\n      toggleSelectActionCreator: toggleSelectFacetValue,\n      toggleExcludeActionCreator: toggleExcludeFacetValue,\n    },\n  });\n  const getFacetId = () => coreController.state.facetId;\n  const {dispatch} = engine;\n\n  const facetSearch = buildRegularFacetSearch(engine, {\n    options: {facetId: getFacetId(), ...options.facetSearch},\n    select: () => {\n      dispatch(options.fetchProductsActionCreator());\n    },\n    exclude: () => {\n      dispatch(options.fetchProductsActionCreator());\n    },\n    isForFieldSuggestions: false,\n  });\n\n  return {\n    ...coreController,\n    facetSearch,\n\n    get state() {\n      return getRegularFacetState(\n        coreController.state,\n        specificFacetSearchStateSelector(engine[stateKey], getFacetId())\n      );\n    },\n\n    type: 'regular',\n  };\n}\n\nexport const getRegularFacetState = (\n  coreState: CoreCommerceFacetState<RegularFacetValue>,\n  facetSearchSelector: ReturnType<typeof specificFacetSearchStateSelector>\n): RegularFacetState => {\n  return {\n    ...coreState,\n    facetSearch: {\n      isLoading: facetSearchSelector?.isLoading ?? false,\n      moreValuesAvailable:\n        facetSearchSelector?.response.moreValuesAvailable ?? false,\n      query: facetSearchSelector?.options.query ?? '',\n      values: facetSearchSelector?.response.values ?? [],\n    },\n    type: 'regular',\n  };\n};\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {FacetSearchSection} from '../../../../state/state-sections.js';\nimport {SpecificFacetSearchState} from './specific-facet-search-set-state.js';\n\nexport const specificFacetSearchStateSelector = createSelector(\n  (state: FacetSearchSection, facetId: string) => ({\n    facetSearchSelector: state.facetSearchSet[facetId],\n  }),\n  ({facetSearchSelector}): SpecificFacetSearchState | undefined => {\n    return facetSearchSelector;\n  }\n);\n", "import {FacetSearchType} from '../../../../../api/commerce/facet-search/facet-search-request.js';\nimport {SpecificFacetSearchResult} from '../../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {CommerceEngine} from '../../../../../app/commerce-engine/commerce-engine.js';\nimport {\n  executeCommerceFacetSearch,\n  executeCommerceFieldSuggest,\n} from '../../../../../features/commerce/facets/facet-search-set/commerce-facet-search-actions.js';\nimport {FacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-request-options.js';\nimport {specificFacetSearchSetReducer as facetSearchSet} from '../../../../../features/facets/facet-search-set/specific/specific-facet-search-set-slice.js';\nimport {FacetSearchSection} from '../../../../../state/state-sections.js';\nimport {loadReducerError} from '../../../../../utils/errors.js';\nimport {\n  FacetSearchProps,\n  buildFacetSearch,\n} from '../../../../core/facets/facet-search/specific/headless-facet-search.js';\nimport {CoreFacetSearchState} from '../searchable/headless-commerce-searchable-facet.js';\n\nexport type RegularFacetSearchState =\n  CoreFacetSearchState<SpecificFacetSearchResult>;\n\nexport type RegularFacetSearch = Omit<\n  ReturnType<typeof buildFacetSearch>,\n  'showMoreResults' | 'updateCaptions' | 'state'\n>;\n\nexport interface RegularFacetSearchProps\n  extends Omit<\n    FacetSearchProps,\n    'executeFacetSearchActionCreator' | 'executeFieldSuggestActionCreator'\n  > {\n  options: FacetSearchOptions & {type: FacetSearchType};\n}\n\nexport function buildRegularFacetSearch(\n  engine: CommerceEngine,\n  props: RegularFacetSearchProps\n): RegularFacetSearch {\n  if (!loadRegularFacetSearchReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {showMoreResults, state, updateCaptions, ...restOfFacetSearch} =\n    buildFacetSearch(engine, {\n      ...props,\n      executeFacetSearchActionCreator: (facetId: string) =>\n        executeCommerceFacetSearch({\n          facetId,\n          facetSearchType: props.options.type,\n        }),\n      executeFieldSuggestActionCreator: (facetId: string) =>\n        executeCommerceFieldSuggest({\n          facetId,\n          facetSearchType: props.options.type,\n        }),\n    });\n\n  return {\n    ...restOfFacetSearch,\n  };\n}\n\nfunction loadRegularFacetSearchReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<FacetSearchSection> {\n  engine.addReducers({facetSearchSet});\n  return true;\n}\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {SpecificFacetSearchResult} from '../../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {AsyncThunkOptions} from '../../../../../app/async-thunk-options.js';\nimport {CoreEngine, CoreEngineNext} from '../../../../../app/engine.js';\nimport {stateKey} from '../../../../../app/state-key.js';\nimport {ThunkExtraArguments} from '../../../../../app/thunk-extra-arguments.js';\nimport {FacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-request-options.js';\nimport {\n  excludeFacetSearchResult,\n  registerFacetSearch,\n  selectFacetSearchResult,\n} from '../../../../../features/facets/facet-search-set/specific/specific-facet-search-actions.js';\nimport {deselectAllFacetValues} from '../../../../../features/facets/facet-set/facet-set-actions.js';\nimport {FacetSearchSection} from '../../../../../state/state-sections.js';\nimport {buildGenericFacetSearch} from '../facet-search.js';\n\nexport interface FacetSearchProps {\n  options: FacetSearchOptions;\n  select: (value: SpecificFacetSearchResult) => void;\n  exclude: (value: SpecificFacetSearchResult) => void;\n  isForFieldSuggestions: boolean;\n  executeFacetSearchActionCreator: (\n    facetId: string\n  ) => AsyncThunkAction<\n    unknown,\n    unknown,\n    AsyncThunkOptions<unknown, ThunkExtraArguments>\n  >;\n  executeFieldSuggestActionCreator: (\n    facetId: string\n  ) => AsyncThunkAction<\n    unknown,\n    unknown,\n    AsyncThunkOptions<unknown, ThunkExtraArguments>\n  >;\n}\n\nexport type FacetSearch = ReturnType<typeof buildFacetSearch>;\n\nexport function buildFacetSearch(\n  engine: CoreEngine<FacetSearchSection> | CoreEngineNext<FacetSearchSection>,\n  props: FacetSearchProps\n) {\n  const {dispatch} = engine;\n  const {\n    options,\n    select: propsSelect,\n    exclude: propsExclude,\n    isForFieldSuggestions,\n    executeFacetSearchActionCreator,\n    executeFieldSuggestActionCreator,\n  } = props;\n  const {facetId} = options;\n  const getFacetSearch = () =>\n    'state' in engine\n      ? engine.state.facetSearchSet[facetId]\n      : engine[stateKey].facetSearchSet[facetId];\n\n  dispatch(registerFacetSearch(options));\n\n  const genericFacetSearch = buildGenericFacetSearch(engine, {\n    options,\n    getFacetSearch,\n    isForFieldSuggestions,\n    executeFacetSearchActionCreator: executeFacetSearchActionCreator,\n    executeFieldSuggestActionCreator: executeFieldSuggestActionCreator,\n  });\n\n  return {\n    ...genericFacetSearch,\n\n    /**\n     * Selects the provided value.\n     * @param result A single specificFacetSearchResult object\n     */\n    select(value: SpecificFacetSearchResult) {\n      dispatch(selectFacetSearchResult({facetId, value}));\n      propsSelect(value);\n    },\n\n    /**\n     * Excludes the provided value.\n     * @param result A single specificFacetSearchResult object\n     */\n    exclude(value: SpecificFacetSearchResult) {\n      dispatch(excludeFacetSearchResult({facetId, value}));\n      propsExclude(value);\n    },\n\n    /**\n     * Selects the provided value, and deselects other values.\n     * @param result A single specificFacetSearchResult object\n     */\n    singleSelect(value: SpecificFacetSearchResult) {\n      dispatch(deselectAllFacetValues(facetId));\n      dispatch(selectFacetSearchResult({facetId, value}));\n      propsSelect(value);\n    },\n\n    /**\n     * Excludes the provided value, and deselects other values.\n     * @param result A single specificFacetSearchResult object\n     */\n    singleExclude(value: SpecificFacetSearchResult) {\n      dispatch(deselectAllFacetValues(facetId));\n      dispatch(excludeFacetSearchResult({facetId, value}));\n      propsExclude(value);\n    },\n\n    get state() {\n      const {values} = genericFacetSearch.state;\n      return {\n        ...genericFacetSearch.state,\n        values: values.map(({count, displayValue, rawValue}) => ({\n          count,\n          displayValue,\n          rawValue,\n        })),\n      };\n    },\n  };\n}\n", "import {Product} from '../../../../api/commerce/common/product.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {productClick} from '../../../../features/commerce/product/product-actions.js';\nimport {\n  buildInteractiveResultCore,\n  InteractiveResultCore,\n  InteractiveResultCoreOptions as InteractiveProductCoreOptions,\n  InteractiveResultCoreProps as InteractiveResultHeadlessCoreProps,\n} from '../../../core/interactive-result/headless-core-interactive-result.js';\n\nexport interface InteractiveProductOptions\n  extends InteractiveProductCoreOptions {\n  /**\n   * The product to log analytics for.\n   */\n  product: Product;\n}\n\nexport interface InteractiveProductCoreProps\n  extends InteractiveResultHeadlessCoreProps {\n  /**\n   * The options for the `InteractiveProduct` sub-controller.\n   */\n  options: InteractiveProductOptions;\n\n  /**\n   * The selector to fetch the response ID from the state.\n   */\n  responseIdSelector: (state: CommerceEngineState) => string;\n}\n\nexport type InteractiveProductProps = Omit<\n  InteractiveProductCoreProps,\n  'responseIdSelector'\n>;\n\n/**\n * The `InteractiveProduct` sub-controller provides an interface for handling long presses, multiple clicks, etc. to ensure\n * analytics events are logged properly when a user selects a product.\n */\nexport interface InteractiveProduct extends InteractiveResultCore {\n  warningMessage?: string;\n}\n\n/**\n * Creates an `InteractiveProduct` sub-controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `InteractiveProduct` properties.\n * @returns An `InteractiveProduct` sub-controller instance.\n *\n * @group Buildable controllers\n * @category CoreInteractiveProduct\n */\nexport function buildCoreInteractiveProduct(\n  engine: CommerceEngine,\n  props: InteractiveProductCoreProps\n): InteractiveProduct {\n  let wasOpened = false;\n\n  const getWarningMessage = () => {\n    const messageSegment = (\n      property: string,\n      lookupFields: string[],\n      fallback: string\n    ) =>\n      `- Could not retrieve '${property}' analytics property from field${lookupFields.length > 1 ? 's' : ''} \\\n'${lookupFields.join(\"', '\")}'; fell back to ${fallback}.`;\n\n    const warnings = [];\n\n    const {ec_name, ec_promo_price, ec_price, ec_product_id} =\n      props.options.product;\n    if (!ec_name) {\n      warnings.push(messageSegment('name', ['ec_gender'], 'permanentid'));\n    }\n    if (!ec_promo_price && !ec_price) {\n      warnings.push(\n        messageSegment('price', ['ec_promo_price', 'ec_price'], 'NaN')\n      );\n    }\n    if (!ec_product_id) {\n      warnings.push(\n        messageSegment('productId', ['ec_product_id'], 'permanentid')\n      );\n    }\n\n    if (warnings.length === 0) {\n      return;\n    }\n\n    return `Some required analytics properties could not be retrieved from the expected fields for product with \\\npermanentid '${props.options.product.permanentid}':\\n\\n${warnings.join('\\n')}\\n\\nReview the configuration of the above \\\n'ec_'-prefixed fields in your index, and make sure they contain the correct metadata.`;\n  };\n\n  const logAnalyticsIfNeverOpened = () => {\n    if (wasOpened) {\n      return;\n    }\n    wasOpened = true;\n    engine.dispatch(\n      productClick({\n        product: {\n          name:\n            props.options.product.ec_name ?? props.options.product.permanentid,\n          price:\n            props.options.product.ec_promo_price ??\n            props.options.product.ec_price ??\n            NaN,\n          productId:\n            props.options.product.ec_product_id ??\n            props.options.product.permanentid,\n        },\n        position: props.options.product.position,\n        responseId: props.responseIdSelector(engine[stateKey]),\n      })\n    );\n  };\n\n  return {\n    ...buildInteractiveResultCore(engine, props, logAnalyticsIfNeverOpened),\n    warningMessage: getWarningMessage(),\n  };\n}\n", "import {debounce} from 'ts-debounce';\nimport {configuration} from '../../../app/common-reducers.js';\nimport {CoreEngine, CoreEngineNext} from '../../../app/engine.js';\nimport {ConfigurationSection} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\n\nexport interface InteractiveResultCoreOptions {\n  /**\n   * The amount of time to wait before selecting the result after calling `beginDelayedSelect`.\n   *\n   * @defaultValue `1000`\n   */\n  selectionDelay?: number;\n\n  /**\n   * The number of seconds for which the debounced function should continue catching subsequent calls.\n   *\n   * @defaultValue `1000`\n   */\n  debounceWait?: number;\n}\n\nexport interface InteractiveResultCoreProps {\n  /**\n   * The options for the result controller core.\n   */\n  options: InteractiveResultCoreOptions;\n}\n\n/**\n * The `InteractiveResultCore` manages common functionality for interactive result controllers.\n */\nexport interface InteractiveResultCore {\n  /**\n   * Selects the result, logging a UA event to the Coveo Platform if the result wasn't selected before.\n   *\n   * In a DOM context, it's recommended to call this method on all of the following events:\n   *\n   * * `contextmenu`\n   * * `click`\n   * * `mouseup`\n   * * `mousedown`\n   */\n  select(): void;\n\n  /**\n   * Prepares to select the result after a certain delay, sending analytics if it was never selected before.\n   *\n   * In a DOM context, it's recommended to call this method on the `touchstart` event.\n   */\n  beginDelayedSelect(): void;\n\n  /**\n   * Cancels the pending selection caused by `beginDelayedSelect`.\n   *\n   * In a DOM context, it's recommended to call this method on the `touchend` event.\n   */\n  cancelPendingSelect(): void;\n}\n\n/**\n * Creates the result controller core.\n *\n * @param engine - The headless engine.\n * @param props - The configurable controller properties.\n * @param action - The action to be triggered on select.\n * @returns A controller core instance.\n */\nexport function buildInteractiveResultCore(\n  engine: CoreEngine | CoreEngineNext,\n  props: InteractiveResultCoreProps,\n  action: () => void\n): InteractiveResultCore {\n  if (!loadInteractiveResultCoreReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  // 1 second is a reasonable amount of time to catch most longpress actions.\n  const defaultDelay = 1000;\n  const options: Required<InteractiveResultCoreOptions> = {\n    selectionDelay: defaultDelay,\n    debounceWait: defaultDelay,\n    ...props.options,\n  };\n\n  let longPressTimer: NodeJS.Timeout;\n\n  return {\n    select: debounce(action, options.debounceWait, {isImmediate: true}),\n\n    beginDelayedSelect() {\n      longPressTimer = setTimeout(action, options.selectionDelay);\n    },\n\n    cancelPendingSelect() {\n      longPressTimer && clearTimeout(longPressTimer);\n    },\n  };\n}\n\nfunction loadInteractiveResultCoreReducers(\n  engine: CoreEngine | CoreEngineNext\n): engine is\n  | CoreEngine<ConfigurationSection>\n  | CoreEngineNext<ConfigurationSection> {\n  engine.addReducers({configuration});\n  return true;\n}\n", "import {NumberValue, Schema} from '@coveo/bueno';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {\n  nextPage,\n  previousPage,\n  registerRecommendationsSlotPagination,\n  selectPage,\n  setPageSize,\n} from '../../../../features/commerce/pagination/pagination-actions.js';\nimport {paginationReducer as commercePagination} from '../../../../features/commerce/pagination/pagination-slice.js';\nimport {loadReducerError} from '../../../../utils/errors.js';\nimport {validateOptions} from '../../../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../../../controller/headless-controller.js';\nimport {FetchProductsActionCreator} from '../common.js';\n\n/**\n * The `Pagination` sub-controller is responsible for navigating between pages of results in a commerce interface.\n *\n * @group Sub-controllers\n * @category Pagination\n */\nexport interface Pagination extends Controller {\n  /**\n   * Navigates to a specific page.\n   *\n   * @param page - The page to navigate to.\n   */\n  selectPage(page: number): void;\n\n  /**\n   * Navigates to the next page.\n   */\n  nextPage(): void;\n\n  /**\n   * Navigates to the previous page.\n   */\n  previousPage(): void;\n\n  /**\n   * Sets the page size.\n   *\n   * @param pageSize - The page size.\n   */\n  setPageSize(pageSize: number): void;\n\n  /**\n   * Fetches the next page of products, and appends them to the current list of products.\n   */\n  fetchMoreProducts(): void;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `Pagination` sub-controller.\n   */\n  state: PaginationState;\n}\n\n/**\n * @group Sub-controllers\n * @category Pagination\n */\nexport interface PaginationState {\n  page: number;\n  pageSize: number;\n  totalEntries: number;\n  totalPages: number;\n}\n\nexport interface CorePaginationOptions {\n  slotId?: string;\n  /**\n   * The number of products to fetch per page.\n   */\n  pageSize?: number;\n}\n\nexport interface CorePaginationProps {\n  fetchProductsActionCreator: FetchProductsActionCreator;\n  fetchMoreProductsActionCreator: FetchProductsActionCreator;\n  options?: CorePaginationOptions;\n}\n\nexport type PaginationOptions = Omit<CorePaginationOptions, 'slotId'>;\n\nexport interface PaginationProps {\n  options?: PaginationOptions;\n}\n\nconst optionsSchema = new Schema({\n  pageSize: new NumberValue({min: 1, max: 1000, required: false}),\n});\n\n/**\n * @internal\n * Creates a `Pagination` sub-controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `Pagination` sub-controller properties.\n * @returns A `Pagination` sub-controller instance.\n * */\nexport function buildCorePagination(\n  engine: CommerceEngine,\n  props: CorePaginationProps\n): Pagination {\n  if (!loadPaginationReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  validateOptions(engine, optionsSchema, props.options, 'buildCorePagination');\n\n  const slotId = props.options?.slotId;\n\n  if (props.options?.pageSize) {\n    dispatch(\n      setPageSize({\n        slotId,\n        pageSize: props.options.pageSize,\n      })\n    );\n  }\n\n  if (slotId) {\n    dispatch(registerRecommendationsSlotPagination({slotId}));\n  }\n\n  const paginationSelector = createSelector(\n    (state: CommerceEngineState) =>\n      slotId\n        ? state.commercePagination.recommendations[slotId]!\n        : state.commercePagination.principal,\n    ({perPage, ...rest}) => ({\n      pageSize: perPage ?? 0,\n      ...rest,\n    })\n  );\n\n  return {\n    ...controller,\n\n    get state() {\n      return paginationSelector(engine[stateKey]);\n    },\n\n    selectPage(page: number) {\n      dispatch(\n        selectPage({\n          slotId,\n          page,\n        })\n      );\n      dispatch(props.fetchProductsActionCreator());\n    },\n\n    nextPage() {\n      dispatch(nextPage({slotId}));\n      dispatch(props.fetchProductsActionCreator());\n    },\n\n    previousPage() {\n      dispatch(previousPage({slotId}));\n      dispatch(props.fetchProductsActionCreator());\n    },\n\n    setPageSize(pageSize: number) {\n      dispatch(setPageSize({slotId, pageSize}));\n      dispatch(props.fetchProductsActionCreator());\n    },\n\n    fetchMoreProducts() {\n      dispatch(props.fetchMoreProductsActionCreator());\n    },\n  };\n}\n\nfunction loadPaginationReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine {\n  engine.addReducers({\n    commercePagination,\n  });\n  return true;\n}\n", "import {RecordValue, Schema, SchemaDefinition} from '@coveo/bueno';\nimport {UnknownAction} from '@reduxjs/toolkit';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {Parameters} from '../../../../features/commerce/parameters/parameters-actions.js';\nimport {deepEqualAnyOrder} from '../../../../utils/compare-utils.js';\nimport {validateInitialState} from '../../../../utils/validate-payload.js';\nimport {\n  Controller,\n  buildController,\n} from '../../../controller/headless-controller.js';\nimport {FetchProductsActionCreator} from '../common.js';\n\nexport interface ParameterManagerProps<T extends Parameters> {\n  /**\n   * The initial state that should be applied to the `ParameterManager` sub-controller.\n   */\n  initialState: ParameterManagerInitialState<T>;\n}\n\nexport interface CoreParameterManagerProps<T extends Parameters>\n  extends ParameterManagerProps<T> {\n  /**\n   * The definition of the parameters.\n   */\n  parametersDefinition: SchemaDefinition<Required<T>>;\n\n  /**\n   * The selector to retrieve the active parameters from the state.\n   */\n  activeParametersSelector: (state: CommerceEngine[typeof stateKey]) => T;\n\n  /**\n   * The action to dispatch to update the parameters in the state.\n   */\n  restoreActionCreator: (parameters: T) => UnknownAction;\n\n  /**\n   * The action to dispatch to fetch more results.\n   */\n  fetchProductsActionCreator: FetchProductsActionCreator;\n\n  /**\n   * Enriches the parameters with the active parameters.\n   * @param state\n   * @param activeParams\n   */\n  enrichParameters(\n    state: CommerceEngine[typeof stateKey],\n    activeParams: T\n  ): Required<T>;\n}\n\nexport interface ParameterManagerInitialState<T> {\n  /**\n   * The parameters affecting the response.\n   */\n  parameters: T;\n}\n\nconst initialStateSchema = <T extends Parameters>(\n  parametersDefinition: SchemaDefinition<Required<T>>\n) =>\n  new Schema<Required<ParameterManagerInitialState<T>>>({\n    parameters: new RecordValue({\n      options: {required: true},\n      values: parametersDefinition as SchemaDefinition<Record<string, Object>>,\n    }),\n  });\n\n/**\n * The `ParameterManager` sub-controller allows restoring parameters that affect the results (e.g., from the URL).\n *\n * @group Sub-controllers\n * @category ParameterManager\n */\nexport interface ParameterManager<T extends Parameters> extends Controller {\n  /**\n   * Updates the parameters in the state with the specified parameters and fetches results. Unspecified keys are reset to their initial values.\n   *\n   * @param parameters - The parameters to synchronize.\n   */\n  synchronize(parameters: T): void;\n\n  /**\n   * The state relevant to the `ParameterManager` sub-controller.\n   */\n  state: ParameterManagerState<T>;\n}\n\n/**\n * The state of the `ParameterManager` sub-controller.\n *\n * @group Sub-controllers\n * @category ParameterManager\n */\nexport interface ParameterManagerState<T extends Parameters> {\n  /**\n   * The parameters affecting the response.\n   */\n  parameters: T;\n}\n\n/**\n * @internal\n * Creates a `ParameterManager` sub-controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `ParameterManager` properties.\n * @returns A `ParameterManager` sub-controller instance.\n */\nexport function buildCoreParameterManager<T extends Parameters>(\n  engine: CommerceEngine,\n  props: CoreParameterManagerProps<T>\n): ParameterManager<T> {\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n\n  validateInitialState(\n    engine,\n    initialStateSchema(props.parametersDefinition),\n    props.initialState,\n    'buildCoreParameterManager'\n  );\n  dispatch(props.restoreActionCreator(props.initialState.parameters));\n\n  return {\n    ...controller,\n\n    synchronize(parameters: T) {\n      const activeParams = props.activeParametersSelector(engine[stateKey]);\n      const oldParams = props.enrichParameters(engine[stateKey], activeParams);\n      const newParams = props.enrichParameters(engine[stateKey], parameters);\n\n      if (deepEqualAnyOrder(oldParams, newParams)) {\n        return;\n      }\n\n      dispatch(props.restoreActionCreator(parameters));\n      dispatch(props.fetchProductsActionCreator());\n    },\n\n    get state() {\n      const parameters = props.activeParametersSelector(engine[stateKey]);\n      return {parameters};\n    },\n  };\n}\n", "import {PrimitivesValues} from '@coveo/bueno';\nimport {createCustomEqual} from 'fast-equals';\n\nexport function arrayEqual<T>(\n  firstArray: T[],\n  secondArray: T[],\n  isEqual: (first: T, second: T) => boolean = (first, second) =>\n    first === second\n) {\n  return (\n    firstArray.length === secondArray.length &&\n    firstArray.findIndex((val, i) => !isEqual(secondArray[i], val)) === -1\n  );\n}\nfunction checkUnionEquality<T extends PrimitivesValues>(\n  set1: Set<T>,\n  set2: Set<T>\n): boolean {\n  const unionSet = new Set([...set1, ...set2]);\n  return unionSet.size === set1.size && unionSet.size === set2.size;\n}\n\n/**\n * Checks if two arrays are equal regardless of the order of their elements.\n *\n * @param firstArray - The first array to compare.\n * @param secondArray - The second array to compare.\n * @returns `true` if the arrays have the same elements regardless of their order, `false` otherwise.\n */\nfunction arrayEqualAnyOrder<T>(firstArray: T[], secondArray: T[]) {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n\n  return firstArray.every(\n    (firstVal) =>\n      secondArray.findIndex((secondVal) =>\n        deepEqualAnyOrder(firstVal, secondVal)\n      ) !== -1\n  );\n}\n\n/**\n * Checks if two arrays of primitive values have the same elements, in different order.\n * This function is specifically designed for primitive values to ensure fast performance with O(n) complexity.\n *\n * @param firstArray The first array of primitive values to compare.\n * @param secondArray The second array of primitive values to compare.\n * @returns `true` if the arrays have the same elements in different orders, `false` otherwise. Unless the two arrays have only one identical element each, this function will return `false` if the two arrays have the same elements in the same order.\n */\nexport const arrayEqualStrictlyDifferentOrder = <\n  T extends Exclude<PrimitivesValues, object>,\n>(\n  firstArray: T[],\n  secondArray: T[]\n): boolean => {\n  const set1 = new Set(firstArray);\n  const set2 = new Set(secondArray);\n\n  if (set1.size !== set2.size) {\n    return false;\n  }\n  if (set1.size === 1) {\n    return firstArray[0] === secondArray[0];\n  }\n  if (checkUnionEquality(set1, set2)) {\n    const arr1 = [...set1];\n    const arr2 = [...set2];\n    return !arr1.every((value, idx) => arr2[idx] === value);\n  }\n\n  return false;\n};\n\nexport const deepEqualAnyOrder: <T>(a: T, b: T) => boolean = createCustomEqual({\n  //@ts-expect-error any\n  createCustomConfig: (config) => {\n    return {\n      ...config,\n      areArraysEqual: arrayEqualAnyOrder,\n    };\n  },\n});\n", "import {\n  AnyEqualityComparator,\n  Cache,\n  CircularState,\n  Dictionary,\n  State,\n  TypeEqualityComparator,\n} from './internalTypes';\n\nconst { getOwnPropertyNames, getOwnPropertySymbols } = Object;\nconst { hasOwnProperty } = Object.prototype;\n\n/**\n * Combine two comparators into a single comparators.\n */\nexport function combineComparators<Meta>(\n  comparatorA: AnyEqualityComparator<Meta>,\n  comparatorB: AnyEqualityComparator<Meta>,\n) {\n  return function isEqual<A, B>(a: A, b: B, state: State<Meta>) {\n    return comparatorA(a, b, state) && comparatorB(a, b, state);\n  };\n}\n\n/**\n * Wrap the provided `areItemsEqual` method to manage the circular state, allowing\n * for circular references to be safely included in the comparison without creating\n * stack overflows.\n */\nexport function createIsCircular<\n  AreItemsEqual extends TypeEqualityComparator<any, any>,\n>(areItemsEqual: AreItemsEqual): AreItemsEqual {\n  return function isCircular(\n    a: any,\n    b: any,\n    state: CircularState<Cache<any, any>>,\n  ) {\n    if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\n      return areItemsEqual(a, b, state);\n    }\n\n    const { cache } = state;\n\n    const cachedA = cache.get(a);\n    const cachedB = cache.get(b);\n\n    if (cachedA && cachedB) {\n      return cachedA === b && cachedB === a;\n    }\n\n    cache.set(a, b);\n    cache.set(b, a);\n\n    const result = areItemsEqual(a, b, state);\n\n    cache.delete(a);\n    cache.delete(b);\n\n    return result;\n  } as AreItemsEqual;\n}\n\n/**\n * Get the properties to strictly examine, which include both own properties that are\n * not enumerable and symbol properties.\n */\nexport function getStrictProperties(\n  object: Dictionary,\n): Array<string | symbol> {\n  return (getOwnPropertyNames(object) as Array<string | symbol>).concat(\n    getOwnPropertySymbols(object),\n  );\n}\n\n/**\n * Whether the object contains the property passed as an own property.\n */\nexport const hasOwn =\n  Object.hasOwn ||\n  ((object: Dictionary, property: number | string | symbol) =>\n    hasOwnProperty.call(object, property));\n\n/**\n * Whether the values passed are strictly equal or both NaN.\n */\nexport function sameValueZeroEqual(a: any, b: any): boolean {\n  return a || b ? a === b : a === b || (a !== a && b !== b);\n}\n", "import { getStrictProperties, hasOwn, sameValueZeroEqual } from './utils';\nimport type {\n  Dictionary,\n  PrimitiveWrapper,\n  State,\n  TypedArray,\n} from './internalTypes';\n\nconst OWNER = '_owner';\n\nconst { getOwnPropertyDescriptor, keys } = Object;\n\n/**\n * Whether the arrays are equal in value.\n */\nexport function areArraysEqual(a: any[], b: any[], state: State<any>) {\n  let index = a.length;\n\n  if (b.length !== index) {\n    return false;\n  }\n\n  while (index-- > 0) {\n    if (!state.equals(a[index], b[index], index, index, a, b, state)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the dates passed are equal in value.\n */\nexport function areDatesEqual(a: Date, b: Date): boolean {\n  return sameValueZeroEqual(a.getTime(), b.getTime());\n}\n\n/**\n * Whether the `Map`s are equal in value.\n */\nexport function areMapsEqual(\n  a: Map<any, any>,\n  b: Map<any, any>,\n  state: State<any>,\n): boolean {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  const matchedIndices: Record<number, true> = {};\n  const aIterable = a.entries();\n\n  let index = 0;\n  let aResult: IteratorResult<[any, any]>;\n  let bResult: IteratorResult<[any, any]>;\n\n  while ((aResult = aIterable.next())) {\n    if (aResult.done) {\n      break;\n    }\n\n    const bIterable = b.entries();\n\n    let hasMatch = false;\n    let matchIndex = 0;\n\n    while ((bResult = bIterable.next())) {\n      if (bResult.done) {\n        break;\n      }\n\n      const [aKey, aValue] = aResult.value;\n      const [bKey, bValue] = bResult.value;\n\n      if (\n        !hasMatch &&\n        !matchedIndices[matchIndex] &&\n        (hasMatch =\n          state.equals(aKey, bKey, index, matchIndex, a, b, state) &&\n          state.equals(aValue, bValue, aKey, bKey, a, b, state))\n      ) {\n        matchedIndices[matchIndex] = true;\n      }\n\n      matchIndex++;\n    }\n\n    if (!hasMatch) {\n      return false;\n    }\n\n    index++;\n  }\n\n  return true;\n}\n\n/**\n * Whether the objects are equal in value.\n */\nexport function areObjectsEqual(\n  a: Dictionary,\n  b: Dictionary,\n  state: State<any>,\n): boolean {\n  const properties = keys(a);\n\n  let index = properties.length;\n\n  if (keys(b).length !== index) {\n    return false;\n  }\n\n  let property: string;\n\n  // Decrementing `while` showed faster results than either incrementing or\n  // decrementing `for` loop and than an incrementing `while` loop. Declarative\n  // methods like `some` / `every` were not used to avoid incurring the garbage\n  // cost of anonymous callbacks.\n  while (index-- > 0) {\n    property = properties[index]!;\n\n    if (\n      property === OWNER &&\n      (a.$$typeof || b.$$typeof) &&\n      a.$$typeof !== b.$$typeof\n    ) {\n      return false;\n    }\n\n    if (\n      !hasOwn(b, property) ||\n      !state.equals(a[property], b[property], property, property, a, b, state)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the objects are equal in value with strict property checking.\n */\nexport function areObjectsEqualStrict(\n  a: Dictionary,\n  b: Dictionary,\n  state: State<any>,\n): boolean {\n  const properties = getStrictProperties(a);\n\n  let index = properties.length;\n\n  if (getStrictProperties(b).length !== index) {\n    return false;\n  }\n\n  let property: string | symbol;\n  let descriptorA: ReturnType<typeof getOwnPropertyDescriptor>;\n  let descriptorB: ReturnType<typeof getOwnPropertyDescriptor>;\n\n  // Decrementing `while` showed faster results than either incrementing or\n  // decrementing `for` loop and than an incrementing `while` loop. Declarative\n  // methods like `some` / `every` were not used to avoid incurring the garbage\n  // cost of anonymous callbacks.\n  while (index-- > 0) {\n    property = properties[index]!;\n\n    if (\n      property === OWNER &&\n      (a.$$typeof || b.$$typeof) &&\n      a.$$typeof !== b.$$typeof\n    ) {\n      return false;\n    }\n\n    if (!hasOwn(b, property)) {\n      return false;\n    }\n\n    if (\n      !state.equals(a[property], b[property], property, property, a, b, state)\n    ) {\n      return false;\n    }\n\n    descriptorA = getOwnPropertyDescriptor(a, property);\n    descriptorB = getOwnPropertyDescriptor(b, property);\n\n    if (\n      (descriptorA || descriptorB) &&\n      (!descriptorA ||\n        !descriptorB ||\n        descriptorA.configurable !== descriptorB.configurable ||\n        descriptorA.enumerable !== descriptorB.enumerable ||\n        descriptorA.writable !== descriptorB.writable)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the primitive wrappers passed are equal in value.\n */\nexport function arePrimitiveWrappersEqual(\n  a: PrimitiveWrapper,\n  b: PrimitiveWrapper,\n): boolean {\n  return sameValueZeroEqual(a.valueOf(), b.valueOf());\n}\n\n/**\n * Whether the regexps passed are equal in value.\n */\nexport function areRegExpsEqual(a: RegExp, b: RegExp): boolean {\n  return a.source === b.source && a.flags === b.flags;\n}\n\n/**\n * Whether the `Set`s are equal in value.\n */\nexport function areSetsEqual(\n  a: Set<any>,\n  b: Set<any>,\n  state: State<any>,\n): boolean {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  const matchedIndices: Record<number, true> = {};\n  const aIterable = a.values();\n\n  let aResult: IteratorResult<any>;\n  let bResult: IteratorResult<any>;\n\n  while ((aResult = aIterable.next())) {\n    if (aResult.done) {\n      break;\n    }\n\n    const bIterable = b.values();\n\n    let hasMatch = false;\n    let matchIndex = 0;\n\n    while ((bResult = bIterable.next())) {\n      if (bResult.done) {\n        break;\n      }\n\n      if (\n        !hasMatch &&\n        !matchedIndices[matchIndex] &&\n        (hasMatch = state.equals(\n          aResult.value,\n          bResult.value,\n          aResult.value,\n          bResult.value,\n          a,\n          b,\n          state,\n        ))\n      ) {\n        matchedIndices[matchIndex] = true;\n      }\n\n      matchIndex++;\n    }\n\n    if (!hasMatch) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the TypedArray instances are equal in value.\n */\nexport function areTypedArraysEqual(a: TypedArray, b: TypedArray) {\n  let index = a.length;\n\n  if (b.length !== index) {\n    return false;\n  }\n\n  while (index-- > 0) {\n    if (a[index] !== b[index]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import {\n  areArraysEqual as areArraysEqualDefault,\n  areDatesEqual as areDatesEqualDefault,\n  areMapsEqual as areMapsEqualDefault,\n  areObjectsEqual as areObjectsEqualDefault,\n  areObjectsEqualStrict as areObjectsEqualStrictDefault,\n  arePrimitiveWrappersEqual as arePrimitiveWrappersEqualDefault,\n  areRegExpsEqual as areRegExpsEqualDefault,\n  areSetsEqual as areSetsEqualDefault,\n  areTypedArraysEqual,\n} from './equals';\nimport { combineComparators, createIsCircular } from './utils';\nimport type {\n  ComparatorConfig,\n  CreateState,\n  CustomEqualCreatorOptions,\n  EqualityComparator,\n  InternalEqualityComparator,\n  State,\n} from './internalTypes';\n\nconst ARGUMENTS_TAG = '[object Arguments]';\nconst BOOLEAN_TAG = '[object Boolean]';\nconst DATE_TAG = '[object Date]';\nconst MAP_TAG = '[object Map]';\nconst NUMBER_TAG = '[object Number]';\nconst OBJECT_TAG = '[object Object]';\nconst REG_EXP_TAG = '[object RegExp]';\nconst SET_TAG = '[object Set]';\nconst STRING_TAG = '[object String]';\n\nconst { isArray } = Array;\nconst isTypedArray =\n  typeof ArrayBuffer === 'function' && ArrayBuffer.isView\n    ? ArrayBuffer.isView\n    : null;\nconst { assign } = Object;\nconst getTag = Object.prototype.toString.call.bind(\n  Object.prototype.toString,\n) as (a: object) => string;\n\ninterface CreateIsEqualOptions<Meta> {\n  circular: boolean;\n  comparator: EqualityComparator<Meta>;\n  createState: CreateState<Meta> | undefined;\n  equals: InternalEqualityComparator<Meta>;\n  strict: boolean;\n}\n\n/**\n * Create a comparator method based on the type-specific equality comparators passed.\n */\nexport function createEqualityComparator<Meta>({\n  areArraysEqual,\n  areDatesEqual,\n  areMapsEqual,\n  areObjectsEqual,\n  arePrimitiveWrappersEqual,\n  areRegExpsEqual,\n  areSetsEqual,\n  areTypedArraysEqual,\n}: ComparatorConfig<Meta>): EqualityComparator<Meta> {\n  /**\n   * compare the value of the two objects and return true if they are equivalent in values\n   */\n  return function comparator(a: any, b: any, state: State<Meta>): boolean {\n    // If the items are strictly equal, no need to do a value comparison.\n    if (a === b) {\n      return true;\n    }\n\n    // If the items are not non-nullish objects, then the only possibility\n    // of them being equal but not strictly is if they are both `NaN`. Since\n    // `NaN` is uniquely not equal to itself, we can use self-comparison of\n    // both objects, which is faster than `isNaN()`.\n    if (\n      a == null ||\n      b == null ||\n      typeof a !== 'object' ||\n      typeof b !== 'object'\n    ) {\n      return a !== a && b !== b;\n    }\n\n    const constructor = a.constructor;\n\n    // Checks are listed in order of commonality of use-case:\n    //   1. Common complex object types (plain object, array)\n    //   2. Common data values (date, regexp)\n    //   3. Less-common complex object types (map, set)\n    //   4. Less-common data values (promise, primitive wrappers)\n    // Inherently this is both subjective and assumptive, however\n    // when reviewing comparable libraries in the wild this order\n    // appears to be generally consistent.\n\n    // Constructors should match, otherwise there is potential for false positives\n    // between class and subclass or custom object and POJO.\n    if (constructor !== b.constructor) {\n      return false;\n    }\n\n    // `isPlainObject` only checks against the object's own realm. Cross-realm\n    // comparisons are rare, and will be handled in the ultimate fallback, so\n    // we can avoid capturing the string tag.\n    if (constructor === Object) {\n      return areObjectsEqual(a, b, state);\n    }\n\n    // `isArray()` works on subclasses and is cross-realm, so we can avoid capturing\n    // the string tag or doing an `instanceof` check.\n    if (isArray(a)) {\n      return areArraysEqual(a, b, state);\n    }\n\n    // `isTypedArray()` works on all possible TypedArray classes, so we can avoid\n    // capturing the string tag or comparing against all possible constructors.\n    if (isTypedArray != null && isTypedArray(a)) {\n      return areTypedArraysEqual(a, b, state);\n    }\n\n    // Try to fast-path equality checks for other complex object types in the\n    // same realm to avoid capturing the string tag. Strict equality is used\n    // instead of `instanceof` because it is more performant for the common\n    // use-case. If someone is subclassing a native class, it will be handled\n    // with the string tag comparison.\n\n    if (constructor === Date) {\n      return areDatesEqual(a, b, state);\n    }\n\n    if (constructor === RegExp) {\n      return areRegExpsEqual(a, b, state);\n    }\n\n    if (constructor === Map) {\n      return areMapsEqual(a, b, state);\n    }\n\n    if (constructor === Set) {\n      return areSetsEqual(a, b, state);\n    }\n\n    // Since this is a custom object, capture the string tag to determing its type.\n    // This is reasonably performant in modern environments like v8 and SpiderMonkey.\n    const tag = getTag(a);\n\n    if (tag === DATE_TAG) {\n      return areDatesEqual(a, b, state);\n    }\n\n    if (tag === REG_EXP_TAG) {\n      return areRegExpsEqual(a, b, state);\n    }\n\n    if (tag === MAP_TAG) {\n      return areMapsEqual(a, b, state);\n    }\n\n    if (tag === SET_TAG) {\n      return areSetsEqual(a, b, state);\n    }\n\n    if (tag === OBJECT_TAG) {\n      // The exception for value comparison is custom `Promise`-like class instances. These should\n      // be treated the same as standard `Promise` objects, which means strict equality, and if\n      // it reaches this point then that strict equality comparison has already failed.\n      return (\n        typeof a.then !== 'function' &&\n        typeof b.then !== 'function' &&\n        areObjectsEqual(a, b, state)\n      );\n    }\n\n    // If an arguments tag, it should be treated as a standard object.\n    if (tag === ARGUMENTS_TAG) {\n      return areObjectsEqual(a, b, state);\n    }\n\n    // As the penultimate fallback, check if the values passed are primitive wrappers. This\n    // is very rare in modern JS, which is why it is deprioritized compared to all other object\n    // types.\n    if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) {\n      return arePrimitiveWrappersEqual(a, b, state);\n    }\n\n    // If not matching any tags that require a specific type of comparison, then we hard-code false because\n    // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\n    //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\n    //     comparison that can be made.\n    //   - For types that can be introspected, but rarely have requirements to be compared\n    //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\n    //     use-cases (may be included in a future release, if requested enough).\n    //   - For types that can be introspected but do not have an objective definition of what\n    //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\n    // In all cases, these decisions should be reevaluated based on changes to the language and\n    // common development practices.\n    return false;\n  };\n}\n\n/**\n * Create the configuration object used for building comparators.\n */\nexport function createEqualityComparatorConfig<Meta>({\n  circular,\n  createCustomConfig,\n  strict,\n}: CustomEqualCreatorOptions<Meta>): ComparatorConfig<Meta> {\n  let config = {\n    areArraysEqual: strict\n      ? areObjectsEqualStrictDefault\n      : areArraysEqualDefault,\n    areDatesEqual: areDatesEqualDefault,\n    areMapsEqual: strict\n      ? combineComparators(areMapsEqualDefault, areObjectsEqualStrictDefault)\n      : areMapsEqualDefault,\n    areObjectsEqual: strict\n      ? areObjectsEqualStrictDefault\n      : areObjectsEqualDefault,\n    arePrimitiveWrappersEqual: arePrimitiveWrappersEqualDefault,\n    areRegExpsEqual: areRegExpsEqualDefault,\n    areSetsEqual: strict\n      ? combineComparators(areSetsEqualDefault, areObjectsEqualStrictDefault)\n      : areSetsEqualDefault,\n    areTypedArraysEqual: strict\n      ? areObjectsEqualStrictDefault\n      : areTypedArraysEqual,\n  };\n\n  if (createCustomConfig) {\n    config = assign({}, config, createCustomConfig(config));\n  }\n\n  if (circular) {\n    const areArraysEqual = createIsCircular(config.areArraysEqual);\n    const areMapsEqual = createIsCircular(config.areMapsEqual);\n    const areObjectsEqual = createIsCircular(config.areObjectsEqual);\n    const areSetsEqual = createIsCircular(config.areSetsEqual);\n\n    config = assign({}, config, {\n      areArraysEqual,\n      areMapsEqual,\n      areObjectsEqual,\n      areSetsEqual,\n    });\n  }\n\n  return config;\n}\n\n/**\n * Default equality comparator pass-through, used as the standard `isEqual` creator for\n * use inside the built comparator.\n */\nexport function createInternalEqualityComparator<Meta>(\n  compare: EqualityComparator<Meta>,\n): InternalEqualityComparator<Meta> {\n  return function (\n    a: any,\n    b: any,\n    _indexOrKeyA: any,\n    _indexOrKeyB: any,\n    _parentA: any,\n    _parentB: any,\n    state: State<Meta>,\n  ) {\n    return compare(a, b, state);\n  };\n}\n\n/**\n * Create the `isEqual` function used by the consuming application.\n */\nexport function createIsEqual<Meta>({\n  circular,\n  comparator,\n  createState,\n  equals,\n  strict,\n}: CreateIsEqualOptions<Meta>) {\n  if (createState) {\n    return function isEqual<A, B>(a: A, b: B): boolean {\n      const { cache = circular ? new WeakMap() : undefined, meta } =\n        createState!();\n\n      return comparator(a, b, {\n        cache,\n        equals,\n        meta,\n        strict,\n      } as State<Meta>);\n    };\n  }\n\n  if (circular) {\n    return function isEqual<A, B>(a: A, b: B): boolean {\n      return comparator(a, b, {\n        cache: new WeakMap(),\n        equals,\n        meta: undefined as Meta,\n        strict,\n      } as State<Meta>);\n    };\n  }\n\n  const state = {\n    cache: undefined,\n    equals,\n    meta: undefined,\n    strict,\n  } as State<Meta>;\n\n  return function isEqual<A, B>(a: A, b: B): boolean {\n    return comparator(a, b, state);\n  };\n}\n", "import {\n  createEqualityComparatorConfig,\n  createEqualityComparator,\n  createInternalEqualityComparator,\n  createIsEqual,\n} from './comparator';\nimport type { CustomEqualCreatorOptions } from './internalTypes';\nimport { sameValueZeroEqual } from './utils';\n\nexport { sameValueZeroEqual };\nexport * from './internalTypes';\n\n/**\n * Whether the items passed are deeply-equal in value.\n */\nexport const deepEqual = createCustomEqual();\n\n/**\n * Whether the items passed are deeply-equal in value based on strict comparison.\n */\nexport const strictDeepEqual = createCustomEqual({ strict: true });\n\n/**\n * Whether the items passed are deeply-equal in value, including circular references.\n */\nexport const circularDeepEqual = createCustomEqual({ circular: true });\n\n/**\n * Whether the items passed are deeply-equal in value, including circular references,\n * based on strict comparison.\n */\nexport const strictCircularDeepEqual = createCustomEqual({\n  circular: true,\n  strict: true,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value.\n */\nexport const shallowEqual = createCustomEqual({\n  createInternalComparator: () => sameValueZeroEqual,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value based on strict comparison\n */\nexport const strictShallowEqual = createCustomEqual({\n  strict: true,\n  createInternalComparator: () => sameValueZeroEqual,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value, including circular references.\n */\nexport const circularShallowEqual = createCustomEqual({\n  circular: true,\n  createInternalComparator: () => sameValueZeroEqual,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value, including circular references,\n * based on strict comparison.\n */\nexport const strictCircularShallowEqual = createCustomEqual({\n  circular: true,\n  createInternalComparator: () => sameValueZeroEqual,\n  strict: true,\n});\n\n/**\n * Create a custom equality comparison method.\n *\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\n * where the standard methods are not performant enough, but can also be used to provide\n * support for legacy environments that do not support expected features like\n * `RegExp.prototype.flags` out of the box.\n */\nexport function createCustomEqual<Meta = undefined>(\n  options: CustomEqualCreatorOptions<Meta> = {},\n) {\n  const {\n    circular = false,\n    createInternalComparator: createCustomInternalComparator,\n    createState,\n    strict = false,\n  } = options;\n\n  const config = createEqualityComparatorConfig<Meta>(options);\n  const comparator = createEqualityComparator(config);\n  const equals = createCustomInternalComparator\n    ? createCustomInternalComparator(comparator)\n    : createInternalEqualityComparator(comparator);\n\n  return createIsEqual({ circular, comparator, createState, equals, strict });\n}\n", "import {Schema} from '@coveo/bueno';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {applySort} from '../../../../features/commerce/sort/sort-actions.js';\nimport {sortReducer as commerceSort} from '../../../../features/commerce/sort/sort-slice.js';\nimport {\n  buildFieldsSortCriterion,\n  buildRelevanceSortCriterion,\n  SortBy,\n  SortByFields,\n  SortByFieldsFields,\n  SortByRelevance,\n  SortCriterion,\n  SortDirection,\n  sortCriterionDefinition,\n} from '../../../../features/commerce/sort/sort.js';\nimport {loadReducerError} from '../../../../utils/errors.js';\nimport {validateInitialState} from '../../../../utils/validate-payload.js';\nimport {\n  Controller,\n  buildController,\n} from '../../../controller/headless-controller.js';\nimport {FetchProductsActionCreator} from '../common.js';\n\nexport type {SortByRelevance, SortByFields, SortByFieldsFields, SortCriterion};\nexport {\n  SortBy,\n  SortDirection,\n  buildRelevanceSortCriterion,\n  buildFieldsSortCriterion,\n};\n\nexport interface SortProps {\n  /**\n   * The initial state that should be applied to this `Sort` sub-controller.\n   */\n  initialState?: SortInitialState;\n}\n\nexport interface CoreSortProps extends SortProps {\n  fetchProductsActionCreator: FetchProductsActionCreator;\n}\n\nexport interface SortInitialState {\n  /**\n   * The initial sort criterion to register in state.\n   */\n  criterion?: SortCriterion;\n}\n\nfunction validateSortInitialState(\n  engine: CommerceEngine,\n  state: SortInitialState | undefined\n) {\n  if (!state) {\n    return;\n  }\n\n  const schema = new Schema<SortInitialState>({\n    criterion: sortCriterionDefinition,\n  });\n\n  validateInitialState(engine, schema, state, 'buildSort');\n}\n\n/**\n * The `Sort` sub-controller lets you sort the products in a commerce interface.\n *\n * @group Sub-controllers\n * @category Sort\n */\nexport interface Sort extends Controller {\n  /**\n   * Updates the sort criterion and executes a new query.\n   *\n   * @param criterion - The new sort criterion.\n   */\n  sortBy(criterion: SortCriterion): void;\n\n  /**\n   * Verifies whether the specified sort criterion is the currently active one.\n   *\n   * @param criterion - The sort criterion to evaluate.\n   * @returns `true` if the specified sort criterion is the currently active one; `false` otherwise.\n   */\n  isSortedBy(criterion: SortCriterion): boolean;\n\n  /**\n   * Verifies whether the specified sort criterion is available.\n   *\n   * @param criterion - The sort criterion to look for.\n   * @returns `true` if the specified sort criterion is available; `false` otherwise.\n   */\n  isAvailable(criterion: SortCriterion): boolean;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `Sort` sub-controller.\n   */\n  state: SortState;\n}\n\n/**\n * The state of the `Sort` sub-controller.\n *\n * @group Sub-controllers\n * @category Sort\n */\nexport interface SortState {\n  /**\n   * The current sort criterion.\n   */\n  appliedSort: SortCriterion;\n\n  /**\n   * The available sort criteria.\n   */\n  availableSorts: SortCriterion[];\n}\n\n/**\n * @internal\n * Creates a core `Sort` sub-controller instance for commerce solution types.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `Sort` sub-controller properties.\n * @returns A `Sort` sub-controller instance.\n */\nexport function buildCoreSort(\n  engine: CommerceEngine,\n  props: CoreSortProps\n): Sort {\n  if (!loadSortReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n\n  validateSortInitialState(engine, props.initialState);\n\n  const criterion = props.initialState?.criterion;\n\n  if (criterion) {\n    dispatch(applySort(criterion));\n  }\n\n  return {\n    ...controller,\n\n    get state() {\n      return engine[stateKey].commerceSort;\n    },\n\n    sortBy(criterion: SortCriterion) {\n      dispatch(applySort(criterion));\n      dispatch(props.fetchProductsActionCreator());\n    },\n\n    isSortedBy(criterion: SortCriterion) {\n      return (\n        JSON.stringify(this.state.appliedSort) === JSON.stringify(criterion)\n      );\n    },\n\n    isAvailable(criterion: SortCriterion) {\n      return this.state.availableSorts.some(\n        (availableCriterion) =>\n          JSON.stringify(availableCriterion) === JSON.stringify(criterion)\n      );\n    },\n  };\n}\n\nfunction loadSortReducers(engine: CommerceEngine): engine is CommerceEngine {\n  engine.addReducers({commerceSort});\n  return true;\n}\n", "import {CommerceAPIErrorStatusResponse} from '../../../../api/commerce/commerce-api-error-response.js';\nimport {CommerceEngineState} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {\n  Controller,\n  buildController,\n} from '../../../controller/headless-controller.js';\n\nexport interface SummaryState {\n  /**\n   * The position of the first product on the current page.\n   */\n  firstProduct: number;\n  /**\n   * The position of the last product on the current page.\n   */\n  lastProduct: number;\n  /**\n   * Whether the first request has been executed.\n   */\n  firstRequestExecuted: boolean;\n  /**\n   * The total number of products available.\n   */\n  totalNumberOfProducts: number;\n  /**\n   * Whether the request has returned any products.\n   */\n  hasProducts: boolean;\n  /**\n   * Whether the request is currently loading.\n   */\n  isLoading: boolean;\n  /**\n   * Whether the request has returned an error.\n   */\n  hasError: boolean;\n}\n\n/**\n * The `Summary` sub-controller manages a summary of the current search results.\n */\nexport interface Summary<State extends SummaryState = SummaryState>\n  extends Controller {\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `SearchSummary` sub-controller.\n   */\n  state: State;\n}\n\nexport interface SummaryOptions<State extends SummaryState> {\n  numberOfProductsSelector: (state: CommerceEngineState) => number;\n  responseIdSelector: (state: CommerceEngineState) => string;\n  isLoadingSelector: (state: CommerceEngineState) => boolean;\n  errorSelector: (\n    state: CommerceEngineState\n  ) => CommerceAPIErrorStatusResponse | null | undefined;\n  pageSelector: (state: CommerceEngineState) => number;\n  perPageSelector: (state: CommerceEngineState) => number;\n  totalEntriesSelector: (state: CommerceEngineState) => number;\n  enrichSummary?: (state: CommerceEngineState) => Partial<State>;\n}\n\ninterface SummaryProps<State extends SummaryState> {\n  options: SummaryOptions<State>;\n}\n\n/**\n * Creates a `Summary` sub-controller.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `Summary` properties.\n * @returns A `Summary` sub-controller.\n */\nexport const buildCoreSummary = <State extends SummaryState = SummaryState>(\n  engine: CommerceEngine,\n  props: SummaryProps<State>\n): Summary<State> => {\n  const controller = buildController(engine);\n  const {\n    options: {\n      numberOfProductsSelector,\n      responseIdSelector,\n      isLoadingSelector,\n      errorSelector,\n      pageSelector,\n      perPageSelector,\n      totalEntriesSelector,\n      enrichSummary,\n    },\n  } = props;\n\n  const getState = () => engine[stateKey];\n  const page = () => pageSelector(getState());\n  const perPage = () => perPageSelector(getState());\n  const totalNumberOfProducts = () => totalEntriesSelector(getState());\n\n  const firstSearchExecuted = () => !!responseIdSelector(getState());\n\n  const hasProducts = () =>\n    firstSearchExecuted() && totalNumberOfProducts() > 0;\n\n  const firstProduct = () => (hasProducts() ? page() * perPage() + 1 : 0);\n\n  const lastProduct = () =>\n    hasProducts()\n      ? firstProduct() + (numberOfProductsSelector(getState()) - 1)\n      : 0;\n\n  return {\n    ...controller,\n    get state(): State {\n      return {\n        firstRequestExecuted: firstSearchExecuted(),\n        firstProduct: firstProduct(),\n        lastProduct: lastProduct(),\n        totalNumberOfProducts: totalNumberOfProducts(),\n        hasProducts: hasProducts(),\n        isLoading: isLoadingSelector(getState()),\n        hasError: errorSelector(getState()) !== null,\n        ...(enrichSummary ? enrichSummary(getState()) : {}),\n      } as State;\n    },\n  };\n};\n", "import {CommerceEngine} from '../../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../../app/state-key.js';\nimport {Parameters} from '../../../../features/commerce/parameters/parameters-actions.js';\nimport {Serializer} from '../../../../features/commerce/parameters/parameters-serializer.js';\nimport {deepEqualAnyOrder} from '../../../../utils/compare-utils.js';\nimport {validateInitialState} from '../../../../utils/validate-payload.js';\nimport {buildController} from '../../../controller/headless-controller.js';\nimport {\n  initialStateSchema,\n  UrlManager,\n  UrlManagerInitialState,\n  type UrlManagerProps,\n  UrlManagerState,\n} from '../../../url-manager/headless-url-manager.js';\nimport {\n  ParameterManager,\n  ParameterManagerProps,\n} from '../parameter-manager/headless-core-parameter-manager.js';\n\nexport type {\n  UrlManagerProps,\n  UrlManager,\n  UrlManagerInitialState,\n  UrlManagerState,\n};\n\ninterface CoreUrlManagerProps<T extends Parameters> extends UrlManagerProps {\n  requestIdSelector: (state: CommerceEngine[typeof stateKey]) => string;\n  parameterManagerBuilder: (\n    engine: CommerceEngine,\n    props: ParameterManagerProps<T>\n  ) => ParameterManager<T>;\n  serializer: Serializer<T>;\n}\n\n/**\n * @internal\n * Creates a `UrlManager` sub-controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `UrlManager` properties.\n * @returns A `UrlManager` sub-controller instance.\n */\nexport function buildCoreUrlManager<T extends Parameters>(\n  engine: CommerceEngine,\n  props: CoreUrlManagerProps<T>\n): UrlManager {\n  let lastRequestId: string;\n\n  function updateLastRequestId() {\n    lastRequestId = props.requestIdSelector(engine[stateKey]);\n  }\n\n  function hasRequestIdChanged() {\n    return lastRequestId !== props.requestIdSelector(engine[stateKey]);\n  }\n\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildUrlManager'\n  );\n\n  const controller = buildController(engine);\n  let previousFragment = props.initialState.fragment;\n  updateLastRequestId();\n\n  const parameterManager = props.parameterManagerBuilder(engine, {\n    initialState: {\n      parameters: props.serializer.deserialize(previousFragment),\n    },\n  });\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const newFragment = this.state.fragment;\n        if (\n          !areFragmentsEquivalent(\n            props.serializer.deserialize,\n            previousFragment,\n            newFragment\n          ) &&\n          hasRequestIdChanged()\n        ) {\n          previousFragment = newFragment;\n          listener();\n        }\n        updateLastRequestId();\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        fragment: props.serializer.serialize(parameterManager.state.parameters),\n      };\n    },\n\n    synchronize(fragment: string) {\n      previousFragment = fragment;\n\n      const parameters = props.serializer.deserialize(fragment);\n      parameterManager.synchronize(parameters);\n    },\n  };\n}\n\nfunction areFragmentsEquivalent<T>(\n  deserialize: (fragment: string) => T,\n  fragment1: string,\n  fragment2: string\n) {\n  if (fragment1 === fragment2) {\n    return true;\n  }\n\n  const params1 = deserialize(fragment1);\n  const params2 = deserialize(fragment2);\n  return deepEqualAnyOrder(params1, params2);\n}\n", "import {Schema, StringValue} from '@coveo/bueno';\nimport {configuration} from '../../app/common-reducers.js';\nimport {SearchEngine} from '../../app/search-engine/search-engine.js';\nimport {buildSearchParameterSerializer} from '../../features/search-parameters/search-parameter-serializer.js';\nimport {SearchParametersState} from '../../state/search-app-state.js';\nimport {ConfigurationSection} from '../../state/state-sections.js';\nimport {deepEqualAnyOrder} from '../../utils/compare-utils.js';\nimport {loadReducerError} from '../../utils/errors.js';\nimport {validateInitialState} from '../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../controller/headless-controller.js';\nimport {buildSearchParameterManager} from '../search-parameter-manager/headless-search-parameter-manager.js';\n\nexport interface UrlManagerProps {\n  /**\n   * The initial state that should be applied to the `UrlManager` controller.\n   */\n  initialState: UrlManagerInitialState;\n}\n\nexport interface UrlManagerInitialState {\n  /**\n   * The part of the url that contains search parameters.\n   * E.g., `q=windmill&f[author]=Cervantes`\n   */\n  fragment: string;\n}\n\nexport const initialStateSchema = new Schema<Required<UrlManagerInitialState>>({\n  fragment: new StringValue(),\n});\n\n/**\n * The `UrlManager` controller can parse an url fragment to extract search parameters which affect the search response.\n *\n * Example: [url-manager.ts](https://github.com/coveo/ui-kit/blob/master/packages/samples/headless-react/src/components/url-manager/url-manager.ts)\n *\n * @group Controllers\n * @category UrlManager\n * */\nexport interface UrlManager extends Controller {\n  /**\n   * The state relevant to the `UrlManager` controller.\n   * */\n  state: UrlManagerState;\n\n  /**\n   * Updates the search parameters in state with those from the url & launches a search.\n   * @param fragment The part of the url that contains search parameters.  E.g., `q=windmill&f[author]=Cervantes`\n   */\n  synchronize(fragment: string): void;\n}\n\n/**\n * A scoped and simplified part of the Headless state that is relevant to the `UrlManager` controller.\n *\n * @group Controllers\n * @category UrlManager\n */\nexport interface UrlManagerState {\n  /**\n   * The part of the url that contains search parameters.\n   * E.g., `q=windmill&f[author]=Cervantes`\n   */\n  fragment: string;\n}\n\n/**\n * Creates a `UrlManager` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `UrlManager` properties.\n * @returns A `UrlManager` controller instance.\n *\n * @group Controllers\n * @category UrlManager\n */\nexport function buildUrlManager(\n  engine: SearchEngine,\n  props: UrlManagerProps\n): UrlManager {\n  let lastRequestId: string;\n\n  function updateLastRequestId() {\n    lastRequestId = engine.state.search.requestId;\n  }\n\n  function hasRequestIdChanged() {\n    return lastRequestId !== engine.state.search.requestId;\n  }\n\n  if (!loadUrlManagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildUrlManager'\n  );\n\n  const controller = buildController(engine);\n  let previousFragment = props.initialState.fragment;\n  updateLastRequestId();\n\n  const searchParameterManager = buildSearchParameterManager(engine, {\n    initialState: {\n      parameters: deserializeFragment(previousFragment),\n    },\n  });\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const newFragment = this.state.fragment;\n        if (\n          !areFragmentsEquivalent(previousFragment, newFragment) &&\n          hasRequestIdChanged()\n        ) {\n          previousFragment = newFragment;\n          listener();\n        }\n        updateLastRequestId();\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        fragment: buildSearchParameterSerializer().serialize(\n          searchParameterManager.state.parameters\n        ),\n      };\n    },\n\n    synchronize(fragment: string) {\n      previousFragment = fragment;\n\n      const parameters = deserializeFragment(fragment);\n      searchParameterManager.synchronize(parameters);\n    },\n  };\n}\n\nfunction areFragmentsEquivalent(fragment1: string, fragment2: string) {\n  if (fragment1 === fragment2) {\n    return true;\n  }\n\n  const params1 = deserializeFragment(fragment1);\n  const params2 = deserializeFragment(fragment2);\n  return deepEqualAnyOrder(params1, params2);\n}\n\nfunction deserializeFragment(fragment: string) {\n  return buildSearchParameterSerializer().deserialize(fragment);\n}\n\nfunction loadUrlManagerReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  Partial<SearchParametersState> & ConfigurationSection\n> {\n  engine.addReducers({configuration});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine.js';\nimport {getDebugInitialState} from '../../features/debug/debug-state.js';\nimport {getPaginationInitialState} from '../../features/pagination/pagination-state.js';\nimport {getQueryInitialState} from '../../features/query/query-state.js';\nimport {SearchParameters} from '../../features/search-parameters/search-parameter-actions.js';\nimport {\n  legacyLogParametersChange,\n  parametersChange,\n} from '../../features/search-parameters/search-parameter-analytics-actions.js';\nimport {executeSearch} from '../../features/search/search-actions.js';\nimport {StaticFilterValue} from '../../features/static-filter-set/static-filter-set-state.js';\nimport {SearchParametersState} from '../../state/search-app-state.js';\nimport {deepEqualAnyOrder} from '../../utils/compare-utils.js';\nimport {\n  buildCoreSearchParameterManager,\n  enrichParameters,\n  getCoreActiveSearchParameters,\n  SearchParameterManager,\n  SearchParameterManagerInitialState,\n  SearchParameterManagerProps,\n  SearchParameterManagerState,\n  validateParams,\n} from '../core/search-parameter-manager/headless-core-search-parameter-manager.js';\n\nexport type {\n  SearchParameters,\n  SearchParameterManager,\n  SearchParameterManagerInitialState,\n  SearchParameterManagerState,\n  SearchParameterManagerProps,\n};\n\n/**\n * Creates a `SearchParameterManager` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `SearchParameterManager` properties.\n * @returns A `SearchParameterManager` controller instance.\n *\n * @group Controllers\n * @category SearchParameterManager\n */\nexport function buildSearchParameterManager(\n  engine: SearchEngine,\n  props: SearchParameterManagerProps\n): SearchParameterManager {\n  const {dispatch} = engine;\n  const controller = buildCoreSearchParameterManager(engine, props);\n\n  return {\n    ...controller,\n\n    synchronize(parameters: SearchParameters) {\n      const activeParams = getActiveSearchParameters(engine);\n      const oldParams = enrichParameters(engine, activeParams);\n      const newParams = enrichParameters(engine, parameters);\n\n      if (deepEqualAnyOrder(oldParams, newParams)) {\n        return;\n      }\n\n      if (!validateParams(engine, newParams)) {\n        return;\n      }\n\n      controller.synchronize(parameters);\n      dispatch(\n        executeSearch({\n          legacy: legacyLogParametersChange(oldParams, newParams),\n          next: parametersChange(oldParams, newParams),\n        })\n      );\n    },\n\n    get state() {\n      const parameters = getActiveSearchParameters(engine);\n      return {parameters};\n    },\n  };\n}\n\nfunction getActiveSearchParameters(engine: SearchEngine): SearchParameters {\n  const state = engine.state;\n  return {\n    ...getCoreActiveSearchParameters(engine),\n    ...getEnableQuerySyntax(state),\n    ...getAq(state),\n    ...getCq(state),\n    ...getFirstResult(state),\n    ...getNumberOfResults(state),\n    ...getDebug(state),\n    ...getStaticFilters(state),\n  };\n}\n\nfunction getEnableQuerySyntax(state: Partial<SearchParametersState>) {\n  if (state.query === undefined) {\n    return {};\n  }\n\n  const enableQuerySyntax = state.query.enableQuerySyntax;\n  const shouldInclude =\n    enableQuerySyntax !== undefined &&\n    enableQuerySyntax !== getQueryInitialState().enableQuerySyntax;\n  return shouldInclude ? {enableQuerySyntax} : {};\n}\n\nfunction getAq(state: Partial<SearchParametersState>) {\n  if (state.advancedSearchQueries === undefined) {\n    return {};\n  }\n\n  const {aq, defaultFilters} = state.advancedSearchQueries;\n  const shouldInclude = aq !== defaultFilters.aq;\n  return shouldInclude ? {aq} : {};\n}\n\nfunction getCq(state: Partial<SearchParametersState>) {\n  if (state.advancedSearchQueries === undefined) {\n    return {};\n  }\n\n  const {cq, defaultFilters} = state.advancedSearchQueries;\n  const shouldInclude = cq !== defaultFilters.cq;\n  return shouldInclude ? {cq} : {};\n}\n\nfunction getFirstResult(state: Partial<SearchParametersState>) {\n  if (state.pagination === undefined) {\n    return {};\n  }\n\n  const firstResult = state.pagination.firstResult;\n  const shouldInclude = firstResult !== getPaginationInitialState().firstResult;\n  return shouldInclude ? {firstResult} : {};\n}\n\nfunction getNumberOfResults(state: Partial<SearchParametersState>) {\n  if (state.pagination === undefined) {\n    return {};\n  }\n\n  const {numberOfResults, defaultNumberOfResults} = state.pagination;\n  const shouldInclude = numberOfResults !== defaultNumberOfResults;\n  return shouldInclude ? {numberOfResults} : {};\n}\n\nfunction getStaticFilters(state: Partial<SearchParametersState>) {\n  if (state.staticFilterSet === undefined) {\n    return {};\n  }\n\n  const sf = Object.entries(state.staticFilterSet)\n    .map(([id, filter]) => {\n      const selectedCaptions = getSelectedStaticFilterCaptions(filter.values);\n      return selectedCaptions.length ? {[id]: selectedCaptions} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(sf).length ? {sf} : {};\n}\n\nfunction getSelectedStaticFilterCaptions(values: StaticFilterValue[]) {\n  return values.filter((v) => v.state === 'selected').map((v) => v.caption);\n}\n\nfunction getDebug(state: Partial<SearchParametersState>) {\n  if (state.debug === undefined) {\n    return {};\n  }\n\n  const debug = state.debug;\n  const shouldInclude = debug !== getDebugInitialState();\n  return shouldInclude ? {debug} : {};\n}\n", "import {DateRangeRequest} from '../../controllers/core/facets/range-facet/date-facet/headless-core-date-facet.js';\nimport {NumericRangeRequest} from '../../controllers/facets/range-facet/numeric-facet/headless-numeric-facet.js';\nimport {\n  logFacetClearAll,\n  logFacetDeselect,\n  logFacetSelect,\n  logFacetExclude,\n  facetClearAll,\n  facetDeselect,\n  facetExclude,\n  facetSelect,\n  logFacetUnexclude,\n} from '../../features/facets/facet-set/facet-set-analytics-actions.js';\nimport {\n  logSearchboxSubmit,\n  searchboxSubmit,\n} from '../../features/query/query-analytics-actions.js';\nimport {SearchParameters} from '../../features/search-parameters/search-parameter-actions.js';\nimport {\n  logResultsSort,\n  resultsSort,\n} from '../../features/sort-criteria/sort-criteria-analytics-actions.js';\nimport {\n  interfaceChange,\n  logInterfaceChange,\n} from '../analytics/analytics-actions.js';\nimport {LegacySearchAction} from '../analytics/analytics-utils.js';\nimport {\n  logPageNumber,\n  logPagerResize,\n} from '../pagination/pagination-analytics-actions.js';\nimport {SearchAction} from '../search/search-actions.js';\n\n//TODO: KIT-2859\nexport function legacyLogParametersChange(\n  previousParameters: SearchParameters,\n  newParameters: SearchParameters\n): LegacySearchAction {\n  if (previousParameters.q !== newParameters.q) {\n    return logSearchboxSubmit();\n  }\n\n  if (previousParameters.sortCriteria !== newParameters.sortCriteria) {\n    return logResultsSort();\n  }\n\n  if (previousParameters.firstResult !== newParameters.firstResult) {\n    return logPageNumber();\n  }\n\n  if (previousParameters.numberOfResults !== newParameters.numberOfResults) {\n    return logPagerResize();\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.f, newParameters.f)) {\n    return legacyLogFacetAnalyticsAction(previousParameters.f, newParameters.f);\n  }\n\n  if (\n    areFacetParamsNotEqual(\n      previousParameters.fExcluded,\n      newParameters.fExcluded\n    )\n  ) {\n    return legacyLogFacetAnalyticsAction(\n      previousParameters.fExcluded,\n      newParameters.fExcluded,\n      true\n    );\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.cf, newParameters.cf)) {\n    return legacyLogFacetAnalyticsAction(\n      previousParameters.cf,\n      newParameters.cf\n    );\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.af, newParameters.af)) {\n    return legacyLogFacetAnalyticsAction(\n      previousParameters.af,\n      newParameters.af\n    );\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.nf, newParameters.nf)) {\n    return legacyLogRangeFacetAnalyticsAction(\n      previousParameters.nf,\n      newParameters.nf\n    );\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.df, newParameters.df)) {\n    return legacyLogRangeFacetAnalyticsAction(\n      previousParameters.df,\n      newParameters.df\n    );\n  }\n\n  return logInterfaceChange();\n}\n\n//TODO: KIT-2859\nfunction legacyLogFacetAnalyticsAction(\n  previousFacets: FacetParameters = {},\n  newFacets: FacetParameters = {},\n  excluded = false\n): LegacySearchAction {\n  const previousIds = Object.keys(previousFacets);\n  const newIds = Object.keys(newFacets);\n\n  const removedIds = previousIds.filter((id) => !newIds.includes(id));\n  if (removedIds.length) {\n    const facetId = removedIds[0];\n    switch (true) {\n      case previousFacets[facetId].length > 1:\n        return logFacetClearAll(facetId);\n      case excluded:\n        return logFacetUnexclude({\n          facetId,\n          facetValue: previousFacets[facetId][0],\n        });\n      default:\n        return logFacetDeselect({\n          facetId,\n          facetValue: previousFacets[facetId][0],\n        });\n    }\n  }\n\n  const addedIds = newIds.filter((id) => !previousIds.includes(id));\n  if (addedIds.length) {\n    const facetId = addedIds[0];\n    return excluded\n      ? logFacetExclude({\n          facetId,\n          facetValue: newFacets[facetId][0],\n        })\n      : logFacetSelect({\n          facetId,\n          facetValue: newFacets[facetId][0],\n        });\n  }\n\n  const facetIdWithDifferentValues = newIds.find((key) =>\n    newFacets[key].filter((facetValue) =>\n      previousFacets[key].includes(facetValue)\n    )\n  );\n  if (!facetIdWithDifferentValues) {\n    return logInterfaceChange();\n  }\n\n  const previousValues = previousFacets[facetIdWithDifferentValues];\n  const newValues = newFacets[facetIdWithDifferentValues];\n\n  const addedValues = newValues.filter(\n    (value) => !previousValues.includes(value)\n  );\n\n  if (addedValues.length) {\n    return excluded\n      ? logFacetExclude({\n          facetId: facetIdWithDifferentValues,\n          facetValue: addedValues[0],\n        })\n      : logFacetSelect({\n          facetId: facetIdWithDifferentValues,\n          facetValue: addedValues[0],\n        });\n  }\n\n  const removedValues = previousValues.filter(\n    (value) => !newValues.includes(value)\n  );\n\n  if (removedValues.length) {\n    return excluded\n      ? logFacetUnexclude({\n          facetId: facetIdWithDifferentValues,\n          facetValue: removedValues[0],\n        })\n      : logFacetDeselect({\n          facetId: facetIdWithDifferentValues,\n          facetValue: removedValues[0],\n        });\n  }\n\n  return logInterfaceChange();\n}\n\n//TODO: KIT-2859\nfunction legacyLogRangeFacetAnalyticsAction(\n  previousFacets: RangeFacetParameters = {},\n  newFacets: RangeFacetParameters = {}\n): LegacySearchAction {\n  return legacyLogFacetAnalyticsAction(\n    parseRangeFacetParams(previousFacets),\n    parseRangeFacetParams(newFacets)\n  );\n}\n\n// --------------------- KIT-2859 : Everything above this will get deleted ! :) ---------------------\nexport function parametersChange(\n  previousParameters: SearchParameters,\n  newParameters: SearchParameters\n): SearchAction {\n  if (previousParameters.q !== newParameters.q) {\n    return searchboxSubmit();\n  }\n\n  if (previousParameters.sortCriteria !== newParameters.sortCriteria) {\n    return resultsSort();\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.f, newParameters.f)) {\n    return facetAction(previousParameters.f, newParameters.f);\n  }\n\n  if (\n    areFacetParamsNotEqual(\n      previousParameters.fExcluded,\n      newParameters.fExcluded\n    )\n  ) {\n    return facetAction(\n      previousParameters.fExcluded,\n      newParameters.fExcluded,\n      true\n    );\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.cf, newParameters.cf)) {\n    return facetAction(previousParameters.cf, newParameters.cf);\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.af, newParameters.af)) {\n    return facetAction(previousParameters.af, newParameters.af);\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.nf, newParameters.nf)) {\n    return facetAction(\n      parseRangeFacetParams(previousParameters.nf),\n      parseRangeFacetParams(newParameters.nf)\n    );\n  }\n\n  if (areFacetParamsNotEqual(previousParameters.df, newParameters.df)) {\n    return facetAction(\n      parseRangeFacetParams(previousParameters.df),\n      parseRangeFacetParams(newParameters.df)\n    );\n  }\n\n  return interfaceChange();\n}\n\nfunction areFacetParamsNotEqual(\n  previousFacetParams: AnyFacetParameters = {},\n  newFacetParams: AnyFacetParameters = {}\n) {\n  return JSON.stringify(previousFacetParams) !== JSON.stringify(newFacetParams);\n}\n\ntype AnyFacetParameters = FacetParameters | RangeFacetParameters;\n\ntype RangeFacetParameters = Record<\n  string,\n  (NumericRangeRequest | DateRangeRequest)[]\n>;\n\ntype FacetParameters = Record<string, string[]>;\n\nfunction facetAction(\n  previousFacets: FacetParameters = {},\n  newFacets: FacetParameters = {},\n  excluded = false\n): SearchAction {\n  const previousIds = Object.keys(previousFacets);\n  const newIds = Object.keys(newFacets);\n\n  const removedIds = previousIds.filter((id) => !newIds.includes(id));\n  if (removedIds.length) {\n    const facetId = removedIds[0];\n    return previousFacets[facetId].length > 1\n      ? facetClearAll()\n      : facetDeselect();\n  }\n\n  const addedIds = newIds.filter((id) => !previousIds.includes(id));\n  if (addedIds.length) {\n    return excluded ? facetExclude() : facetSelect();\n  }\n\n  const facetIdWithDifferentValues = newIds.find((key) =>\n    newFacets[key].filter((facetValue) =>\n      previousFacets[key].includes(facetValue)\n    )\n  );\n  if (!facetIdWithDifferentValues) {\n    return interfaceChange();\n  }\n\n  const previousValues = previousFacets[facetIdWithDifferentValues];\n  const newValues = newFacets[facetIdWithDifferentValues];\n\n  const addedValues = newValues.filter(\n    (value) => !previousValues.includes(value)\n  );\n\n  if (addedValues.length) {\n    return excluded ? facetExclude() : facetSelect();\n  }\n\n  const removedValues = previousValues.filter(\n    (value) => !newValues.includes(value)\n  );\n\n  if (removedValues.length) {\n    return facetDeselect();\n  }\n\n  return interfaceChange();\n}\n\nfunction parseRangeFacetParams(facetsParams: RangeFacetParameters = {}) {\n  const formattedParams: FacetParameters = {};\n  Object.keys(facetsParams).forEach(\n    (key) =>\n      (formattedParams[key] = facetsParams[key].map(\n        (facetValue) => `${facetValue.start}..${facetValue.end}`\n      ))\n  );\n  return formattedParams;\n}\n", "import {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {SearchAction} from '../search/search-actions.js';\n\n//TODO: KIT-2859\nexport const logSearchboxSubmit = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/searchbox/submit', (client) =>\n    client.makeSearchboxSubmit()\n  );\n\nexport const searchboxSubmit = (): SearchAction => ({\n  actionCause: SearchPageEvents.searchboxSubmit,\n});\n", "import {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {SearchAction} from '../search/search-actions.js';\nimport {getSortCriteriaInitialState} from './sort-criteria-state.js';\n\n//TODO: KIT-2859\nexport const logResultsSort = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/sort/results', (client, state) =>\n    client.makeResultsSort({\n      resultsSortBy: state.sortCriteria || getSortCriteriaInitialState(),\n    })\n  );\n\nexport const resultsSort = (): SearchAction => ({\n  actionCause: SearchPageEvents.resultsSort,\n});\n", "import {SearchPageEvents as LegacySearchPageEvents} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents.js';\nimport {Result} from '../../api/search/search/result.js';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  nonEmptyString,\n} from '../../utils/validate-payload.js';\nimport {OmniboxSuggestionMetadata} from '../query-suggest/query-suggest-analytics-actions.js';\nimport {SearchAction} from '../search/search-actions.js';\nimport {\n  ClickAction,\n  CustomAction,\n  documentIdentifier,\n  makeAnalyticsAction,\n  partialDocumentInformation,\n  LegacySearchAction,\n  validateResultPayload,\n} from './analytics-utils.js';\nimport {SearchPageEvents} from './search-action-cause.js';\n\nexport interface SearchEventPayload {\n  /** The identifier of the search action (e.g., `interfaceLoad`). */\n  evt: LegacySearchPageEvents | string;\n  /** The event metadata. */\n  meta?: Record<string, unknown>;\n}\n\nexport interface ClickEventPayload {\n  /**\n   * The identifier of the click action.\n   */\n  evt: LegacySearchPageEvents | string;\n  /**\n   * The result associated with the click event.\n   */\n  result: Result;\n  /**\n   * The event metadata.\n   */\n  meta?: Record<string, unknown>;\n}\n\nexport interface CustomEventPayload {\n  /**\n   * The event cause identifier of the custom action\n   */\n  evt: LegacySearchPageEvents | string;\n  /**\n   * The event type identifier of the custom action\n   */\n  type: string;\n  /** The event metadata. */\n  meta?: Record<string, unknown>;\n}\n\nconst validateEvent = (p: {evt: string; type?: string}) =>\n  validatePayload(p, {\n    evt: requiredNonEmptyString,\n    type: nonEmptyString,\n  });\n\nexport interface LogSearchEventActionCreatorPayload {\n  /**\n   * The identifier of the search action (e.g., `interfaceLoad`).\n   * */\n  evt: string;\n  /**\n   * The event metadata.\n   * */\n  meta?: Record<string, unknown>;\n}\n\nexport const logSearchEvent = (\n  p: LogSearchEventActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/generic/search', (client) => {\n    validateEvent(p);\n    const {evt, meta} = p;\n    return client.makeSearchEvent(evt as LegacySearchPageEvents, meta);\n  });\n\nexport interface LogClickEventActionCreatorPayload {\n  /**\n   * The identifier of the click action (e.g., `documentOpen`).\n   * */\n  evt: string;\n\n  /**\n   * The result associated with the click event.\n   */\n  result: Result;\n\n  /**\n   * The event metadata.\n   * */\n  meta?: Record<string, unknown>;\n}\n\nexport const logClickEvent = (\n  p: LogClickEventActionCreatorPayload\n): ClickAction =>\n  makeAnalyticsAction('analytics/generic/click', (client, state) => {\n    validateResultPayload(p.result);\n    validateEvent(p);\n\n    return client.makeClickEvent(\n      p.evt as LegacySearchPageEvents,\n      partialDocumentInformation(p.result, state),\n      documentIdentifier(p.result),\n      p.meta\n    );\n  });\n\nexport interface LogCustomEventActionCreatorPayload {\n  /**\n   * The event cause identifier of the custom action\n   */\n  evt: string;\n  /**\n   * The event type identifier of the custom action\n   */\n  type: string;\n  /**\n   * The event metadata.\n   * */\n  meta?: Record<string, unknown>;\n}\n\nexport const logCustomEvent = (\n  p: LogCustomEventActionCreatorPayload\n): CustomAction =>\n  makeAnalyticsAction('analytics/generic/custom', (client) => {\n    validateEvent(p);\n    return client.makeCustomEventWithType(p.evt, p.type, p.meta);\n  });\n\n//TODO: KIT-2859\nexport const logInterfaceLoad = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/interface/load', (client) =>\n    client.makeInterfaceLoad()\n  );\n\n//TODO: KIT-2859\nexport const logInterfaceChange = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/interface/change', (client, state) =>\n    client.makeInterfaceChange({\n      interfaceChangeTo: state.configuration.analytics.originLevel2,\n    })\n  );\n\n//TODO: KIT-2859\nexport const logSearchFromLink = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/interface/searchFromLink', (client) =>\n    client.makeSearchFromLink()\n  );\n\n//TODO: KIT-2859\nexport const logOmniboxFromLink = (\n  metadata: OmniboxSuggestionMetadata\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/interface/omniboxFromLink', (client) =>\n    client.makeOmniboxFromLink(metadata)\n  );\n\n// --------------------- KIT-2859 : Everything above this will get deleted ! :) ---------------------\nexport const interfaceLoad = (): SearchAction => ({\n  actionCause: SearchPageEvents.interfaceLoad,\n});\n\nexport const interfaceChange = (): SearchAction => ({\n  actionCause: SearchPageEvents.interfaceChange,\n});\n\nexport const searchFromLink = (): SearchAction => ({\n  actionCause: SearchPageEvents.searchFromLink,\n});\n\nexport const omniboxFromLink = (): SearchAction => ({\n  actionCause: SearchPageEvents.omniboxFromLink,\n});\n", "import {PaginationSection} from '../../state/state-sections.js';\nimport {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {SearchAction} from '../search/search-actions.js';\nimport {currentPageSelector} from './pagination-selectors.js';\nimport {getPaginationInitialState} from './pagination-state.js';\n\nexport const logPagerResize = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/pager/resize', (client, state) =>\n    client.makePagerResize({\n      currentResultsPerPage:\n        state.pagination?.numberOfResults ||\n        getPaginationInitialState().numberOfResults,\n    })\n  );\n\nexport const logPageNumber = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/pager/number', (client, state) =>\n    client.makePagerNumber({\n      pagerNumber: currentPageSelector(state as PaginationSection),\n    })\n  );\n\nexport const logPageNext = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/pager/next', (client, state) =>\n    client.makePagerNext({\n      pagerNumber: currentPageSelector(state as PaginationSection),\n    })\n  );\n\nexport const logPagePrevious = (): LegacySearchAction =>\n  makeAnalyticsAction('analytics/pager/previous', (client, state) =>\n    client.makePagerPrevious({\n      pagerNumber: currentPageSelector(state as PaginationSection),\n    })\n  );\n\n// TODO KIT-2983\nexport const browseResults = (): SearchAction => ({\n  actionCause: SearchPageEvents.browseResults,\n});\n", "import {PaginationSection} from '../../state/state-sections.js';\nimport {minimumPage} from './pagination-constants.js';\nimport {calculatePage, calculateMaxPage} from './pagination-slice.js';\n\ninterface Range {\n  start: number;\n  end: number;\n}\n\nfunction firstResultSelector(state: PaginationSection) {\n  return state.pagination.firstResult;\n}\n\nfunction numberOfResultsSelector(state: PaginationSection) {\n  return state.pagination.numberOfResults;\n}\n\nfunction totalCountFilteredSelector(state: PaginationSection) {\n  return state.pagination.totalCountFiltered;\n}\n\n/** Calculates the current page number.\n * @param state SearchPageState.\n * @returns the current page number.\n */\nexport const currentPageSelector = (state: PaginationSection) => {\n  const firstResult = firstResultSelector(state);\n  const numberOfResults = numberOfResultsSelector(state);\n  return calculatePage(firstResult, numberOfResults);\n};\n\n/** Calculates the maximum page number\n * @param state SearchPageState.\n * @returns the maximum page number.\n */\nexport const maxPageSelector = (state: PaginationSection) => {\n  const totalCountFiltered = totalCountFilteredSelector(state);\n  const numberOfResults = numberOfResultsSelector(state);\n  return calculateMaxPage(totalCountFiltered, numberOfResults);\n};\n\n/** Calculates the current pages relative to the current page.\n * @param state SearchPageState.\n * @param desiredNumberOfPages the number of pages to return.\n * @returns the current page numbers.\n */\nexport const currentPagesSelector = (\n  state: PaginationSection,\n  desiredNumberOfPages: number\n) => {\n  const page = currentPageSelector(state);\n  const maxPage = maxPageSelector(state);\n\n  let range = buildRange(page, desiredNumberOfPages);\n  range = shiftRightIfNeeded(range);\n  range = shiftLeftIfNeeded(range, maxPage);\n  return buildCurrentPages(range);\n};\n\nfunction buildRange(page: number, desiredNumberOfPages: number): Range {\n  const isEven = desiredNumberOfPages % 2 === 0;\n  const leftCapacity = Math.floor(desiredNumberOfPages / 2);\n  const rightCapacity = isEven ? leftCapacity - 1 : leftCapacity;\n\n  const start = page - leftCapacity;\n  const end = page + rightCapacity;\n\n  return {start, end};\n}\n\nfunction shiftRightIfNeeded(range: Range) {\n  const leftExcess = Math.max(minimumPage - range.start, 0);\n  const start = range.start + leftExcess;\n  const end = range.end + leftExcess;\n\n  return {start, end};\n}\n\nfunction shiftLeftIfNeeded(range: Range, maxPage: number) {\n  const rightExcess = Math.max(range.end - maxPage, 0);\n  const start = Math.max(range.start - rightExcess, minimumPage);\n  const end = range.end - rightExcess;\n\n  return {start, end};\n}\n\nfunction buildCurrentPages(range: Range) {\n  const currentPages: number[] = [];\n\n  for (let counter = range.start; counter <= range.end; ++counter) {\n    currentPages.push(counter);\n  }\n\n  return currentPages;\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../breadcrumb/breadcrumb-actions.js';\nimport {toggleSelectAutomaticFacetValue} from '../facets/automatic-facet-set/automatic-facet-set-actions.js';\nimport {\n  deselectAllCategoryFacetValues,\n  toggleSelectCategoryFacetValue,\n} from '../facets/category-facet-set/category-facet-set-actions.js';\nimport {selectCategoryFacetSearchResult} from '../facets/facet-search-set/category/category-facet-search-actions.js';\nimport {\n  excludeFacetSearchResult,\n  selectFacetSearchResult,\n} from '../facets/facet-search-set/specific/specific-facet-search-actions.js';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n  updateDateFacetValues,\n} from '../facets/range-facets/date-facet-set/date-facet-actions.js';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n  updateNumericFacetValues,\n} from '../facets/range-facets/numeric-facet-set/numeric-facet-actions.js';\nimport {change} from '../history/history-actions.js';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions.js';\nimport {executeSearch} from '../search/search-actions.js';\nimport {updateActiveTab} from '../tab-set/tab-set-actions.js';\nimport {\n  deselectAllFacetValues,\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n} from './../facets/facet-set/facet-set-actions.js';\nimport {\n  registerNumberOfResults,\n  updateNumberOfResults,\n  updatePage,\n  registerPage,\n  previousPage,\n  nextPage,\n} from './pagination-actions.js';\nimport {\n  maximumNumberOfResultsFromIndex,\n  minimumPage,\n} from './pagination-constants.js';\nimport {\n  getPaginationInitialState,\n  PaginationState,\n} from './pagination-state.js';\n\nexport const paginationReducer = createReducer(\n  getPaginationInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerNumberOfResults, (state, action) => {\n        const page = determineCurrentPage(state);\n        const newNumberOfResults = action.payload;\n\n        state.defaultNumberOfResults = state.numberOfResults =\n          newNumberOfResults;\n        state.firstResult = calculateFirstResult(page, newNumberOfResults);\n      })\n      .addCase(updateNumberOfResults, (state, action) => {\n        state.numberOfResults = action.payload;\n        state.firstResult = 0;\n      })\n      .addCase(updateActiveTab, (state) => {\n        state.firstResult = 0;\n      })\n      .addCase(registerPage, (state, action) => {\n        const page = action.payload;\n        state.firstResult = calculateFirstResult(page, state.numberOfResults);\n      })\n      .addCase(updatePage, (state, action) => {\n        const page = action.payload;\n        state.firstResult = calculateFirstResult(page, state.numberOfResults);\n      })\n      .addCase(previousPage, (state) => {\n        const page = determineCurrentPage(state);\n        const previousPage = Math.max(page - 1, minimumPage);\n        state.firstResult = calculateFirstResult(\n          previousPage,\n          state.numberOfResults\n        );\n      })\n      .addCase(nextPage, (state) => {\n        const page = determineCurrentPage(state);\n        const maxPage = determineMaxPage(state);\n        const nextPage = Math.min(page + 1, maxPage);\n\n        state.firstResult = calculateFirstResult(\n          nextPage,\n          state.numberOfResults\n        );\n      })\n      .addCase(change.fulfilled, (state, action) => {\n        if (action.payload) {\n          state.numberOfResults = action.payload.pagination.numberOfResults;\n          state.firstResult = action.payload.pagination.firstResult;\n        }\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        state.firstResult = action.payload.firstResult ?? state.firstResult;\n        state.numberOfResults =\n          action.payload.numberOfResults ?? state.defaultNumberOfResults;\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const {response} = action.payload;\n        state.totalCountFiltered = response.totalCountFiltered;\n      })\n      .addCase(deselectAllFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleExcludeDateFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleExcludeFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleExcludeNumericFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(excludeFacetSearchResult, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(deselectAllCategoryFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectCategoryFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(selectCategoryFacetSearchResult, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectDateFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectNumericFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(updateDateFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(updateNumericFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(selectFacetSearchResult, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectAutomaticFacetValue, (state) => {\n        handlePaginationReset(state);\n      });\n  }\n);\n\nfunction handlePaginationReset(state: PaginationState) {\n  state.firstResult = getPaginationInitialState().firstResult;\n}\n\nfunction determineCurrentPage(state: PaginationState) {\n  const {firstResult, numberOfResults} = state;\n  return calculatePage(firstResult, numberOfResults);\n}\n\nfunction determineMaxPage(state: PaginationState) {\n  const {totalCountFiltered, numberOfResults} = state;\n  return calculateMaxPage(totalCountFiltered, numberOfResults);\n}\n\nexport function calculateFirstResult(page: number, numberOfResults: number) {\n  return (page - 1) * numberOfResults;\n}\n\nexport function calculatePage(firstResult: number, numberOfResults: number) {\n  return Math.round(firstResult / numberOfResults) + 1;\n}\n\nexport function calculateMaxPage(\n  totalCountFiltered: number,\n  numberOfResults: number\n) {\n  const totalCount = Math.min(\n    totalCountFiltered,\n    maximumNumberOfResultsFromIndex\n  );\n  return Math.ceil(totalCount / numberOfResults);\n}\n", "import {NumberValue, RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {AutomaticFacetGeneratorOptions} from '../../../controllers/facets/automatic-facet-generator/headless-automatic-facet-generator-options.js';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload.js';\nimport {facetValueDefinition} from '../facet-set/facet-set-validate-payload.js';\nimport {FacetValue} from '../facet-set/interfaces/response.js';\nimport {facetIdDefinition} from '../generic/facet-actions-validation.js';\nimport {\n  DESIRED_COUNT_DEFAULT,\n  DESIRED_COUNT_MAXIMUM,\n  DESIRED_COUNT_MINIMUM,\n  NUMBER_OF_VALUE_DEFAULT,\n  NUMBER_OF_VALUE_MINIMUM,\n} from './automatic-facet-set-constants.js';\n\nexport interface ToggleSelectAutomaticFacetValueActionCreatorPayload {\n  /**\n   * The field of the automatic facet.\n   */\n  field: string;\n\n  /**\n   * The target automatic facet value.\n   */\n  selection: FacetValue;\n}\n\nconst numberOfValuesDefinition = new NumberValue({\n  min: NUMBER_OF_VALUE_MINIMUM,\n  default: NUMBER_OF_VALUE_DEFAULT,\n  required: false,\n});\n\nconst desiredCountDefinition = new NumberValue({\n  min: DESIRED_COUNT_MINIMUM,\n  max: DESIRED_COUNT_MAXIMUM,\n  default: DESIRED_COUNT_DEFAULT,\n  required: false,\n});\n\nconst optionsSchema = {\n  desiredCount: desiredCountDefinition,\n  numberOfValues: numberOfValuesDefinition,\n};\nexport const setOptions = createAction(\n  'automaticFacet/setOptions',\n  (payload: Partial<AutomaticFacetGeneratorOptions>) =>\n    validatePayload(payload, optionsSchema)\n);\n\nexport const deselectAllAutomaticFacetValues = createAction(\n  'automaticFacet/deselectAll',\n  (payload: string) => validatePayload(payload, facetIdDefinition)\n);\n\nconst fieldDefinition = requiredNonEmptyString;\nexport const toggleSelectAutomaticFacetValue = createAction(\n  'automaticFacet/toggleSelectValue',\n  (payload: ToggleSelectAutomaticFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      field: fieldDefinition,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n", "import {RecordValue, Schema} from '@coveo/bueno';\nimport {CoreEngine} from '../../../app/engine.js';\nimport {AutomaticFacetResponse} from '../../../features/facets/automatic-facet-set/interfaces/response.js';\nimport {findActiveValueAncestry} from '../../../features/facets/category-facet-set/category-facet-utils.js';\nimport {\n  BaseFacetValueRequest,\n  CurrentValues,\n} from '../../../features/facets/facet-api/request.js';\nimport {FacetRequest} from '../../../features/facets/facet-set/interfaces/request.js';\nimport {\n  getQ,\n  getSortCriteria,\n  getFacets,\n} from '../../../features/parameter-manager/parameter-manager-selectors.js';\nimport {getQueryInitialState} from '../../../features/query/query-state.js';\nimport {\n  restoreSearchParameters,\n  SearchParameters,\n} from '../../../features/search-parameters/search-parameter-actions.js';\nimport {searchParametersDefinition} from '../../../features/search-parameters/search-parameter-schema.js';\nimport {initialSearchParameterSelector} from '../../../features/search-parameters/search-parameter-selectors.js';\nimport {getSortCriteriaInitialState} from '../../../features/sort-criteria/sort-criteria-state.js';\nimport {SearchParametersState} from '../../../state/search-app-state.js';\nimport {validateInitialState} from '../../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\n\nexport type {SearchParameters};\n\nexport interface SearchParameterManagerProps {\n  /**\n   * The initial state that should be applied to the `SearchParameterManager` controller.\n   */\n  initialState: SearchParameterManagerInitialState;\n}\n\nexport interface SearchParameterManagerInitialState {\n  /**\n   * The parameters affecting the search response.\n   */\n  parameters: SearchParameters;\n}\n\nconst initialStateSchema = new Schema<\n  Required<SearchParameterManagerInitialState>\n>({\n  parameters: new RecordValue({\n    options: {required: true},\n    values: searchParametersDefinition,\n  }),\n});\n\n/**\n * The `SearchParameterManager` controller allows restoring parameters that affect the results from e.g. a url.\n *\n * @group Controllers\n * @category SearchParameterManager\n * */\nexport interface SearchParameterManager extends Controller {\n  /**\n   * Updates the search parameters in state with the passed parameters and executes a search. Unspecified keys are reset to their initial values.\n   *\n   * @param parameters - The search parameters to synchronize.\n   */\n  synchronize(parameters: SearchParameters): void;\n\n  /**\n   * The state relevant to the `SearchParameterManager` controller.\n   * */\n  state: SearchParameterManagerState;\n}\n\n/**\n * A scoped and simplified part of the Headless state that is relevant to the `SearchParameterManager` controller.\n *\n * @group Controllers\n * @category SearchParameterManager\n */\nexport interface SearchParameterManagerState {\n  /**\n   * The parameters affecting the search response.\n   */\n  parameters: SearchParameters;\n}\n\n/**\n * Creates a `SearchParameterManager` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `SearchParameterManager` properties.\n * @returns A `SearchParameterManager` controller instance.\n */\nexport function buildCoreSearchParameterManager(\n  engine: CoreEngine,\n  props: SearchParameterManagerProps\n): SearchParameterManager {\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildSearchParameterManager'\n  );\n  dispatch(restoreSearchParameters(props.initialState.parameters));\n\n  return {\n    ...controller,\n\n    synchronize(parameters: SearchParameters) {\n      const newParams = enrichParameters(engine, parameters);\n      dispatch(restoreSearchParameters(newParams));\n    },\n\n    get state() {\n      const parameters = getCoreActiveSearchParameters(engine);\n      return {parameters};\n    },\n  };\n}\n\nexport function enrichParameters(\n  engine: CoreEngine,\n  parameters: SearchParameters\n): Required<SearchParameters> {\n  return {\n    ...initialSearchParameterSelector(engine.state),\n    ...parameters,\n  };\n}\n\nexport function validateParams(\n  engine: CoreEngine,\n  parameters: Required<SearchParameters>\n): boolean {\n  return validateTab(engine, parameters);\n}\n\nexport function getCoreActiveSearchParameters(\n  engine: CoreEngine\n): SearchParameters {\n  const state = engine.state;\n  return {\n    ...getQ(state.query, (s) => s.q, getQueryInitialState().q),\n    ...getTab(state),\n    ...getSortCriteria(\n      state.sortCriteria,\n      (sortCriteria) => sortCriteria,\n      getSortCriteriaInitialState()\n    ),\n    ...getFacets(state.facetSet, facetIsEnabled(state), getSelectedValues, 'f'),\n    ...getFacets(\n      state.facetSet,\n      facetIsEnabled(state),\n      getExcludedValues,\n      'fExcluded'\n    ),\n    ...getCategoryFacets(state),\n    ...getNumericFacets(state),\n    ...getDateFacets(state),\n    ...getAutomaticFacets(state),\n  };\n}\n\nfunction facetIsEnabled(state: CoreEngine['state']) {\n  return (facetId: string) => {\n    return state.facetOptions?.facets[facetId]?.enabled ?? true;\n  };\n}\n\nfunction getTab(state: Partial<SearchParametersState>) {\n  const activeTab = Object.values(state.tabSet ?? {}).find(\n    (tab) => tab.isActive\n  );\n\n  return activeTab ? {tab: activeTab.id} : {};\n}\n\nfunction validateTab(\n  engine: CoreEngine,\n  parameters: Required<SearchParameters>\n) {\n  const tabState = engine.state.tabSet;\n  const tabParam = parameters.tab;\n  if (!tabState || !Object.entries(tabState).length || !tabParam) {\n    return true;\n  }\n\n  const isInState = tabParam in tabState;\n  if (!isInState) {\n    engine.logger.warn(\n      `The tab search parameter \"${tabParam}\" is invalid. Ignoring change.`\n    );\n  }\n\n  return isInState;\n}\n\nexport function getSelectedValues(request: FacetRequest) {\n  return request.currentValues\n    .filter((fv) => fv.state === 'selected')\n    .map((fv) => fv.value);\n}\n\nexport function getSelectedRangeValues(\n  request: CurrentValues<BaseFacetValueRequest>\n) {\n  return request.currentValues.filter((fv) => fv.state === 'selected');\n}\n\nfunction getExcludedValues(request: FacetRequest) {\n  return request.currentValues\n    .filter((fv) => fv.state === 'excluded')\n    .map((fv) => fv.value);\n}\n\nfunction getCategoryFacets(state: CoreEngine['state']) {\n  return getFacets(\n    state.categoryFacetSet,\n    facetIsEnabled(state),\n    (request) =>\n      findActiveValueAncestry(request.currentValues).map((v) => v.value),\n    'cf'\n  );\n}\n\nfunction getNumericFacets(state: CoreEngine['state']) {\n  return getFacets(\n    state.numericFacetSet,\n    facetIsEnabled(state),\n    getSelectedRangeValues,\n    'nf'\n  );\n}\n\nfunction getDateFacets(state: CoreEngine['state']) {\n  return getFacets(\n    state.dateFacetSet,\n    facetIsEnabled(state),\n    getSelectedRangeValues,\n    'df'\n  );\n}\n\nfunction getAutomaticFacets(state: Partial<SearchParametersState>) {\n  const set = state.automaticFacetSet?.set;\n  if (set === undefined) {\n    return {};\n  }\n  const af = Object.entries(set)\n    .map(([facetId, {response}]) => {\n      const selectedValues = getSelectedResponseValues(response);\n      return selectedValues.length ? {[facetId]: selectedValues} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(af).length ? {af} : {};\n}\n\nfunction getSelectedResponseValues(response: AutomaticFacetResponse) {\n  return response.values\n    .filter((fv) => fv.state === 'selected')\n    .map((fv) => fv.value);\n}\n", "import {SearchParametersState} from '../../state/search-app-state.js';\nimport {getAdvancedSearchQueriesInitialState} from '../advanced-search-queries/advanced-search-queries-state.js';\nimport {getDebugInitialState} from '../debug/debug-state.js';\nimport {getPaginationInitialState} from '../pagination/pagination-state.js';\nimport {getQueryInitialState} from '../query/query-state.js';\nimport {getSortCriteriaInitialState} from '../sort-criteria/sort-criteria-state.js';\nimport {SearchParameters} from './search-parameter-actions.js';\n\nexport function initialSearchParameterSelector(\n  state: Partial<SearchParametersState>\n): Required<SearchParameters> {\n  return {\n    q: getQueryInitialState().q,\n    enableQuerySyntax: getQueryInitialState().enableQuerySyntax,\n    aq:\n      state.advancedSearchQueries?.defaultFilters.aq ??\n      getAdvancedSearchQueriesInitialState().defaultFilters.aq,\n    cq:\n      state.advancedSearchQueries?.defaultFilters.cq ??\n      getAdvancedSearchQueriesInitialState().defaultFilters.cq,\n    firstResult: getPaginationInitialState().firstResult,\n    numberOfResults:\n      state.pagination?.defaultNumberOfResults ??\n      getPaginationInitialState().defaultNumberOfResults,\n    sortCriteria: getSortCriteriaInitialState(),\n    f: {},\n    fExcluded: {},\n    cf: {},\n    nf: {},\n    df: {},\n    debug: getDebugInitialState(),\n    sf: {},\n    tab: '',\n    af: {},\n    mnf: {},\n  };\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommerceFacetSetSection,\n  CommerceSearchSection,\n} from '../../../../state/state-sections.js';\n\nexport const facetResponseSelector = createSelector(\n  (\n    state: CommerceSearchSection & CommerceFacetSetSection,\n    facetId: string\n  ) => ({state, facetId}),\n\n  ({state, facetId}) => {\n    const facetResponse = state.commerceSearch.facets.find(\n      (facetResponse) => facetResponse.facetId === facetId\n    );\n    if (facetResponse && facetResponse.facetId in state.commerceFacetSet) {\n      return facetResponse;\n    }\n\n    return undefined;\n  }\n);\n\nexport const isFacetLoadingResponseSelector = createSelector(\n  (state: CommerceSearchSection) => ({state}),\n\n  ({state}) => state.commerceSearch.isLoading\n);\n", "import {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {ChildProduct, Product} from '../../../api/commerce/common/product.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {configuration} from '../../../app/common-reducers.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {contextReducer as commerceContext} from '../../../features/commerce/context/context-slice.js';\nimport {\n  pagePrincipalSelector,\n  perPagePrincipalSelector,\n  totalEntriesPrincipalSelector,\n} from '../../../features/commerce/pagination/pagination-selectors.js';\nimport {Parameters} from '../../../features/commerce/parameters/parameters-actions.js';\nimport {parametersDefinition} from '../../../features/commerce/parameters/parameters-schema.js';\nimport {\n  activeParametersSelector,\n  enrichedParametersSelector,\n} from '../../../features/commerce/parameters/parameters-selectors.js';\nimport {productListingSerializer} from '../../../features/commerce/parameters/parameters-serializer.js';\nimport {restoreProductListingParameters} from '../../../features/commerce/product-listing-parameters/product-listing-parameters-actions.js';\nimport {\n  fetchProductListing,\n  fetchMoreProducts,\n  promoteChildToParent,\n} from '../../../features/commerce/product-listing/product-listing-actions.js';\nimport {\n  errorSelector,\n  isLoadingSelector,\n  numberOfProductsSelector,\n  requestIdSelector,\n  responseIdSelector,\n} from '../../../features/commerce/product-listing/product-listing-selectors.js';\nimport {productListingReducer as productListing} from '../../../features/commerce/product-listing/product-listing-slice.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport {\n  buildProductListingSubControllers,\n  SearchAndListingSubControllers,\n} from '../core/sub-controller/headless-sub-controller.js';\nimport {\n  facetResponseSelector,\n  isFacetLoadingResponseSelector,\n} from './facets/headless-product-listing-facet-options.js';\nimport {ProductListingSummaryState} from './summary/headless-product-listing-summary.js';\n\n/**\n * The `ProductListing` controller exposes a method for retrieving product listing content in a commerce interface.\n *\n * @group Buildable controllers\n * @category ProductListing\n */\nexport interface ProductListing\n  extends Controller,\n    SearchAndListingSubControllers<Parameters, ProductListingSummaryState> {\n  /**\n   * Fetches the product listing.\n   */\n  refresh(): void;\n\n  /**\n   * Executes the first request if it has not been executed yet.\n   */\n  executeFirstRequest(): void;\n\n  /**\n   * Finds the specified parent product and the specified child product of that parent, and makes that child the new\n   * parent. The `children` and `totalNumberOfChildren` properties of the original parent are preserved in the new\n   * parent.\n   *\n   * This method is useful when leveraging the product grouping feature to allow users to select nested products.\n   *\n   * E.g., if a product has children (such as color variations), you can call this method when the user selects a child\n   * to make that child the new parent product, and re-render the product as such in the storefront.\n   *\n   * **Note:** In the controller state, a product that has children will always include itself as its own child so that\n   * it can be rendered as a nested product, and restored as the parent product through this method as needed.\n   *\n   * @param child The child product that will become the new parent.\n   */\n  promoteChildToParent(child: ChildProduct): void;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `ProductListing` controller.\n   */\n  state: ProductListingState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `ProductListing` controller.\n *\n * @group Buildable controllers\n * @category ProductListing\n */\nexport interface ProductListingState {\n  products: Product[];\n  error: CommerceAPIErrorStatusResponse | null;\n  isLoading: boolean;\n  responseId: string;\n}\n\n/**\n * Creates a `ProductListing` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @returns A `ProductListing` controller instance.\n *\n * @group Buildable controllers\n * @category ProductListing\n */\nexport function buildProductListing(engine: CommerceEngine): ProductListing {\n  if (!loadBaseProductListingReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine[stateKey];\n  const subControllers = buildProductListingSubControllers(engine, {\n    responseIdSelector,\n    fetchProductsActionCreator: fetchProductListing,\n    fetchMoreProductsActionCreator: fetchMoreProducts,\n    facetResponseSelector,\n    isFacetLoadingResponseSelector,\n    requestIdSelector,\n    serializer: productListingSerializer,\n    parametersDefinition,\n    activeParametersSelector,\n    restoreActionCreator: restoreProductListingParameters,\n    enrichParameters: enrichedParametersSelector,\n    isLoadingSelector,\n    errorSelector,\n    pageSelector: pagePrincipalSelector,\n    perPageSelector: perPagePrincipalSelector,\n    totalEntriesSelector: totalEntriesPrincipalSelector,\n    numberOfProductsSelector,\n  });\n\n  return {\n    ...controller,\n    ...subControllers,\n\n    get state() {\n      const {products, error, isLoading, responseId} =\n        getState().productListing;\n      return {\n        products,\n        error,\n        isLoading,\n        responseId,\n      };\n    },\n\n    promoteChildToParent(child: ChildProduct) {\n      dispatch(promoteChildToParent({child}));\n    },\n\n    refresh: () => dispatch(fetchProductListing()),\n\n    executeFirstRequest() {\n      const firstRequestExecuted = responseIdSelector(getState()) !== '';\n\n      if (firstRequestExecuted) {\n        return;\n      }\n\n      dispatch(fetchProductListing());\n    },\n  };\n}\n\nfunction loadBaseProductListingReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine {\n  engine.addReducers({productListing, commerceContext, configuration});\n  return true;\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {\n  CommerceFacetSetSection,\n  ProductListingSection,\n} from '../../../../state/state-sections.js';\n\nexport const facetResponseSelector = createSelector(\n  (\n    state: ProductListingSection & CommerceFacetSetSection,\n    facetId: string\n  ) => ({state, facetId}),\n\n  ({state, facetId}) => {\n    const facetResponse = state.productListing.facets.find(\n      (facetResponse) => facetResponse.facetId === facetId\n    );\n    if (facetResponse && facetResponse.facetId in state.commerceFacetSet) {\n      return facetResponse;\n    }\n\n    return undefined;\n  }\n);\n\nexport const isFacetLoadingResponseSelector = createSelector(\n  (state: ProductListingSection) => ({state}),\n\n  ({state}) => state.productListing.isLoading\n);\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {CommerceAPIErrorStatusResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {ChildProduct, Product} from '../../../api/commerce/common/product.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {\n  pageRecommendationSelector,\n  perPageRecommendationSelector,\n  totalEntriesRecommendationSelector,\n} from '../../../features/commerce/pagination/pagination-selectors.js';\nimport {\n  fetchMoreRecommendations,\n  fetchRecommendations,\n  promoteChildToParent,\n  registerRecommendationsSlot,\n} from '../../../features/commerce/recommendations/recommendations-actions.js';\nimport {\n  isLoadingSelector,\n  numberOfRecommendationsSelector,\n} from '../../../features/commerce/recommendations/recommendations-selectors.js';\nimport {recommendationsReducer as recommendations} from '../../../features/commerce/recommendations/recommendations-slice.js';\nimport {recommendationsOptionsSchema} from '../../../features/commerce/recommendations/recommendations.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {validateInitialState} from '../../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport {\n  BaseSolutionTypeSubControllers,\n  buildBaseSubControllers,\n} from '../core/sub-controller/headless-sub-controller.js';\nimport {SummaryState} from '../core/summary/headless-core-summary.js';\nimport {RecommendationsSummaryState} from './summary/headless-recommendations-summary.js';\n\n/**\n * The `Recommendations` controller exposes a method for retrieving recommendations content in a commerce interface.\n *\n * @group Buildable controllers\n * @category Recommendations\n */\nexport interface Recommendations\n  extends Controller,\n    BaseSolutionTypeSubControllers<SummaryState> {\n  /**\n   * Fetches the recommendations.\n   */\n  refresh(): void;\n\n  /**\n   * Finds the specified parent product and the specified child product of that parent, and makes that child the new\n   * parent. The `children` and `totalNumberOfChildren` properties of the original parent are preserved in the new\n   * parent.\n   *\n   * This method is useful when leveraging the product grouping feature to allow users to select nested products.\n   *\n   * E.g., if a product has children (such as color variations), you can call this method when the user selects a child\n   * to make that child the new parent product, and re-render the product as such in the storefront.\n   *\n   * **Note:** In the controller state, a product that has children will always include itself as its own child so that\n   * it can be rendered as a nested product, and restored as the parent product through this method as needed.\n   *\n   * @param child The child product that will become the new parent.\n   */\n  promoteChildToParent(child: ChildProduct): void;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `Recommendations` controller.\n   *\n   * @group Buildable controllers\n   * @category Recommendations\n   */\n  state: RecommendationsState;\n}\n\nexport interface RecommendationsState {\n  headline: string;\n  products: Product[];\n  error: CommerceAPIErrorStatusResponse | null;\n  isLoading: boolean;\n  responseId: string;\n}\n\nexport interface RecommendationsOptions {\n  /**\n   * The unique identifier of the recommendations slot (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  slotId: string;\n  /**\n   * The unique identifier of the product to use for seeded recommendations.\n   */\n  productId?: string;\n}\n\nexport interface RecommendationsProps {\n  /**\n   * The options for the `Recommendations` controller.\n   */\n  options: RecommendationsOptions;\n}\n\n/**\n * Creates a `Recommendations` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `Recommendations` controller properties.\n * @returns A `Recommendations` controller instance.\n *\n * @group Buildable controllers\n * @category Recommendations\n */\nexport function buildRecommendations(\n  engine: CommerceEngine,\n  props: RecommendationsProps\n): Recommendations {\n  if (!loadBaseRecommendationsReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  validateInitialState(\n    engine,\n    recommendationsOptionsSchema,\n    props.options,\n    'buildRecommendations'\n  );\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const {slotId, productId} = props.options;\n  dispatch(registerRecommendationsSlot({slotId}));\n\n  const recommendationStateSelector = createSelector(\n    (state: CommerceEngineState) => state.recommendations[slotId]!,\n    (recommendations) => recommendations\n  );\n  const subControllers = buildBaseSubControllers<RecommendationsSummaryState>(\n    engine,\n    {\n      slotId,\n      responseIdSelector: (state) => state.recommendations[slotId]!.responseId,\n      fetchProductsActionCreator: () => fetchRecommendations({slotId}),\n      fetchMoreProductsActionCreator: () => fetchMoreRecommendations({slotId}),\n      isLoadingSelector: (state) => isLoadingSelector(state, slotId),\n      errorSelector: (state) => state.recommendations[slotId]!.error,\n      pageSelector: (state) => pageRecommendationSelector(state, slotId),\n      perPageSelector: (state) => perPageRecommendationSelector(state, slotId),\n      totalEntriesSelector: (state) =>\n        totalEntriesRecommendationSelector(state, slotId),\n      numberOfProductsSelector: (state) =>\n        numberOfRecommendationsSelector(state, slotId),\n    }\n  );\n\n  return {\n    ...controller,\n    ...subControllers,\n\n    promoteChildToParent(child: ChildProduct) {\n      dispatch(promoteChildToParent({child, slotId}));\n    },\n\n    get state() {\n      return recommendationStateSelector(engine[stateKey]);\n    },\n\n    refresh: () => dispatch(fetchRecommendations({slotId, productId})),\n  };\n}\n\nfunction loadBaseRecommendationsReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine {\n  engine.addReducers({recommendations});\n  return true;\n}\n", "import {Product} from '@coveo/relay-event-types';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {productView} from '../../../features/commerce/product/product-actions.js';\n\n/**\n * The `ProductView` controller provides an interface for triggering an analytics event for a product view.\n *\n * @group Buildable controllers\n * @category ProductView\n */\nexport interface ProductView {\n  /**\n   * Trigger a view event for the product.\n   * @param product - The product view event payload.\n   */\n  view(product: Product): void;\n}\n\n/**\n * Creates an `ProductView` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @returns A `ProductView` controller instance.\n *\n * @group Buildable controllers\n * @category ProductView\n */\nexport function buildProductView(engine: CommerceEngine): ProductView {\n  return {\n    view: (product) => {\n      engine.dispatch(productView(product));\n    },\n  };\n}\n", "import {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {configuration} from '../../../app/common-reducers.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {\n  registerQuerySetQuery,\n  updateQuerySetQuery,\n} from '../../../features/commerce/query-set/query-set-actions.js';\nimport {\n  clearQuerySuggest,\n  fetchQuerySuggestions,\n  registerQuerySuggest,\n  selectQuerySuggestion,\n} from '../../../features/commerce/query-suggest/query-suggest-actions.js';\nimport {UpdateQueryPayload} from '../../../features/commerce/query/query-actions.js';\nimport {queryReducer as commerceQuery} from '../../../features/commerce/query/query-slice.js';\nimport {executeSearch} from '../../../features/commerce/search/search-actions.js';\nimport {\n  PrepareForSearchWithQueryOptions,\n  prepareForSearchWithQuery,\n} from '../../../features/commerce/search/search-actions.js';\nimport {commerceSearchReducer as commerceSearch} from '../../../features/commerce/search/search-slice.js';\nimport {querySetReducer as querySet} from '../../../features/query-set/query-set-slice.js';\nimport {querySuggestReducer as querySuggest} from '../../../features/query-suggest/query-suggest-slice.js';\nimport {\n  CommerceQuerySection,\n  CommerceSearchSection,\n  ConfigurationSection,\n  QuerySetSection,\n  QuerySuggestionSection,\n} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  Delimiters,\n  SuggestionHighlightingOptions,\n} from '../../../utils/highlight.js';\nimport {randomID} from '../../../utils/utils.js';\nimport {validateOptions} from '../../../utils/validate-payload.js';\nimport {buildController} from '../../controller/headless-controller.js';\nimport {\n  getSuggestions,\n  SearchBoxState,\n  SearchBox as CoreSearchBox,\n  Suggestion,\n} from '../../core/search-box/headless-core-search-box.js';\nimport {\n  defaultSearchBoxOptions,\n  SearchBoxOptions,\n  searchBoxOptionsSchema,\n} from './headless-search-box-options.js';\n\nexport type {\n  SearchBoxOptions,\n  SearchBoxState,\n  SuggestionHighlightingOptions,\n  Suggestion,\n  Delimiters,\n};\n\nexport interface SearchBoxProps {\n  /**\n   * The `SearchBox` controller options.\n   */\n  options?: SearchBoxOptions;\n}\n\n/**\n * The `SearchBox` headless controller offers a high-level interface for designing a common search box UI component\n * with [highlighting for query suggestions](https://docs.coveo.com/en/headless/latest/usage/highlighting/).\n *\n * @group Buildable controllers\n * @category SearchBox\n */\nexport type SearchBox = Omit<CoreSearchBox, 'submit'> & {\n  /**\n   * Triggers a commerce search query.\n   */\n  submit(): void;\n};\n\n/**\n * Creates a `SearchBox` controller instance.\n *\n * @param engine - The commerce headless engine.\n * @param props - The configurable `SearchBox` properties.\n * @returns A `SearchBox` controller instance.\n *\n * @group Buildable controllers\n * @category SearchBox\n */\nexport function buildSearchBox(\n  engine: CommerceEngine,\n  props: SearchBoxProps = {}\n): SearchBox {\n  if (!loadSearchBoxReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine[stateKey];\n\n  const id = props.options?.id || randomID('search_box');\n  const options: Required<SearchBoxOptions> = {\n    id,\n    highlightOptions: {...props.options?.highlightOptions},\n    ...defaultSearchBoxOptions,\n    ...props.options,\n  };\n\n  validateOptions(engine, searchBoxOptionsSchema, options, 'buildSearchBox');\n  dispatch(\n    registerQuerySetQuery({id, query: getState().commerceQuery.query ?? ''})\n  );\n  dispatch(registerQuerySuggest({id}));\n\n  const getValue = () => getState().querySet[options.id];\n\n  const performSearch = async () => {\n    const queryOptions: UpdateQueryPayload & PrepareForSearchWithQueryOptions =\n      {\n        query: getValue(),\n        clearFilters: options.clearFilters,\n      };\n\n    dispatch(prepareForSearchWithQuery(queryOptions));\n    dispatch(executeSearch());\n  };\n\n  return {\n    ...controller,\n\n    updateText(value: string) {\n      dispatch(updateQuerySetQuery({id, query: value}));\n      this.showSuggestions();\n    },\n\n    clear() {\n      dispatch(updateQuerySetQuery({id, query: ''}));\n      dispatch(clearQuerySuggest({id}));\n    },\n\n    showSuggestions() {\n      dispatch(fetchQuerySuggestions({id}));\n    },\n\n    selectSuggestion(value: string) {\n      dispatch(selectQuerySuggestion({id, expression: value}));\n      performSearch().then(() => {\n        dispatch(clearQuerySuggest({id}));\n      });\n    },\n\n    submit() {\n      performSearch();\n      dispatch(clearQuerySuggest({id}));\n    },\n\n    get state() {\n      const querySuggest = getState().querySuggest[options.id];\n      const suggestions = getSuggestions(\n        querySuggest,\n        options.highlightOptions\n      );\n      const isLoadingSuggestions = querySuggest\n        ? querySuggest.isLoading\n        : false;\n\n      return {\n        searchBoxId: id,\n        value: getValue(),\n        suggestions,\n        isLoading: getState().commerceSearch.isLoading,\n        isLoadingSuggestions,\n      };\n    },\n  };\n}\n\nfunction loadSearchBoxReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<\n  CommerceQuerySection &\n    QuerySuggestionSection &\n    ConfigurationSection &\n    QuerySetSection &\n    CommerceSearchSection\n> {\n  engine.addReducers({\n    commerceQuery,\n    querySuggest,\n    configuration,\n    querySet,\n    commerceSearch,\n  });\n  return true;\n}\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {configuration} from '../../../app/common-reducers.js';\nimport {CoreEngine} from '../../../app/engine.js';\nimport {\n  InsightAction,\n  LegacySearchAction,\n} from '../../../features/analytics/analytics-utils.js';\nimport {\n  registerQuerySetQuery,\n  updateQuerySetQuery,\n} from '../../../features/query-set/query-set-actions.js';\nimport {querySetReducer as querySet} from '../../../features/query-set/query-set-slice.js';\nimport {\n  clearQuerySuggest,\n  FetchQuerySuggestionsActionCreatorPayload,\n  registerQuerySuggest,\n  selectQuerySuggestion,\n} from '../../../features/query-suggest/query-suggest-actions.js';\nimport {\n  logQuerySuggestionClick,\n  omniboxAnalytics,\n} from '../../../features/query-suggest/query-suggest-analytics-actions.js';\nimport {querySuggestReducer as querySuggest} from '../../../features/query-suggest/query-suggest-slice.js';\nimport {QuerySuggestState} from '../../../features/query-suggest/query-suggest-state.js';\nimport {logSearchboxSubmit} from '../../../features/query/query-analytics-actions.js';\nimport {queryReducer as query} from '../../../features/query/query-slice.js';\nimport {\n  SearchAction,\n  TransitiveSearchAction,\n  prepareForSearchWithQuery,\n} from '../../../features/search/search-actions.js';\nimport {searchReducer as search} from '../../../features/search/search-slice.js';\nimport {\n  ConfigurationSection,\n  QuerySection,\n  QuerySetSection,\n  QuerySuggestionSection,\n  SearchSection,\n} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  SuggestionHighlightingOptions,\n  Delimiters,\n  getHighlightedSuggestion,\n} from '../../../utils/highlight.js';\nimport {randomID} from '../../../utils/utils.js';\nimport {validateOptions} from '../../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport {\n  defaultSearchBoxOptions,\n  SearchBoxOptions,\n  searchBoxOptionsSchema,\n} from './headless-core-search-box-options.js';\n\nexport type {SearchBoxOptions, SuggestionHighlightingOptions, Delimiters};\n\nexport type SearchBoxProps = SearchBoxPropsBase &\n  (NextSearchBoxProps | LegacySearchBoxProps);\n\ninterface NextSearchBoxProps {\n  /**\n   * The action creator for the `executeSearch` thunk action.\n   */\n  executeSearchActionCreator: (\n    arg: TransitiveSearchAction\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => AsyncThunkAction<any, TransitiveSearchAction, any>;\n\n  isNextAnalyticsReady: true;\n}\n\ninterface LegacySearchBoxProps {\n  /**\n   * The action creator for the `executeSearch` thunk action.\n   */\n  executeSearchActionCreator: (\n    arg: LegacySearchAction\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => AsyncThunkAction<any, LegacySearchAction, any>;\n\n  isNextAnalyticsReady: false;\n}\n\ninterface SearchBoxPropsBase {\n  /**\n   * The `SearchBox` controller options.\n   */\n  options?: SearchBoxOptions;\n\n  /**\n   * The action creator for the `executeSearch` thunk action.\n   */\n  executeSearchActionCreator:\n    | ((\n        arg: TransitiveSearchAction\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) => AsyncThunkAction<any, TransitiveSearchAction, any>)\n    | ((\n        arg: LegacySearchAction\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) => AsyncThunkAction<any, LegacySearchAction, any>);\n\n  /**\n   * The action creator for the `fetchQuerySuggestions` thunk action.\n   */\n  fetchQuerySuggestionsActionCreator: (\n    arg: FetchQuerySuggestionsActionCreatorPayload\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => AsyncThunkAction<any, FetchQuerySuggestionsActionCreatorPayload, any>;\n  //Indicate if the executeSearchActionCreator can use the new analytics logic.\n  isNextAnalyticsReady: boolean;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `SearchBox` controller.\n *\n * @group Controllers\n * @category SearchBox\n */\nexport interface SearchBoxState {\n  /**\n   * The current query in the search box.\n   */\n  value: string;\n\n  /**\n   * The query suggestions for the search box query.\n   */\n  suggestions: Suggestion[];\n\n  /**\n   * Determines if a search is in progress.\n   */\n  isLoading: boolean;\n\n  /**\n   * Determines if a query suggest request is in progress.\n   */\n  isLoadingSuggestions: boolean;\n\n  /**\n   * The search box ID.\n   */\n  searchBoxId: string;\n}\n\nexport interface Suggestion {\n  /**\n   * The suggestion after applying any `highlightOptions`.\n   */\n  highlightedValue: string;\n\n  /**\n   * The suggestion text.\n   */\n  rawValue: string;\n}\n\n/**\n * @internal\n * The `SearchBox` headless controller offers a high-level interface for designing a common search box UI controller\n * with [highlighting for query suggestions](https://docs.coveo.com/en/headless/latest/usage/highlighting/).\n */\nexport interface SearchBox extends Controller {\n  /**\n   * Updates the search box text value and shows the suggestions for that value.\n   *\n   * @param value - The string value to update the search box with.\n   */\n  updateText(value: string): void;\n\n  /**\n   * Clears the search box text and the suggestions.\n   */\n  clear(): void;\n\n  /**\n   * Shows the suggestions for the current search box value.\n   */\n  showSuggestions(): void;\n\n  /**\n   * Selects a suggestion and calls `submit`.\n   *\n   * @param value - The string value of the suggestion to select\n   */\n  selectSuggestion(value: string): void;\n\n  /**\n   * Deselects all facets and triggers a search query.\n   *\n   * @param legacyAnalytics -  The legacy analytics action to log after submitting a query.\n   * @param nextAnalytics - The next analytics action to log after submitting a query.\n   */\n  submit(\n    legacyAnalytics?: LegacySearchAction,\n    nextAnalytics?: SearchAction\n  ): void;\n\n  /**\n   * The state of the `SearchBox` controller.\n   */\n  state: SearchBoxState;\n}\n\n/**\n * @internal\n * Creates a `SearchBox` controller instance.\n *\n * @param engine - The headless engine instance.\n * @returns A `SearchBox` controller instance.\n */\nexport function buildCoreSearchBox(\n  engine: CoreEngine,\n  props: SearchBoxProps\n): SearchBox {\n  if (!loadSearchBoxReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const id = props.options?.id || randomID('search_box');\n  const options: Required<SearchBoxOptions> = {\n    id,\n    highlightOptions: {...props.options?.highlightOptions},\n    ...defaultSearchBoxOptions,\n    ...props.options,\n  };\n\n  validateOptions(engine, searchBoxOptionsSchema, options, 'buildSearchBox');\n  dispatch(registerQuerySetQuery({id, query: engine.state.query.q}));\n  if (options.numberOfSuggestions) {\n    dispatch(\n      registerQuerySuggest({\n        id,\n        count: options.numberOfSuggestions,\n      })\n    );\n  }\n\n  const getValue = () => engine.state.querySet[options.id];\n\n  const performSearch = async (analytics: TransitiveSearchAction) => {\n    const {enableQuerySyntax, clearFilters} = options;\n\n    dispatch(\n      prepareForSearchWithQuery({\n        q: getValue(),\n        enableQuerySyntax,\n        clearFilters,\n      })\n    );\n    if (props.isNextAnalyticsReady) {\n      dispatch(props.executeSearchActionCreator(analytics));\n    } else {\n      dispatch(props.executeSearchActionCreator(analytics.legacy));\n    }\n  };\n\n  return {\n    ...controller,\n\n    updateText(value: string) {\n      dispatch(updateQuerySetQuery({id, query: value}));\n      this.showSuggestions();\n    },\n\n    clear() {\n      dispatch(updateQuerySetQuery({id, query: ''}));\n      dispatch(clearQuerySuggest({id}));\n    },\n\n    showSuggestions() {\n      if (options.numberOfSuggestions) {\n        dispatch(props.fetchQuerySuggestionsActionCreator({id}));\n      }\n    },\n\n    selectSuggestion(value: string) {\n      dispatch(selectQuerySuggestion({id, expression: value}));\n      performSearch({\n        legacy: logQuerySuggestionClick({id, suggestion: value}),\n        next: omniboxAnalytics(),\n      }).then(() => {\n        dispatch(clearQuerySuggest({id}));\n      });\n    },\n\n    submit(\n      legacyAnalytics:\n        | LegacySearchAction\n        | InsightAction = logSearchboxSubmit(),\n      nextAnalytics: SearchAction\n    ) {\n      performSearch({legacy: legacyAnalytics, next: nextAnalytics});\n      dispatch(clearQuerySuggest({id}));\n    },\n\n    get state() {\n      const state = getState();\n      const querySuggest = state.querySuggest[options.id];\n      const suggestions = getSuggestions(\n        querySuggest,\n        options.highlightOptions\n      );\n      const isLoadingSuggestions = querySuggest\n        ? querySuggest.isLoading\n        : false;\n\n      return {\n        searchBoxId: id,\n        value: getValue(),\n        suggestions,\n        isLoading: state.search.isLoading,\n        isLoadingSuggestions,\n      };\n    },\n  };\n}\n\nexport function getSuggestions(\n  state: QuerySuggestState | undefined,\n  highlightOptions: SuggestionHighlightingOptions\n) {\n  if (!state) {\n    return [];\n  }\n\n  return state.completions.map((completion) => ({\n    highlightedValue: getHighlightedSuggestion(\n      completion.highlighted,\n      highlightOptions\n    ),\n    rawValue: completion.expression,\n  }));\n}\n\nfunction loadSearchBoxReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  QuerySection &\n    QuerySuggestionSection &\n    ConfigurationSection &\n    QuerySetSection &\n    SearchSection\n> {\n  engine.addReducers({query, querySuggest, configuration, querySet, search});\n  return true;\n}\n", "import type {OmniboxSuggestionsMetadata} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents.js';\nimport {SearchAppState} from '../../state/search-app-state.js';\nimport {\n  makeAnalyticsAction,\n  LegacySearchAction,\n} from '../analytics/analytics-utils.js';\nimport {SearchPageEvents} from '../analytics/search-action-cause.js';\nimport {SearchAction} from '../search/search-actions.js';\n\nexport interface LogQuerySuggestionClickActionCreatorPayload {\n  /**\n   * The search box id.\n   */\n  id: string;\n\n  /**\n   * The selected query suggestion.\n   */\n  suggestion: string;\n}\n\n//TODO: KIT-2859\nexport const logQuerySuggestionClick = (\n  payload: LogQuerySuggestionClickActionCreatorPayload\n): LegacySearchAction =>\n  makeAnalyticsAction('analytics/querySuggest', (client, state) => {\n    const metadata = buildOmniboxSuggestionMetadata(state, payload);\n    return client.makeOmniboxAnalytics(metadata);\n  });\n\nexport const omniboxAnalytics = (): SearchAction => ({\n  actionCause: SearchPageEvents.omniboxAnalytics,\n});\n\nexport type OmniboxSuggestionMetadata = OmniboxSuggestionsMetadata;\n\nexport function buildOmniboxSuggestionMetadata(\n  state: Partial<SearchAppState>,\n  payload: LogQuerySuggestionClickActionCreatorPayload\n): OmniboxSuggestionMetadata {\n  const {id, suggestion} = payload;\n  const querySuggest = state.querySuggest && state.querySuggest[id];\n\n  if (!querySuggest) {\n    throw new Error(\n      `Unable to determine the query suggest analytics metadata to send because no query suggest with id \"${id}\" was found. Please check the sent #id.`\n    );\n  }\n\n  const suggestions = querySuggest.completions.map(\n    (completion) => completion.expression\n  );\n\n  const lastIndex = querySuggest.partialQueries.length - 1;\n  const partialQuery = querySuggest.partialQueries[lastIndex] || '';\n  const querySuggestResponseId = querySuggest.responseId;\n\n  return {\n    suggestionRanking: suggestions.indexOf(suggestion),\n    partialQuery,\n    partialQueries: querySuggest.partialQueries,\n    suggestions,\n    querySuggestResponseId,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {applyDidYouMeanCorrection} from '../did-you-mean/did-you-mean-actions.js';\nimport {change} from '../history/history-actions.js';\nimport {selectQuerySuggestion} from '../query-suggest/query-suggest-actions.js';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions.js';\nimport {updateQuery} from './query-actions.js';\nimport {getQueryInitialState} from './query-state.js';\n\nexport const queryReducer = createReducer(getQueryInitialState(), (builder) =>\n  builder\n    .addCase(updateQuery, (state, action) => ({...state, ...action.payload}))\n    .addCase(applyDidYouMeanCorrection, (state, action) => {\n      state.q = action.payload;\n    })\n    .addCase(selectQuerySuggestion, (state, action) => {\n      state.q = action.payload.expression;\n    })\n    .addCase(\n      change.fulfilled,\n      (state, action) => action.payload?.query ?? state\n    )\n    .addCase(restoreSearchParameters, (state, action) => {\n      state.q = action.payload.q ?? state.q;\n      state.enableQuerySyntax =\n        action.payload.enableQuerySyntax ?? state.enableQuerySyntax;\n    })\n);\n", "import {\n  BooleanValue,\n  NumberValue,\n  Schema,\n  StringValue,\n  RecordValue,\n} from '@coveo/bueno';\nimport {SuggestionHighlightingOptions} from '../../../utils/highlight.js';\nimport {requiredNonEmptyString} from '../../../utils/validate-payload.js';\n\nexport interface SearchBoxOptions {\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  id?: string;\n\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   *\n   * @defaultValue `false`\n   */\n  enableQuerySyntax?: boolean;\n\n  /**\n   * Specifies delimiters to highlight parts of a query suggestion that e.g match, do not match the query.\n   */\n  highlightOptions?: SuggestionHighlightingOptions;\n\n  /**\n   * The number of query suggestions to request from Coveo ML (e.g., `3`).\n   *\n   * Using the value `0` disables the query suggest feature.\n   *\n   * @defaultValue `5`\n   */\n  numberOfSuggestions?: number;\n\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the search box.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters?: boolean;\n}\n\ntype DefaultSearchBoxOptions = Pick<\n  SearchBoxOptions,\n  'enableQuerySyntax' | 'numberOfSuggestions' | 'clearFilters'\n>;\n\nexport const defaultSearchBoxOptions: Required<DefaultSearchBoxOptions> = {\n  enableQuerySyntax: false,\n  numberOfSuggestions: 5,\n  clearFilters: true,\n};\n\nexport const openCloseDelimitersDefinition = {\n  open: new StringValue(),\n  close: new StringValue(),\n};\n\nexport const searchBoxOptionDefinitions = {\n  id: requiredNonEmptyString,\n  numberOfSuggestions: new NumberValue({min: 0}),\n  enableQuerySyntax: new BooleanValue(),\n  highlightOptions: new RecordValue({\n    values: {\n      notMatchDelimiters: new RecordValue({\n        values: openCloseDelimitersDefinition,\n      }),\n\n      exactMatchDelimiters: new RecordValue({\n        values: openCloseDelimitersDefinition,\n      }),\n\n      correctionDelimiters: new RecordValue({\n        values: openCloseDelimitersDefinition,\n      }),\n    },\n  }),\n  clearFilters: new BooleanValue(),\n};\n\nexport const searchBoxOptionsSchema = new Schema<Required<SearchBoxOptions>>(\n  searchBoxOptionDefinitions\n);\n", "import {Schema} from '@coveo/bueno';\nimport {\n  searchBoxOptionDefinitions as coreSearchBoxOptionDefinitions,\n  SearchBoxOptions as CoreSearchBoxOptions,\n} from '../../core/search-box/headless-core-search-box-options.js';\n\nexport type SearchBoxOptions = Pick<\n  CoreSearchBoxOptions,\n  'id' | 'highlightOptions' | 'clearFilters'\n>;\n\ntype DefaultSearchBoxOptions = Pick<SearchBoxOptions, 'clearFilters'>;\n\nexport const defaultSearchBoxOptions: Required<DefaultSearchBoxOptions> = {\n  clearFilters: true,\n};\n\nconst {id, highlightOptions, clearFilters} = coreSearchBoxOptionDefinitions;\nexport const searchBoxOptionDefinitions = {id, highlightOptions, clearFilters};\n\nexport const searchBoxOptionsSchema = new Schema<Required<SearchBoxOptions>>(\n  searchBoxOptionDefinitions\n);\n", "import {ArrayValue, BooleanValue, NumberValue, Schema} from '@coveo/bueno';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {UpdateQueryPayload} from '../../../features/commerce/query/query-actions.js';\nimport {\n  clearRecentQueries,\n  registerRecentQueries,\n} from '../../../features/commerce/recent-queries/recent-queries-actions.js';\nimport {recentQueriesReducer as recentQueries} from '../../../features/commerce/recent-queries/recent-queries-slice.js';\nimport {\n  PrepareForSearchWithQueryOptions,\n  executeSearch,\n  prepareForSearchWithQuery,\n} from '../../../features/commerce/search/search-actions.js';\nimport {commerceSearchReducer as search} from '../../../features/commerce/search/search-slice.js';\nimport {RecentQueriesSection} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  validateInitialState,\n  validateOptions,\n} from '../../../utils/validate-payload.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport type {\n  RecentQueriesListInitialState,\n  RecentQueriesListOptions,\n  RecentQueriesListProps,\n} from '../../recent-queries-list/headless-recent-queries-list.js';\n\nexport type {\n  RecentQueriesListProps,\n  RecentQueriesListInitialState,\n  RecentQueriesListOptions,\n};\nconst defaultRecentQueriesState: Required<RecentQueriesListInitialState> = {\n  queries: [],\n};\n\nconst defaultRecentQueriesOptions: Required<RecentQueriesListOptions> = {\n  maxLength: 10,\n  clearFilters: true,\n};\n\nconst initialStateSchema = new Schema<RecentQueriesListInitialState>({\n  queries: new ArrayValue({required: true}),\n});\n\nconst optionsSchema = new Schema<RecentQueriesListOptions>({\n  maxLength: new NumberValue({required: true, min: 1}),\n  clearFilters: new BooleanValue(),\n});\n\n/**\n * The `RecentQueriesList` controller manages the user's recent queries.\n *\n * @group Buildable controllers\n * @category RecentQueriesList\n */\nexport interface RecentQueriesList extends Controller {\n  /**\n   * The state of the RecentQueriesList controller.\n   * */\n  state: RecentQueriesState;\n  /**\n   * Clears the recent queries list.\n   */\n  clear(): void;\n  /**\n   * Executes the given recent query.\n   * @param index - The index of the recent query to execute.\n   */\n  executeRecentQuery(index: number): void;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `RecentQueriesList` controller.\n *\n * @group Buildable controllers\n * @category RecentQueriesList\n * */\nexport interface RecentQueriesState {\n  /**\n   * The list of recent queries.\n   */\n  queries: string[];\n  /**\n   * The maximum number of queries to retain in the list.\n   */\n  maxLength: number;\n  /**\n   * Whether analytics & tracking are enabled.\n   * In the case where it is disabled, it is recommended not to save recent queries.\n   */\n  analyticsEnabled: boolean;\n}\n\nfunction validateRecentQueriesProps(\n  engine: CommerceEngine,\n  props?: RecentQueriesListProps\n) {\n  validateOptions(\n    engine,\n    optionsSchema,\n    props?.options,\n    'buildRecentQueriesList'\n  );\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props?.initialState,\n    'buildRecentQueriesList'\n  );\n}\n\n/**\n * Creates a `RecentQueriesList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configuration `RecentQueriesList` properties.\n * @returns A `RecentQueriesList` controller instance.\n *\n * @group Buildable controllers\n * @category RecentQueriesList\n *\n * */\nexport function buildRecentQueriesList(\n  engine: CommerceEngine,\n  props?: RecentQueriesListProps\n): RecentQueriesList {\n  if (!loadRecentQueriesListReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine[stateKey];\n\n  const registrationOptions: Required<RecentQueriesListOptions> = {\n    ...defaultRecentQueriesOptions,\n    ...props?.options,\n  };\n  const registrationState: Required<RecentQueriesListInitialState> = {\n    ...defaultRecentQueriesState,\n    ...props?.initialState,\n  };\n\n  validateRecentQueriesProps(engine, {\n    options: registrationOptions,\n    initialState: registrationState,\n  });\n\n  const options = {\n    queries: registrationState.queries,\n    maxLength: registrationOptions.maxLength,\n  };\n\n  dispatch(registerRecentQueries(options));\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        ...state.recentQueries,\n        analyticsEnabled: state.configuration.analytics.enabled,\n      };\n    },\n\n    clear() {\n      dispatch(clearRecentQueries());\n    },\n\n    executeRecentQuery(index: number) {\n      const errorMessage = new NumberValue({\n        required: true,\n        min: 0,\n        max: this.state.queries.length,\n      }).validate(index);\n      if (errorMessage) {\n        throw new Error(errorMessage);\n      }\n\n      const queryOptions: UpdateQueryPayload &\n        PrepareForSearchWithQueryOptions = {\n        query: this.state.queries[index],\n        clearFilters: registrationOptions.clearFilters,\n      };\n\n      dispatch(prepareForSearchWithQuery(queryOptions));\n      dispatch(executeSearch());\n    },\n  };\n}\n\nfunction loadRecentQueriesListReducer(\n  engine: CommerceEngine\n): engine is CommerceEngine<RecentQueriesSection> {\n  engine.addReducers({search, recentQueries});\n  return true;\n}\n", "import {NumberValue, Schema} from '@coveo/bueno';\nimport {SerializedError} from '@reduxjs/toolkit';\nimport {CommerceAPIErrorResponse} from '../../../api/commerce/commerce-api-error-response.js';\nimport {ChildProduct, Product} from '../../../api/commerce/common/product.js';\nimport {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {\n  clearExpiredProducts,\n  promoteChildToParent,\n  registerInstantProducts,\n  updateInstantProductsQuery,\n} from '../../../features/commerce/instant-products/instant-products-actions.js';\nimport {instantProductsReducer} from '../../../features/commerce/instant-products/instant-products-slice.js';\nimport {fetchInstantProducts} from '../../../features/commerce/search/search-actions.js';\nimport {hasExpired} from '../../../features/instant-items/instant-items-state.js';\nimport {InstantProductsSection} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {randomID} from '../../../utils/utils.js';\nimport {\n  nonEmptyString,\n  validateOptions,\n} from '../../../utils/validate-payload.js';\nimport {\n  Controller,\n  buildController,\n} from '../../controller/headless-controller.js';\nimport {\n  InteractiveProduct,\n  InteractiveProductProps,\n  buildCoreInteractiveProduct,\n} from '../core/interactive-product/headless-core-interactive-product.js';\n\nexport interface InstantProductsOptions {\n  /**\n   * A unique identifier for the search box.\n   */\n  searchBoxId?: string;\n  /**\n   * Number in milliseconds that cached products will be valid for. Defaults to 1 minute. Set to 0 so that products never expire.\n   */\n  cacheTimeout?: number;\n}\n\nconst instantProductsOptionDefinitions = {\n  searchBoxId: nonEmptyString,\n  cacheTimeout: new NumberValue(),\n};\n\nconst instantProductsOptionsSchema = new Schema<\n  Required<InstantProductsOptions>\n>(instantProductsOptionDefinitions);\n\nexport interface InstantProductsProps {\n  options: InstantProductsOptions;\n}\n\n/**\n * The `InstantProducts` controller allows the end user to manage instant products queries.\n *\n * @group Buildable controllers\n * @category InstantProducts\n */\nexport interface InstantProducts extends Controller {\n  /**\n   * Updates the specified query and shows instant products for it.\n   *\n   * @param query - The query to get instant products for. For more precise instant products, query suggestions are recommended.\n   */\n  updateQuery(query: string): void;\n  /**\n   * Clears all expired instant products queries.\n   */\n  clearExpired(): void;\n  /**\n   * Finds the specified parent product and the specified child product of that parent, and makes that child the new\n   * parent. The `children` and `totalNumberOfChildren` properties of the original parent are preserved in the new\n   * parent.\n   *\n   * This method is useful when leveraging the product grouping feature to allow users to select nested products.\n   *\n   * E.g., if a product has children (such as color variations), you can call this method when the user selects a child\n   * to make that child the new parent product, and re-render the product as such in the storefront.\n   *\n   * **Note:** In the controller state, a product that has children will always include itself as its own child so that\n   * it can be rendered as a nested product, and restored as the parent product through this method as needed.\n   *\n   * @param child The child product that will become the new parent.\n   */\n  promoteChildToParent(child: ChildProduct): void;\n\n  /**\n   * Creates an `InteractiveProduct` sub-controller.\n   * @param props - The properties for the `InteractiveProduct` sub-controller.\n   * @returns An `InteractiveProduct` sub-controller.\n   */\n  interactiveProduct(props: InteractiveProductProps): InteractiveProduct;\n\n  /**\n   * The state of the `InstantProducts` controller.\n   */\n  state: InstantProductsState;\n}\n\n/**\n * The state of the `InstantProducts` controller.\n *\n * @group Buildable controllers\n * @category InstantProducts\n */\nexport interface InstantProductsState {\n  /**\n   * The current query for instant products.\n   */\n  query: string;\n  /**\n   * The instant products for the current query.\n   */\n  products: Product[];\n  /**\n   * Determines if a search is in progress for the current query.\n   */\n  isLoading: boolean;\n  /**\n   * An error returned when executing an instant products request, if any. This is `null` otherwise.\n   */\n  error: CommerceAPIErrorResponse | SerializedError | null;\n  /**\n   * The total number of products that match the current query.\n   */\n  totalCount: number;\n}\n\n/**\n * Creates an `InstantProducts` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `InstantProducts` properties.\n * @returns An `InstantProducts` controller instance.\n *\n * @group Buildable controllers\n * @category InstantProducts\n */\nexport function buildInstantProducts(\n  engine: CommerceEngine,\n  props: InstantProductsProps\n): InstantProducts {\n  if (!loadInstantProductsReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine[stateKey];\n\n  const options: Required<InstantProductsOptions> = {\n    searchBoxId: props.options.searchBoxId || randomID('instant-products-'),\n    cacheTimeout: props.options.cacheTimeout || 6e4,\n  };\n\n  validateOptions(\n    engine,\n    instantProductsOptionsSchema,\n    options,\n    'buildInstantProducts'\n  );\n\n  const searchBoxId = options.searchBoxId;\n  dispatch(registerInstantProducts({id: searchBoxId}));\n\n  const getStateForSearchBox = () => getState().instantProducts[searchBoxId];\n\n  const getCached = (q: string) => getStateForSearchBox().cache[q];\n  const getQuery = () => getStateForSearchBox().q;\n  const getProducts = () => {\n    const cached = getCached(getQuery());\n    if (!cached) {\n      return [];\n    }\n    if (cached.isLoading) {\n      return [];\n    }\n    return cached.products;\n  };\n\n  return {\n    ...controller,\n\n    updateQuery(query: string) {\n      if (!query) {\n        return;\n      }\n      const cached = getCached(query);\n      if (\n        !cached ||\n        (!cached.isLoading && (cached.error || hasExpired(cached)))\n      ) {\n        dispatch(\n          fetchInstantProducts({\n            id: searchBoxId,\n            q: query,\n            cacheTimeout: options.cacheTimeout,\n          })\n        );\n      }\n      dispatch(updateInstantProductsQuery({id: searchBoxId, query}));\n    },\n\n    clearExpired() {\n      dispatch(\n        clearExpiredProducts({\n          id: searchBoxId,\n        })\n      );\n    },\n\n    promoteChildToParent(child: ChildProduct) {\n      dispatch(\n        promoteChildToParent({\n          child,\n          id: searchBoxId,\n          query: getQuery(),\n        })\n      );\n    },\n\n    interactiveProduct(props: InteractiveProductProps) {\n      return buildCoreInteractiveProduct(engine, {\n        ...props,\n        responseIdSelector: () =>\n          getStateForSearchBox().cache[getQuery()].searchUid,\n      });\n    },\n\n    get state() {\n      const query = getQuery();\n      const cached = getCached(query);\n      return {\n        query,\n        isLoading: cached?.isLoading || false,\n        error: cached?.error || null,\n        products: getProducts(),\n        totalCount: cached?.totalCountFiltered || 0,\n      };\n    },\n  };\n}\n\nfunction loadInstantProductsReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<InstantProductsSection> {\n  engine.addReducers({instantProducts: instantProductsReducer});\n  return true;\n}\n", "import {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {configuration} from '../../../app/common-reducers.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {selectQuerySuggestion} from '../../../features/commerce/query-suggest/query-suggest-actions.js';\nimport {updateQuery} from '../../../features/commerce/query/query-actions.js';\nimport {queryReducer as commerceQuery} from '../../../features/commerce/query/query-slice.js';\nimport {\n  fetchRedirectUrl,\n  registerStandaloneSearchBox,\n  resetStandaloneSearchBox,\n  updateStandaloneSearchBoxRedirectionUrl,\n} from '../../../features/commerce/standalone-search-box-set/standalone-search-box-set-actions.js';\nimport {commerceStandaloneSearchBoxSetReducer as commerceStandaloneSearchBoxSet} from '../../../features/commerce/standalone-search-box-set/standalone-search-box-set-slice.js';\nimport {querySuggestReducer as querySuggest} from '../../../features/query-suggest/query-suggest-slice.js';\nimport {\n  CommerceQuerySection,\n  ConfigurationSection,\n  QuerySuggestionSection,\n  CommerceStandaloneSearchBoxSection,\n} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {randomID} from '../../../utils/utils.js';\nimport {validateOptions} from '../../../utils/validate-payload.js';\nimport {StandaloneSearchBoxProps} from '../../standalone-search-box/headless-standalone-search-box.js';\nimport {defaultSearchBoxOptions} from '../search-box/headless-search-box-options.js';\nimport {\n  SearchBox,\n  SearchBoxState,\n  buildSearchBox,\n} from '../search-box/headless-search-box.js';\nimport {\n  StandaloneSearchBoxOptions,\n  standaloneSearchBoxSchema,\n} from './headless-standalone-search-box-options.js';\n\n/**\n * The `StandaloneSearchBox` controller is responsible for handling a standalone search box.\n *\n * @group Buildable controllers\n * @category StandaloneSearchBox\n */\nexport interface StandaloneSearchBox extends SearchBox {\n  /**\n   * Triggers a redirection.\n   */\n  submit(): void;\n  /**\n   * Updates the redirection url of the standalone search box.\n   * @param url - The new URL to redirect to.\n   */\n  updateRedirectUrl(url: string): void;\n  /**\n   * Resets the standalone search box state. To be dispatched on single page applications after the redirection has been triggered.\n   */\n  afterRedirection(): void;\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `StandaloneSearchBox` controller.\n   */\n  state: StandaloneSearchBoxState;\n}\n\n/**\n * The state of the `StandaloneSearchBox` controller.\n *\n * @group Buildable controllers\n * @category StandaloneSearchBox\n */\nexport interface StandaloneSearchBoxState extends SearchBoxState {\n  /**\n   * The URL to redirect to.\n   */\n  redirectTo: string;\n}\n\n/**\n * Creates a `StandaloneSearchBox` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @param props - The configurable `StandaloneSearchBox` properties.\n * @returns A `StandaloneSearchBox` controller instance.\n *\n * @group Buildable controllers\n * @category StandaloneSearchBox\n */\nexport function buildStandaloneSearchBox(\n  engine: CommerceEngine,\n  props: StandaloneSearchBoxProps\n): StandaloneSearchBox {\n  if (!loadStandaloneSearchBoxReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const getState = () => engine[stateKey];\n\n  const id = props.options.id || randomID('standalone_search_box');\n  const options: Required<StandaloneSearchBoxOptions> = {\n    id,\n    highlightOptions: {...props.options.highlightOptions},\n    ...defaultSearchBoxOptions,\n    ...{overwrite: false},\n    ...props.options,\n  };\n\n  validateOptions(\n    engine,\n    standaloneSearchBoxSchema,\n    options,\n    'buildStandaloneSearchBox'\n  );\n\n  const searchBox = buildSearchBox(engine, {options});\n  dispatch(\n    registerStandaloneSearchBox({\n      id,\n      redirectionUrl: options.redirectionUrl,\n      overwrite: options.overwrite,\n    })\n  );\n\n  return {\n    ...searchBox,\n\n    updateText(value: string) {\n      searchBox.updateText(value);\n    },\n\n    selectSuggestion(value: string) {\n      dispatch(selectQuerySuggestion({id, expression: value}));\n\n      this.submit();\n    },\n\n    afterRedirection() {\n      dispatch(resetStandaloneSearchBox({id}));\n    },\n\n    updateRedirectUrl(url: string) {\n      dispatch(\n        updateStandaloneSearchBoxRedirectionUrl({id, redirectionUrl: url})\n      );\n    },\n\n    submit() {\n      dispatch(\n        updateQuery({\n          query: this.state.value,\n        })\n      );\n      dispatch(fetchRedirectUrl({id}));\n    },\n\n    get state() {\n      const state = getState();\n      const standaloneSearchBoxState =\n        state.commerceStandaloneSearchBoxSet[id]!;\n      return {\n        ...searchBox.state,\n        redirectTo: standaloneSearchBoxState.redirectTo,\n      };\n    },\n  };\n}\n\nfunction loadStandaloneSearchBoxReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<\n  CommerceStandaloneSearchBoxSection &\n    ConfigurationSection &\n    CommerceQuerySection &\n    QuerySuggestionSection\n> {\n  engine.addReducers({\n    commerceQuery,\n    commerceStandaloneSearchBoxSet,\n    configuration,\n    querySuggest,\n  });\n  return true;\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  fetchRedirectUrl,\n  registerStandaloneSearchBox,\n  resetStandaloneSearchBox,\n  updateStandaloneSearchBoxRedirectionUrl,\n} from './standalone-search-box-set-actions.js';\nimport {\n  getCommerceStandaloneSearchBoxSetInitialState,\n  StandaloneSearchBoxEntry,\n} from './standalone-search-box-set-state.js';\n\nexport const commerceStandaloneSearchBoxSetReducer = createReducer(\n  getCommerceStandaloneSearchBoxSetInitialState(),\n  (builder) =>\n    builder\n      .addCase(registerStandaloneSearchBox, (state, action) => {\n        const {id, redirectionUrl, overwrite} = action.payload;\n\n        if (!overwrite && id in state) {\n          return;\n        }\n\n        state[id] = buildStandaloneSearchBoxEntry(redirectionUrl);\n      })\n      .addCase(updateStandaloneSearchBoxRedirectionUrl, (state, action) => {\n        const {id, redirectionUrl} = action.payload;\n        const searchBox = state[id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.defaultRedirectionUrl = redirectionUrl;\n      })\n      .addCase(resetStandaloneSearchBox, (state, action) => {\n        const {id} = action.payload;\n        const searchBox = state[id];\n\n        if (searchBox) {\n          state[id] = buildStandaloneSearchBoxEntry(\n            searchBox.defaultRedirectionUrl\n          );\n          return;\n        }\n      })\n      .addCase(fetchRedirectUrl.pending, (state, action) => {\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.isLoading = true;\n      })\n      .addCase(fetchRedirectUrl.fulfilled, (state, action) => {\n        const redirectionUrl = action.payload;\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.redirectTo = redirectionUrl\n          ? redirectionUrl\n          : searchBox.defaultRedirectionUrl;\n\n        searchBox.isLoading = false;\n      })\n\n      .addCase(fetchRedirectUrl.rejected, (state, action) => {\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.isLoading = false;\n      })\n);\n\nfunction buildStandaloneSearchBoxEntry(\n  defaultRedirectionUrl: string\n): StandaloneSearchBoxEntry {\n  return {\n    defaultRedirectionUrl,\n    redirectTo: '',\n    isLoading: false,\n  };\n}\n", "export type CommerceStandaloneSearchBoxSetState = Record<\n  string,\n  StandaloneSearchBoxEntry | undefined\n>;\n\nexport type StandaloneSearchBoxEntry = {\n  defaultRedirectionUrl: string;\n  isLoading: boolean;\n  redirectTo: string;\n};\n\nexport function getCommerceStandaloneSearchBoxSetInitialState(): CommerceStandaloneSearchBoxSetState {\n  return {};\n}\n", "import {BooleanValue, Schema, StringValue} from '@coveo/bueno';\nimport {\n  searchBoxOptionDefinitions,\n  SearchBoxOptions,\n} from '../search-box/headless-search-box-options.js';\n\nexport interface StandaloneSearchBoxOptions extends SearchBoxOptions {\n  /**\n   * The default Url the user should be redirected to, when a query is submitted.\n   * If a query pipeline redirect is triggered, it will redirect to that Url instead.\n   */\n  redirectionUrl: string;\n  /**\n   * Whether to overwrite the existing standalone search box with the same id.\n   */\n  overwrite?: boolean;\n}\n\nexport const standaloneSearchBoxSchema = new Schema<\n  Required<StandaloneSearchBoxOptions>\n>({\n  ...searchBoxOptionDefinitions,\n  redirectionUrl: new StringValue({\n    required: true,\n    emptyAllowed: false,\n  }),\n  overwrite: new BooleanValue({\n    required: false,\n  }),\n});\n", "import {Product} from '../../../api/commerce/common/product.js';\nimport {\n  buildTemplatesManager,\n  Template,\n  TemplateCondition,\n} from '../../templates/templates-manager.js';\n\nexport type ProductTemplate<Content = unknown> = Template<Product, Content>;\nexport type ProductTemplateCondition = TemplateCondition<Product>;\n\nexport interface ProductTemplatesManager<\n  Content = unknown,\n  LinkContent = unknown,\n> {\n  /**\n   * Registers any number of product templates in the manager.\n   * @param templates (...Template<Product, Content>) A list of templates to register.\n   */\n  registerTemplates: (...templates: Template<Product, Content>[]) => void;\n  /**\n   * Selects the highest priority template for which the given product satisfies all conditions.\n   * In the case where satisfied templates have equal priority, the template that was registered first is returned.\n   * @param product (Product) The product for which to select a template.\n   * @returns (Content) The content of the selected template, or null if no template can be selected for the given product.\n   */\n  selectTemplate: (product: Product) => Content | null;\n  /**\n   * Selects the highest priority link template for which the given product satisfies all conditions.\n   * In the case where satisfied templates have equal priority, the template that was registered first is returned.\n   * @param product (Product) The product for which to select a template.\n   * @returns (Content) The content of the selected template, or null if no template can be selected for the given product.\n   */\n  selectLinkTemplate: (product: Product) => LinkContent | null;\n}\n\n/**\n * A manager in which product templates can be registered and selected based on a list of conditions and a priority index.\n * @returns (ProductTemplatesManager<Content>) A new product template manager.\n */\nexport function buildProductTemplatesManager<\n  Content = unknown,\n  LinkContent = unknown,\n>(): ProductTemplatesManager<Content, LinkContent> {\n  return buildTemplatesManager<Product, Content, LinkContent>();\n}\n", "import {\n  ArrayValue,\n  NumberValue,\n  Schema,\n  SchemaValidationError,\n  Value,\n} from '@coveo/bueno';\nimport {requiredNonEmptyString} from '../../utils/validate-payload.js';\n\nexport type TemplateCondition<ItemType> = (item: ItemType) => boolean;\n\nexport interface Template<ItemType, Content = unknown, LinkContent = unknown> {\n  /**\n   * The stored content of the template.\n   */\n  content: Content;\n  /**\n   * The link used when an item generated by this template is clicked in a card layout.\n   */\n  linkContent?: LinkContent;\n  /**\n   * A list of conditions that must be fulfilled for this template to be selected.\n   */\n  conditions: TemplateCondition<ItemType>[];\n  /**\n   * A value which the manager will use to determine which template to select when an item satisfies the conditions of more than one template.\n   * Templates with higher priority values will be selected over others. The minimum and default value is `0`.\n   */\n  priority?: number;\n  /**\n   * A list of index fields that are necessary to render the template.\n   */\n  fields?: string[];\n}\n\nexport const templateSchema = new Schema({\n  content: new Value({required: true}),\n  conditions: new Value({required: true}),\n  priority: new NumberValue({required: false, default: 0, min: 0}),\n  fields: new ArrayValue({\n    required: false,\n    each: requiredNonEmptyString,\n  }),\n});\n\nexport interface TemplatesManager<\n  ItemType,\n  TemplateContent = unknown,\n  LinkTemplateContent = unknown,\n> {\n  registerTemplates(\n    ...newTemplates: Template<ItemType, TemplateContent>[]\n  ): void;\n\n  selectTemplate(item: ItemType): TemplateContent | null;\n  selectLinkTemplate(item: ItemType): LinkTemplateContent | null;\n}\n\nexport function buildTemplatesManager<\n  ItemType,\n  TemplateContent = unknown,\n  LinkTemplateContent = unknown,\n>(): TemplatesManager<ItemType, TemplateContent, LinkTemplateContent> {\n  const templates: Required<\n    Template<ItemType, TemplateContent, LinkTemplateContent>\n  >[] = [];\n  const validateTemplate = (\n    template: Template<ItemType, TemplateContent, LinkTemplateContent>\n  ) => {\n    const validated = templateSchema.validate(template);\n    const areConditionsValid = template.conditions.every(\n      (condition) => condition instanceof Function\n    );\n\n    if (!areConditionsValid) {\n      throw new SchemaValidationError(\n        'Each template condition should be a function that takes a Result or Product as an argument and returns a boolean'\n      );\n    }\n    return validated;\n  };\n\n  return {\n    registerTemplates(\n      ...newTemplates: Template<\n        ItemType,\n        TemplateContent,\n        LinkTemplateContent\n      >[]\n    ) {\n      newTemplates.forEach((template) => {\n        const templatesWithDefault = {\n          ...(validateTemplate(template) as Required<\n            Template<ItemType, TemplateContent, LinkTemplateContent>\n          >),\n          fields: template.fields || [],\n        };\n        templates.push(templatesWithDefault);\n      });\n\n      templates.sort((a, b) => b.priority - a.priority);\n    },\n\n    selectTemplate(item: ItemType) {\n      const template = templates.find((template) =>\n        template.conditions.every((condition) => condition(item))\n      );\n      return template ? template.content : null;\n    },\n\n    selectLinkTemplate(item: ItemType) {\n      const template = templates.find((template) =>\n        template.conditions.every((condition) => condition(item))\n      );\n      return template ? template.linkContent : null;\n    },\n  };\n}\n", "import {isArray, isNullOrUndefined} from '@coveo/bueno';\nimport {ChildProduct, Product} from '../../../api/commerce/common/product.js';\nimport {ProductTemplateCondition} from './product-templates-manager.js';\n\n/**\n * Extracts a property from a product object.\n * @param product (Product) - The target product.\n * @param property (string) - The property to extract.\n * @returns (unknown) The value of the specified property in the specified product, or null if the property does not exist.\n */\nexport const getProductProperty = (\n  product: Product | ChildProduct,\n  property: string\n) => {\n  const anyProduct = product as unknown as Record<string, unknown>;\n\n  if (!isNullOrUndefined(anyProduct[property])) {\n    return anyProduct[property];\n  }\n\n  if (!isNullOrUndefined(product.additionalFields[property])) {\n    return product.additionalFields[property];\n  }\n\n  return null;\n};\n\n/**\n * Creates a condition that verifies if the specified fields are defined.\n * @param fieldNames (string[]) - A list of fields that must be defined.\n * @returns (ProductTemplateCondition) A function that takes a product and checks if every field in the specified list is defined.\n */\nexport const fieldsMustBeDefined = (\n  fieldNames: string[]\n): ProductTemplateCondition => {\n  return (product: Product) => {\n    return fieldNames.every(\n      (fieldName) => !isNullOrUndefined(getProductProperty(product, fieldName))\n    );\n  };\n};\n\n/**\n * Creates a condition that verifies if the specified fields are not defined.\n * @param fieldNames (string[]) - A list of fields that must not be defined.\n * @returns (ProductTemplateCondition) A function that takes a product and checks if every field in the specified list is not defined.\n */\nexport const fieldsMustNotBeDefined = (\n  fieldNames: string[]\n): ProductTemplateCondition => {\n  return (product: Product) => {\n    return fieldNames.every((fieldName) =>\n      isNullOrUndefined(getProductProperty(product, fieldName))\n    );\n  };\n};\n\n/**\n * Creates a condition that verifies whether the value of a field is equal to any of the specified values (casing insensitive).\n * @param fieldName (string) - The name of the field to evaluate the condition against.\n * @param allowedValues (string[]) - The list of values that the field value can be equal to in order for the condition to evaluate to \"true\" (case insensitive).\n * @returns (ProductTemplateCondition) - A function that takes a Product as an argument and returns \"true\" if the value for the specified field is equal to any of the values in the specified list (case insensitive), and \"false\" otherwise.\n */\nexport const fieldMustMatch = (\n  fieldName: string,\n  valuesToMatch: string[]\n): ProductTemplateCondition => {\n  return (product: Product) => {\n    const fieldValues = getFieldValuesFromProduct(fieldName, product);\n    return valuesToMatch.some((valueToMatch) =>\n      fieldValues.some(\n        (fieldValue) =>\n          `${fieldValue}`.toLowerCase() === valueToMatch.toLowerCase()\n      )\n    );\n  };\n};\n\n/**\n * Creates a condition that verifies whether the value of a field is not equal to any of the specified values (case insensitive).\n * @param fieldName (string) - The name of the field to evaluate the condition against.\n * @param disallowedValues (string[]) - The list of values that the field value must not be equal to in order for the condition to evaluate to \"true\" (case insensitive).\n * @returns (ProductTemplateCondition) A function that takes a Product as an argument and returns \"true\" if the value for the specified field is not equal to any of the values in the given list (case insensitive), or \"false\" otherwise.\n */\nexport const fieldMustNotMatch = (\n  fieldName: string,\n  disallowedValues: string[]\n): ProductTemplateCondition => {\n  return (product: Product) => {\n    const fieldValues = getFieldValuesFromProduct(fieldName, product);\n    return disallowedValues.every((disallowedValues) =>\n      fieldValues.every(\n        (fieldValue) =>\n          `${fieldValue}`.toLowerCase() !== disallowedValues.toLowerCase()\n      )\n    );\n  };\n};\n\nconst getFieldValuesFromProduct = (\n  fieldName: string,\n  product: Product | ChildProduct\n) => {\n  const rawValue = getProductProperty(product, fieldName);\n  return isArray(rawValue) ? rawValue : [rawValue];\n};\n\nexport const ProductTemplatesHelpers = {\n  getProductProperty,\n  fieldsMustBeDefined,\n  fieldsMustNotBeDefined,\n  fieldMustMatch,\n  fieldMustNotMatch,\n};\n", "import {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {commerceTriggersReducer as triggers} from '../../../features/commerce/triggers/triggers-slice.js';\nimport {TriggerSection} from '../../../state/state-sections.js';\nimport {arrayEqual} from '../../../utils/compare-utils.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {buildController} from '../../controller/headless-controller.js';\nimport {NotifyTrigger} from '../../core/triggers/headless-core-notify-trigger.js';\n\n/**\n * Creates a `NotifyTrigger` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @returns A `NotifyTrigger` controller instance.\n *\n * @group Buildable controllers\n * @category NotifyTrigger\n * */\nexport function buildNotifyTrigger(engine: CommerceEngine): NotifyTrigger {\n  if (!loadNotifyTriggerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const getState = () => engine[stateKey];\n\n  let previousNotifications = getState().triggers.notifications;\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const hasChanged = !arrayEqual(\n          previousNotifications,\n          this.state.notifications\n        );\n        previousNotifications = this.state.notifications;\n\n        if (hasChanged) {\n          listener();\n        }\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        notifications: getState().triggers.notifications,\n      };\n    },\n  };\n}\n\nfunction loadNotifyTriggerReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<TriggerSection> {\n  engine.addReducers({triggers});\n  return true;\n}\n", "import {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {commerceTriggersReducer as triggers} from '../../../features/commerce/triggers/triggers-slice.js';\nimport {TriggerSection} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {buildController} from '../../controller/headless-controller.js';\nimport {RedirectionTrigger} from '../../core/triggers/headless-core-redirection-trigger.js';\n\n/**\n * Creates a `RedirectionTrigger` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @returns A `RedirectionTrigger` controller instance.\n *\n * @group Buildable controllers\n * @category RedirectionTrigger\n * */\nexport function buildRedirectionTrigger(\n  engine: CommerceEngine\n): RedirectionTrigger {\n  if (!loadRedirectionReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n\n  const getState = () => engine[stateKey];\n\n  let previousRedirectTo = getState().triggers.redirectTo;\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const hasChanged = previousRedirectTo !== this.state.redirectTo;\n        previousRedirectTo = this.state.redirectTo;\n\n        if (hasChanged && this.state.redirectTo) {\n          listener();\n        }\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        redirectTo: getState().triggers.redirectTo,\n      };\n    },\n  };\n}\n\nfunction loadRedirectionReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<TriggerSection> {\n  engine.addReducers({triggers});\n  return true;\n}\n", "import {CommerceEngine} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {updateQuery} from '../../../features/commerce/query/query-actions.js';\nimport {queryReducer as query} from '../../../features/commerce/query/query-slice.js';\nimport {executeSearch} from '../../../features/commerce/search/search-actions.js';\nimport {updateIgnoreQueryTrigger} from '../../../features/commerce/triggers/triggers-actions.js';\nimport {commerceTriggersReducer as triggers} from '../../../features/commerce/triggers/triggers-slice.js';\nimport {TriggerSection} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {buildController} from '../../controller/headless-controller.js';\nimport {QueryTrigger} from '../../core/triggers/headless-core-query-trigger.js';\n\n/**\n * Creates a `QueryTrigger` controller instance.\n *\n * @param engine - The headless commerce engine.\n * @returns A `QueryTrigger` controller instance.\n *\n * @group Buildable controllers\n * @category QueryTrigger\n * */\nexport function buildQueryTrigger(engine: CommerceEngine): QueryTrigger {\n  if (!loadQueryTriggerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const getState = () => engine[stateKey];\n\n  const modification = () => getState().triggers.queryModification.newQuery;\n  const originalQuery = () =>\n    getState().triggers.queryModification.originalQuery;\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        newQuery: modification(),\n        originalQuery: originalQuery(),\n        wasQueryModified: modification() !== '',\n      };\n    },\n\n    undo() {\n      dispatch(updateIgnoreQueryTrigger({q: modification()}));\n      dispatch(updateQuery({query: originalQuery()}));\n      dispatch(executeSearch());\n    },\n  };\n}\n\nfunction loadQueryTriggerReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<TriggerSection> {\n  engine.addReducers({triggers, query});\n  return true;\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {FacetSearchType} from '../../../api/commerce/facet-search/facet-search-request.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {fieldSuggestionsOrderReducer as fieldSuggestionsOrder} from '../../../features/commerce/facets/field-suggestions-order/field-suggestions-order-slice.js';\nimport {FieldSuggestionsFacet} from '../../../features/commerce/facets/field-suggestions-order/field-suggestions-order-state.js';\nimport {executeSearch} from '../../../features/commerce/search/search-actions.js';\nimport {FieldSuggestionsOrderSection} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport {\n  facetResponseSelector,\n  isFacetLoadingResponseSelector,\n} from '../search/facets/headless-search-facet-options.js';\nimport {\n  buildCategoryFieldSuggestions,\n  CategoryFieldSuggestions,\n} from './headless-category-field-suggestions.js';\nimport {\n  buildFieldSuggestions,\n  FieldSuggestions,\n} from './headless-field-suggestions.js';\n\nexport type GeneratedFieldSuggestionsControllers = Array<\n  FieldSuggestions | CategoryFieldSuggestions\n>;\n\n/**\n * The `FieldSuggestionsGenerator` controller is responsible for generating field suggestions controllers for a given commerce engine.\n *\n * @group Buildable controllers\n * @category FieldSuggestionsGenerator\n */\nexport interface FieldSuggestionsGenerator extends Controller {\n  /**\n   * The facet controllers created by the facet generator.\n   */\n  fieldSuggestions: GeneratedFieldSuggestionsControllers;\n\n  /**\n   * The state of the field suggestions generator.\n   */\n  state: FieldSuggestionsFacet[];\n}\n\n/**\n * Builds a field suggestions generator controller for a given commerce engine.\n * @param engine The commerce engine.\n * @returns The field suggestions generator controller.\n *\n * @group Buildable controllers\n * @category FieldSuggestionsGenerator\n */\nexport function buildFieldSuggestionsGenerator(\n  engine: CommerceEngine\n): FieldSuggestionsGenerator {\n  if (!loadFieldSuggestionsGeneratorReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const commonOptions = {\n    fetchProductsActionCreator: executeSearch,\n    facetResponseSelector,\n    isFacetLoadingResponseSelector,\n    facetSearch: {type: 'SEARCH' as FacetSearchType},\n  };\n\n  const controller = buildController(engine);\n\n  const createFieldSuggestionsControllers = createSelector(\n    (state: CommerceEngineState) => state.fieldSuggestionsOrder,\n    (facetOrder) =>\n      facetOrder.map(({type, facetId}) => {\n        switch (type) {\n          case 'hierarchical':\n            return buildCategoryFieldSuggestions(engine, {\n              facetId,\n              ...commonOptions,\n            });\n          default:\n          case 'regular':\n            return buildFieldSuggestions(engine, {facetId, ...commonOptions});\n        }\n      })\n  );\n\n  return {\n    ...controller,\n\n    get fieldSuggestions() {\n      return createFieldSuggestionsControllers(engine[stateKey]);\n    },\n\n    get state() {\n      return engine[stateKey].fieldSuggestionsOrder;\n    },\n  };\n}\n\nfunction loadFieldSuggestionsGeneratorReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<FieldSuggestionsOrderSection> {\n  engine.addReducers({\n    fieldSuggestionsOrder,\n  });\n  return true;\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {FieldSuggestionsFacet} from '../../../api/commerce/search/query-suggest/query-suggest-response.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {getFacetIdWithCommerceFieldSuggestionNamespace} from '../../../features/commerce/facets/facet-search-set/commerce-facet-search-actions.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../../../features/commerce/facets/facet-set/facet-set-slice.js';\nimport {fieldSuggestionsOrderReducer as fieldSuggestionsOrder} from '../../../features/commerce/facets/field-suggestions-order/field-suggestions-order-slice.js';\nimport {categoryFacetSearchSetReducer as categoryFacetSearchSet} from '../../../features/facets/facet-search-set/category/category-facet-search-set-slice.js';\nimport {\n  CategoryFacetSearchSection,\n  CommerceFacetSetSection,\n  FacetSearchSection,\n  FieldSuggestionsOrderSection,\n} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport {\n  CategoryFieldSuggestionsState as CoreCategoryFieldSuggestionsState,\n  CategoryFieldSuggestionsValue,\n} from '../../field-suggestions/category-facet/headless-category-field-suggestions.js';\nimport {buildCategoryFacetSearch} from '../core/facets/category/headless-commerce-category-facet-search.js';\nimport {CategoryFacetOptions} from '../core/facets/category/headless-commerce-category-facet.js';\nimport {FacetControllerType} from '../core/facets/headless-core-commerce-facet.js';\n\nexport type {CategoryFieldSuggestionsValue};\n\n/**\n * The state of the `CategoryFieldSuggestions` controller.\n *\n * @group Buildable controllers\n * @category CategoryFieldSuggestions\n */\nexport type CategoryFieldSuggestionsState = CoreCategoryFieldSuggestionsState &\n  Pick<FieldSuggestionsFacet, 'facetId' | 'displayName' | 'field'>;\n\n/**\n * The `CategoryFieldSuggestions` controller provides query suggestions based on a particular category facet field.\n *\n * For example, you could use this controller to provide auto-completion suggestions while the end user is typing an item category.\n *\n * This controller is a wrapper around the basic category facet controller search functionality, and thus exposes similar options and properties.\n *\n * @group Buildable controllers\n * @category CategoryFieldSuggestions\n */\nexport interface CategoryFieldSuggestions\n  extends Controller,\n    FacetControllerType<'hierarchical'> {\n  /**\n   * Requests field suggestions based on a query.\n   *\n   * @param text - The query with which to request field suggestions.\n   */\n  updateText(text: string): void;\n\n  /**\n   * Requests field suggestions based on a query.\n   */\n  search(): void;\n\n  /**\n   * Filters the search using the specified value.\n   *\n   * If a facet exists with the configured `facetId`, selects the corresponding facet value.\n   *\n   * @param value - The field suggestion to select.\n   */\n  select(value: CategoryFieldSuggestionsValue): void;\n\n  /**\n   * Resets the query and empties the suggestions.\n   */\n  clear(): void;\n\n  state: CategoryFieldSuggestionsState;\n}\n\n/**\n * The `CategoryFieldSuggestions` controller provides query suggestions based on a particular category facet field.\n * @param engine - The headless commerce engine.\n * @param options - The options for the `CategoryFieldSuggestions` controller.\n * @returns A `CategoryFieldSuggestions` controller instance.\n *\n * @group Buildable controllers\n * @category CategoryFieldSuggestions\n */\nexport function buildCategoryFieldSuggestions(\n  engine: CommerceEngine,\n  options: CategoryFacetOptions\n): CategoryFieldSuggestions {\n  if (!loadFieldSuggestionsReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n\n  const namespacedFacetId = getFacetIdWithCommerceFieldSuggestionNamespace(\n    options.facetId\n  );\n  const facetSearch = buildCategoryFacetSearch(engine, {\n    options: {\n      facetId: namespacedFacetId,\n      ...options.facetSearch,\n      numberOfValues: 10,\n    },\n    select: () => {\n      dispatch(options.fetchProductsActionCreator());\n    },\n    isForFieldSuggestions: true,\n  });\n\n  const getState = () => engine[stateKey];\n\n  const getFacetForFieldSuggestions = (facetId: string) => {\n    return getState().fieldSuggestionsOrder.find(\n      (facet) => facet.facetId === facetId\n    )!;\n  };\n\n  const controller = buildController(engine);\n\n  const facetSearchStateSelector = createSelector(\n    (state: CommerceEngineState) =>\n      state.categoryFacetSearchSet[namespacedFacetId],\n    (facetSearch) => ({\n      isLoading: facetSearch.isLoading,\n      moreValuesAvailable: facetSearch.response.moreValuesAvailable,\n      query: facetSearch.options.query,\n      values: facetSearch.response.values,\n    })\n  );\n  return {\n    ...controller,\n    ...facetSearch,\n\n    updateText: function (text: string) {\n      facetSearch.updateText(text);\n      facetSearch.search();\n    },\n\n    get state() {\n      const facet = getFacetForFieldSuggestions(options.facetId);\n      return {\n        displayName: facet.displayName,\n        field: facet.field,\n        facetId: facet.facetId,\n        ...facetSearchStateSelector(getState()),\n      };\n    },\n\n    type: 'hierarchical',\n  };\n}\n\nfunction loadFieldSuggestionsReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<\n  FieldSuggestionsOrderSection &\n    CommerceFacetSetSection &\n    CategoryFacetSearchSection &\n    FacetSearchSection\n> {\n  engine.addReducers({\n    fieldSuggestionsOrder,\n    categoryFacetSearchSet,\n    commerceFacetSet,\n  });\n  return true;\n}\n", "import {createSelector} from '@reduxjs/toolkit';\nimport {FieldSuggestionsFacet} from '../../../api/commerce/search/query-suggest/query-suggest-response.js';\nimport {SpecificFacetSearchResult} from '../../../api/search/facet-search/specific-facet-search/specific-facet-search-response.js';\nimport {\n  CommerceEngine,\n  CommerceEngineState,\n} from '../../../app/commerce-engine/commerce-engine.js';\nimport {stateKey} from '../../../app/state-key.js';\nimport {getFacetIdWithCommerceFieldSuggestionNamespace} from '../../../features/commerce/facets/facet-search-set/commerce-facet-search-actions.js';\nimport {commerceFacetSetReducer as commerceFacetSet} from '../../../features/commerce/facets/facet-set/facet-set-slice.js';\nimport {fieldSuggestionsOrderReducer as fieldSuggestionsOrder} from '../../../features/commerce/facets/field-suggestions-order/field-suggestions-order-slice.js';\nimport {specificFacetSearchSetReducer as facetSearchSet} from '../../../features/facets/facet-search-set/specific/specific-facet-search-set-slice.js';\nimport {\n  CommerceFacetSetSection,\n  FacetSearchSection,\n  FieldSuggestionsOrderSection,\n} from '../../../state/state-sections.js';\nimport {loadReducerError} from '../../../utils/errors.js';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller.js';\nimport {FacetControllerType} from '../core/facets/headless-core-commerce-facet.js';\nimport {\n  buildRegularFacetSearch,\n  RegularFacetSearchState,\n} from '../core/facets/regular/headless-commerce-regular-facet-search.js';\nimport {RegularFacetOptions} from '../core/facets/regular/headless-commerce-regular-facet.js';\n\nexport type {SpecificFacetSearchResult};\n\n/**\n * The state of the `FieldSuggestions` controller.\n *\n * @group Buildable controllers\n * @category FieldSuggestions\n */\nexport type FieldSuggestionsState = RegularFacetSearchState &\n  Pick<FieldSuggestionsFacet, 'facetId' | 'displayName' | 'field'>;\n\n/**\n * The `FieldSuggestions` controller provides query suggestions based on a particular facet field.\n *\n * For example, you could use this controller to provide auto-completion suggestions while the end user is typing an item title.\n *\n * This controller is a wrapper around the basic facet controller search functionality, and thus exposes similar options and properties.\n *\n * @group Buildable controllers\n * @category FieldSuggestions\n */\nexport interface FieldSuggestions\n  extends Controller,\n    FacetControllerType<'regular'> {\n  /**\n   * Requests field suggestions based on a query.\n   *\n   * @param text - The query to search.\n   */\n  updateText(text: string): void;\n\n  /**\n   * Requests field suggestions based on a query.\n   */\n  search(): void;\n\n  /**\n   * Filters the search using the specified value.\n   *\n   * If a facet exists with the configured `facetId`, selects the corresponding facet value.\n   *\n   * @param value - The field suggestion for which to select the matching facet value.\n   */\n  select(value: SpecificFacetSearchResult): void;\n\n  /**\n   * Filters the search using the specified value, deselecting others.\n   *\n   * If a facet exists with the configured `facetId`, selects the corresponding facet value while deselecting other facet values.\n   *\n   * @param value - The field suggestion for which to select the matching facet value.\n   */\n  singleSelect(value: SpecificFacetSearchResult): void;\n\n  /**\n   * Resets the query and empties the suggestions.\n   */\n  clear(): void;\n\n  state: FieldSuggestionsState;\n}\n\n/**\n * Creates a `FieldSuggestions` controller instance.\n *\n * This controller initializes a facet under the hood, but exposes state and methods that are relevant for suggesting field values based on a query.\n * It's important not to initialize a facet with the same `facetId` but different options, because only the options of the controller which is built first will be taken into account.\n *\n * @param engine The headless engine.\n * @param options The `FieldSuggestions` options used internally.\n * @returns A `FieldSuggestions` controller instance.\n *\n * @group Buildable controllers\n * @category FieldSuggestions\n */\nexport function buildFieldSuggestions(\n  engine: CommerceEngine,\n  options: RegularFacetOptions\n): FieldSuggestions {\n  if (!loadFieldSuggestionsReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n\n  const namespacedFacetId = getFacetIdWithCommerceFieldSuggestionNamespace(\n    options.facetId\n  );\n  const facetSearch = buildRegularFacetSearch(engine, {\n    options: {facetId: namespacedFacetId, ...options.facetSearch},\n    select: () => {\n      dispatch(options.fetchProductsActionCreator());\n    },\n    exclude: () => {\n      dispatch(options.fetchProductsActionCreator());\n    },\n    isForFieldSuggestions: true,\n  });\n\n  const getState = () => engine[stateKey];\n\n  const getFacetForFieldSuggestions = (facetId: string) => {\n    return getState().fieldSuggestionsOrder.find(\n      (facet) => facet.facetId === facetId\n    )!;\n  };\n\n  const controller = buildController(engine);\n\n  const facetSearchStateSelector = createSelector(\n    (state: CommerceEngineState) => state.facetSearchSet[namespacedFacetId],\n    (facetSearch) => ({\n      isLoading: facetSearch.isLoading,\n      moreValuesAvailable: facetSearch.response.moreValuesAvailable,\n      query: facetSearch.options.query,\n      values: facetSearch.response.values,\n    })\n  );\n\n  return {\n    ...controller,\n    ...facetSearch,\n\n    updateText: function (text: string) {\n      facetSearch.updateText(text);\n      facetSearch.search();\n    },\n\n    get state() {\n      const facet = getFacetForFieldSuggestions(options.facetId);\n      return {\n        displayName: facet.displayName,\n        field: facet.field,\n        facetId: facet.facetId,\n        ...facetSearchStateSelector(getState()),\n      };\n    },\n\n    type: 'regular',\n  };\n}\n\nfunction loadFieldSuggestionsReducers(\n  engine: CommerceEngine\n): engine is CommerceEngine<\n  FieldSuggestionsOrderSection & CommerceFacetSetSection & FacetSearchSection\n> {\n  engine.addReducers({fieldSuggestionsOrder, commerceFacetSet, facetSearchSet});\n  return true;\n}\n"],
  "mappings": "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",
  "names": ["_typeof", "obj", "polyfill", "sendBeacon", "url", "data", "event", "sync", "xhr", "isString", "isBlob", "init_navigator_sendbeacon_cjs", "__esmMin", "val", "require_cjs_ponyfill", "__commonJSMin", "exports", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "_classCallCheck", "instance", "Constructor", "_defineProperties", "target", "props", "i", "descriptor", "_createClass", "protoProps", "staticProps", "_inherits", "subClass", "superClass", "_setPrototypeOf", "_getPrototypeOf", "o", "p", "_isNativeReflectConstruct", "_assertThisInitialized", "self", "_possibleConstructorReturn", "call", "_createSuper", "Derived", "hasNativeReflectConstruct", "Super", "result", "NewTarget", "_superPropBase", "object", "property", "_get", "receiver", "base", "desc", "Emitter", "type", "callback", "options", "stack", "l", "event", "stackToCall", "listener", "e", "AbortSignal", "_Emitter", "_super", "_this", "AbortController", "reason", "signalReason", "polyfillNeeded", "abortableFetchDecorator", "patchTargets", "_patchTargets", "fetch", "_patchTargets$Request", "NativeRequest", "NativeAbortController", "_patchTargets$__FORCE", "__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL", "Request", "input", "init", "signal", "request", "realFetch", "abortableFetch", "abortError", "cancellation", "_", "reject", "import_cjs_ponyfill", "abortableFetch", "init_abortable_fetch_shim", "__esmMin", "abortableFetchFactory", "defaultOptions", "getSanitizedOptions", "options", "sanitized", "__assign", "exports", "fullJitter", "delay", "jitteredDelay", "exports", "noJitter", "delay", "exports", "full_jitter_1", "no_jitter_1", "JitterFactory", "options", "exports", "jitter_factory_1", "Delay", "options", "_this", "resolve", "attempt", "jitter", "constant", "base", "power", "delay", "exports", "delay_base_1", "SkipFirstDelay", "_super", "__extends", "exports", "delay_base_1", "AlwaysDelay", "_super", "__extends", "exports", "skip_first_delay_1", "always_delay_1", "DelayFactory", "options", "attempt", "delay", "initDelayClass", "exports", "options_1", "delay_factory_1", "backOff", "request", "options", "sanitizedOptions", "BackOff", "_a", "exports", "e_1", "shouldRetry", "delay", "require_dayjs_min", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "t", "e", "n", "r", "i", "s", "a", "o", "c", "f", "h", "d", "l", "$", "y", "M", "m", "v", "u", "g", "D", "p", "S", "_", "O", "b", "k", "require_quarterOfYear", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "t", "n", "e", "i", "r", "s", "o", "require_customParseFormat", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "n", "r", "i", "o", "s", "e", "a", "t", "f", "h", "u", "d", "c", "l", "m", "M", "Y", "p", "v", "D", "g", "require_magic_cookie_browser", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "pendragonCookieValueMatcher", "require_timezone", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "t", "e", "n", "i", "o", "r", "a", "u", "f", "s", "m", "c", "d", "l", "h", "v", "require_utc", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "t", "i", "e", "s", "f", "n", "o", "r", "a", "u", "h", "l", "c", "require_quick_format_unescaped", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "tryStringify", "o", "format", "f", "args", "opts", "ss", "offset", "len", "objects", "index", "argLen", "str", "a", "lastPos", "flen", "i", "type", "require_browser", "__commonJSMin", "exports", "module", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "format", "pino", "_console", "pfGlobalThisOrFallback", "stdSerializers", "mock", "passthrough", "asErrValue", "levelToValue", "level", "logger", "baseLogFunctionSymbol", "hierarchySymbol", "logFallbackMap", "appendChildLogger", "parentLogger", "childLogger", "newEntry", "setupBaseLogFunctions", "levels", "proto", "logFunctions", "noop", "shouldSerialize", "serialize", "serializers", "k", "opts", "transmit", "stdErrSerialize", "customLevels", "getLevelVal", "getLevel", "setLevel", "setOpts", "getTimeFunction", "getLevels", "child", "createLogEventShape", "set", "bindings", "childOptions", "childOptionsSerializers", "childSerializers", "childSerialize", "applySerializers", "Child", "parent", "newLogger", "values", "labels", "invertObject", "obj", "inverted", "key", "nullTime", "epochTime", "unixTime", "isoTime", "getBindingChain", "hierarchy", "self", "rootLogger", "createWrap", "prependBindingsInArguments", "logFunc", "write", "ts", "args", "i", "asObject", "transmitLevel", "transmitValue", "methodValue", "formatters", "levelFormatter", "logObjectFormatter", "argsCloned", "msg", "logObject", "lvl", "send", "methodLevel", "val", "arg", "err", "a", "defd", "o", "commerce_index_exports", "__export", "highlight_exports", "ProductTemplatesHelpers", "commerce_selectors_index_exports", "SortBy", "SortDirection", "buildCart", "buildCommerceEngine", "buildContext", "buildController", "buildDateRange", "buildFieldSuggestionsGenerator", "buildFieldsSortCriterion", "buildInstantProducts", "buildNotifyTrigger", "buildProductListing", "buildProductTemplatesManager", "buildProductView", "buildQueryTrigger", "buildRecentQueriesList", "buildRecommendations", "buildRedirectionTrigger", "buildRelevanceSortCriterion", "buildSearch", "buildSearchBox", "buildStandaloneSearchBox", "deserializeRelativeDate", "getAnalyticsNextApiBaseUrl", "getCommerceApiBaseUrl", "getOrganizationEndpoint", "getSampleCommerceEngineConfiguration", "loadCartActions", "loadCategoryFacetSetActions", "loadConfigurationActions", "loadContextActions", "loadCoreFacetActions", "loadDateFacetActions", "loadInstantProductsActions", "loadLocationFacetActions", "loadNumericFacetActions", "loadPaginationActions", "loadProductActions", "loadProductListingActions", "loadProductListingParametersActions", "loadQueryActions", "loadQuerySetActions", "loadQuerySuggestActions", "loadRecentQueriesActions", "loadRecommendationsActions", "loadRegularFacetActions", "loadSearchActions", "loadSearchParametersActions", "loadSortActions", "loadStandaloneSearchBoxSetActions", "loadTriggersActions", "validateRelativeDate", "__toCommonJS", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "commerce_selectors_index_exports", "__export", "ProductListing", "Search", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "stateKeyDescription", "stateKey", "redactEngine", "engine", "target", "key", "prop", "receiver", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildSchemaValidationError", "errors", "context", "message", "SchemaValidationError", "Schema", "definition", "values", "mergedValues", "property", "error", "defaultValues", "defaultValue", "Value", "baseConfig", "value", "isNullOrUndefined", "isUndefined", "isNull", "NumberValue", "config", "__publicField", "valueValidation", "isNumberOrUndefined", "isNumber", "BooleanValue", "isBooleanOrUndefined", "isBoolean", "ISODateStringRegex", "StringValue", "emptyAllowed", "url", "regex", "constrainTo", "ISODate", "isString", "RecordValue", "input", "isRecord", "k", "v", "out", "key", "validator", "invalidValue", "ArrayValue", "invalid", "el", "isInvalid", "isArray", "EnumValue", "enumValue", "formatProdErrorMessage", "code", "$$observable", "symbol_observable_default", "randomString", "ActionTypes", "actionTypes_default", "isPlainObject", "obj", "proto", "createStore", "reducer", "preloadedState", "enhancer", "formatProdErrorMessage", "currentReducer", "currentState", "currentListeners", "nextListeners", "listenerIdCounter", "isDispatching", "ensureCanMutateNextListeners", "listener", "key", "getState", "subscribe", "isSubscribed", "listenerId", "dispatch", "action", "isPlainObject", "replaceReducer", "nextReducer", "actionTypes_default", "observable", "outerSubscribe", "observer", "observeState", "observerAsObserver", "symbol_observable_default", "assertReducerShape", "reducers", "key", "reducer", "actionTypes_default", "formatProdErrorMessage", "combineReducers", "reducerKeys", "finalReducers", "i", "finalReducerKeys", "unexpectedKeyCache", "shapeAssertionError", "e", "state", "action", "hasChanged", "nextState", "previousStateForKey", "nextStateForKey", "actionType", "compose", "funcs", "arg", "a", "b", "args", "applyMiddleware", "middlewares", "createStore", "reducer", "preloadedState", "store", "dispatch", "formatProdErrorMessage", "middlewareAPI", "action", "chain", "middleware", "isAction", "isPlainObject", "NOTHING", "DRAFTABLE", "DRAFT_STATE", "die", "error", "args", "getPrototypeOf", "isDraft", "value", "DRAFT_STATE", "isDraftable", "isPlainObject", "DRAFTABLE", "isMap", "isSet", "objectCtorString", "proto", "Ctor", "original", "each", "obj", "iter", "getArchtype", "key", "entry", "index", "thing", "state", "has", "prop", "get", "set", "propOrOldValue", "t", "is", "x", "y", "target", "latest", "shallowCopy", "base", "strict", "isPlain", "descriptors", "keys", "i", "desc", "freeze", "deep", "isFrozen", "dontMutateFrozenCollections", "plugins", "getPlugin", "pluginKey", "plugin", "loadPlugin", "implementation", "currentScope", "getCurrentScope", "createScope", "parent_", "immer_", "usePatchesInScope", "scope", "patchListener", "revokeScope", "leaveScope", "revokeDraft", "enterScope", "immer", "draft", "processResult", "result", "baseDraft", "finalize", "maybeFreeze", "NOTHING", "rootScope", "path", "childValue", "finalizeProperty", "resultEach", "parentState", "targetObject", "rootPath", "targetIsSet", "res", "createProxyProxy", "parent", "isArray", "traps", "objectTraps", "arrayTraps", "revoke", "proxy", "source", "readPropFromProto", "peek", "prepareCopy", "createProxy", "getDescriptorFromProto", "current", "currentState", "markChanged", "owner", "fn", "Immer", "config", "recipe", "defaultBase", "self", "hasError", "p", "ip", "patches", "inversePatches", "patch", "applyPatchesImpl", "currentImpl", "copy", "enablePatches", "REPLACE", "ADD", "REMOVE", "generatePatches_", "basePath", "generatePatchesFromAssigned", "generateArrayPatches", "generateSetPatches", "base_", "assigned_", "copy_", "clonePatchValueIfNeeded", "assignedValue", "origValue", "op", "generateReplacementPatches_", "baseValue", "replacement", "applyPatches_", "parentType", "type", "deepClonePatchValue", "k", "v", "cloned", "immer", "Immer", "produce", "produceWithPatches", "setAutoFreeze", "setUseStrictShallowCopy", "applyPatches", "createDraft", "finishDraft", "assertIsFunction", "func", "errorMessage", "assertIsObject", "object", "assertIsArrayOfFunctions", "array", "item", "itemTypes", "ensureIsArray", "getDependencies", "createSelectorArgs", "dependencies", "collectInputSelectorResults", "inputSelectorArgs", "inputSelectorResults", "length", "i", "REDUX_PROXY_LABEL", "proto", "StrongRef", "value", "Ref", "UNTERMINATED", "TERMINATED", "createCacheNode", "weakMapMemoize", "func", "options", "fnNode", "resultEqualityCheck", "lastResult", "resultsCount", "memoized", "cacheNode", "length", "i", "l", "arg", "objectCache", "objectNode", "primitiveCache", "primitiveNode", "terminatedNode", "result", "lastResultValue", "createSelectorCreator", "memoizeOrOptions", "memoizeOptionsFromArgs", "createSelectorCreatorOptions", "createSelector", "createSelectorArgs", "recomputations", "dependencyRecomputations", "directlyPassedOptions", "resultFunc", "assertIsFunction", "combinedOptions", "memoize", "memoizeOptions", "argsMemoize", "argsMemoizeOptions", "devModeChecks", "finalMemoizeOptions", "ensureIsArray", "finalArgsMemoizeOptions", "dependencies", "getDependencies", "memoizedResultFunc", "firstRun", "selector", "inputSelectorResults", "collectInputSelectorResults", "createStructuredSelector", "inputSelectorsObject", "selectorCreator", "assertIsObject", "inputSelectorKeys", "key", "composition", "index", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "createThunkMiddleware", "extraArgument", "dispatch", "getState", "next", "action", "thunk", "withExtraArgument", "composeWithDevTools", "compose", "devToolsEnhancer", "noop", "hasMatchFunction", "v", "createAction", "type", "prepareAction", "actionCreator", "args", "prepared", "formatProdErrorMessage", "action", "isAction", "Tuple", "_Tuple", "items", "arr", "freezeDraftable", "val", "isDraftable", "produce", "emplace", "map", "key", "handler", "value", "formatProdErrorMessage", "inserted", "isBoolean", "x", "buildGetDefaultMiddleware", "options", "thunk", "immutableCheck", "serializableCheck", "actionCreatorCheck", "middlewareArray", "Tuple", "withExtraArgument", "SHOULD_AUTOBATCH", "prepareAutoBatched", "payload", "createQueueWithTimer", "timeout", "notify", "rAF", "autoBatchEnhancer", "next", "args", "store", "notifying", "shouldNotifyAtEndOfTick", "notificationQueued", "listeners", "queueCallback", "notifyListeners", "l", "listener", "wrappedListener", "unsubscribe", "action", "buildGetDefaultEnhancers", "middlewareEnhancer", "autoBatch", "enhancerArray", "configureStore", "getDefaultMiddleware", "reducer", "middleware", "devTools", "preloadedState", "enhancers", "rootReducer", "isPlainObject", "combineReducers", "formatProdErrorMessage", "finalMiddleware", "finalCompose", "compose", "composeWithDevTools", "applyMiddleware", "getDefaultEnhancers", "storeEnhancers", "composedEnhancer", "createStore", "executeReducerBuilderCallback", "builderCallback", "actionsMap", "actionMatchers", "defaultCaseReducer", "builder", "typeOrActionCreator", "type", "matcher", "isStateFunction", "createReducer", "initialState", "mapOrBuilderCallback", "finalActionMatchers", "finalDefaultCaseReducer", "getInitialState", "freezeDraftable", "frozenInitialState", "state", "caseReducers", "cr", "previousState", "caseReducer", "isDraft", "result", "isDraftable", "createNextState", "draft", "matches", "hasMatchFunction", "isAnyOf", "matchers", "isAllOf", "hasExpectedRequestMetadata", "validStatus", "hasValidRequestId", "hasValidRequestStatus", "isAsyncThunkArray", "a", "isPending", "asyncThunks", "asyncThunk", "isRejected", "isRejectedWithValue", "hasFlag", "isFulfilled", "isAsyncThunkAction", "urlAlphabet", "nanoid", "size", "id", "i", "commonProperties", "RejectWithValue", "meta", "__publicField", "FulfillWithMeta", "miniSerializeError", "value", "simpleError", "property", "createAsyncThunk", "typePrefix", "payloadCreator", "fulfilled", "createAction", "requestId", "arg", "pending", "rejected", "error", "actionCreator", "dispatch", "getState", "extra", "abortController", "abortHandler", "abortReason", "abort", "reason", "promise", "finalAction", "conditionResult", "isThenable", "abortedPromise", "_", "reject", "err", "unwrapResult", "asyncThunkSymbol", "asyncThunkCreator", "getType", "slice", "actionKey", "buildCreateSlice", "creators", "cAT", "asyncThunkSymbol", "options", "name", "reducerPath", "formatProdErrorMessage", "reducers", "buildReducerCreators", "reducerNames", "context", "contextMethods", "typeOrActionCreator", "reducer", "type", "matcher", "actionCreator", "reducerName", "reducerDefinition", "reducerDetails", "isAsyncThunkSliceReducerDefinition", "handleThunkCaseReducerDefinition", "handleNormalReducerDefinition", "buildReducer", "extraReducers", "actionMatchers", "defaultCaseReducer", "executeReducerBuilderCallback", "finalCaseReducers", "createReducer", "builder", "key", "sM", "m", "selectSelf", "state", "injectedSelectorCache", "_reducer", "action", "getInitialState", "makeSelectorProps", "injected", "selectSlice", "sliceState", "getSelectors", "selectState", "selectorCache", "emplace", "map", "selector", "wrapSelector", "injectable", "pathOpt", "config", "newReducerPath", "wrapper", "rootState", "args", "createSlice", "asyncThunk", "payloadCreator", "caseReducer", "prepare", "createNotation", "maybeReducerWithPrepare", "prepareCallback", "isCaseReducerWithPrepareDefinition", "createAction", "fulfilled", "pending", "rejected", "settled", "thunk", "noop", "listener", "completed", "cancelled", "taskCancelled", "taskCompleted", "listenerCancelled", "listenerCompleted", "assign", "alm", "addListener", "assign", "createAction", "alm", "clearAllListeners", "removeListener", "ORIGINAL_STATE", "formatProdErrorMessage", "code", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "perPagePrincipalSelector", "createSelector", "state", "perPage", "perPageRecommendationSelector", "slotId", "totalEntriesPrincipalSelector", "totalEntries", "totalEntriesRecommendationSelector", "pagePrincipalSelector", "page", "pageRecommendationSelector", "responseIdSelectorFromEngine", "createSelector", "engine", "stateKey", "responseId", "responseIdSelector", "state", "requestIdSelector", "requestId", "numberOfProductsSelector", "len", "moreProductsAvailableSelector", "totalEntriesPrincipalSelector", "current", "total", "isLoadingSelector", "isLoading", "isNullOrUndefined", "errorSelector", "error", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getQ", "section", "querySelector", "initialState", "q", "getSortCriteria", "sortCriteriaSelector", "sortCriteria", "getFacets", "facetIsEnabled", "valuesSelector", "out", "facets", "facetId", "request", "selectedValues", "acc", "obj", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "findActiveValueAncestry", "valuesAsTree", "activeValue", "ancestryMap", "getActiveValueAndAncestryFromValueTree", "getActiveValueAncestry", "valuesAsTrees", "valueToVisit", "currentValue", "childValue", "valueToParentMap", "activeValueAncestry", "lastParent", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCommercePaginationInitialState", "getCommercePaginationInitialSlice", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "SortBy", "SortDirection", "buildRelevanceSortCriterion", "sortCriterionDefinition", "RecordValue", "EnumValue", "SortBy", "ArrayValue", "StringValue", "SortDirection", "buildFieldsSortCriterion", "fields", "sortCriterionDefinition", "RecordValue", "EnumValue", "SortBy", "ArrayValue", "StringValue", "SortDirection", "getCommerceSortInitialState", "buildRelevanceSortCriterion", "initialParametersSelector", "state", "getCommercePaginationInitialSlice", "getCommerceSortInitialState", "activeParametersSelector", "getPage", "s", "getPerPage", "getSortCriteria", "getFacets", "facetIsOfType", "getSelectedValues", "getSelectedLocationValues", "getSelectedCategoryValues", "getSelectedRangeValues", "getManualNumericFacet", "enrichedParametersSelector", "activeParams", "section", "pageSelector", "initialState", "page", "perPageSelector", "perPage", "request", "fv", "facetId", "manualFacetRange", "manualRange", "acc", "obj", "findActiveValueAncestry", "v", "type", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCommerceQueryInitialState", "responseIdSelectorFromEngine", "createSelector", "engine", "stateKey", "responseId", "responseIdSelector", "state", "requestIdSelector", "requestId", "numberOfProductsSelector", "len", "moreProductsAvailableSelector", "totalEntriesPrincipalSelector", "current", "total", "isLoadingSelector", "isLoading", "isNullOrUndefined", "errorSelector", "error", "querySelector", "query", "queryExecutedSelector", "queryExecutedFromResponseSelector", "response", "activeParametersSelector", "getQ", "s", "getCommerceQueryInitialState", "enrichedParametersSelector", "activeParams", "enrichedSummarySelector", "Search", "wrapWithAccessFromEngine", "responseIdSelector", "ProductListing", "selector", "engine", "stateKey", "highlight_exports", "__export", "escape", "getHighlightedSuggestion", "highlightString", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "randomID", "prepend", "length", "isArray", "value", "isEmptyString", "str", "fromEntries", "values", "newObject", "key", "value", "clone", "value", "highlightString", "params", "isEmptyString", "isNullOrUndefined", "escape", "maxIndex", "highlighted", "last", "i", "highlight", "start", "end", "getHighlightedSuggestion", "suggestion", "options", "part", "notMatched", "matched", "corrected", "suggestionWithDelimiters", "delimiters", "str", "mapOfCharToEscape", "source", "testRegexp", "replaceRegexp", "substring", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "import_exponential_backoff", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadReducerError", "ExpiredTokenError", "DisconnectedError", "url", "statusCode", "__publicField", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "encodeAsFormUrl", "obj", "body", "property", "key", "value", "canBeFormUrlEncoded", "isPrimitive", "val", "isThrottled", "status", "PlatformClient", "_PlatformClient", "options", "defaultRequestOptions", "buildDefaultRequestOptions", "logger", "requestInfo", "url", "requestData", "request", "response", "abortableFetch", "e", "shouldRetry", "ExpiredTokenError", "DisconnectedError", "error", "origin", "preprocessRequest", "requestMetadata", "signal", "withoutSignal", "untaintedOutput", "clone", "processedRequest", "getOrganizationEndpoint", "organizationId", "environment", "endpointType", "environmentSuffix", "endpointTypePart", "getSearchApiBaseUrl", "organizationId", "environment", "getOrganizationEndpoint", "getAnalyticsNextApiBaseUrl", "buildDefaultRequestOptions", "options", "url", "method", "requestParams", "contentType", "accessToken", "signal", "isMethodWithBody", "body", "encodeBody", "canBeFormUrlEncoded", "encodeAsFormUrl", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildDisconnectedError", "error", "buildIgnoredAbortedError", "buildAPIResponseFromErrorOrThrow", "disableAbortWarning", "DisconnectedError", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildRequest", "req", "path", "baseRequest", "prepareRequestParams", "trackingId", "clientId", "context", "language", "country", "currency", "page", "perPage", "facets", "sort", "url", "accessToken", "baseUrl", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildRecommendationsRequest", "req", "path", "baseRequest", "prepareRecommendationsRequestParams", "slotId", "trackingId", "clientId", "context", "language", "country", "currency", "page", "perPage", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildQuerySuggestRequest", "req", "baseRequest", "prepareRequestParams", "trackingId", "query", "clientId", "context", "language", "country", "currency", "isErrorResponse", "r", "CommerceAPIClient", "options", "req", "buildRequest", "requestOptions", "buildRecommendationsRequest", "buildQuerySuggestRequest", "type", "response", "PlatformClient", "buildAPIResponseFromErrorOrThrow", "body", "getCommerceApiBaseUrl", "organizationId", "environment", "getOrganizationEndpoint", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "NoopPreprocessRequest", "request", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "requiredNonEmptyString", "StringValue", "nonEmptyString", "requiredEmptyAllowedString", "nonRequiredEmptyAllowedString", "nonEmptyStringArray", "ArrayValue", "optionalNonEmptyVersionString", "serializeSchemaValidationError", "message", "name", "stack", "validatePayloadAndThrow", "payload", "definition", "Schema", "isInvalid", "RecordValue", "SchemaValidationError", "validatePayload", "error", "validateInitialState", "engine", "schema", "obj", "functionName", "validateObject", "validateOptions", "validationMessage", "errorMessage", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "VERSION", "COVEO_FRAMEWORK", "originSchemaOnConfigUpdate", "nonEmptyString", "originSchemaOnUpdate", "requiredNonEmptyString", "updateBasicConfiguration", "createAction", "payload", "validatePayload", "StringValue", "updateSearchConfiguration", "ArrayValue", "analyticsConfigurationSchema", "BooleanValue", "Value", "RecordValue", "COVEO_FRAMEWORK", "acc", "framework", "optionalNonEmptyVersionString", "updateAnalyticsConfiguration", "disableAnalytics", "enableAnalytics", "setOriginLevel2", "setOriginLevel3", "updateBasicConfiguration", "createAction", "payload", "validatePayload", "nonEmptyString", "StringValue", "updateProxyBaseUrl", "updateAnalyticsConfiguration", "analyticsConfigurationSchema", "disableAnalytics", "enableAnalytics", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getConfigurationInitialState", "configurationReducer", "createReducer", "getConfigurationInitialState", "builder", "updateBasicConfiguration", "state", "action", "handleUpdateBasicConfiguration", "updateProxyBaseUrl", "handleUpdateCommerceProxyBaseUrl", "updateAnalyticsConfiguration", "handleupdateAnalyticsConfiguration", "disableAnalytics", "enableAnalytics", "payload", "isNullOrUndefined", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCurrency", "state", "getECPurchasePayload", "transaction", "state", "getCurrency", "productQuantitySelector", "getECCartActionPayload", "cartActionDetails", "itemsSelector", "createSelector", "cartState", "cart", "cartItems", "key", "items", "quantity", "product", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "itemPayloadDefinition", "requiredNonEmptyString", "NumberValue", "StringValue", "setItemsPayloadDefinition", "ArrayValue", "RecordValue", "cartDefinition", "cartSchema", "Schema", "setItems", "createAction", "payload", "validatePayload", "setItemsPayloadDefinition", "updateItemQuantity", "itemPayloadDefinition", "purchase", "emitPurchaseEvent", "createAsyncThunk", "extra", "getState", "relayPayload", "getECPurchasePayload", "relay", "emitCartActionEvent", "getECCartActionPayload", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildController", "engine", "prevState", "listeners", "hasNoListeners", "hasStateChanged", "currentState", "stringifiedState", "hasChanged", "e", "listener", "symbol", "unsubscribe", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "itemSelector", "cartState", "item", "createCartKey", "totalQuantitySelector", "createSelector", "itemsSelector", "items", "prev", "cur", "totalPriceSelector", "buildCart", "engine", "props", "loadBaseCartReducers", "loadReducerError", "dispatch", "controller", "buildController", "getState", "stateKey", "initialState", "validateInitialState", "cartSchema", "setItems", "isNewQuantityDifferent", "currentItem", "prevItem", "getCartAction", "isEqual", "createEcCartActionPayload", "currentQuantity", "product", "action", "quantity", "item", "itemsSelector", "transaction", "emitPurchaseEvent", "purchase", "itemSelector", "emitCartActionEvent", "updateItemQuantity", "cartState", "totalQuantitySelector", "totalPriceSelector", "createCartKey", "cartReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCartInitialState", "getProductsFromCartState", "state", "getProductsFromCart", "getProductsFromCartPurchasedState", "items", "itemMap", "productsMap", "acc", "key", "productId", "quantity", "cartReducer", "createReducer", "getCartInitialState", "builder", "setItems", "state", "payload", "cart", "cartItems", "acc", "item", "key", "createCartKey", "setItemsInState", "updateItemQuantity", "createItemInCart", "deleteProductFromCart", "purchase", "setItemsAsPurchased", "cartKey", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "currencies", "currencyDefinition", "StringValue", "viewDefinition", "requiredNonEmptyString", "locationDefinition", "NumberValue", "contextDefinition", "RecordValue", "contextSchema", "Schema", "setContext", "createAction", "payload", "validatePayload", "contextDefinition", "setView", "viewDefinition", "setLocation", "locationDefinition", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getContextInitialState", "contextReducer", "createReducer", "getContextInitialState", "builder", "setContext", "_", "payload", "setView", "state", "setLocation", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "emptyNextCorrection", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "deselectAllBreadcrumbs", "createAction", "deselectAllNonBreadcrumbs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getAnalyticsSource", "createSelector", "state", "source", "frameworkName", "frameworkVersion", "VERSION", "buildCommerceAPIRequest", "state", "navigatorContext", "buildBaseCommerceAPIRequest", "getFacets", "getManualNumericFacets", "getSort", "slotId", "view", "location", "restOfContext", "getCommerceApiBaseUrl", "getProductsFromCartState", "getAnalyticsSource", "effectivePagination", "effectiveSlice", "facetId", "facet", "_", "manualNumericFacet", "appliedSort", "name", "direction", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateCoreFacetNumberOfValues", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "NumberValue", "updateCoreFacetIsFieldExpanded", "BooleanValue", "clearAllCoreFacets", "deselectAllValuesInCoreFacet", "updateCoreFacetFreezeCurrentValues", "updateAutoSelectionForAllCoreFacets", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "slotIdDefinition", "nonRequiredEmptyAllowedString", "setPageSizeDefinition", "NumberValue", "setPageSize", "createAction", "payload", "validatePayload", "selectPageDefinition", "selectPage", "nextPage", "previousPage", "registerRecommendationsSlotPagination", "requiredNonEmptyString", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateQuery", "createAction", "payload", "validatePayload", "StringValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateIgnoreQueryTrigger", "createAction", "payload", "validatePayload", "StringValue", "applyQueryTriggerModification", "RecordValue", "nonEmptyString", "AsyncSearchThunkProcessor", "config", "fetched", "request", "startedAt", "response", "duration", "queryExecuted", "isErrorResponse", "state", "successResponse", "queryCorrection", "isNullOrUndefined", "correctedQuery", "originalQuery", "queryExecutedFromResponseSelector", "trigger", "updateIgnoreQueryTrigger", "retried", "modified", "applyQueryTriggerModification", "buildCommerceAPIRequest", "modification", "updateQuery", "executeSearch", "createAsyncThunk", "_action", "config", "getState", "state", "navigatorContext", "request", "buildCommerceAPIRequest", "query", "querySelector", "processor", "AsyncSearchThunkProcessor", "fetchedResponse", "fetchMoreProducts", "moreProductsAvailableSelector", "perPage", "perPagePrincipalSelector", "nextPageToRequest", "numberOfProductsSelector", "prepareForSearchWithQuery", "payload", "thunk", "dispatch", "validatePayload", "StringValue", "BooleanValue", "clearAllCoreFacets", "deselectAllNonBreadcrumbs", "updateAutoSelectionForAllCoreFacets", "updateQuery", "selectPage", "fetchInstantProducts", "rejectWithValue", "extra", "apiClient", "q", "fetched", "isErrorResponse", "products", "promoteChildToParentDefinition", "RecordValue", "promoteChildToParent", "createAction", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getDidYouMeanInitialState", "emptyNextCorrection", "didYouMeanReducer", "createReducer", "getDidYouMeanInitialState", "builder", "executeSearch", "state", "emptyNextCorrection", "action", "queryCorrection", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetIdDefinition", "requiredNonEmptyString", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "categoryFacetValueDefinition", "Value", "NumberValue", "StringValue", "ArrayValue", "requiredNonEmptyString", "BooleanValue", "validateCategoryFacetValue", "payload", "child", "validatePayloadAndThrow", "categoryFacetPayloadDefinition", "facetIdDefinition", "requiredNonEmptyString", "RecordValue", "ArrayValue", "StringValue", "BooleanValue", "NumberValue", "Value", "defaultNumberOfValuesIncrement", "registerCategoryFacet", "createAction", "payload", "validatePayload", "toggleSelectCategoryFacetValue", "validatePayloadAndThrow", "validateCategoryFacetValue", "error", "serializeSchemaValidationError", "deselectAllCategoryFacetValues", "updateCategoryFacetNumberOfValues", "updateCategoryFacetSortCriterion", "updateCategoryFacetBasePath", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetSearchOptionsDefinition", "facetIdDefinition", "RecordValue", "NumberValue", "StringValue", "categoryFacetSearchResultDefinition", "ArrayValue", "requiredNonEmptyString", "requiredEmptyAllowedString", "NumberValue", "selectCategoryFacetSearchResult", "createAction", "payload", "validatePayload", "facetIdDefinition", "RecordValue", "registerCategoryFacetSearch", "facetSearchOptionsDefinition", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "selectFacetSearchResultPayloadDefinition", "facetIdDefinition", "RecordValue", "requiredEmptyAllowedString", "NumberValue", "registerFacetSearch", "createAction", "payload", "validatePayload", "facetSearchOptionsDefinition", "updateFacetSearch", "selectFacetSearchResult", "excludeFacetSearchResult", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateFacetOptions", "createAction", "payload", "validatePayload", "BooleanValue", "enableFacet", "facetIdDefinition", "disableFacet", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "undo", "createAction", "redo", "snapshot", "back", "createAsyncThunk", "_", "dispatch", "change", "forward", "getState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "searchParametersDefinition", "StringValue", "BooleanValue", "NumberValue", "RecordValue", "restoreSearchParameters", "createAction", "payload", "validatePayload", "searchParametersDefinition", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "__rest", "s", "e", "t", "p", "i", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "rejected", "result", "EventType", "hasWindow", "hasNavigator", "hasDocument", "hasLocalStorage", "hasSessionStorage", "hasCookieStorage", "eventTypesForDefaultValues", "addDefaultValues", "eventType", "payload", "Cookie", "_Cookie", "name", "expire", "domain", "expirationDate", "domainParts", "host", "writeCookie", "cookiePrefix", "cookieArray", "cookie", "getAvailableStorage", "CookieStorage", "NullStorage", "_CookieStorage", "key", "data", "CookieAndLocalStorage", "STORE_KEY", "MAX_NUMBER_OF_HISTORY_ELEMENTS", "MIN_THRESHOLD_FOR_DUPLICATE_VALUE", "MAX_VALUE_SIZE", "HistoryStore", "store", "elem", "currentHistory", "history", "elements", "first", "second", "part", "lastEntry", "time", "enhanceViewEvent", "addPageViewToHistory", "pageViewValue", "historyElement", "getRandomValues", "rnds8", "rng", "REGEX", "validate", "uuid", "byteToHex", "unsafeStringify", "arr", "offset", "parse", "v", "stringToBytes", "str", "bytes", "DNS", "URL$1", "v35", "version", "hashfunc", "generateUUID", "namespace", "buf", "_namespace", "randomUUID", "native", "v4", "options", "rnds", "f", "x", "y", "z", "ROTL", "n", "sha1", "K", "H", "msg", "l", "N", "M", "j", "W", "a", "b", "c", "d", "T", "v5", "uuidv5", "libVersion", "getFormattedLocation", "location", "BasePluginEventTypes", "Plugin", "client", "uuidGenerator", "BasePlugin", "action", "documentContext", "screenContext", "navigatorContext", "eventContext", "pageViewId", "referrer", "removeStartingSlash", "page", "CoveoLinkParam", "_CoveoLinkParam", "clientId", "timestamp", "age", "referrerString", "referrerList", "url", "input", "parts", "clientIdPart", "creationDate", "LinkPlugin", "urlString", "acceptedReferrers", "keysOf", "isObject", "o", "UTF8_HIGH_BIT", "UTF8_HEADER_2", "UTF8_HEADER_3", "UTF8_HEADER_4", "utf8ByteCountFromFirstByte", "firstByte", "truncateUrl", "limit", "end", "peekByte", "ticketKeysMapping", "ticketKeysMappingValues", "ticketSubKeysMatchGroup", "ticketKeyRegex", "serviceActionsKeysMapping", "convertTicketToMeasurementProtocol", "ticket", "mappedTicket", "newKey", "isTicketKey", "isServiceKey", "productKeysMapping", "impressionKeysMapping", "productActionsKeysMapping", "transactionActionsKeysMapping", "coveoCommerceExtensionKeys", "quoteActionsKeysMapping", "reviewActionsKeysMapping", "commerceActionKeysMappingPerAction", "productKeysMappingValues", "impressionKeysMappingValues", "productActionsKeysMappingValues", "transactionActionsKeysMappingValues", "reviewKeysMappingValues", "quoteKeysMappingValues", "productSubKeysMatchGroup", "impressionSubKeysMatchGroup", "productPrefixMatchGroup", "impressionPrefixMatchGroup", "productKeyRegex", "impressionKeyRegex", "productActionsKeyRegex", "transactionActionsKeyRegex", "customProductKeyRegex", "customImpressionKeyRegex", "coveoCommerceExtensionKeysRegex", "isProductKey", "isImpressionKey", "isProductActionsKey", "isTransactionActionsKeyRegex", "isCoveoCommerceExtensionKey", "isCommerceKey", "isCustomCommerceKey", "globalParamKeysMapping", "eventKeysMapping", "contextInformationMapping", "coveoExtensionsKeys", "baseMeasurementProtocolKeysMapping", "all", "measurementProtocolKeysMapping", "convertKeysToMeasurementProtocol", "params", "keysMappingForAction", "mappedKeys", "measurementProtocolKeysMappingValues", "isKnownMeasurementProtocolKey", "isCustomKey", "isMeasurementProtocolKey", "test", "convertCustomMeasurementProtocolKeys", "current", "match", "getFirstCustomMeasurementProtocolKeyMatch", "convertCustomObject", "matchedKey", "regex", "_a", "prefix", "customData", "allCustom", "currentCustomKey", "AnalyticsBeaconClient", "opts", "originalPayload", "baseUrl", "preprocessRequest", "paramsFragments", "parsedRequestData", "body", "originalURL", "returnedUrl", "returnedPayload", "processedRequest", "processedURL", "processedBody", "token", "visitorIdProvider", "visitorId", "access_token", "encoded", "NoopAnalyticsClient", "_", "__", "AnalyticsFetchClient", "visitorIdParam", "defaultOptions", "fetchData", "response", "abortableFetch", "error", "visit", "BrowserRuntime", "clientOptions", "getUnprocessedRequests", "requests", "NodeJSRuntime", "storage", "NoopRuntime", "API_KEY_PREFIX", "isApiKey", "ReactNativeRuntimeWarning", "isReactNative", "doNotTrackValues", "doNotTrack", "Version", "Endpoints", "buildBaseUrl", "endpoint", "apiVersion", "isCustomEndpoint", "hasUARestEndpoint", "COVEO_NAMESPACE", "CoveoAnalyticsClient", "clientsOptions", "copy", "err", "id", "parametersToSend", "linkParam", "linker", "variableLengthArgumentsNames", "addVisitorIdParameter", "usesMeasurementProtocol", "addClientIdParameter", "currentPayload", "promisePayload", "payloadPromise", "parameters", "eventTypeToSend", "payloadToSend", "remainingPayload", "hook", "popped", "request", "searchQueryUid", "preparedRequest", "lastSearchQueryUid", "eventConfig", "hosts", "fieldsOrder", "parsedArguments", "length", "currentArgument", "evtType", "isNotEmptyValue", "newPayload", "custom", "rest", "lowercasedCustom", "keys", "anonymizeIp", "userId", "trackingId", "InsightEvents", "SearchPageEvents", "CustomEventsTypes", "NoopAnalytics", "filterConsecutiveRepeatedValues", "rawData", "prev", "isDifferent", "removeSemicolons", "getDataString", "formattedData", "formatArrayForCoveoCustomData", "dataWithoutSemicolons", "dataWithoutRepeatedValues", "formatOmniboxMetadata", "meta", "partialQueries", "suggestions", "CoveoSearchPageClient", "provider", "shouldDisableAnalytics", "info", "identifier", "metadata", "customEventBuilder", "reason", "details", "snippet", "identifierAndLink", "snippetAndLink", "preparedEvent", "actionCause", "event", "searchUID", "eventValue", "_b", "splitTestRunName", "splitTestRunVersion", "citation", "SVCPluginEventTypes", "allSVCEventTypes", "SVCPlugin", "superCall", "svcPayload", "ticketPayload", "CaseAssistEvents", "CaseAssistActions", "CaseCancelledReasons", "CaseAssistClient", "analyticsEnabled", "getVisitorID", "options", "CoveoAnalyticsClient", "historyStore", "history", "wrapPreprocessRequest", "logger", "preprocessRequest", "args", "untaintedOutput", "clone", "e", "wrapAnalyticsClientSendEventHook", "hook", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "emit", "config", "environment", "event", "listenerManager", "url", "token", "mode", "REGEX", "validate", "uuid", "createClientIdManager", "environmentManager", "key", "storage", "existingClientId", "clientId", "version", "getEventConfig", "trackingId", "getSource", "createMeta", "type", "clientIdManager", "getReferrer", "getLocation", "getUserAgent", "eventConfig", "createRelayEvent", "payload", "ANY_EVENT_TYPE", "createListenerManager", "listeners", "getListenerIndex", "callback", "listener", "isMatchesType", "add", "remove", "call", "e", "removeMultiple", "i", "removeOne", "index", "pick", "rest", "createConfigManager", "initialConfig", "_config", "updatedConfig", "createExplorerMessenger", "isBrowser", "message", "cookieManager", "createCookieManager", "prefix", "getDomain", "host", "parts", "cookiePrefix", "cookieArray", "cookie", "prettifyCookie", "data", "expire", "domain", "expireSection", "domainSection", "createBrowserStorage", "referrer", "buildBrowserEnvironment", "response", "localStorageAvailable", "x", "createNullStorage", "buildNullEnvironment", "buildEnvironment", "configManager", "createEnvironmentManager", "createRelay", "getRelayInstanceFromState", "createSelector", "state", "getAnalyticsSource", "organizationId", "environment", "token", "trackingId", "apiBaseUrl", "enabled", "source", "createRelay", "getAnalyticsNextApiBaseUrl", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getSearchHubInitialState", "CaseAssistAnalyticsProvider", "getState", "__publicField", "getSearchHubInitialState", "configureCaseAssistAnalytics", "logger", "analyticsClientMiddleware", "_", "p", "preprocessRequest", "provider", "state", "token", "endpoint", "getOrganizationEndpoint", "runtimeEnvironment", "enableAnalytics", "client", "CaseAssistClient", "wrapPreprocessRequest", "wrapAnalyticsClientSendEventHook", "type", "payload", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getAutomaticFacetSetInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "categoryFacetRequestSelector", "state", "id", "categoryFacetRequestSelectedValuesSelector", "state", "facetId", "facetRequest", "categoryFacetRequestSelector", "findActiveValueAncestry", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCategoryFacetSetInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getDateFacetSetSliceInitialState", "request", "getDateFacetSetInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getNumericFacetSetSliceInitialState", "request", "getNumericFacetSetInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getFacetSetSliceInitialState", "request", "getFacetSetInitialState", "getStateNeededForFacetMetadata", "s", "getFacetSetInitialState", "getCategoryFacetSetInitialState", "getDateFacetSetInitialState", "getNumericFacetSetInitialState", "getAutomaticFacetSetInitialState", "buildFacetStateMetadata", "state", "facetState", "getFacetRequests", "facetRequest", "facetIndex", "facetType", "getFacetType", "facetRequestAnalytics", "mapFacetRequestToAnalytics", "isCategoryFacetRequest", "categoryFacetRequestSelectedValuesSelector", "mapCategoryFacetValueToAnalytics", "facetValue", "facetValueIndex", "facetValueAnalytics", "mapFacetValueToAnalytics", "facetDisplayValueAnalytics", "isSpecificFacetRequest", "mapFacetDisplayValueToAnalytics", "mapRangeDisplayFacetValueToAnalytics", "getAutomaticFacets", "facet", "facetAnalytics", "mapAutomaticFacetToAnalytics", "request", "valuePosition", "getCategoryFacetSelectedValue", "facetId", "selectedCategoryFacetValue", "value", "facetPosition", "getFacetTitle", "field", "getFacetRequest", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getQueryInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "emptyQuestionAnswer", "getSearchInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getLanguage", "state", "langKey", "BaseAnalyticsProvider", "getState", "__publicField", "context", "configuration", "contextValues", "formattedObject", "key", "value", "formattedKey", "VERSION", "getSearchHubInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "SortOrder", "SortBy", "buildCriterionExpression", "criterion", "isArray", "c", "buildRelevanceSortCriterion", "criterionDefinition", "RecordValue", "EnumValue", "SortBy", "SortOrder", "StringValue", "getSortCriteriaInitialState", "buildCriterionExpression", "buildRelevanceSortCriterion", "_SearchAnalyticsProvider", "BaseAnalyticsProvider", "__publicField", "id", "buildFacetStateMetadata", "getStateNeededForFacetMetadata", "newState", "getSearchInitialState", "hasSplitTestRun", "effectivePipelineWithSplitTestRun", "state", "baseObject", "generativeQuestionAnsweringId", "facetId", "facetValue", "facetField", "criteria", "getSortCriteriaInitialState", "staticFilterId", "staticFilterValue", "undoneQuery", "categoryFacetId", "categoryFacetPath", "categoryFacetField", "suggestion", "querySuggest", "suggestions", "completion", "lastIndex", "partialQuery", "querySuggestResponseId", "metadata", "formattedObject", "getQueryInitialState", "SearchAnalyticsProvider", "configureLegacyAnalytics", "logger", "getState", "analyticsClientMiddleware", "_", "p", "preprocessRequest", "provider", "token", "endpoint", "getOrganizationEndpoint", "runtimeEnvironment", "enableAnalytics", "client", "CoveoSearchPageClient", "wrapPreprocessRequest", "wrapAnalyticsClientSendEventHook", "type", "payload", "getPageID", "lastPageView", "historyStore", "action", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getPipelineInitialState", "makeBasicNewSearchAnalyticsAction", "actionCause", "getState", "SearchAnalyticsProvider", "makeInstantlyCallable", "action", "makePreparableAnalyticsAction", "prefix", "buildEvent", "createAnalyticsAction", "body", "createAsyncThunk", "rootAction", "_", "extra", "analyticsClientMiddleware", "preprocessRequest", "logger", "description", "log", "getNewState", "newExtra", "makeAnalyticsActionFactory", "configurator", "legacyGetBuilderConverter", "providerClass", "makeAnalyticsAction", "params", "options", "internalMakeAnalyticsAction", "shouldSendLegacyEvent", "state", "shouldSendNextEvent", "__legacy__getBuilder", "__legacy__provider", "analyticsPayloadBuilder", "analyticsType", "analyticsConfigurator", "loggers", "analyticsAction", "client", "builder", "logLegacyEvent", "emit", "getRelayInstanceFromState", "payload", "logNextEvent", "response", "fromLogToLegacyBuilderFactory", "_metadata", "configureLegacyAnalytics", "original", "makeCaseAssistAnalyticsAction", "configureCaseAssistAnalytics", "CaseAssistAnalyticsProvider", "rawPartialDefinition", "StringValue", "resultPartialDefinition", "requiredNonEmptyString", "RecordValue", "logNextEvent", "emitEvent", "type", "payload", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateFacetAutoSelection", "createAction", "payload", "validatePayload", "BooleanValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "InstantResultsAnalyticsProvider", "SearchAnalyticsProvider", "getState", "state", "id", "query", "getQueryInitialState", "getSearchInitialState", "logInstantResultsSearch", "makeAnalyticsAction", "client", "getState", "InstantResultsAnalyticsProvider", "searchboxAsYouType", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "instantResultsRegisterDefinition", "requiredNonEmptyString", "instantResultsQueryDefinition", "requiredEmptyAllowedString", "registerInstantResults", "createAction", "payload", "validatePayload", "updateInstantResultsQuery", "clearExpiredResults", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "numberValue", "NumberValue", "registerNumberOfResults", "createAction", "payload", "validatePayload", "updateNumberOfResults", "registerPage", "updatePage", "nextPage", "previousPage", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateQuery", "createAction", "payload", "validatePayload", "StringValue", "BooleanValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "fromAnalyticsStateToAnalyticsParams", "s", "navigatorContext", "eventDescription", "getAnalyticsSource", "buildSearchAndFoldingLoadCollectionRequest", "state", "navigatorContext", "eventDescription", "getSearchApiBaseUrl", "fromAnalyticsStateToAnalyticsParams", "isNullOrUndefined", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "fromAnalyticsStateToAnalyticsParams", "s", "eventDescription", "isNextAnalytics", "getVisitorID", "getPageID", "getAnalyticsSource", "buildSearchAndFoldingLoadCollectionRequest", "state", "eventDescription", "getSearchApiBaseUrl", "historyStore", "fromAnalyticsStateToAnalyticsParams", "isNullOrUndefined", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getAdvancedSearchQueriesInitialState", "logFetchMoreResults", "makeAnalyticsAction", "client", "logQueryError", "error", "state", "getQueryInitialState", "getAdvancedSearchQueriesInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "import_dayjs", "import_quarterOfYear", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "import_dayjs", "import_customParseFormat", "dayjs", "customParseFormat", "API_DATE_FORMAT", "API_DATE_MINIMUM", "parseDate", "date", "format", "parsedDate", "formatDateForSearchApi", "isSearchApiDate", "validateAbsoluteDate", "dateFormat", "dayJSDate", "provideFormat", "withFormat", "assertDateAboveAPIMinimum", "dayjs", "quarterOfYear", "validRelativeDatePeriods", "validRelativeDateUnits", "buildRelativeDateDefinition", "period", "isNow", "NumberValue", "StringValue", "validateRelativeDate", "date", "isRelativeDateFormat", "relativeDate", "parseRelativeDate", "Schema", "dayJsDate", "relativeToAbsoluteDate", "stringifiedDate", "assertDateAboveAPIMinimum", "serializeRelativeDate", "amount", "unit", "formatRelativeDateForSearchApi", "formatDateForSearchApi", "splitDate", "intAmount", "isRelativeDate", "deserializeRelativeDate", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "isDateFacetRequest", "request", "formatStartFacetValue", "value", "formatEndFacetValue", "initialSearchMappings", "mapDateRangeRequest", "facetId", "mappings", "start", "end", "isRelativeDateFormat", "formatRelativeDateForSearchApi", "mapFacetRequest", "facetRequest", "isDateFacetRequest", "currentValues", "mapSearchRequest", "searchRequest", "mapDateRangeResponse", "isDateFacetResponse", "facetResponse", "mapFacetResponse", "mapSearchResponse", "response", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "isSuccessResponse", "r", "isErrorResponse", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "enableDidYouMean", "createAction", "disableDidYouMean", "disableAutomaticQueryCorrection", "enableAutomaticQueryCorrection", "applyDidYouMeanCorrection", "payload", "validatePayload", "requiredNonEmptyString", "setCorrectionMode", "StringValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "logDidYouMeanAutomatic", "makeAnalyticsAction", "client", "didYouMeanAutomatic", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getContextInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getDebugInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getDictionaryFieldContextInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getFacetOptionsSliceInitialState", "getFacetOptionsInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getFacetOrderInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getPaginationInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getQuerySetInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getStaticFilterSetInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getTabSetInitialState", "extractHistory", "state", "getContextInitialState", "getDictionaryFieldContextInitialState", "getFacetSetInitialState", "getNumericFacetSetInitialState", "getDateFacetSetInitialState", "getCategoryFacetSetInitialState", "getAutomaticFacetSetInitialState", "getPaginationInitialState", "getQueryInitialState", "getTabSetInitialState", "getAdvancedSearchQueriesInitialState", "getStaticFilterSetInitialState", "getQuerySetInitialState", "getSortCriteriaInitialState", "getPipelineInitialState", "getSearchHubInitialState", "getFacetOptionsInitialState", "getFacetOrderInitialState", "getDebugInitialState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "logUndoTriggerQueryPayloadDefinition", "RecordValue", "requiredEmptyAllowedString", "logTriggerQuery", "makeAnalyticsAction", "client", "state", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateIgnoreQueryTrigger", "createAction", "q", "validatePayload", "StringValue", "applyQueryTriggerModification", "payload", "RecordValue", "nonEmptyString", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getFacetRequests", "state", "slice", "sortFacets", "facets", "sortOrder", "payloadMap", "f", "sortedFacets", "facetId", "remainingFacets", "getRangeFacetRequests", "state", "getFacetRequests", "request", "hasActiveValues", "getSpecificFacetRequests", "getAllFacets", "getAllEnabledFacets", "getFacets", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildSearchRequest", "state", "eventDescription", "cq", "buildConstantQuery", "facets", "getFacets", "automaticFacets", "getAutomaticFacets", "sharedWithFoldingRequest", "buildSearchAndFoldingLoadCollectionRequest", "getNumberOfResultsWithinIndexLimit", "mapSearchRequest", "facet", "responseToAutomaticFacetRequest", "facetRequest", "response", "field", "label", "values", "selectedValues", "value", "tabExpression", "tab", "filterExpressions", "getStaticFilterExpressions", "expression", "filter", "selected", "AsyncSearchThunkProcessor", "config", "onUpdateQueryForCorrection", "modification", "updateQuery", "mappings", "request", "options", "startedAt", "response", "mapSearchResponse", "duration", "queryExecuted", "fetched", "isErrorResponse", "logQueryError", "state", "successResponse", "enableDidYouMean", "automaticallyCorrectQuery", "results", "queryCorrections", "queryCorrection", "shouldExecuteClassicDidYouMeanAutoCorrection", "shouldExecuteModernDidYouMeanAutoCorrection", "isNullOrUndefined", "ret", "snapshot", "extractHistory", "originalFetchedResponse", "originalQuery", "originalSearchSuccessResponse", "correctedQuery", "retried", "logDidYouMeanAutomatic", "trigger", "updateIgnoreQueryTrigger", "logTriggerQuery", "query", "previousState", "getQueryInitialState", "getSearchInitialState", "isSuccessResponse", "correction", "buildSearchRequest", "applyDidYouMeanCorrection", "modified", "applyQueryTriggerModification", "prepareForSearchWithQuery", "createAsyncThunk", "payload", "thunk", "dispatch", "validatePayload", "StringValue", "BooleanValue", "deselectAllBreadcrumbs", "deselectAllNonBreadcrumbs", "updateFacetAutoSelection", "updateQuery", "updatePage", "executeSearch", "searchAction", "config", "state", "legacyExecuteSearch", "fetchPage", "legacyFetchPage", "fetchMoreResults", "_", "legacyFetchMoreResults", "fetchFacetValues", "legacyFetchFacetValues", "fetchInstantResults", "legacyFetchInstantResults", "buildFetchMoreRequest", "eventDescription", "mappedRequest", "buildSearchRequest", "buildInstantResultSearchRequest", "q", "numberOfResults", "sharedWithFoldingRequest", "buildSearchAndFoldingLoadCollectionRequest", "mapSearchRequest", "buildFetchFacetValuesRequest", "addEntryInActionsHistory", "historyStore", "requiredNonEmptyString", "NumberValue", "maxResultsPerQuery", "processor", "AsyncSearchThunkProcessor", "logInstantResultsSearch", "modification", "updateInstantResultsQuery", "request", "fetched", "processed", "analyticsClientMiddleware", "preprocessRequest", "logger", "logFetchMoreResults", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildSearchRequest", "state", "navigatorContext", "eventDescription", "cq", "buildConstantQuery", "facets", "getFacets", "automaticFacets", "getAutomaticFacets", "sharedWithFoldingRequest", "buildSearchAndFoldingLoadCollectionRequest", "getNumberOfResultsWithinIndexLimit", "mapSearchRequest", "sortFacets", "getAllEnabledFacets", "facet", "responseToAutomaticFacetRequest", "facetRequest", "response", "field", "label", "values", "selectedValues", "value", "getAllFacets", "facetId", "getSpecificFacetRequests", "getRangeFacetRequests", "getFacetRequests", "request", "hasActiveValues", "tabExpression", "tab", "filterExpressions", "getStaticFilterExpressions", "expression", "filter", "selected", "AsyncSearchThunkProcessor", "config", "onUpdateQueryForCorrection", "modification", "updateQuery", "mappings", "request", "options", "startedAt", "response", "mapSearchResponse", "duration", "queryExecuted", "fetched", "isErrorResponse", "logQueryError", "state", "successResponse", "enableDidYouMean", "automaticallyCorrectQuery", "results", "queryCorrections", "queryCorrection", "shouldExecuteClassicDidYouMeanAutoCorrection", "shouldExecuteModernDidYouMeanAutoCorrection", "isNullOrUndefined", "ret", "snapshot", "extractHistory", "originalFetchedResponse", "originalQuery", "originalSearchSuccessResponse", "correctedQuery", "retried", "trigger", "updateIgnoreQueryTrigger", "isSuccessResponse", "correction", "actionCause", "didYouMeanAutomatic", "buildSearchRequest", "applyDidYouMeanCorrection", "modified", "applyQueryTriggerModification", "prepareForSearchWithQuery", "createAsyncThunk", "payload", "thunk", "dispatch", "validatePayload", "StringValue", "BooleanValue", "deselectAllBreadcrumbs", "deselectAllNonBreadcrumbs", "updateFacetAutoSelection", "updateQuery", "updatePage", "executeSearch", "searchAction", "config", "state", "legacyExecuteSearch", "addEntryInActionsHistory", "analyticsAction", "buildSearchReduxAction", "request", "buildSearchRequest", "processor", "AsyncSearchThunkProcessor", "fetched", "fetchPage", "legacyFetchPage", "fetchMoreResults", "_", "legacyFetchMoreResults", "makeBasicNewSearchAnalyticsAction", "buildFetchMoreRequest", "fetchFacetValues", "buildFetchFacetValuesRequest", "fetchInstantResults", "legacyFetchInstantResults", "requiredNonEmptyString", "NumberValue", "q", "maxResultsPerQuery", "searchboxAsYouType", "buildInstantResultSearchRequest", "modification", "updateInstantResultsQuery", "processed", "navigatorContext", "eventDescription", "mappedRequest", "numberOfResults", "sharedWithFoldingRequest", "buildSearchAndFoldingLoadCollectionRequest", "mapSearchRequest", "historyStore", "action", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "handleFacetSortCriterionUpdate", "state", "payload", "facetId", "criterion", "facetRequest", "handleFacetDeselectAll", "value", "handleFacetUpdateNumberOfValues", "numberOfValues", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetId", "StringValue", "field", "basePath", "ArrayValue", "delimitingCharacter", "filterByBasePath", "BooleanValue", "filterFacetCount", "injectionDepth", "NumberValue", "numberOfValues", "generateAutomaticRanges", "captions", "RecordValue", "query", "facetSearchOptionDefinitions", "facetSearch", "allowedValues", "hasBreadcrumbs", "customSort", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetValueDefinition", "requiredNonEmptyString", "NumberValue", "facetRegistrationOptionsDefinition", "facetIdDefinition", "StringValue", "RecordValue", "ArrayValue", "BooleanValue", "NumberValue", "Value", "allowedValues", "customSort", "registerFacet", "createAction", "payload", "validatePayload", "toggleSelectFacetValue", "facetValueDefinition", "toggleExcludeFacetValue", "deselectAllFacetValues", "updateFacetSortCriterion", "updateFacetNumberOfValues", "updateFacetIsFieldExpanded", "updateFreezeCurrentValues", "facetSetReducer", "createReducer", "getFacetSetInitialState", "builder", "registerFacet", "state", "action", "facetId", "getFacetSetSliceInitialState", "buildFacetRequest", "change", "_", "restoreSearchParameters", "f", "fExcluded", "id", "request", "selectedValues", "excludedValues", "activeValueCount", "idleValues", "facetValue", "buildSelectedFacetValueRequest", "buildExcludedFacetValueRequest", "restoreFacetValueToIdleState", "toggleSelectFacetValue", "selection", "facetRequest", "existingValue", "req", "insertNewValue", "isSelected", "toggleExcludeFacetValue", "isExcluded", "updateFreezeCurrentValues", "freezeCurrentValues", "deselectAllFacetValues", "handleFacetDeselectAll", "deselectAllBreadcrumbs", "slice", "deselectAllNonBreadcrumbs", "updateFacetAutoSelection", "updateFacetSortCriterion", "handleFacetSortCriterionUpdate", "updateFacetNumberOfValues", "numberOfValues", "handleFacetUpdateNumberOfValues", "updateFacetIsFieldExpanded", "isFieldExpanded", "executeSearch", "facetResponse", "mutateStateFromFacetResponse", "fetchFacetValues", "selectFacetSearchResult", "value", "rawValue", "currentValues", "matchingValue", "v", "searchResultValue", "excludeFacetSearchResult", "disableFacet", "firstIdleIndex", "indexToInsertAt", "valuesBefore", "valuesAfter", "convertFacetValueToRequest", "defaultFacetOptions", "config", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "defaultRangeFacetOptions", "registerRangeFacet", "state", "slice", "request", "facetId", "numberOfValues", "calculateNumberOfValues", "updateRangeValues", "values", "toggleSelectRangeValue", "selection", "value", "findRange", "isSelected", "toggleExcludeRangeValue", "isExcluded", "handleRangeFacetDeselectAll", "facetRequest", "handleRangeFacetSearchParameterRestoration", "rangeFacets", "rangesToSelect", "range", "found", "missingRanges", "currentValues", "onRangeFacetRequestFulfilled", "facets", "convert", "facetResponse", "id", "start", "end", "findExactRangeValue", "endInclusive", "generateAutomaticRanges", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildDateRange", "config", "start", "buildDate", "end", "endInclusive", "state", "rawDate", "options", "dateFormat", "isRelativeDate", "validateRelativeDate", "serializeRelativeDate", "isRelativeDateFormat", "validateAbsoluteDate", "formatDateForSearchApi", "parseDate", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateRangeFacetSortCriterion", "createAction", "payload", "validatePayload", "facetIdDefinition", "Value", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "numericFacetValueDefinition", "requiredNonEmptyString", "NumberValue", "BooleanValue", "dateFacetValueDefinition", "rangeFacetSelectionPayloadDefinition", "selection", "facetIdDefinition", "RecordValue", "dateRangeRequestDefinition", "requiredNonEmptyString", "BooleanValue", "dateFacetRegistrationOptionsDefinition", "facetIdDefinition", "RecordValue", "ArrayValue", "StringValue", "NumberValue", "Value", "getAbsoluteDate", "date", "isRelativeDateFormat", "formatRelativeDateForSearchApi", "validateManualDateRanges", "options", "value", "start", "end", "buildDateRange", "parseDate", "registerDateFacet", "createAction", "payload", "validatePayloadAndThrow", "error", "serializeSchemaValidationError", "toggleSelectDateFacetValue", "validatePayload", "dateFacetValueDefinition", "toggleExcludeDateFacetValue", "updateDateFacetValues", "updateDateFacetSortCriterion", "updateRangeFacetSortCriterion", "deselectAllDateFacetValues", "deselectAllFacetValues", "dateFacetSetReducer", "createReducer", "getDateFacetSetInitialState", "builder", "registerDateFacet", "state", "action", "payload", "request", "buildDateFacetRequest", "registerRangeFacet", "getDateFacetSetSliceInitialState", "change", "restoreSearchParameters", "df", "handleRangeFacetSearchParameterRestoration", "toggleSelectDateFacetValue", "facetId", "selection", "toggleSelectRangeValue", "toggleExcludeDateFacetValue", "toggleExcludeRangeValue", "updateDateFacetValues", "values", "updateRangeValues", "deselectAllDateFacetValues", "handleRangeFacetDeselectAll", "deselectAllBreadcrumbs", "updateDateFacetSortCriterion", "handleFacetSortCriterionUpdate", "executeSearch", "facets", "onRangeFacetRequestFulfilled", "convertToDateRangeRequests", "disableFacet", "config", "defaultRangeFacetOptions", "value", "numberOfResults", "rest", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "numericFacetRequestDefinition", "requiredNonEmptyString", "NumberValue", "BooleanValue", "numericFacetRegistrationOptionsDefinition", "facetIdDefinition", "RecordValue", "ArrayValue", "StringValue", "Value", "validateManualNumericRanges", "options", "start", "end", "registerNumericFacet", "createAction", "payload", "validatePayload", "error", "serializeSchemaValidationError", "toggleSelectNumericFacetValue", "numericFacetValueDefinition", "toggleExcludeNumericFacetValue", "updateNumericFacetValues", "validatePayloadAndThrow", "updateNumericFacetSortCriterion", "updateRangeFacetSortCriterion", "deselectAllNumericFacetValues", "deselectAllFacetValues", "numericFacetSetReducer", "createReducer", "getNumericFacetSetInitialState", "builder", "registerNumericFacet", "state", "action", "payload", "request", "buildNumericFacetRequest", "registerRangeFacet", "getNumericFacetSetSliceInitialState", "change", "restoreSearchParameters", "nf", "handleRangeFacetSearchParameterRestoration", "toggleSelectNumericFacetValue", "facetId", "selection", "toggleSelectRangeValue", "toggleExcludeNumericFacetValue", "toggleExcludeRangeValue", "updateNumericFacetValues", "values", "updateRangeValues", "deselectAllNumericFacetValues", "handleRangeFacetDeselectAll", "deselectAllBreadcrumbs", "updateNumericFacetSortCriterion", "handleFacetSortCriterionUpdate", "executeSearch", "facets", "onRangeFacetRequestFulfilled", "convertToNumericRangeRequests", "disableFacet", "config", "defaultRangeFacetOptions", "value", "numberOfResults", "rest", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "parametersDefinition", "RecordValue", "NumberValue", "restoreProductListingParameters", "createAction", "payload", "validatePayload", "parametersDefinition", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "fetchProductListing", "createAsyncThunk", "_action", "getState", "rejectWithValue", "apiClient", "navigatorContext", "state", "fetched", "buildCommerceAPIRequest", "isErrorResponse", "fetchMoreProducts", "moreProductsAvailableSelector", "perPage", "perPagePrincipalSelector", "nextPageToRequest", "numberOfProductsSelector", "promoteChildToParentDefinition", "RecordValue", "StringValue", "promoteChildToParent", "createAction", "payload", "validatePayload", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "clearQuerySuggest", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "fetchQuerySuggestions", "createAsyncThunk", "getState", "rejectWithValue", "apiClient", "navigatorContext", "state", "request", "buildQuerySuggestRequest", "response", "isErrorResponse", "registerQuerySuggest", "NumberValue", "selectQuerySuggestion", "requiredEmptyAllowedString", "id", "view", "restOfContext", "getCommerceApiBaseUrl", "getProductsFromCartState", "getAnalyticsSource", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "searchParametersDefinition", "StringValue", "parametersDefinition", "restoreSearchParameters", "createAction", "payload", "validatePayload", "searchParametersDefinition", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "updateCategoryFacetNumberOfValues", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "NumberValue", "toggleSelectCategoryFacetValue", "validatePayloadAndThrow", "validateCategoryFacetValue", "error", "serializeSchemaValidationError", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "toggleSelectDateFacetValue", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "RecordValue", "dateFacetValueDefinition", "toggleExcludeDateFacetValue", "updateDateFacetValues", "validatePayloadAndThrow", "ArrayValue", "validateManualDateRanges", "error", "serializeSchemaValidationError", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildCategoryFacetSearchRequest", "facetId", "state", "isFieldSuggestionsRequest", "navigatorContext", "facetQuery", "categoryFacet", "getFacetIdWithoutCommerceFieldSuggestionNamespace", "path", "isCategoryFacetRequest", "getPathToSelectedCategoryFacetItem", "ignorePaths", "query", "url", "accessToken", "organizationId", "trackingId", "language", "country", "currency", "clientId", "context", "restOfCommerceAPIRequest", "buildCommerceAPIRequest", "request", "selectedValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildFacetSearchRequest", "facetId", "state", "isFieldSuggestionsRequest", "navigatorContext", "facetQuery", "query", "url", "accessToken", "organizationId", "trackingId", "language", "country", "currency", "clientId", "context", "restOfCommerceAPIRequest", "buildCommerceAPIRequest", "getFacetIdWithoutCommerceFieldSuggestionNamespace", "getExecuteFacetSearchThunkPayloadCreator", "isFieldSuggestionsRequest", "facetId", "facetSearchType", "getState", "validatePayload", "navigatorContext", "apiClient", "state", "requiredNonEmptyString", "req", "isRegularFacetSearchState", "isRegularFieldSuggestionsState", "buildFacetSearchRequest", "buildCategoryFacetSearchRequest", "response", "executeCommerceFacetSearch", "createAsyncThunk", "executeCommerceFieldSuggest", "s", "facet", "commerceFieldSuggestionNamespace", "getFacetIdWithoutCommerceFieldSuggestionNamespace", "getFacetIdWithCommerceFieldSuggestionNamespace", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "toggleSelectLocationFacetValue", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "RecordValue", "facetValueDefinition", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "toggleSelectNumericFacetValue", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "RecordValue", "numericFacetValueDefinition", "toggleExcludeNumericFacetValue", "updateNumericFacetValues", "validatePayloadAndThrow", "ArrayValue", "validateManualNumericRanges", "error", "serializeSchemaValidationError", "updateManualNumericFacetRange", "StringValue", "NumberValue", "BooleanValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "toggleExcludeFacetValue", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "RecordValue", "facetValueDefinition", "toggleSelectFacetValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "handleCategoryFacetNestedNumberOfValuesUpdate", "state", "payload", "facetId", "numberOfValues", "selectedValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "restoreFromParameters", "state", "action", "facetId", "restoreFacets", "restoreRangeFacets", "restoreCategoryFacets", "parameterFacets", "type", "entries", "values", "restoreFacet", "value", "facetValue", "restoreFacetValue", "rangeValue", "path", "selectPath", "buildSelectedFacetValueRequest", "rawValue", "request", "initialNumberOfValues", "buildCurrentValuesFromPath", "retrieveCount", "root", "buildCategoryFacetValueRequest", "curr", "segment", "next", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCommerceFacetSetInitialState", "commerceFacetSetReducer", "createReducer", "getCommerceFacetSetInitialState", "builder", "fetchProductListing", "handleQueryFulfilled", "executeSearch", "executeCommerceFieldSuggest", "state", "action", "handleFieldSuggestionsFulfilled", "getFacetIdWithCommerceFieldSuggestionNamespace", "fetchQuerySuggestions", "facetId", "toggleSelectFacetValue", "selection", "facetRequest", "ensureRegularFacetRequest", "existingValue", "req", "insertNewValue", "updateExistingFacetValueState", "toggleSelectLocationFacetValue", "ensureLocationFacetRequest", "toggleSelectNumericFacetValue", "ensureNumericFacetRequest", "findExactRangeValue", "toggleSelectDateFacetValue", "ensureDateFacetRequest", "toggleSelectCategoryFacetValue", "retrieveCount", "request", "ensureCategoryFacetRequest", "path", "pathToSelection", "children", "ensurePathAndReturnChildren", "lastSelectedParent", "newParent", "buildCategoryFacetValueRequest", "toggleExcludeFacetValue", "toggleExcludeNumericFacetValue", "toggleExcludeDateFacetValue", "updateCategoryFacetNumberOfValues", "numberOfValues", "handleFacetUpdateNumberOfValues", "handleCategoryFacetNestedNumberOfValuesUpdate", "selectFacetSearchResult", "value", "rawValue", "v", "buildSelectedFacetValueRequest", "excludeFacetSearchResult", "selectCategoryFacetSearchResult", "selectPath", "updateNumericFacetValues", "values", "updateDateFacetValues", "convertToDateRangeRequests", "updateCoreFacetNumberOfValues", "updateCoreFacetIsFieldExpanded", "isFieldExpanded", "updateAutoSelectionForAllCoreFacets", "slice", "updateCoreFacetFreezeCurrentValues", "freezeCurrentValues", "deselectAllValuesInCoreFacet", "handleDeselectAllFacetValues", "updateManualNumericFacetRange", "clearAllCoreFacets", "setAllFacetValuesToIdle", "setContext", "clearAllFacetValues", "setView", "restoreSearchParameters", "restoreFromParameters", "restoreProductListingParameters", "existingFacets", "facets", "facetResponse", "updateStateFromFacetResponse", "segment", "parent", "existingFacetValue", "toggleAction", "facetsToRemove", "getFacetRequestValuesFromFacetResponse", "convertToNumericRangeRequests", "f", "convertCategoryFacetValueToRequest", "convertFacetValueToRequest", "convertLocationFacetValueToRequest", "responseValue", "c", "defaultNumberOfValuesIncrement", "facetValue", "firstIdleIndex", "indexToInsertAt", "valuesBefore", "valuesAfter", "facet", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getFieldSuggestionsOrderInitialState", "fieldSuggestionsOrderReducer", "createReducer", "getFieldSuggestionsOrderInitialState", "builder", "fetchQuerySuggestions", "_", "action", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getManualNumericFacetInitialState", "manualNumericFacetReducer", "createReducer", "getManualNumericFacetInitialState", "builder", "updateManualNumericFacetRange", "state", "action", "facetId", "manualRange", "toggleExcludeNumericFacetValue", "clearManualRange", "toggleSelectNumericFacetValue", "deselectAllValuesInCoreFacet", "restoreSearchParameters", "restoreParameters", "restoreProductListingParameters", "clearAllCoreFacets", "payload", "range", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "numberOfRecommendationsSelector", "createSelector", "state", "slotId", "len", "moreRecommendationsAvailableSelector", "totalEntriesRecommendationSelector", "current", "total", "isLoadingSelector", "isLoading", "isNullOrUndefined", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "recommendationsSlotDefinition", "requiredNonEmptyString", "StringValue", "recommendationsOptionsSchema", "Schema", "buildRecommendationCommerceAPIRequest", "slotId", "state", "navigatorContext", "productId", "commerceAPIRequest", "buildBaseCommerceAPIRequest", "getProductsFromCartPurchasedState", "fetchRecommendations", "createAsyncThunk", "payload", "getState", "rejectWithValue", "apiClient", "request", "fetched", "isErrorResponse", "fetchMoreRecommendations", "moreRecommendationsAvailableSelector", "perPage", "perPageRecommendationSelector", "nextPageToRequest", "numberOfRecommendationsSelector", "registerRecommendationsSlot", "createAction", "validatePayload", "recommendationsSlotDefinition", "promoteChildToParentDefinition", "RecordValue", "StringValue", "promoteChildToParent", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "applySort", "createAction", "payload", "validatePayload", "EnumValue", "SortBy", "paginationReducer", "createReducer", "getCommercePaginationInitialState", "builder", "nextPage", "state", "action", "slice", "getEffectiveSlice", "previousPage", "selectPage", "setPageSize", "fetchProductListing", "executeSearch", "fetchRecommendations", "registerRecommendationsSlotPagination", "slotId", "getCommercePaginationInitialSlice", "clearAllCoreFacets", "handlePaginationReset", "deselectAllValuesInCoreFacet", "toggleSelectFacetValue", "toggleExcludeFacetValue", "toggleSelectLocationFacetValue", "toggleSelectNumericFacetValue", "toggleExcludeNumericFacetValue", "toggleSelectDateFacetValue", "toggleExcludeDateFacetValue", "toggleSelectCategoryFacetValue", "applySort", "setContext", "setView", "restoreSearchParameters", "handleRestoreParameters", "restoreProductListingParameters", "solutionTypeId", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getProductListingInitialState", "productListingReducer", "createReducer", "getProductListingInitialState", "builder", "fetchProductListing", "state", "action", "handleError", "fetchMoreProducts", "paginationOffset", "getPaginationOffset", "handleFullfilled", "product", "index", "preprocessProduct", "handlePending", "promoteChildToParent", "products", "childToPromote", "currentParentIndex", "child", "position", "children", "totalNumberOfChildren", "newParent", "setView", "setContext", "error", "response", "requestId", "payload", "pagination", "isParentAlreadyInChildren", "restOfProduct", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "queryReducer", "createReducer", "getCommerceQueryInitialState", "builder", "updateQuery", "state", "action", "restoreSearchParameters", "selectQuerySuggestion", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getRecommendationsInitialState", "getRecommendationsSliceInitialState", "recommendationsReducer", "createReducer", "getRecommendationsInitialState", "builder", "registerRecommendationsSlot", "state", "action", "slotId", "buildRecommendationsSlice", "fetchRecommendations", "handleError", "fetchMoreRecommendations", "response", "handleFulfilled", "recommendations", "paginationOffset", "getPaginationOffset", "product", "index", "preprocessProduct", "handlePending", "promoteChildToParent", "products", "childToPromote", "currentParentIndex", "child", "position", "children", "totalNumberOfChildren", "newParent", "config", "getRecommendationsSliceInitialState", "error", "actionPayload", "pagination", "isParentAlreadyInChildren", "restOfProduct", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCommerceSearchInitialState", "commerceSearchReducer", "createReducer", "getCommerceSearchInitialState", "builder", "executeSearch", "state", "action", "handleError", "fetchMoreProducts", "paginationOffset", "getPaginationOffset", "handleFulfilled", "product", "index", "preprocessProduct", "handlePending", "promoteChildToParent", "products", "childToPromote", "currentParentIndex", "child", "position", "children", "totalNumberOfChildren", "newParent", "setView", "setContext", "error", "requestId", "response", "query", "payload", "pagination", "isParentAlreadyInChildren", "restOfProduct", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "sortReducer", "createReducer", "getCommerceSortInitialState", "builder", "applySort", "state", "action", "fetchProductListing", "handleFetchFulfilled", "executeSearch", "setContext", "setView", "restoreSearchParameters", "handleRestoreParameters", "restoreProductListingParameters", "response", "mapResponseSortToStateSort", "sort", "buildRelevanceSortCriterion", "field", "direction", "displayName", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "handleFetchItemsPending", "state", "handleFetchItemsFulfilled", "triggers", "redirectTriggers", "queryTriggers", "executeTriggers", "notifyTriggers", "trigger", "handleApplyQueryTriggerModification", "payload", "handleUpdateIgnoreQueryTrigger", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getTriggerInitialState", "commerceTriggersReducer", "createReducer", "getTriggerInitialState", "builder", "executeSearch", "handleFetchItemsPending", "state", "action", "handleFetchItemsFulfilled", "applyQueryTriggerModification", "handleApplyQueryTriggerModification", "updateIgnoreQueryTrigger", "handleUpdateIgnoreQueryTrigger", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "versionReducer", "createReducer", "VERSION", "builder", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetOrderReducer", "createReducer", "getFacetOrderInitialState", "builder", "executeSearch", "handleQueryFulfilled", "fetchProductListing", "restoreSearchParameters", "handleRestoreParameters", "restoreProductListingParameters", "change", "state", "action", "setView", "setContext", "_", "facet", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "handleFacetSearchRegistration", "state", "payload", "buildEmptyResponse", "facetId", "isLoading", "options", "defaultFacetSearchOptions", "response", "handleFacetSearchUpdate", "rest", "search", "handleFacetSearchPending", "requestId", "handleFacetSearchRejected", "handleFacetSearchFulfilled", "handleCommerceFacetSearchFulfilled", "handleCommerceFacetFieldSuggestionsFulfilled", "namespacedFacetId", "getFacetIdWithCommerceFieldSuggestionNamespace", "handleCommerceFetchQuerySuggestionsFulfilledForRegularFacet", "fieldSuggestionFacet", "handleCommerceFetchQuerySuggestionsFulfilledForCategoryFacet", "handleFacetSearchClear", "handleFacetSearchSetClear", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildCategoryFacetSearchRequest", "id", "state", "navigatorContext", "isFieldSuggestionsRequest", "options", "categoryFacet", "captions", "query", "numberOfValues", "field", "delimitingCharacter", "basePath", "filterFacetCount", "path", "getPathToSelectedCategoryFacetItem", "ignorePaths", "newQuery", "getSearchApiBaseUrl", "buildSearchRequest", "selectedValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildSpecificFacetSearchRequest", "id", "state", "navigatorContext", "isFieldSuggestionsRequest", "captions", "query", "numberOfValues", "field", "currentValues", "filterFacetCount", "ignoreValues", "v", "facetValue", "newQuery", "getSearchApiBaseUrl", "buildSearchRequest", "getExecuteFacetSearchThunkPayloadCreator", "isFieldSuggestionsRequest", "facetId", "getState", "apiClient", "validatePayload", "navigatorContext", "state", "req", "requiredNonEmptyString", "isSpecificFacetSearchState", "buildSpecificFacetSearchRequest", "buildCategoryFacetSearchRequest", "response", "executeFacetSearch", "createAsyncThunk", "executeFieldSuggest", "clearFacetSearch", "createAction", "payload", "facetIdDefinition", "s", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCategoryFacetSearchSetInitialState", "categoryFacetSearchSetReducer", "createReducer", "getCategoryFacetSearchSetInitialState", "builder", "registerCategoryFacetSearch", "state", "action", "payload", "handleFacetSearchRegistration", "buildEmptyResponse", "updateFacetSearch", "handleFacetSearchUpdate", "executeCommerceFacetSearch", "facetId", "handleFacetSearchPending", "executeCommerceFieldSuggest", "executeFacetSearch", "handleFacetSearchRejected", "getFacetIdWithCommerceFieldSuggestionNamespace", "handleCommerceFacetSearchFulfilled", "handleCommerceFacetFieldSuggestionsFulfilled", "fetchQuerySuggestions", "handleCommerceFetchQuerySuggestionsFulfilledForCategoryFacet", "handleFacetSearchFulfilled", "clearFacetSearch", "handleFacetSearchClear", "fetchProductListing", "handleFacetSearchSetClear", "executeSearch", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getFacetSearchSetInitialState", "specificFacetSearchSetReducer", "createReducer", "getFacetSearchSetInitialState", "builder", "registerFacetSearch", "state", "action", "payload", "handleFacetSearchRegistration", "buildEmptyResponse", "updateFacetSearch", "handleFacetSearchUpdate", "executeCommerceFacetSearch", "facetId", "handleFacetSearchPending", "executeCommerceFieldSuggest", "getFacetIdWithCommerceFieldSuggestionNamespace", "executeFacetSearch", "handleFacetSearchRejected", "handleCommerceFacetSearchFulfilled", "handleCommerceFacetFieldSuggestionsFulfilled", "fetchQuerySuggestions", "handleCommerceFetchQuerySuggestionsFulfilledForRegularFacet", "handleFacetSearchFulfilled", "clearFacetSearch", "handleFacetSearchClear", "executeSearch", "handleFacetSearchSetClear", "fetchProductListing", "setView", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getBytes", "stream", "onChunk", "reader", "result", "getLines", "onLine", "buffer", "position", "fieldLength", "discardTrailingNewline", "arr", "concat", "bufLength", "lineStart", "lineEnd", "getMessages", "onId", "onRetry", "onMessage", "message", "newMessage", "decoder", "line", "field", "valueOffset", "value", "retry", "a", "b", "res", "EventStreamContentType", "DefaultRetryInterval", "LastEventId", "isBrowser", "fetchEventSource", "input", "_a", "inputSignal", "inputHeaders", "inputOnOpen", "onmessage", "onclose", "onerror", "openWhenHidden", "inputFetch", "rest", "__rest", "resolve", "reject", "headers", "curRequestController", "onVisibilityChange", "create", "retryInterval", "retryTimer", "dispose", "onopen", "defaultOnOpen", "response", "fetch", "getBytes", "getLines", "getMessages", "id", "retry", "interval", "err", "innerErr", "contentType", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "selectQuery", "createSelector", "state", "query", "citationSourceSelector", "createSelector", "state", "_state", "citationId", "citations", "citation", "selectAnswerTriggerParams", "selectQuery", "q", "requestId", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "selectPipeline", "createSelector", "state", "pipeline", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "selectSearchHub", "createSelector", "state", "searchHub", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getRequestStatusFlags", "status", "isPlainObject", "copyWithStructuralSharing", "oldObj", "newObj", "newKeys", "oldKeys", "isSameObject", "mergeObj", "key", "countObjectKeys", "obj", "count", "_key", "flatten", "arr", "isAbsoluteUrl", "url", "isDocumentVisible", "isNotNullish", "v", "isOnline", "withoutTrailingSlash", "withoutLeadingSlash", "joinUrls", "base", "delimiter", "defaultFetchFn", "args", "abortableFetch", "defaultValidateStatus", "response", "defaultIsJsonContentType", "headers", "stripUndefined", "copy", "k", "fetchBaseQuery", "baseUrl", "prepareHeaders", "x", "fetchFn", "paramsSerializer", "isJsonContentType", "jsonContentType", "jsonReplacer", "defaultTimeout", "globalResponseHandler", "globalValidateStatus", "baseFetchOptions", "arg", "api", "signal", "getState", "extra", "endpoint", "forced", "type", "meta", "params", "responseHandler", "validateStatus", "timeout", "rest", "config", "isJsonifiable", "body", "divider", "query", "request", "timedOut", "timeoutId", "e", "responseClone", "resultData", "responseText", "handleResponseError", "handleResponse", "r", "text", "HandledError", "value", "defaultBackoff", "attempt", "maxRetries", "attempts", "resolve", "res", "fail", "EMPTY_OPTIONS", "retryWithBackoff", "baseQuery", "defaultOptions", "extraOptions", "possibleMaxRetries", "options", "_", "__", "retry", "result", "onFocus", "createAction", "onFocusLost", "onOnline", "onOffline", "isQueryDefinition", "isMutationDefinition", "calculateProvidedBy", "description", "result", "error", "queryArg", "meta", "assertTagTypes", "isFunction", "expandTagDescription", "t", "asSafePromise", "promise", "fallback", "forceQueryFnSymbol", "isUpsertQuery", "arg", "buildInitiate", "serializeQueryArgs", "queryThunk", "mutationThunk", "api", "context", "runningQueries", "runningMutations", "unsubscribeQueryResult", "removeMutationResult", "updateSubscriptionOptions", "buildInitiateQuery", "buildInitiateMutation", "getRunningQueryThunk", "getRunningMutationThunk", "getRunningQueriesThunk", "getRunningMutationsThunk", "endpointName", "queryArgs", "dispatch", "endpointDefinition", "queryCacheKey", "_endpointName", "fixedCacheKeyOrRequestId", "isNotNullish", "middlewareWarning", "queryAction", "subscribe", "forceRefetch", "subscriptionOptions", "forceQueryFn", "rest", "getState", "thunk", "selector", "thunkResult", "stateAfter", "requestId", "abort", "skippedSynchronously", "runningQuery", "selectFromState", "statePromise", "options", "running", "countObjectKeys", "track", "fixedCacheKey", "unwrap", "returnValuePromise", "data", "reset", "ret", "defaultTransformResponse", "baseQueryReturnValue", "buildThunks", "reducerPath", "baseQuery", "endpointDefinitions", "assertTagType", "patchQueryData", "args", "patches", "updateProvided", "newValue", "providedTags", "updateQueryData", "updateRecipe", "currentState", "isDraftable", "value", "inversePatches", "produceWithPatches", "upsertQueryData", "executeEndpoint", "signal", "rejectWithValue", "fulfillWithValue", "extra", "transformResponse", "baseQueryApi", "isForcedQuery", "HandledError", "SHOULD_AUTOBATCH", "catchedError", "transformErrorResponse", "e", "state", "requestState", "baseFetchOnMountOrArgChange", "fulfilledVal", "refetchVal", "createAsyncThunk", "queryThunkArgs", "currentArg", "previousArg", "hasTheForce", "hasMaxAge", "prefetch", "force", "maxAge", "latestStateValue", "lastFulfilledTs", "matchesEndpoint", "action", "buildMatchThunkActions", "isAllOf", "isPending", "isFulfilled", "isRejected", "calculateProvidedByThunk", "type", "isRejectedWithValue", "updateQuerySubstateIfExists", "update", "substate", "getMutationCacheKey", "id", "updateMutationSubstateIfExists", "initialState", "buildSlice", "definitions", "apiUid", "extractRehydrationInfo", "hasRehydrationInfo", "config", "resetApiState", "createAction", "querySlice", "createSlice", "draft", "prepareAutoBatched", "applyPatches", "builder", "upserting", "_a", "payload", "merge", "fulfilledTimeStamp", "baseQueryMeta", "newData", "produce", "draftSubstateData", "copyWithStructuralSharing", "isDraft", "original", "condition", "queries", "key", "entry", "mutationSlice", "cacheKey", "startedTimeStamp", "mutations", "invalidationSlice", "tagTypeSubscriptions", "idSubscriptions", "foundAt", "subscribedQueries", "_b", "provided", "incomingTags", "cacheKeys", "isAnyOf", "subscriptionSlice", "d", "a", "internalSubscriptionsSlice", "configSlice", "isOnline", "isDocumentVisible", "onOnline", "onOffline", "onFocus", "onFocusLost", "combinedReducer", "combineReducers", "reducer", "actions", "skipToken", "initialSubState", "defaultQuerySubState", "defaultMutationSubState", "buildSelectors", "createSelector", "selectSkippedQuery", "selectSkippedMutation", "buildQuerySelector", "buildMutationSelector", "selectInvalidatedBy", "selectCachedArgsForQuery", "withRequestFlags", "getRequestStatusFlags", "selectInternalState", "rootState", "serializedArgs", "mutationId", "tags", "apiState", "toInvalidate", "tag", "invalidateSubscriptions", "flatten", "invalidate", "querySubState", "queryName", "cache", "defaultSerializeQueryArgs", "serialized", "cached", "stringified", "isPlainObject", "acc", "buildCreateApi", "modules", "weakMapMemoize", "optionsWithDefaults", "queryArgsApi", "finalSerializeQueryArgs", "endpointSQA", "initialResult", "fn", "nanoid", "injectEndpoints", "addTagTypes", "endpoints", "eT", "partialDefinition", "initializedModules", "m", "inject", "evaluatedEndpoints", "x", "definition", "_formatProdErrorMessage", "safeAssign", "target", "args", "buildBatchedActionsHandler", "api", "queryThunk", "internalState", "subscriptionsPrefix", "previousSubscriptions", "updateSyncTimer", "updateSubscriptionOptions", "unsubscribeQueryResult", "actuallyMutateSubscriptions", "mutableState", "action", "queryCacheKey", "requestId", "options", "arg", "substate", "_a", "mutated", "state", "key", "condition", "_b", "getSubscriptions", "subscriptionSelectors", "subscriptionsForQueryArg", "countObjectKeys", "mwApi", "didMutate", "actionShouldContinue", "newSubscriptions", "patches", "produceWithPatches", "isSubscriptionSliceAction", "isAdditionalSubscriptionAction", "isObjectEmpty", "obj", "k", "THIRTY_TWO_BIT_MAX_TIMER_SECONDS", "buildCacheCollectionHandler", "reducerPath", "context", "removeQueryResult", "canTriggerUnsubscribe", "isAnyOf", "anySubscriptionsRemainingForKey", "subscriptions", "currentRemovalTimeouts", "handler", "handleUnsubscribe", "timeout", "queries", "queryState", "endpointName", "config", "keepUnusedDataFor", "finalKeepUnusedDataFor", "currentTimeout", "neverResolvedError", "buildCacheLifecycleHandler", "mutationThunk", "isQueryThunk", "isAsyncThunkAction", "isMutationThunk", "isFulfilledThunk", "isFulfilled", "lifecycleMap", "stateBefore", "cacheKey", "getCacheKey", "oldState", "handleNewKey", "lifecycle", "getMutationCacheKey", "originalArgs", "endpointDefinition", "onCacheEntryAdded", "cacheEntryRemoved", "resolve", "cacheDataLoaded", "selector", "extra", "_", "__", "lifecycleApi", "updateRecipe", "runningHandler", "e", "buildDevCheckHandler", "apiUid", "buildInvalidationByTagsHandler", "endpointDefinitions", "assertTagType", "refetchQuery", "isThunkActionWithTags", "isRejectedWithValue", "isQueryEnd", "isRejected", "pendingTagInvalidations", "invalidateTags", "calculateProvidedByThunk", "calculateProvidedBy", "hasPendingRequests", "newTags", "rootState", "tags", "toInvalidate", "valuesArray", "querySubState", "subscriptionSubState", "buildPollingHandler", "currentPolls", "updatePollingInterval", "startNextPoll", "clearPolls", "lowestPollingInterval", "skipPollingIfUnfocused", "findLowestPollingInterval", "currentPoll", "nextPollTimestamp", "cleanupPollForKey", "existingPoll", "subscribers", "buildQueryLifecycleHandler", "isPendingThunk", "isPending", "isRejectedThunk", "isFullfilledThunk", "onQueryStarted", "queryFulfilled", "reject", "baseQueryMeta", "rejectedWithValue", "buildWindowEventHandler", "onFocus", "refetchValidQueries", "onOnline", "type", "sub", "buildMiddleware", "input", "actions", "createAction", "isThisApiSliceAction", "handlerBuilders", "initialized", "builderArgs", "handlers", "build", "batchedActionsHandler", "windowEventsHandler", "next", "isAction", "mwApiWithNext", "internalProbeResult", "res", "override", "coreModuleName", "coreModule", "createSelector", "baseQuery", "tagTypes", "serializeQueryArgs", "refetchOnMountOrArgChange", "refetchOnFocus", "refetchOnReconnect", "invalidationBehavior", "enablePatches", "tag", "onOffline", "onFocusLost", "patchQueryData", "updateQueryData", "upsertQueryData", "prefetch", "buildMatchThunkActions", "buildThunks", "reducer", "sliceActions", "buildSlice", "middleware", "middlewareActions", "buildQuerySelector", "buildMutationSelector", "selectInvalidatedBy", "selectCachedArgsForQuery", "buildSelectors", "buildInitiateQuery", "buildInitiateMutation", "getRunningMutationThunk", "getRunningMutationsThunk", "getRunningQueriesThunk", "getRunningQueryThunk", "buildInitiate", "definition", "anyApi", "isQueryDefinition", "isMutationDefinition", "createApi", "buildCreateApi", "dynamicBaseQuery", "args", "api", "extraOptions", "state", "accessToken", "environment", "organizationId", "answerConfigurationId", "updatedArgs", "platformEndpoint", "getOrganizationEndpoint", "fetchBaseQuery", "error", "answerSlice", "createApi", "retry", "handleHeaderMessage", "draft", "payload", "contentFormat", "handleMessage", "handleCitations", "handleEndOfStream", "handleError", "message", "updateCacheWithEvent", "event", "parsedPayload", "answerApi", "answerSlice", "builder", "args", "getState", "cacheDataLoaded", "updateCachedData", "configuration", "generatedAnswer", "insightConfiguration", "organizationId", "environment", "accessToken", "platformEndpoint", "getOrganizationEndpoint", "insightGenerateEndpoint", "generateEndpoint", "fetchEventSource", "abortableFetch", "res", "answerId", "error", "selectAnswerTriggerParams", "createSelector", "state", "selectQuery", "q", "requestId", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "isBrowser", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "isAnalyticsAction", "action", "analytics", "isActionWithType", "isNullOrUndefined", "analyticsMiddleware", "api", "next", "ret", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "import_pendragon", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "registerTab", "createAction", "payload", "schema", "RecordValue", "requiredNonEmptyString", "requiredEmptyAllowedString", "validatePayload", "updateActiveTab", "id", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "import_dayjs", "import_timezone", "import_utc", "dayjs", "utc", "timezone", "getConfigurationInitialState", "configurationReducer", "createReducer", "getConfigurationInitialState", "builder", "updateBasicConfiguration", "state", "action", "handleUpdateBasicConfiguration", "updateSearchConfiguration", "handleUpdateSearchConfiguration", "updateAnalyticsConfiguration", "handleUpdateAnalyticsConfiguration", "disableAnalytics", "enableAnalytics", "setOriginLevel2", "setOriginLevel3", "updateActiveTab", "restoreSearchParameters", "payload", "isNullOrUndefined", "magicCookie", "getMagicCookie", "configuration", "configurationReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "isInstantlyCallableThunkAction", "action", "instantlyCallableThunkActionMiddleware", "next", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "logActionErrorMiddleware", "logger", "next", "action", "unknownAction", "error", "logActionMiddleware", "api", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "defaultBrowserNavigatorContextProvider", "clientId", "defaultNodeJSNavigatorContextProvider", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "createReducerManager", "initialReducers", "preloadedState", "reducers", "crossReducer", "rootReducer", "combined", "state", "action", "intermediate", "placeholderReducers", "fromEntries", "key", "value", "combineReducers", "newReducers", "reducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "debounce", "func", "waitMilliseconds", "options", "timeoutId", "isImmediate", "callback", "maxWait", "lastInvokeTime", "Date", "now", "promises", "nextInvokeTimeout", "timeSinceLastInvocation", "debouncedFunction", "args", "context", "this", "Promise", "resolve", "reject", "shouldCallNow", "clearTimeout", "setTimeout", "result", "apply", "forEach", "r", "push", "cancel", "reason", "e", "createRenewAccessTokenMiddleware", "logger", "renewToken", "accessTokenRenewalsAttempts", "resetRenewalTriesAfterDelay", "r", "store", "next", "action", "payload", "isExpiredTokenError", "accessToken", "attempt", "updateBasicConfiguration", "ExpiredTokenError", "fn", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "configureStore", "reducer", "preloadedState", "middlewares", "thunkExtraArguments", "name", "state", "getDefaultMiddleware", "logActionMiddleware", "buildCoreEngine", "options", "thunkExtraArguments", "configurationReducer", "reducers", "reducerManager", "createReducerManager", "logger", "getClientId", "clientId", "getRelayInstanceFromState", "engine", "e", "thunkExtraArgumentsWithRelay", "isBrowser", "defaultBrowserNavigatorContextProvider", "defaultNodeJSNavigatorContextProvider", "store", "createStore", "enableAnalytics", "disableAnalytics", "preloadedState", "configuration", "name", "middlewares", "createMiddleware", "configureStore", "renewAccessToken", "renewTokenMiddleware", "createRenewAccessTokenMiddleware", "instantlyCallableThunkActionMiddleware", "logActionErrorMiddleware", "analyticsMiddleware", "answerApi", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "import_pino", "buildLogger", "options", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildThunkExtraArguments", "configuration", "logger", "analyticsClientMiddleware", "getAnalyticsClientMiddleware", "validatePayload", "validatePayloadAndThrow", "preprocessRequest", "getPreprocessRequest", "analytics", "NoopAnalyticsMiddleware", "_", "p", "NoopPreprocessRequest", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "engineConfigurationDefinitions", "requiredNonEmptyString", "StringValue", "RecordValue", "BooleanValue", "commerceEngineConfigurationSchema", "Schema", "engineConfigurationDefinitions", "RecordValue", "BooleanValue", "StringValue", "nonEmptyString", "requiredNonEmptyString", "contextDefinition", "cartDefinition", "getSampleCommerceEngineConfiguration", "commerceEngineReducers", "productListingReducer", "recommendationsReducer", "commerceSearchReducer", "paginationReducer", "sortReducer", "facetOrderReducer", "fieldSuggestionsOrderReducer", "specificFacetSearchSetReducer", "categoryFacetSearchSetReducer", "commerceFacetSetReducer", "manualNumericFacetReducer", "contextReducer", "queryReducer", "cartReducer", "didYouMeanReducer", "commerceTriggersReducer", "buildCommerceEngine", "options", "logger", "buildLogger", "configuration", "validateConfiguration", "commerceClient", "createCommerceAPIClient", "thunkArguments", "buildThunkExtraArguments", "reducers", "configurationReducer", "versionReducer", "augmentedOptions", "internalEngine", "buildCoreEngine", "_", "engine", "accessToken", "environment", "organizationId", "analytics", "proxyBaseUrl", "context", "cart", "updateBasicConfiguration", "updateAnalyticsConfiguration", "updateProxyBaseUrl", "setContext", "setItems", "redactEngine", "stateKey", "commerceEngineConfigurationSchema", "error", "CommerceAPIClient", "NoopPreprocessRequest", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadContextActions", "engine", "contextReducer", "setContext", "setView", "setLocation", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadSearchActions", "engine", "commerceSearchReducer", "executeSearch", "fetchMoreProducts", "prepareForSearchWithQuery", "promoteChildToParent", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadProductListingActions", "engine", "productListingReducer", "fetchProductListing", "fetchMoreProducts", "promoteChildToParent", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadRecommendationsActions", "engine", "recommendationsReducer", "fetchRecommendations", "fetchMoreRecommendations", "promoteChildToParent", "registerRecommendationsSlot", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadPaginationActions", "engine", "paginationReducer", "registerRecommendationsSlotPagination", "setPageSize", "selectPage", "nextPage", "previousPage", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "productView", "createAsyncThunk", "payload", "extra", "getState", "relay", "relayPayload", "getCurrency", "productClick", "loadProductActions", "productClick", "productView", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadCartActions", "engine", "cartReducer", "emitPurchaseEvent", "emitCartActionEvent", "purchase", "setItems", "updateItemQuantity", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadSortActions", "engine", "sortReducer", "applySort", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadCoreFacetActions", "engine", "commerceFacetSetReducer", "clearAllCoreFacets", "deselectAllValuesInCoreFacet", "updateAutoSelectionForAllCoreFacets", "updateCoreFacetFreezeCurrentValues", "updateCoreFacetIsFieldExpanded", "updateCoreFacetNumberOfValues", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadCategoryFacetSetActions", "engine", "commerceFacetSetReducer", "toggleSelectCategoryFacetValue", "updateCategoryFacetNumberOfValues", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadRegularFacetActions", "engine", "commerceFacetSetReducer", "toggleExcludeFacetValue", "toggleSelectFacetValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadLocationFacetActions", "engine", "commerceFacetSetReducer", "toggleSelectLocationFacetValue", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadDateFacetActions", "engine", "commerceFacetSetReducer", "toggleSelectDateFacetValue", "toggleExcludeDateFacetValue", "updateDateFacetValues", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadNumericFacetActions", "engine", "commerceFacetSetReducer", "toggleSelectNumericFacetValue", "toggleExcludeNumericFacetValue", "updateNumericFacetValues", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "querySetDefinition", "requiredNonEmptyString", "requiredEmptyAllowedString", "registerQuerySetQuery", "createAction", "payload", "validatePayload", "updateQuerySetQuery", "registerQuerySetQuery", "createAction", "payload", "validatePayload", "querySetDefinition", "updateQuerySetQuery", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "idDefinition", "requiredNonEmptyString", "registerQuerySuggest", "createAction", "payload", "validatePayload", "NumberValue", "unregisterQuerySuggest", "selectQuerySuggestion", "requiredEmptyAllowedString", "clearQuerySuggest", "fetchQuerySuggestions", "createAsyncThunk", "getState", "rejectWithValue", "apiClient", "navigatorContext", "id", "request", "buildQuerySuggestRequest", "response", "isErrorResponse", "s", "getSearchApiBaseUrl", "historyStore", "fromAnalyticsStateToAnalyticsParams", "querySetReducer", "createReducer", "getQuerySetInitialState", "builder", "registerQuerySetQuery", "state", "action", "registerQuery", "updateQuerySetQuery", "id", "query", "updateQuery", "selectQuerySuggestion", "expression", "executeSearch", "queryExecuted", "updateAllQuerySetQuery", "restoreSearchParameters", "handleRestoreSearchParameters", "change", "isNullOrUndefined", "actionPayload", "loadQuerySetActions", "engine", "querySetReducer", "registerQuerySetQuery", "updateQuerySetQuery", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getQuerySuggestSetInitialState", "querySuggestReducer", "createReducer", "getQuerySuggestSetInitialState", "builder", "registerQuerySuggest", "state", "action", "handleRegisterQuerySuggest", "unregisterQuerySuggest", "fetchQuerySuggestions", "handleFetchPending", "querySuggest", "q", "handleFetchRejected", "query", "completion", "clearQuerySuggest", "handleClearQuerySuggest", "payload", "id", "buildQuerySuggest", "config", "loadQuerySuggestActions", "engine", "querySuggestReducer", "clearQuerySuggest", "fetchQuerySuggestions", "registerQuerySuggest", "selectQuerySuggestion", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadConfigurationActions", "engine", "configurationReducer", "disableAnalytics", "enableAnalytics", "updateAnalyticsConfiguration", "updateBasicConfiguration", "updateProxyBaseUrl", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadQueryActions", "engine", "queryReducer", "updateQuery", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadSearchParametersActions", "engine", "facetOrderReducer", "commerceFacetSetReducer", "paginationReducer", "queryReducer", "querySetReducer", "sortReducer", "restoreSearchParameters", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadProductListingParametersActions", "engine", "facetOrderReducer", "commerceFacetSetReducer", "paginationReducer", "sortReducer", "restoreProductListingParameters", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "loadTriggersActions", "engine", "commerceTriggersReducer", "updateIgnoreQueryTrigger", "applyQueryTriggerModification", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "instantProductsIdDefinition", "requiredNonEmptyString", "instantProductsQueryDefinition", "requiredEmptyAllowedString", "clearExpiredProducts", "createAction", "payload", "validatePayload", "promoteChildToParentDefinition", "RecordValue", "StringValue", "promoteChildToParent", "registerInstantProducts", "updateInstantProductsQuery", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "hasExpired", "cached", "registerInstantItem", "payload", "state", "id", "updateInstantItemQuery", "q", "clearExpiredItems", "cached", "hasExpired", "fetchItemsPending", "toSetEmptyIfNotFound", "query", "getCached", "makeEmptyCache", "fetchItemsFulfilled", "toAddToCache", "searchUid", "cacheTimeout", "totalCountFiltered", "duration", "fetchItemsRejected", "error", "setToEmpty", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getInstantProductsInitialState", "instantProductsReducer", "createReducer", "getInstantProductsInitialState", "builder", "registerInstantProducts", "state", "action", "registerInstantItem", "updateInstantProductsQuery", "updateInstantItemQuery", "clearExpiredProducts", "clearExpiredItems", "fetchInstantProducts", "fetchItemsPending", "products", "responseId", "totalEntries", "fetchItemsFulfilled", "product", "index", "preprocessProduct", "fetchItemsRejected", "promoteChildToParent", "cache", "childToPromote", "currentParentIndex", "child", "position", "children", "totalNumberOfChildren", "newParent", "newProducts", "isParentAlreadyInChildren", "restOfProduct", "loadInstantProductsActions", "engine", "instantProductsReducer", "clearExpiredProducts", "promoteChildToParent", "registerInstantProducts", "updateInstantProductsQuery", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "registerRecentQueriesPayloadDefinition", "ArrayValue", "StringValue", "NumberValue", "registerRecentQueries", "createAction", "payload", "validatePayload", "clearRecentQueries", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getRecentQueriesInitialState", "recentQueriesReducer", "createReducer", "getRecentQueriesInitialState", "builder", "registerRecentQueries", "handleRegisterQueries", "clearRecentQueries", "handleClearRecentQueries", "executeSearch", "state", "action", "query", "results", "handleExecuteSearchFulfilled", "q", "remaining", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "clearRecentQueries", "createAction", "registerRecentQueries", "payload", "validatePayload", "registerRecentQueriesPayloadDefinition", "recentQueriesReducer", "createReducer", "getRecentQueriesInitialState", "builder", "registerRecentQueries", "handleRegisterQueries", "clearRecentQueries", "handleClearRecentQueries", "executeSearch", "state", "action", "query", "products", "handleExecuteSearchFulfilled", "loadRecentQueriesActions", "engine", "recentQueriesReducer", "registerRecentQueries", "clearRecentQueries", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "isRedirectTrigger", "trigger", "ExecutionPlan", "response", "redirects", "isRedirectTrigger", "registerStandaloneSearchBox", "createAction", "payload", "validatePayload", "requiredNonEmptyString", "BooleanValue", "updateStandaloneSearchBoxRedirectionUrl", "resetStandaloneSearchBox", "updateAnalyticsToSearchFromLink", "updateAnalyticsToOmniboxFromLink", "fetchRedirectUrl", "createAsyncThunk", "dispatch", "getState", "rejectWithValue", "apiClient", "navigatorContext", "StringValue", "request", "buildPlanRequest", "response", "isErrorResponse", "redirectionUrl", "ExecutionPlan", "logRedirect", "url", "makeAnalyticsAction", "client", "state", "getSearchApiBaseUrl", "fromAnalyticsStateToAnalyticsParams", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getStandaloneSearchBoxSetInitialState", "standaloneSearchBoxSetReducer", "createReducer", "getStandaloneSearchBoxSetInitialState", "builder", "registerStandaloneSearchBox", "state", "action", "id", "redirectionUrl", "overwrite", "buildStandaloneSearchBoxEntry", "resetStandaloneSearchBox", "searchBox", "updateStandaloneSearchBoxRedirectionUrl", "fetchRedirectUrl", "url", "updateAnalyticsToSearchFromLink", "updateAnalyticsToOmniboxFromLink", "defaultRedirectionUrl", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "fetchRedirectUrl", "createAsyncThunk", "payload", "getState", "rejectWithValue", "apiClient", "navigatorContext", "validatePayload", "StringValue", "state", "request", "buildPlanRequest", "response", "isErrorResponse", "redirectTriggers", "isRedirectTrigger", "registerStandaloneSearchBox", "createAction", "requiredNonEmptyString", "BooleanValue", "updateStandaloneSearchBoxRedirectionUrl", "resetStandaloneSearchBox", "buildBaseCommerceAPIRequest", "loadStandaloneSearchBoxSetActions", "engine", "standaloneSearchBoxSetReducer", "fetchRedirectUrl", "registerStandaloneSearchBox", "updateStandaloneSearchBoxRedirectionUrl", "resetStandaloneSearchBox", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildContext", "engine", "props", "loadBaseContextReducers", "loadReducerError", "controller", "buildController", "dispatch", "getState", "stateKey", "validateOptions", "contextSchema", "setContext", "language", "country", "currency", "view", "setView", "location", "setLocation", "contextReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "isFacetIncludedOnTab", "facetTabs", "activeTab", "facetOptionsReducer", "createReducer", "getFacetOptionsInitialState", "builder", "updateFacetOptions", "state", "action", "executeSearch", "updateActiveTab", "facetId", "facet", "isFacetIncludedOnTab", "change", "registerCategoryFacet", "tabs", "activeTab", "handleRegisterFacetTabs", "registerFacet", "registerDateFacet", "registerNumericFacet", "enableFacet", "disableFacet", "restoreSearchParameters", "getFacetOptionsSliceInitialState", "newFacetState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "executeToggleRangeFacetSelect", "createAction", "payload", "validatePayload", "rangeFacetSelectionPayloadDefinition", "executeToggleRangeFacetExclude", "definition", "facetIdDefinition", "RecordValue", "dateFacetValueDefinition", "executeToggleDateFacetSelect", "createAsyncThunk", "payload", "dispatch", "validatePayload", "toggleSelectDateFacetValue", "executeToggleRangeFacetSelect", "updateFacetOptions", "executeToggleDateFacetExclude", "toggleExcludeDateFacetValue", "executeToggleRangeFacetExclude", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "handleRejectedSearch", "state", "action", "error", "getSearchInitialState", "emptyQuestionAnswer", "handleFulfilledSearch", "handleFulfilledNewSearch", "result", "handlePendingSearch", "searchReducer", "createReducer", "builder", "executeSearch", "fetchMoreResults", "fetchPage", "fetchFacetValues", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "selectActiveTab", "createSelector", "state", "tabSetState", "tabId", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetValueStates", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "rangeFacetSortCriteria", "rangeFacetRangeAlgorithm", "dateRangeRequestDefinition", "StringValue", "BooleanValue", "facetValueStates", "dateFacetOptionsSchema", "Schema", "facetId", "field", "RecordValue", "ArrayValue", "generateAutomaticRanges", "filterFacetCount", "injectionDepth", "numberOfValues", "rangeFacetSortCriteria", "rangeFacetRangeAlgorithm", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "definition", "facetIdDefinition", "RecordValue", "numericFacetValueDefinition", "executeToggleNumericFacetSelect", "createAsyncThunk", "payload", "dispatch", "validatePayload", "toggleSelectNumericFacetValue", "executeToggleRangeFacetSelect", "updateFacetOptions", "executeToggleNumericFacetExclude", "toggleExcludeNumericFacetValue", "executeToggleRangeFacetExclude", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetResultsMustMatch", "numericRangeRequestDefinition", "NumberValue", "BooleanValue", "StringValue", "facetValueStates", "numericFacetOptionsSchema", "Schema", "facetId", "RecordValue", "ArrayValue", "field", "generateAutomaticRanges", "filterFacetCount", "injectionDepth", "numberOfValues", "rangeFacetSortCriteria", "facetResultsMustMatch", "rangeFacetRangeAlgorithm", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildNumericRange", "config", "rangeDelimiterExclusive", "rangeDelimiterInclusive", "facetSearchParamRegex", "supportedFacetParameters", "delimiter", "equal", "keyHasObjectValue", "key", "supportedFacetParameters", "isRangeFacetKey", "key", "isRangeFacet", "keyHasObjectValue", "serialize", "pairSerializer", "obj", "str", "delimiter", "serializeSpecialCharacters", "key", "val", "equal", "isFacetObject", "obj", "isObject", "allEntriesAreValid", "v", "isRangeFacetObject", "isValidValue", "entry", "values", "serializeFacets", "facets", "facetId", "value", "delimiter", "serializeRangeFacets", "ranges", "start", "end", "endInclusive", "rangeDelimiterInclusive", "rangeDelimiterExclusive", "splitOnFirstEqual", "str", "first", "rest", "equal", "second", "preprocessObjectPairs", "pair", "regex", "facetSearchParamRegex", "key", "val", "result", "paramKey", "id", "values", "processedValues", "processObjectValues", "obj", "buildNumericRanges", "buildDateRanges", "ranges", "startAsString", "endAsString", "isEndInclusive", "splitRangeValueAsStringByDelimiter", "start", "end", "endInclusive", "buildNumericRange", "isValidDateRangeValue", "date", "isSearchApiDate", "validateAbsoluteDate", "API_DATE_FORMAT", "isRelativeDateFormat", "validateRelativeDate", "buildDateRange", "castUnknownObject", "value", "jsonParsed", "ret", "entry", "id", "values", "v", "isString", "splitRangeValueAsStringByDelimiter", "str", "isEndInclusive", "rangeDelimiterInclusive", "startAsString", "endAsString", "rangeDelimiterExclusive", "sortFieldAndDirectionSeparator", "sortFieldsJoiner", "commerceFacetsRegex", "searchSerializer", "serialize", "deserialize", "productListingSerializer", "supportedFacetParameters", "parameters", "serializePair", "pair", "key", "val", "isValidKey", "isSortCriteriaObject", "serializeSortCriteria", "keyHasObjectValue", "isRangeFacetKey", "isFacetObject", "serializeFacets", "isRangeFacetObject", "serializeRangeFacets", "serializeSpecialCharacters", "buildCriterionExpression", "criterion", "field", "isValidBasicKey", "obj", "isObject", "isArray", "fragment", "delimiter", "splitOnFirstEqual", "parts", "preprocessObjectPairs", "isValidPair", "cast", "acc", "mergedValues", "sortCriteria", "deserializeSortCriteria", "validKey", "lengthOfTwo", "value", "castUnknownObject", "buildRelevanceSortCriterion", "criteria", "joinedFieldAndDirection", "fieldAndDirection", "direction", "buildFieldsSortCriterion", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildDidYouMean", "engine", "loadDidYouMeanReducers", "loadReducerError", "controller", "buildController", "getState", "stateKey", "state", "didYouMeanReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "actions", "toggleSelectFacetValue", "toggleExcludeFacetValue", "toggleSelectNumericFacetValue", "toggleExcludeNumericFacetValue", "toggleSelectDateFacetValue", "toggleExcludeDateFacetValue", "toggleSelectLocationFacetValue", "deselectAllValuesInCoreFacet", "buildCoreBreadcrumbManager", "engine", "options", "loadCommerceBreadcrumbManagerReducers", "loadReducerError", "controller", "buildController", "dispatch", "createBreadcrumb", "facet", "getValuesForCategoryFacet", "getValuesForNonCategoryFacet", "value", "selection", "updateCoreFacetFreezeCurrentValues", "ancestry", "findActiveValueAncestry", "activeValue", "hasActiveValue", "commerceFacetSelector", "createSelector", "state", "facetOrder", "breadcrumbs", "facetId", "stateKey", "clearAllCoreFacets", "facetOrderReducer", "commerceFacetSetReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "categoryFacetSearchStateSelector", "createSelector", "state", "facetId", "facetSearchSelector", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetRequestSelector", "createSelector", "state", "facetId", "buildCoreCommerceFacet", "engine", "props", "loadCommerceFacetReducers", "loadReducerError", "dispatch", "controller", "buildController", "facetId", "getEngineState", "stateKey", "getRequest", "facetRequestSelector", "getResponse", "getIsLoading", "getNumberOfActiveValues", "v", "selection", "deselectAllValuesInCoreFacet", "value", "numberInState", "initialNumberOfValues", "numberToNextMultipleOfConfigured", "numberOfValues", "updateCoreFacetNumberOfValues", "updateCoreFacetIsFieldExpanded", "newNumberOfValues", "getCoreFacetState", "commerceFacetSetReducer", "canShowLessValues", "request", "hasIdleValues", "response", "isLoading", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildGenericFacetSearch", "engine", "props", "dispatch", "options", "getFacetSearch", "executeFacetSearchActionCreator", "executeFieldSuggestActionCreator", "facetId", "text", "updateFacetSearch", "initialNumberOfValues", "clearFacetSearch", "captions", "response", "isLoading", "query", "values", "buildCoreCategoryFacetSearch", "engine", "props", "dispatch", "options", "defaultFacetSearchOptions", "facetId", "getFacetSearch", "stateKey", "registerCategoryFacetSearch", "genericFacetSearch", "buildGenericFacetSearch", "value", "selectCategoryFacetSearchResult", "buildCategoryFacetSearch", "engine", "props", "loadCategoryFacetSearchReducers", "loadReducerError", "showMoreResults", "state", "updateCaptions", "restOfFacetSearch", "buildCoreCategoryFacetSearch", "facetId", "executeCommerceFacetSearch", "executeCommerceFieldSuggest", "categoryFacetSearchSetReducer", "buildCategoryFacet", "engine", "options", "coreController", "buildCoreCommerceFacet", "toggleSelectCategoryFacetValue", "deselectAll", "isValueSelected", "subscribe", "toggleSelect", "dispatch", "getFacetId", "facetSearch", "buildCategoryFacetSearch", "facetId", "activeValue", "values", "numberOfValues", "defaultNumberOfValuesIncrement", "updateCategoryFacetNumberOfValues", "getCategoryFacetState", "categoryFacetSearchStateSelector", "stateKey", "coreState", "facetSearchSelector", "selectedValueAncestry", "findActiveValueAncestry", "canShowLessValues", "canShowMoreValues", "hasActiveValues", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildCommerceDateFacet", "engine", "options", "coreController", "buildCoreCommerceFacet", "toggleSelectDateFacetValue", "toggleExcludeDateFacetValue", "dispatch", "facetId", "fetchProductsActionCreator", "ranges", "updateDateFacetValues", "range", "getDateFacetState", "coreState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildFacetGenerator", "engine", "options", "loadCommerceFacetGeneratorReducers", "loadReducerError", "controller", "buildController", "dispatch", "createFacetControllers", "createSelector", "state", "facetOrder", "commerceFacetSet", "facetId", "createFacetController", "type", "clearAllCoreFacets", "stateKey", "facetOrderReducer", "commerceFacetSetReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildCommerceLocationFacet", "engine", "options", "toggleSingleExclude", "toggleExclude", "isValueExcluded", "coreController", "buildCoreCommerceFacet", "toggleSelectLocationFacetValue", "getLocationFacetState", "coreState", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "manualNumericFacetSelector", "createSelector", "state", "facetId", "manualRange", "buildCommerceNumericFacet", "engine", "options", "coreController", "buildCoreCommerceFacet", "toggleSelectNumericFacetValue", "toggleExcludeNumericFacetValue", "loadCommerceNumericFacetReducers", "loadReducerError", "dispatch", "facetId", "fetchProductsActionCreator", "ranges", "range", "updateManualNumericFacetRange", "response", "stateKey", "getNumericFacetState", "manualNumericFacetSelector", "manualNumericFacetReducer", "coreState", "facetResponseSelector", "manualFacetRangeSelector", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "specificFacetSearchStateSelector", "createSelector", "state", "facetId", "facetSearchSelector", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildFacetSearch", "engine", "props", "dispatch", "options", "propsSelect", "propsExclude", "isForFieldSuggestions", "executeFacetSearchActionCreator", "executeFieldSuggestActionCreator", "facetId", "getFacetSearch", "stateKey", "registerFacetSearch", "genericFacetSearch", "buildGenericFacetSearch", "value", "selectFacetSearchResult", "excludeFacetSearchResult", "deselectAllFacetValues", "values", "count", "displayValue", "rawValue", "buildRegularFacetSearch", "engine", "props", "loadRegularFacetSearchReducers", "loadReducerError", "showMoreResults", "state", "updateCaptions", "restOfFacetSearch", "buildFacetSearch", "facetId", "executeCommerceFacetSearch", "executeCommerceFieldSuggest", "specificFacetSearchSetReducer", "buildCommerceRegularFacet", "engine", "options", "coreController", "buildCoreCommerceFacet", "toggleSelectFacetValue", "toggleExcludeFacetValue", "getFacetId", "dispatch", "facetSearch", "buildRegularFacetSearch", "getRegularFacetState", "specificFacetSearchStateSelector", "stateKey", "coreState", "facetSearchSelector", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildInteractiveResultCore", "engine", "props", "action", "loadInteractiveResultCoreReducers", "loadReducerError", "defaultDelay", "options", "longPressTimer", "r", "configuration", "buildCoreInteractiveProduct", "engine", "props", "wasOpened", "getWarningMessage", "messageSegment", "property", "lookupFields", "fallback", "warnings", "ec_name", "ec_promo_price", "ec_price", "ec_product_id", "buildInteractiveResultCore", "productClick", "stateKey", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "optionsSchema", "Schema", "NumberValue", "buildCorePagination", "engine", "props", "loadPaginationReducers", "loadReducerError", "controller", "buildController", "dispatch", "validateOptions", "slotId", "setPageSize", "registerRecommendationsSlotPagination", "paginationSelector", "createSelector", "state", "perPage", "rest", "stateKey", "page", "selectPage", "nextPage", "previousPage", "pageSize", "paginationReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getOwnPropertyNames", "getOwnPropertySymbols", "hasOwnProperty", "combineComparators", "comparatorA", "comparatorB", "a", "b", "state", "createIsCircular", "areItemsEqual", "cache", "cachedA", "cachedB", "result", "getStrictProperties", "object", "hasOwn", "property", "sameValueZeroEqual", "OWNER", "getOwnPropertyDescriptor", "keys", "areArraysEqual", "index", "areDatesEqual", "areMapsEqual", "matchedIndices", "aIterable", "aResult", "bResult", "bIterable", "hasMatch", "matchIndex", "_a", "aKey", "aValue", "_b", "bKey", "bValue", "areObjectsEqual", "properties", "areObjectsEqualStrict", "descriptorA", "descriptorB", "arePrimitiveWrappersEqual", "areRegExpsEqual", "areSetsEqual", "areTypedArraysEqual", "ARGUMENTS_TAG", "BOOLEAN_TAG", "DATE_TAG", "MAP_TAG", "NUMBER_TAG", "OBJECT_TAG", "REG_EXP_TAG", "SET_TAG", "STRING_TAG", "isArray", "isTypedArray", "assign", "getTag", "createEqualityComparator", "constructor", "tag", "createEqualityComparatorConfig", "circular", "createCustomConfig", "strict", "config", "areObjectsEqualStrictDefault", "areArraysEqualDefault", "areDatesEqualDefault", "areMapsEqualDefault", "areObjectsEqualDefault", "arePrimitiveWrappersEqualDefault", "areRegExpsEqualDefault", "areSetsEqualDefault", "createInternalEqualityComparator", "compare", "_indexOrKeyA", "_indexOrKeyB", "_parentA", "_parentB", "createIsEqual", "comparator", "createState", "equals", "meta", "deepEqual", "createCustomEqual", "strictDeepEqual", "circularDeepEqual", "strictCircularDeepEqual", "shallowEqual", "strictShallowEqual", "circularShallowEqual", "strictCircularShallowEqual", "options", "createCustomInternalComparator", "arrayEqual", "firstArray", "secondArray", "isEqual", "first", "second", "val", "i", "arrayEqualAnyOrder", "firstArray", "secondArray", "firstVal", "secondVal", "deepEqualAnyOrder", "deepEqualAnyOrder", "createCustomEqual", "config", "arrayEqualAnyOrder", "initialStateSchema", "parametersDefinition", "Schema", "RecordValue", "buildCoreParameterManager", "engine", "props", "dispatch", "controller", "buildController", "validateInitialState", "parameters", "activeParams", "stateKey", "oldParams", "newParams", "deepEqualAnyOrder", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "validateSortInitialState", "engine", "state", "schema", "Schema", "sortCriterionDefinition", "validateInitialState", "buildCoreSort", "props", "loadSortReducers", "loadReducerError", "dispatch", "controller", "buildController", "criterion", "applySort", "stateKey", "availableCriterion", "sortReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildCoreSummary", "engine", "props", "controller", "buildController", "numberOfProductsSelector", "responseIdSelector", "isLoadingSelector", "errorSelector", "pageSelector", "perPageSelector", "totalEntriesSelector", "enrichSummary", "getState", "stateKey", "page", "perPage", "totalNumberOfProducts", "firstSearchExecuted", "hasProducts", "firstProduct", "lastProduct", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "numberOfValuesDefinition", "NumberValue", "desiredCountDefinition", "optionsSchema", "setOptions", "createAction", "payload", "validatePayload", "deselectAllAutomaticFacetValues", "facetIdDefinition", "fieldDefinition", "requiredNonEmptyString", "toggleSelectAutomaticFacetValue", "RecordValue", "facetValueDefinition", "paginationReducer", "createReducer", "getPaginationInitialState", "builder", "registerNumberOfResults", "state", "action", "page", "determineCurrentPage", "newNumberOfResults", "calculateFirstResult", "updateNumberOfResults", "updateActiveTab", "registerPage", "updatePage", "previousPage", "nextPage", "maxPage", "determineMaxPage", "change", "restoreSearchParameters", "executeSearch", "response", "deselectAllFacetValues", "handlePaginationReset", "toggleExcludeDateFacetValue", "toggleExcludeFacetValue", "toggleExcludeNumericFacetValue", "excludeFacetSearchResult", "toggleSelectFacetValue", "deselectAllCategoryFacetValues", "toggleSelectCategoryFacetValue", "selectCategoryFacetSearchResult", "toggleSelectDateFacetValue", "toggleSelectNumericFacetValue", "deselectAllBreadcrumbs", "updateDateFacetValues", "updateNumericFacetValues", "selectFacetSearchResult", "toggleSelectAutomaticFacetValue", "firstResult", "numberOfResults", "calculatePage", "totalCountFiltered", "calculateMaxPage", "totalCount", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "initialStateSchema", "Schema", "RecordValue", "searchParametersDefinition", "initialStateSchema", "Schema", "StringValue", "buildCoreUrlManager", "engine", "props", "lastRequestId", "updateLastRequestId", "stateKey", "hasRequestIdChanged", "validateInitialState", "initialStateSchema", "controller", "buildController", "previousFragment", "parameterManager", "listener", "strictListener", "newFragment", "areFragmentsEquivalent", "fragment", "parameters", "deserialize", "fragment1", "fragment2", "params1", "params2", "deepEqualAnyOrder", "buildSearchSubControllers", "engine", "subControllerProps", "buildSearchAndListingsSubControllers", "buildDidYouMean", "buildProductListingSubControllers", "fetchProductsActionCreator", "facetResponseSelector", "isFacetLoadingResponseSelector", "requestIdSelector", "serializer", "parametersDefinition", "activeParametersSelector", "restoreActionCreator", "enrichParameters", "facetSearchType", "buildBaseSubControllers", "props", "buildCoreSort", "commonOptions", "buildFacetGenerator", "_engine", "options", "buildCommerceRegularFacet", "buildCommerceNumericFacet", "buildCommerceDateFacet", "buildCategoryFacet", "buildCommerceLocationFacet", "buildCoreBreadcrumbManager", "buildCoreUrlManager", "buildCoreParameterManager", "responseIdSelector", "isLoadingSelector", "errorSelector", "numberOfProductsSelector", "fetchMoreProductsActionCreator", "slotId", "pageSelector", "perPageSelector", "totalEntriesSelector", "enrichSummary", "buildCoreInteractiveProduct", "buildCorePagination", "buildCoreSummary", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetResponseSelector", "createSelector", "state", "facetId", "facetResponse", "isFacetLoadingResponseSelector", "buildSearch", "engine", "loadBaseSearchReducers", "loadReducerError", "controller", "buildController", "dispatch", "getState", "stateKey", "subControllers", "buildSearchSubControllers", "responseIdSelector", "executeSearch", "fetchMoreProducts", "facetResponseSelector", "isFacetLoadingResponseSelector", "requestIdSelector", "searchSerializer", "searchParametersDefinition", "restoreSearchParameters", "activeParametersSelector", "enrichedParametersSelector", "isLoadingSelector", "errorSelector", "pagePrincipalSelector", "perPagePrincipalSelector", "totalEntriesPrincipalSelector", "numberOfProductsSelector", "enrichedSummarySelector", "child", "promoteChildToParent", "contextReducer", "configuration", "commerceSearchReducer", "queryReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "facetResponseSelector", "createSelector", "state", "facetId", "facetResponse", "isFacetLoadingResponseSelector", "buildProductListing", "engine", "loadBaseProductListingReducers", "loadReducerError", "controller", "buildController", "dispatch", "getState", "stateKey", "subControllers", "buildProductListingSubControllers", "responseIdSelector", "fetchProductListing", "fetchMoreProducts", "facetResponseSelector", "isFacetLoadingResponseSelector", "requestIdSelector", "productListingSerializer", "parametersDefinition", "activeParametersSelector", "restoreProductListingParameters", "enrichedParametersSelector", "isLoadingSelector", "errorSelector", "pagePrincipalSelector", "perPagePrincipalSelector", "totalEntriesPrincipalSelector", "numberOfProductsSelector", "products", "error", "isLoading", "responseId", "child", "promoteChildToParent", "productListingReducer", "contextReducer", "configuration", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildRecommendations", "engine", "props", "loadBaseRecommendationsReducers", "loadReducerError", "validateInitialState", "recommendationsOptionsSchema", "controller", "buildController", "dispatch", "slotId", "productId", "registerRecommendationsSlot", "recommendationStateSelector", "createSelector", "state", "recommendations", "subControllers", "buildBaseSubControllers", "fetchRecommendations", "fetchMoreRecommendations", "isLoadingSelector", "pageRecommendationSelector", "perPageRecommendationSelector", "totalEntriesRecommendationSelector", "numberOfRecommendationsSelector", "child", "promoteChildToParent", "stateKey", "recommendationsReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildProductView", "engine", "product", "productView", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "queryReducer", "createReducer", "getQueryInitialState", "builder", "updateQuery", "state", "action", "applyDidYouMeanCorrection", "selectQuerySuggestion", "change", "restoreSearchParameters", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "openCloseDelimitersDefinition", "StringValue", "searchBoxOptionDefinitions", "requiredNonEmptyString", "NumberValue", "BooleanValue", "RecordValue", "searchBoxOptionsSchema", "Schema", "getSuggestions", "state", "highlightOptions", "completion", "getHighlightedSuggestion", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "defaultSearchBoxOptions", "id", "highlightOptions", "clearFilters", "searchBoxOptionDefinitions", "searchBoxOptionsSchema", "Schema", "buildSearchBox", "engine", "props", "loadSearchBoxReducers", "loadReducerError", "controller", "buildController", "dispatch", "getState", "stateKey", "id", "randomID", "options", "defaultSearchBoxOptions", "validateOptions", "searchBoxOptionsSchema", "registerQuerySetQuery", "registerQuerySuggest", "getValue", "performSearch", "queryOptions", "prepareForSearchWithQuery", "executeSearch", "value", "updateQuerySetQuery", "clearQuerySuggest", "fetchQuerySuggestions", "selectQuerySuggestion", "querySuggest", "suggestions", "getSuggestions", "isLoadingSuggestions", "queryReducer", "querySuggestReducer", "configuration", "querySetReducer", "commerceSearchReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "defaultRecentQueriesState", "defaultRecentQueriesOptions", "initialStateSchema", "Schema", "ArrayValue", "optionsSchema", "NumberValue", "BooleanValue", "validateRecentQueriesProps", "engine", "props", "validateOptions", "validateInitialState", "buildRecentQueriesList", "loadRecentQueriesListReducer", "loadReducerError", "controller", "buildController", "dispatch", "getState", "stateKey", "registrationOptions", "registrationState", "options", "registerRecentQueries", "state", "clearRecentQueries", "index", "errorMessage", "queryOptions", "prepareForSearchWithQuery", "executeSearch", "commerceSearchReducer", "recentQueriesReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "instantProductsOptionDefinitions", "nonEmptyString", "NumberValue", "instantProductsOptionsSchema", "Schema", "buildInstantProducts", "engine", "props", "loadInstantProductsReducers", "loadReducerError", "controller", "buildController", "dispatch", "getState", "stateKey", "options", "randomID", "validateOptions", "searchBoxId", "registerInstantProducts", "getStateForSearchBox", "getCached", "q", "getQuery", "getProducts", "cached", "query", "hasExpired", "fetchInstantProducts", "updateInstantProductsQuery", "clearExpiredProducts", "child", "promoteChildToParent", "buildCoreInteractiveProduct", "instantProductsReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getCommerceStandaloneSearchBoxSetInitialState", "commerceStandaloneSearchBoxSetReducer", "createReducer", "getCommerceStandaloneSearchBoxSetInitialState", "builder", "registerStandaloneSearchBox", "state", "action", "id", "redirectionUrl", "overwrite", "buildStandaloneSearchBoxEntry", "updateStandaloneSearchBoxRedirectionUrl", "searchBox", "resetStandaloneSearchBox", "fetchRedirectUrl", "defaultRedirectionUrl", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "standaloneSearchBoxSchema", "Schema", "searchBoxOptionDefinitions", "StringValue", "BooleanValue", "buildStandaloneSearchBox", "engine", "props", "loadStandaloneSearchBoxReducers", "loadReducerError", "dispatch", "getState", "stateKey", "id", "randomID", "options", "defaultSearchBoxOptions", "validateOptions", "standaloneSearchBoxSchema", "searchBox", "buildSearchBox", "registerStandaloneSearchBox", "value", "selectQuerySuggestion", "resetStandaloneSearchBox", "url", "updateStandaloneSearchBoxRedirectionUrl", "updateQuery", "fetchRedirectUrl", "standaloneSearchBoxState", "queryReducer", "commerceStandaloneSearchBoxSetReducer", "configuration", "querySuggestReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "templateSchema", "Schema", "Value", "NumberValue", "ArrayValue", "requiredNonEmptyString", "buildTemplatesManager", "templates", "validateTemplate", "template", "validated", "condition", "SchemaValidationError", "newTemplates", "templatesWithDefault", "a", "b", "item", "buildProductTemplatesManager", "buildTemplatesManager", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "getProductProperty", "product", "property", "anyProduct", "isNullOrUndefined", "fieldsMustBeDefined", "fieldNames", "fieldName", "fieldsMustNotBeDefined", "fieldMustMatch", "valuesToMatch", "fieldValues", "getFieldValuesFromProduct", "valueToMatch", "fieldValue", "fieldMustNotMatch", "disallowedValues", "rawValue", "isArray", "ProductTemplatesHelpers", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildNotifyTrigger", "engine", "loadNotifyTriggerReducers", "loadReducerError", "controller", "buildController", "getState", "stateKey", "previousNotifications", "listener", "strictListener", "hasChanged", "arrayEqual", "commerceTriggersReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildRedirectionTrigger", "engine", "loadRedirectionReducers", "loadReducerError", "controller", "buildController", "getState", "stateKey", "previousRedirectTo", "listener", "strictListener", "hasChanged", "commerceTriggersReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildQueryTrigger", "engine", "loadQueryTriggerReducers", "loadReducerError", "controller", "buildController", "dispatch", "getState", "stateKey", "modification", "originalQuery", "updateIgnoreQueryTrigger", "updateQuery", "executeSearch", "commerceTriggersReducer", "queryReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildCategoryFieldSuggestions", "engine", "options", "loadFieldSuggestionsReducers", "loadReducerError", "dispatch", "namespacedFacetId", "getFacetIdWithCommerceFieldSuggestionNamespace", "facetSearch", "buildCategoryFacetSearch", "getState", "stateKey", "getFacetForFieldSuggestions", "facetId", "facet", "controller", "buildController", "facetSearchStateSelector", "createSelector", "state", "text", "fieldSuggestionsOrderReducer", "categoryFacetSearchSetReducer", "commerceFacetSetReducer", "init_abortable_fetch_shim", "init_navigator_sendbeacon_cjs", "buildFieldSuggestions", "engine", "options", "loadFieldSuggestionsReducers", "loadReducerError", "dispatch", "namespacedFacetId", "getFacetIdWithCommerceFieldSuggestionNamespace", "facetSearch", "buildRegularFacetSearch", "getState", "stateKey", "getFacetForFieldSuggestions", "facetId", "facet", "controller", "buildController", "facetSearchStateSelector", "createSelector", "state", "text", "fieldSuggestionsOrderReducer", "commerceFacetSetReducer", "specificFacetSearchSetReducer", "buildFieldSuggestionsGenerator", "engine", "loadFieldSuggestionsGeneratorReducers", "loadReducerError", "commonOptions", "executeSearch", "facetResponseSelector", "isFacetLoadingResponseSelector", "controller", "buildController", "createFieldSuggestionsControllers", "createSelector", "state", "facetOrder", "type", "facetId", "buildCategoryFieldSuggestions", "buildFieldSuggestions", "stateKey", "fieldSuggestionsOrderReducer"]
}
